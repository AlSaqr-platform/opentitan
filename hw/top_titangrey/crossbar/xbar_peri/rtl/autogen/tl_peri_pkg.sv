// Copyright lowRISC contributors.
// Licensed under the Apache License, Version 2.0, see LICENSE for details.
// SPDX-License-Identifier: Apache-2.0
//
// tl_peri package generated by `tlgen.py` tool

package tl_peri_pkg;

  localparam logic [31:0] ADDR_SPACE_UART0                   = 32'h 40000000;
  localparam logic [31:0] ADDR_SPACE_UART1                   = 32'h 40010000;
  localparam logic [31:0] ADDR_SPACE_UART2                   = 32'h 40020000;
  localparam logic [31:0] ADDR_SPACE_UART3                   = 32'h 40030000;
  localparam logic [31:0] ADDR_SPACE_GPIO                    = 32'h 40040000;
  localparam logic [31:0] ADDR_SPACE_SPI_DEVICE              = 32'h 40050000;
  localparam logic [31:0] ADDR_SPACE_RV_TIMER                = 32'h 40100000;
  localparam logic [31:0] ADDR_SPACE_PWRMGR_AON              = 32'h 40400000;
  localparam logic [31:0] ADDR_SPACE_RSTMGR_AON              = 32'h 40410000;
  localparam logic [31:0] ADDR_SPACE_CLKMGR_AON              = 32'h 40420000;
  localparam logic [31:0] ADDR_SPACE_OTP_CTRL__CORE          = 32'h 40130000;
  localparam logic [31:0] ADDR_SPACE_OTP_CTRL__PRIM          = 32'h 40132000;
  localparam logic [31:0] ADDR_SPACE_LC_CTRL                 = 32'h 40140000;
  localparam logic [31:0] ADDR_SPACE_ALERT_HANDLER           = 32'h 40150000;
  localparam logic [31:0] ADDR_SPACE_SRAM_CTRL_RET_AON__REGS = 32'h 40500000;
  localparam logic [31:0] ADDR_SPACE_SRAM_CTRL_RET_AON__RAM  = 32'h 40600000;
  localparam logic [31:0] ADDR_SPACE_AON_TIMER_AON           = 32'h 40470000;
  localparam logic [31:0] ADDR_SPACE_SYSRST_CTRL_AON         = 32'h 40430000;

  localparam logic [31:0] ADDR_MASK_UART0                   = 32'h 00000fff;
  localparam logic [31:0] ADDR_MASK_UART1                   = 32'h 00000fff;
  localparam logic [31:0] ADDR_MASK_UART2                   = 32'h 00000fff;
  localparam logic [31:0] ADDR_MASK_UART3                   = 32'h 00000fff;
  localparam logic [31:0] ADDR_MASK_GPIO                    = 32'h 00000fff;
  localparam logic [31:0] ADDR_MASK_SPI_DEVICE              = 32'h 00001fff;
  localparam logic [31:0] ADDR_MASK_RV_TIMER                = 32'h 00000fff;
  localparam logic [31:0] ADDR_MASK_PWRMGR_AON              = 32'h 00000fff;
  localparam logic [31:0] ADDR_MASK_RSTMGR_AON              = 32'h 00000fff;
  localparam logic [31:0] ADDR_MASK_CLKMGR_AON              = 32'h 00000fff;
  localparam logic [31:0] ADDR_MASK_OTP_CTRL__CORE          = 32'h 00001fff;
  localparam logic [31:0] ADDR_MASK_OTP_CTRL__PRIM          = 32'h 00000fff;
  localparam logic [31:0] ADDR_MASK_LC_CTRL                 = 32'h 00000fff;
  localparam logic [31:0] ADDR_MASK_ALERT_HANDLER           = 32'h 00000fff;
  localparam logic [31:0] ADDR_MASK_SRAM_CTRL_RET_AON__REGS = 32'h 00000fff;
  localparam logic [31:0] ADDR_MASK_SRAM_CTRL_RET_AON__RAM  = 32'h 00000fff;
  localparam logic [31:0] ADDR_MASK_AON_TIMER_AON           = 32'h 00000fff;
  localparam logic [31:0] ADDR_MASK_SYSRST_CTRL_AON         = 32'h 00000fff;

  localparam int N_HOST   = 1;
  localparam int N_DEVICE = 18;

  typedef enum int {
    TlUart0 = 0,
    TlUart1 = 1,
    TlUart2 = 2,
    TlUart3 = 3,
    TlGpio = 4,
    TlSpiDevice = 5,
    TlRvTimer = 6,
    TlPwrmgrAon = 7,
    TlRstmgrAon = 8,
    TlClkmgrAon = 9,
    TlOtpCtrlCore = 10,
    TlOtpCtrlPrim = 11,
    TlLcCtrl = 12,
    TlAlertHandler = 13,
    TlSramCtrlRetAonRegs = 14,
    TlSramCtrlRetAonRam = 15,
    TlAonTimerAon = 16,
    TlSysrstCtrlAon = 17
  } tl_device_e;

  typedef enum int {
    TlMain = 0
  } tl_host_e;

endpackage
