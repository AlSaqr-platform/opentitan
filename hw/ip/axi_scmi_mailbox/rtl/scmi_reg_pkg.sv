// Copyright lowRISC contributors.
// Licensed under the Apache License, Version 2.0, see LICENSE for details.
// SPDX-License-Identifier: Apache-2.0
//
// Register Package auto-generated by `reggen` containing data structure

package scmi_reg_pkg;

  // Address widths within the block
  parameter int BlockAw = 5;

  ////////////////////////////
  // Typedefs for registers //
  ////////////////////////////

  typedef struct packed {
    struct packed {
      logic        q;
    } channel_free;
    struct packed {
      logic        q;
    } channel_error;
    struct packed {
      logic [29:0] q;
    } reserved;
  } scmi_reg2hw_channel_status_reg_t;

  // Register -> HW type
  typedef struct packed {
    scmi_reg2hw_channel_status_reg_t channel_status; // [31:0]
  } scmi_reg2hw_t;

  // Register offsets
  parameter logic [BlockAw-1:0] SCMI_RESERVED_OFFSET = 5'h 0;
  parameter logic [BlockAw-1:0] SCMI_CHANNEL_STATUS_OFFSET = 5'h 4;
  parameter logic [BlockAw-1:0] SCMI_RESERVED_IMPL_DEFINED_OFFSET = 5'h 8;
  parameter logic [BlockAw-1:0] SCMI_CHANNEL_FLAGS_OFFSET = 5'h c;
  parameter logic [BlockAw-1:0] SCMI_LENGTH_OFFSET = 5'h 10;
  parameter logic [BlockAw-1:0] SCMI_MESSAGE_HEADER_OFFSET = 5'h 14;
  parameter logic [BlockAw-1:0] SCMI_MESSAGE_PAYLOAD_OFFSET = 5'h 18;

  // Register index
  typedef enum int {
    SCMI_RESERVED,
    SCMI_CHANNEL_STATUS,
    SCMI_RESERVED_IMPL_DEFINED,
    SCMI_CHANNEL_FLAGS,
    SCMI_LENGTH,
    SCMI_MESSAGE_HEADER,
    SCMI_MESSAGE_PAYLOAD
  } scmi_id_e;

  // Register width information to check illegal writes
  parameter logic [3:0] SCMI_PERMIT [7] = '{
    4'b 1111, // index[0] SCMI_RESERVED
    4'b 1111, // index[1] SCMI_CHANNEL_STATUS
    4'b 1111, // index[2] SCMI_RESERVED_IMPL_DEFINED
    4'b 1111, // index[3] SCMI_CHANNEL_FLAGS
    4'b 1111, // index[4] SCMI_LENGTH
    4'b 1111, // index[5] SCMI_MESSAGE_HEADER
    4'b 1111  // index[6] SCMI_MESSAGE_PAYLOAD
  };

endpackage

