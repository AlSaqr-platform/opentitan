
bazel-out/k8-fastbuild-ST-2cc462681f62/bin/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma_sim_verilator.elf:     file format elf32-littleriscv
bazel-out/k8-fastbuild-ST-2cc462681f62/bin/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma_sim_verilator.elf
architecture: riscv:rv32, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0xe0000080

Program Header:
    LOAD off    0x00001000 vaddr 0xe0000000 paddr 0xe0000000 align 2**12
         filesz 0x00000530 memsz 0x00000568 flags rwx
    LOAD off    0x00000000 vaddr 0xe0008000 paddr 0xe0008000 align 2**12
         filesz 0x00000000 memsz 0x00002000 flags rw-
   STACK off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00000000 memsz 0x00000000 flags rw-

Sections:
Idx Name              Size      VMA       LMA       File off  Algn  Flags
  0 .vectors          00000084  e0000000  e0000000  00001000  2**0  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .text             000004ac  e0000084  e0000084  00001084  2**2  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata           00000000  e0000530  e0000530  00001530  2**0  ALLOC
  3 .data             00000000  e0000530  e0000530  00001530  2**0  CONTENTS, ALLOC, LOAD, DATA
  4 .bss              00000038  e0000530  e0000530  00001530  2**2  ALLOC
  5 .logs.fields      00000000  e0000568  e0000568  00001530  2**0  CONTENTS
  6 .stack            00002000  e0008000  e0008000  00002000  2**0  ALLOC
  7 .debug_loc        00000e29  00000000  00000000  00001530  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_abbrev     000004cf  00000000  00000000  00002359  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_info       000018f4  00000000  00000000  00002828  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_ranges     000001a0  00000000  00000000  0000411c  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_str        000004db  00000000  00000000  000042bc  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .comment          00000074  00000000  00000000  00004797  2**0  CONTENTS, READONLY
 13 .riscv.attributes 00000026  00000000  00000000  0000480b  2**0  CONTENTS, READONLY
 14 .debug_frame      0000018c  00000000  00000000  00004834  2**2  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_line       00001485  00000000  00000000  000049c0  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_aranges    00000028  00000000  00000000  00005e45  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
e0000000 l    d  .vectors       00000000 .vectors
e0000084 l    d  .text  00000000 .text
e0000530 l    d  .rodata        00000000 .rodata
e0000530 l    d  .data  00000000 .data
e0000530 l    d  .bss   00000000 .bss
e0000568 l    d  .logs.fields   00000000 .logs.fields
e0008000 l    d  .stack 00000000 .stack
00000000 l    d  .debug_loc     00000000 .debug_loc
00000000 l    d  .debug_abbrev  00000000 .debug_abbrev
00000000 l    d  .debug_info    00000000 .debug_info
00000000 l    d  .debug_ranges  00000000 .debug_ranges
00000000 l    d  .debug_str     00000000 .debug_str
00000000 l    d  .comment       00000000 .comment
00000000 l    d  .riscv.attributes      00000000 .riscv.attributes
00000000 l    d  .debug_frame   00000000 .debug_frame
00000000 l    d  .debug_line    00000000 .debug_line
00000000 l    d  .debug_aranges 00000000 .debug_aranges
00000000 l    df *ABS*  00000000 crt0.o
e0000084 l       .text  00000000 default_exc_handler
e0000084 l       .text  00000000 
e00000fe l       .text  00000000 sleep_loop
e0000084 l       .text  00000000 
e0000086 l       .text  00000000 reset_handler
e0000086 l       .text  00000000 
e0000086 l       .text  00000000 
e00000cc l       .text  00000000 
e00000ea l       .text  00000000 zero_loop_end
e00000e0 l       .text  00000000 zero_loop
e00000e0 l       .text  00000000 
e00000ea l       .text  00000000 
e00000ea l       .text  00000000 main_entry
e00000ea l       .text  00000000 
e00000ee l       .text  00000000 
e00000f2 l       .text  00000000 
e00000fe l       .text  00000000 
e0000102 l       .text  00000000 
e0000000 l       .vectors       00000000 
e000002c l       .vectors       00000000 
e0000030 l       .vectors       00000000 
e000007c l       .vectors       00000000 
e0000080 l       .vectors       00000000 
00001788 l       .debug_info    00000000 
000004b0 l       .debug_abbrev  00000000 
e0000104 l       .text  00000000 
e0000084 l       .vectors       00000000 
00000178 l       .debug_ranges  00000000 
00000000 l    df *ABS*  00000000 titanssl_sram_aes_idma.c
e0000104 l       .text  00000000 
e0000104 l       .text  00000000 
e0000530 l     O .bss   00000008 buffer_plain_idma
e0000104 l       .text  00000000 
e0000110 l       .text  00000000 
e0000114 l       .text  00000000 
e0000538 l     O .bss   00000008 buffer_cipher_idma
e0000116 l       .text  00000000 
e0000122 l       .text  00000000 
e0000124 l       .text  00000000 
e0000540 l     O .bss   00000008 buffer_plain
e0000126 l       .text  00000000 
e0000132 l       .text  00000000 
e0000134 l       .text  00000000 
e0000548 l     O .bss   00000008 buffer_cipher
e0000136 l       .text  00000000 
e0000142 l       .text  00000000 
e0000144 l       .text  00000000 
e0000550 l     O .bss   00000008 buffer_key
e0000146 l       .text  00000000 
e0000152 l       .text  00000000 
e0000158 l       .text  00000000 
e000015a l       .text  00000000 
e000015a l       .text  00000000 
e0000160 l       .text  00000000 
e0000160 l       .text  00000000 
e0000162 l       .text  00000000 
e0000162 l       .text  00000000 
e0000164 l       .text  00000000 
e0000166 l       .text  00000000 
e000016a l       .text  00000000 
e000016e l       .text  00000000 
e000016e l       .text  00000000 
e0000558 l     O .bss   00000008 buffer_iv
e000017e l       .text  00000000 
e0000182 l       .text  00000000 
e0000184 l       .text  00000000 
e0000184 l       .text  00000000 
e000018a l       .text  00000000 
e000018a l       .text  00000000 
e000018c l       .text  00000000 
e000018c l       .text  00000000 
e000018e l       .text  00000000 
e0000190 l       .text  00000000 
e0000194 l       .text  00000000 
e0000198 l       .text  00000000 
e0000198 l       .text  00000000 
e000019a l       .text  00000000 
e000019a l       .text  00000000 
e000019a l       .text  00000000 
e000019a l       .text  00000000 
e000019a l       .text  00000000 
e000019a l       .text  00000000 
e000019e l       .text  00000000 
e000019e l       .text  00000000 
e00001a2 l       .text  00000000 
e00001a2 l       .text  00000000 
e00001aa l       .text  00000000 
e00001aa l       .text  00000000 
e00001ae l       .text  00000000 
e00001ae l       .text  00000000 
e00001b2 l       .text  00000000 
e00001b6 l       .text  00000000 
e00001ba l       .text  00000000 
e00001ba l       .text  00000000 
e00001be l       .text  00000000 
e00001be l       .text  00000000 
e00001ce l       .text  00000000 
e00001ce l       .text  00000000 
e00001d2 l       .text  00000000 
e00001d2 l       .text  00000000 
e00001d6 l       .text  00000000 
e00001d6 l       .text  00000000 
e00001da l       .text  00000000 
e00001da l       .text  00000000 
e00001e0 l       .text  00000000 
e00001e0 l       .text  00000000 
e00001e4 l       .text  00000000 
e00001e4 l       .text  00000000 
e00001ee l       .text  00000000 
e00001ee l       .text  00000000 
e00001f2 l       .text  00000000 
e00001f2 l       .text  00000000 
e00001f6 l       .text  00000000 
e00001f6 l       .text  00000000 
e00001fa l       .text  00000000 
e00001fa l       .text  00000000 
e00001fe l       .text  00000000 
e00001fe l       .text  00000000 
e0000206 l       .text  00000000 
e0000206 l       .text  00000000 
e000020e l       .text  00000000 
e000020e l       .text  00000000 
e0000212 l       .text  00000000 
e0000212 l       .text  00000000 
e0000216 l       .text  00000000 
e0000216 l       .text  00000000 
e000021a l       .text  00000000 
e000021a l       .text  00000000 
e000021e l       .text  00000000 
e000021e l       .text  00000000 
e0000228 l       .text  00000000 
e0000228 l       .text  00000000 
e000022c l       .text  00000000 
e000022c l       .text  00000000 
e0000230 l       .text  00000000 
e0000230 l       .text  00000000 
e0000234 l       .text  00000000 
e0000234 l       .text  00000000 
e000023a l       .text  00000000 
e000023a l       .text  00000000 
e000023e l       .text  00000000 
e000023e l       .text  00000000 
e0000242 l       .text  00000000 
e0000246 l       .text  00000000 
e0000246 l       .text  00000000 
e000024a l       .text  00000000 
e000024a l       .text  00000000 
e000024e l       .text  00000000 
e000024e l       .text  00000000 
e0000252 l       .text  00000000 
e0000252 l       .text  00000000 
e0000256 l       .text  00000000 
e0000256 l       .text  00000000 
e000025a l       .text  00000000 
e000025a l       .text  00000000 
e000025e l       .text  00000000 
e000025e l       .text  00000000 
e0000262 l       .text  00000000 
e0000262 l       .text  00000000 
e0000266 l       .text  00000000 
e0000266 l       .text  00000000 
e000026a l       .text  00000000 
e000026a l       .text  00000000 
e000026e l       .text  00000000 
e000026e l       .text  00000000 
e0000272 l       .text  00000000 
e0000272 l       .text  00000000 
e0000276 l       .text  00000000 
e0000276 l       .text  00000000 
e000027a l       .text  00000000 
e000027a l       .text  00000000 
e000027e l       .text  00000000 
e000027e l       .text  00000000 
e0000282 l       .text  00000000 
e0000282 l       .text  00000000 
e0000286 l       .text  00000000 
e0000286 l       .text  00000000 
e000028a l       .text  00000000 
e000028a l       .text  00000000 
e000028e l       .text  00000000 
e000028e l       .text  00000000 
e0000292 l       .text  00000000 
e0000292 l       .text  00000000 
e0000296 l       .text  00000000 
e0000296 l       .text  00000000 
e000029a l       .text  00000000 
e000029a l       .text  00000000 
e000029e l       .text  00000000 
e000029e l       .text  00000000 
e00002a2 l       .text  00000000 
e00002a2 l       .text  00000000 
e00002a6 l       .text  00000000 
e00002a6 l       .text  00000000 
e00002aa l       .text  00000000 
e00002aa l       .text  00000000 
e00002ae l       .text  00000000 
e00002ae l       .text  00000000 
e00002b2 l       .text  00000000 
e00002b2 l       .text  00000000 
e00002b6 l       .text  00000000 
e00002b6 l       .text  00000000 
e00002ba l       .text  00000000 
e00002ba l       .text  00000000 
e00002be l       .text  00000000 
e00002be l       .text  00000000 
e00002c2 l       .text  00000000 
e00002c2 l       .text  00000000 
e00002c6 l       .text  00000000 
e00002c6 l       .text  00000000 
e00002cc l       .text  00000000 
e00002cc l       .text  00000000 
e00002d0 l       .text  00000000 
e00002d0 l       .text  00000000 
e00002d4 l       .text  00000000 
e00002d4 l       .text  00000000 
e00002d6 l       .text  00000000 
e00002d6 l       .text  00000000 
e00002d8 l       .text  00000000 
e00002da l       .text  00000000 
e00002e2 l       .text  00000000 
e00002e2 l       .text  00000000 
e00002e6 l       .text  00000000 
e00002e6 l       .text  00000000 
e00002e8 l       .text  00000000 
e00002e8 l       .text  00000000 
e00002ec l       .text  00000000 
e00002ec l       .text  00000000 
e00002ee l       .text  00000000 
e00002ee l       .text  00000000 
e00002f2 l       .text  00000000 
e00002f2 l       .text  00000000 
e00002f8 l       .text  00000000 
e00002f8 l       .text  00000000 
e00002fa l       .text  00000000 
e00002fa l       .text  00000000 
e0000302 l       .text  00000000 
e0000302 l       .text  00000000 
e0000306 l       .text  00000000 
e000030a l       .text  00000000 
e000030c l       .text  00000000 
e0000310 l       .text  00000000 
e0000314 l       .text  00000000 
e0000314 l       .text  00000000 
e0000318 l       .text  00000000 
e0000318 l       .text  00000000 
e000031c l       .text  00000000 
e0000320 l       .text  00000000 
e0000320 l       .text  00000000 
e0000324 l       .text  00000000 
e0000324 l       .text  00000000 
e0000326 l       .text  00000000 
e0000326 l       .text  00000000 
e000032a l       .text  00000000 
e000032a l       .text  00000000 
e000032c l       .text  00000000 
e000032c l       .text  00000000 
e0000330 l       .text  00000000 
e0000330 l       .text  00000000 
e0000332 l       .text  00000000 
e0000332 l       .text  00000000 
e0000336 l       .text  00000000 
e0000336 l       .text  00000000 
e0000338 l       .text  00000000 
e0000338 l       .text  00000000 
e000033c l       .text  00000000 
e000033c l       .text  00000000 
e000033e l       .text  00000000 
e000033e l       .text  00000000 
e0000340 l       .text  00000000 
e0000340 l       .text  00000000 
e0000346 l       .text  00000000 
e000034a l       .text  00000000 
e000034e l       .text  00000000 
e000035a l       .text  00000000 
e000035e l       .text  00000000 
e000035e l       .text  00000000 
e0000360 l       .text  00000000 
e0000360 l       .text  00000000 
e0000362 l       .text  00000000 
e0000362 l       .text  00000000 
e0000364 l       .text  00000000 
e0000364 l       .text  00000000 
e0000366 l       .text  00000000 
e0000366 l       .text  00000000 
e0000368 l       .text  00000000 
e0000368 l       .text  00000000 
e000036a l       .text  00000000 
e000036a l       .text  00000000 
e000036c l       .text  00000000 
e000036c l       .text  00000000 
e0000370 l       .text  00000000 
e0000370 l       .text  00000000 
e0000374 l       .text  00000000 
e0000374 l       .text  00000000 
e0000376 l       .text  00000000 
e0000376 l       .text  00000000 
e0000378 l       .text  00000000 
e0000378 l       .text  00000000 
e000037a l       .text  00000000 
e000037a l       .text  00000000 
e000037c l       .text  00000000 
e000037c l       .text  00000000 
e000037e l       .text  00000000 
e000037e l       .text  00000000 
e0000380 l       .text  00000000 
e0000380 l       .text  00000000 
e0000382 l       .text  00000000 
e0000382 l       .text  00000000 
e0000384 l       .text  00000000 
e0000384 l       .text  00000000 
e0000386 l       .text  00000000 
e0000386 l       .text  00000000 
e0000388 l       .text  00000000 
e000038c l       .text  00000000 
e0000390 l       .text  00000000 
e0000390 l       .text  00000000 
e0000394 l       .text  00000000 
e0000396 l       .text  00000000 
e0000396 l       .text  00000000 
e000039a l       .text  00000000 
e000039a l       .text  00000000 
e000039e l       .text  00000000 
e000039e l       .text  00000000 
e00003a2 l       .text  00000000 
e00003a2 l       .text  00000000 
e00003a4 l       .text  00000000 
e00003a4 l       .text  00000000 
e00003a6 l       .text  00000000 
e00003aa l       .text  00000000 
e00003aa l       .text  00000000 
e00003ac l       .text  00000000 
e00003ac l       .text  00000000 
e00003ae l       .text  00000000 
e00003ae l       .text  00000000 
e00003b0 l       .text  00000000 
e00003b0 l       .text  00000000 
e00003b2 l       .text  00000000 
e00003b2 l       .text  00000000 
e00003b4 l       .text  00000000 
e00003b4 l       .text  00000000 
e00003b6 l       .text  00000000 
e00003b6 l       .text  00000000 
e00003b8 l       .text  00000000 
e00003b8 l       .text  00000000 
e00003ba l       .text  00000000 
e00003ba l       .text  00000000 
e00003bc l       .text  00000000 
e00003bc l       .text  00000000 
e00003be l       .text  00000000 
e00003be l       .text  00000000 
e00003c2 l       .text  00000000 
e00003c2 l       .text  00000000 
e00003c6 l       .text  00000000 
e00003c6 l       .text  00000000 
e00003c8 l       .text  00000000 
e00003ca l       .text  00000000 
e00003cc l       .text  00000000 
e00003cc l       .text  00000000 
e00003ce l       .text  00000000 
e00003ce l       .text  00000000 
e00003d8 l       .text  00000000 
e00003d8 l       .text  00000000 
e00003dc l       .text  00000000 
e00003dc l       .text  00000000 
e00003de l       .text  00000000 
e00003de l       .text  00000000 
e00003e0 l       .text  00000000 
e00003e0 l       .text  00000000 
e00003e6 l       .text  00000000 
e00003e6 l       .text  00000000 
e00003e8 l       .text  00000000 
e00003e8 l       .text  00000000 
e00003f0 l       .text  00000000 
e00003f0 l       .text  00000000 
e00003f2 l       .text  00000000 
e00003f2 l       .text  00000000 
e00003f6 l       .text  00000000 
e00003f6 l       .text  00000000 
e00003f8 l       .text  00000000 
e00003f8 l       .text  00000000 
e00003fa l       .text  00000000 
e0000400 l       .text  00000000 
e0000400 l       .text  00000000 
e0000402 l       .text  00000000 
e0000406 l       .text  00000000 
e000040a l       .text  00000000 
e000040a l       .text  00000000 
e000040c l       .text  00000000 
e000040c l       .text  00000000 
e000040c l       .text  00000000 
e000040c l       .text  00000000 
e000040c l       .text  00000000 
e000040e l       .text  00000000 
e000040e l       .text  00000000 
e0000410 l       .text  00000000 
e0000412 l       .text  00000000 
e0000414 l       .text  00000000 
e0000416 l       .text  00000000 
e0000416 l       .text  00000000 
e0000422 l       .text  00000000 
e0000422 l       .text  00000000 
e0000426 l       .text  00000000 
e0000430 l       .text  00000000 
e0000438 l       .text  00000000 
e0000438 l       .text  00000000 
e000043e l       .text  00000000 
e0000440 l       .text  00000000 
e0000440 l       .text  00000000 
e0000444 l       .text  00000000 
e0000444 l       .text  00000000 
e0000448 l       .text  00000000 
e0000448 l       .text  00000000 
e000044a l       .text  00000000 
e000044a l       .text  00000000 
e000044c l       .text  00000000 
e000044c l       .text  00000000 
e000044e l       .text  00000000 
e000044e l       .text  00000000 
e0000480 l       .text  00000000 
e0000480 l       .text  00000000 
e0000488 l       .text  00000000 
e0000488 l       .text  00000000 
00000000 l       .debug_loc     00000000 
0000001b l       .debug_loc     00000000 
00000044 l       .debug_loc     00000000 
0000005f l       .debug_loc     00000000 
0000007a l       .debug_loc     00000000 
000000a0 l       .debug_loc     00000000 
000000c7 l       .debug_loc     00000000 
000000ee l       .debug_loc     00000000 
00000114 l       .debug_loc     00000000 
0000013a l       .debug_loc     00000000 
00000160 l       .debug_loc     00000000 
00000186 l       .debug_loc     00000000 
000001ac l       .debug_loc     00000000 
000001d2 l       .debug_loc     00000000 
00000224 l       .debug_loc     00000000 
0000023f l       .debug_loc     00000000 
00000265 l       .debug_loc     00000000 
0000028e l       .debug_loc     00000000 
000002a9 l       .debug_loc     00000000 
000002c4 l       .debug_loc     00000000 
00000344 l       .debug_loc     00000000 
0000038f l       .debug_loc     00000000 
000003b5 l       .debug_loc     00000000 
000003db l       .debug_loc     00000000 
000003f6 l       .debug_loc     00000000 
0000041f l       .debug_loc     00000000 
0000043a l       .debug_loc     00000000 
00000455 l       .debug_loc     00000000 
00000470 l       .debug_loc     00000000 
0000048b l       .debug_loc     00000000 
000004a6 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00000074 l       .debug_str     00000000 
000000b7 l       .debug_str     00000000 
00000000 l       .debug_ranges  00000000 
000000c6 l       .debug_str     00000000 
00000107 l       .debug_str     00000000 
000000d8 l       .debug_str     00000000 
0000028e l       .debug_str     00000000 
000000eb l       .debug_str     00000000 
000000dd l       .debug_str     00000000 
00000100 l       .debug_str     00000000 
000000f3 l       .debug_str     00000000 
00000119 l       .debug_str     00000000 
0000012c l       .debug_str     00000000 
00000139 l       .debug_str     00000000 
00000147 l       .debug_str     00000000 
00000152 l       .debug_str     00000000 
00000160 l       .debug_str     00000000 
000000fc l       .debug_str     00000000 
0000015c l       .debug_str     00000000 
00000168 l       .debug_str     00000000 
00000171 l       .debug_str     00000000 
0000017b l       .debug_str     00000000 
000004d0 l       .debug_str     00000000 
000001a8 l       .debug_str     00000000 
0000019a l       .debug_str     00000000 
0000018e l       .debug_str     00000000 
000001af l       .debug_str     00000000 
000001b9 l       .debug_str     00000000 
000001d5 l       .debug_str     00000000 
000001cf l       .debug_str     00000000 
000001df l       .debug_str     00000000 
000001f3 l       .debug_str     00000000 
000001fc l       .debug_str     00000000 
000002ae l       .debug_str     00000000 
00000451 l       .debug_str     00000000 
00000213 l       .debug_str     00000000 
0000022a l       .debug_str     00000000 
00000233 l       .debug_str     00000000 
0000023c l       .debug_str     00000000 
00000246 l       .debug_str     00000000 
0000024b l       .debug_str     00000000 
00000251 l       .debug_str     00000000 
00000265 l       .debug_str     00000000 
0000026b l       .debug_str     00000000 
0000027d l       .debug_str     00000000 
000002c0 l       .debug_str     00000000 
000000cd l       .debug_str     00000000 
00000120 l       .debug_str     00000000 
00000133 l       .debug_str     00000000 
00000140 l       .debug_str     00000000 
0000014e l       .debug_str     00000000 
00000159 l       .debug_str     00000000 
000002d3 l       .debug_str     00000000 
000002dc l       .debug_str     00000000 
000002e9 l       .debug_str     00000000 
0000047d l       .debug_str     00000000 
000002f6 l       .debug_str     00000000 
000002fd l       .debug_str     00000000 
00000304 l       .debug_str     00000000 
00000318 l       .debug_str     00000000 
00000281 l       .debug_str     00000000 
00000290 l       .debug_str     00000000 
000002d7 l       .debug_str     00000000 
0000032c l       .debug_str     00000000 
00000331 l       .debug_str     00000000 
00000292 l       .debug_str     00000000 
0000029f l       .debug_str     00000000 
000000e6 l       .debug_str     00000000 
00000000 l       .debug_frame   00000000 
e000019a l       .text  00000000 
e000040c l       .text  00000000 
e0000488 l       .text  00000000 
00000000 l    df *ABS*  00000000 utils.c
e0000488 l       .text  00000000 
e0000488 l       .text  00000000 
e0000488 l       .text  00000000 
e000048c l       .text  00000000 
e0000490 l       .text  00000000 
e0000492 l       .text  00000000 
e0000496 l       .text  00000000 
e0000498 l       .text  00000000 
e000049c l       .text  00000000 
e000049c l       .text  00000000 
e00004a2 l       .text  00000000 
e00004a6 l       .text  00000000 
e00004a8 l       .text  00000000 
e00004aa l       .text  00000000 
e00004ae l       .text  00000000 
e00004b2 l       .text  00000000 
e00004b4 l       .text  00000000 
e00004b6 l       .text  00000000 
e00004b6 l       .text  00000000 
e00004b6 l       .text  00000000 
e00004b6 l       .text  00000000 
e00004b6 l       .text  00000000 
e00004b8 l       .text  00000000 
e00004b8 l       .text  00000000 
e00004c6 l       .text  00000000 
e00004ce l       .text  00000000 
e00004d0 l       .text  00000000 
e00004d4 l       .text  00000000 
e00004d8 l       .text  00000000 
e00004e4 l       .text  00000000 
e00004e6 l       .text  00000000 
e00004e8 l       .text  00000000 
e00004e8 l       .text  00000000 
e00004ea l       .text  00000000 
e00004ea l       .text  00000000 
e00004ec l       .text  00000000 
e00004ec l       .text  00000000 
e00004ee l       .text  00000000 
e00004ee l       .text  00000000 
e00004f2 l       .text  00000000 
e00004f2 l       .text  00000000 
e00004fa l       .text  00000000 
e00004fc l       .text  00000000 
e00004fc l       .text  00000000 
e00004fe l       .text  00000000 
e00004fe l       .text  00000000 
e0000514 l       .text  00000000 
e0000518 l       .text  00000000 
e000051a l       .text  00000000 
e000051c l       .text  00000000 
e000051c l       .text  00000000 
e000051e l       .text  00000000 
e0000522 l       .text  00000000 
e0000524 l       .text  00000000 
e0000530 l       .text  00000000 
e0000530 l       .text  00000000 
000004cc l       .debug_loc     00000000 
000004f2 l       .debug_loc     00000000 
0000051a l       .debug_loc     00000000 
00000540 l       .debug_loc     00000000 
0000059d l       .debug_loc     00000000 
000005c5 l       .debug_loc     00000000 
000005eb l       .debug_loc     00000000 
00000620 l       .debug_loc     00000000 
00000660 l       .debug_loc     00000000 
0000067b l       .debug_loc     00000000 
0000069c l       .debug_loc     00000000 
000006b7 l       .debug_loc     00000000 
000006d2 l       .debug_loc     00000000 
000006ed l       .debug_loc     00000000 
00000708 l       .debug_loc     00000000 
00000730 l       .debug_loc     00000000 
00000761 l       .debug_loc     00000000 
00000796 l       .debug_loc     00000000 
000007be l       .debug_loc     00000000 
000007da l       .debug_loc     00000000 
000007f5 l       .debug_loc     00000000 
00000810 l       .debug_loc     00000000 
0000082b l       .debug_loc     00000000 
00000846 l       .debug_loc     00000000 
00000861 l       .debug_loc     00000000 
0000087c l       .debug_loc     00000000 
00000897 l       .debug_loc     00000000 
000008f4 l       .debug_loc     00000000 
0000091a l       .debug_loc     00000000 
0000095a l       .debug_loc     00000000 
00000982 l       .debug_loc     00000000 
000009a8 l       .debug_loc     00000000 
000009e8 l       .debug_loc     00000000 
00000a1a l       .debug_loc     00000000 
00000a46 l       .debug_loc     00000000 
00000a61 l       .debug_loc     00000000 
00000a7c l       .debug_loc     00000000 
00000a9d l       .debug_loc     00000000 
00000ab8 l       .debug_loc     00000000 
00000ade l       .debug_loc     00000000 
00000b1a l       .debug_loc     00000000 
00000b40 l       .debug_loc     00000000 
00000b87 l       .debug_loc     00000000 
00000bce l       .debug_loc     00000000 
00000c0a l       .debug_loc     00000000 
00000c32 l       .debug_loc     00000000 
00000c8f l       .debug_loc     00000000 
00000cb9 l       .debug_loc     00000000 
00000cfb l       .debug_loc     00000000 
00000d84 l       .debug_loc     00000000 
00000d9f l       .debug_loc     00000000 
00000dc5 l       .debug_loc     00000000 
00000deb l       .debug_loc     00000000 
00000e08 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00000336 l       .debug_str     00000000 
000000b7 l       .debug_str     00000000 
00000110 l       .debug_ranges  00000000 
00000358 l       .debug_str     00000000 
000000e6 l       .debug_str     00000000 
00000365 l       .debug_str     00000000 
000000f3 l       .debug_str     00000000 
000000fc l       .debug_str     00000000 
000003e6 l       .debug_str     00000000 
000003f9 l       .debug_str     00000000 
00000384 l       .debug_str     00000000 
0000038b l       .debug_str     00000000 
000003a4 l       .debug_str     00000000 
00000379 l       .debug_str     00000000 
00000380 l       .debug_str     00000000 
000003a0 l       .debug_str     00000000 
000003a7 l       .debug_str     00000000 
000003ad l       .debug_str     00000000 
000002d5 l       .debug_str     00000000 
00000398 l       .debug_str     00000000 
0000038e l       .debug_str     00000000 
000003b1 l       .debug_str     00000000 
000000b5 l       .debug_str     00000000 
000003bf l       .debug_str     00000000 
000003c7 l       .debug_str     00000000 
000003d2 l       .debug_str     00000000 
00000443 l       .debug_str     00000000 
000004b1 l       .debug_str     00000000 
000004b8 l       .debug_str     00000000 
0000027d l       .debug_str     00000000 
0000046f l       .debug_str     00000000 
00000068 l       .debug_ranges  00000000 
00000080 l       .debug_ranges  00000000 
00000098 l       .debug_ranges  00000000 
000000b0 l       .debug_ranges  00000000 
000000c8 l       .debug_ranges  00000000 
000000e0 l       .debug_ranges  00000000 
0000044b l       .debug_str     00000000 
00000451 l       .debug_str     00000000 
00000481 l       .debug_str     00000000 
000004ca l       .debug_str     00000000 
000004cd l       .debug_str     00000000 
000004c0 l       .debug_str     00000000 
000004d5 l       .debug_str     00000000 
000004d7 l       .debug_str     00000000 
0000016f l       .debug_str     00000000 
000000f8 l       .debug_ranges  00000000 
00000292 l       .debug_str     00000000 
00000453 l       .debug_str     00000000 
0000045a l       .debug_str     00000000 
00000400 l       .debug_str     00000000 
0000040a l       .debug_str     00000000 
00000417 l       .debug_str     00000000 
00000429 l       .debug_str     00000000 
00000038 l       .debug_ranges  00000000 
00000050 l       .debug_ranges  00000000 
0000042e l       .debug_str     00000000 
00000473 l       .debug_str     00000000 
0000047b l       .debug_str     00000000 
000000d6 l       .debug_str     00000000 
000001f1 l       .debug_str     00000000 
00000363 l       .debug_str     00000000 
00000483 l       .debug_str     00000000 
0000048a l       .debug_str     00000000 
00000495 l       .debug_str     00000000 
0000049c l       .debug_str     00000000 
000004a3 l       .debug_str     00000000 
000004aa l       .debug_str     00000000 
000003d6 l       .debug_str     00000000 
0000028e l       .debug_str     00000000 
000003dd l       .debug_str     00000000 
000003e4 l       .debug_str     00000000 
000000e9 l       .debug_str     00000000 
00000466 l       .debug_str     00000000 
0000029f l       .debug_str     00000000 
0000007c l       .debug_frame   00000000 
e00004b6 l       .text  00000000 
e0000530 l       .text  00000000 
e00004b6 g     F .text  0000007a external_irq_handler
e0000560 g     O .bss   00000004 next_id
e0000564 g     O .bss   00000004 new_next_id
00008000 g       *ABS*  00000000 _stack_len
e0000104 g     F .text  00000096 initialize_memory
e0000530 g       .bss   00000000 _bss_start
e000a000 g       .stack 00000000 stack
e0000080 g       *ABS*  00000000 _entry_point
e0000568 g       .bss   00000000 _bss_end
e0000488 g     F .text  0000002e uart_set_cfg
e00000cc g       .text  00000000 _start
e000019a g     F .text  00000272 titanssl_benchmark_aes
e000040c g     F .text  0000007c main
e0000084 g       .vectors       00000000 _vectors_end
e0010000 g       .vectors       00000000 _stack_start
00002000 g       *ABS*  00000000 _min_stack
e0010010 g       *ABS*  00000000 fromhost
00020008 g       *ABS*  00000000 tohost
e000a000 g       .stack 00000000 _stack
e0000000 g       .vectors       00000000 _vectors_start



Disassembly of section .vectors:

e0000000 <_vectors_start>:
e0000000:       0840006f                j       e0000084 <_vectors_end>
e0000004:       0800006f                j       e0000084 <_vectors_end>
e0000008:       07c0006f                j       e0000084 <_vectors_end>
e000000c:       0780006f                j       e0000084 <_vectors_end>
e0000010:       0740006f                j       e0000084 <_vectors_end>
e0000014:       0700006f                j       e0000084 <_vectors_end>
e0000018:       06c0006f                j       e0000084 <_vectors_end>
e000001c:       0680006f                j       e0000084 <_vectors_end>
e0000020:       0640006f                j       e0000084 <_vectors_end>
e0000024:       0600006f                j       e0000084 <_vectors_end>
e0000028:       05c0006f                j       e0000084 <_vectors_end>
e000002c:       48a0006f                j       e00004b6 <external_irq_handler>
e0000030:       0540006f                j       e0000084 <_vectors_end>
e0000034:       0500006f                j       e0000084 <_vectors_end>
e0000038:       04c0006f                j       e0000084 <_vectors_end>
e000003c:       0480006f                j       e0000084 <_vectors_end>
e0000040:       0440006f                j       e0000084 <_vectors_end>
e0000044:       0400006f                j       e0000084 <_vectors_end>
e0000048:       03c0006f                j       e0000084 <_vectors_end>
e000004c:       0380006f                j       e0000084 <_vectors_end>
e0000050:       0340006f                j       e0000084 <_vectors_end>
e0000054:       0300006f                j       e0000084 <_vectors_end>
e0000058:       02c0006f                j       e0000084 <_vectors_end>
e000005c:       0280006f                j       e0000084 <_vectors_end>
e0000060:       0240006f                j       e0000084 <_vectors_end>
e0000064:       0200006f                j       e0000084 <_vectors_end>
e0000068:       01c0006f                j       e0000084 <_vectors_end>
e000006c:       0180006f                j       e0000084 <_vectors_end>
e0000070:       0140006f                j       e0000084 <_vectors_end>
e0000074:       0100006f                j       e0000084 <_vectors_end>
e0000078:       00c0006f                j       e0000084 <_vectors_end>
e000007c:       0080006f                j       e0000084 <_vectors_end>
e0000080:       0060006f                j       e0000086 <reset_handler>

Disassembly of section .text:

e0000084 <default_exc_handler>:
default_exc_handler():
e0000084:       a8ad                    j       e00000fe <sleep_loop>

e0000086 <reset_handler>:
reset_handler():
e0000086:       4081                    li      ra,0
e0000088:       8106                    mv      sp,ra
e000008a:       8186                    mv      gp,ra
e000008c:       8206                    mv      tp,ra
e000008e:       8286                    mv      t0,ra
e0000090:       8306                    mv      t1,ra
e0000092:       8386                    mv      t2,ra
e0000094:       8406                    mv      s0,ra
e0000096:       8486                    mv      s1,ra
e0000098:       8506                    mv      a0,ra
e000009a:       8586                    mv      a1,ra
e000009c:       8606                    mv      a2,ra
e000009e:       8686                    mv      a3,ra
e00000a0:       8706                    mv      a4,ra
e00000a2:       8786                    mv      a5,ra
e00000a4:       8806                    mv      a6,ra
e00000a6:       8886                    mv      a7,ra
e00000a8:       8906                    mv      s2,ra
e00000aa:       8986                    mv      s3,ra
e00000ac:       8a06                    mv      s4,ra
e00000ae:       8a86                    mv      s5,ra
e00000b0:       8b06                    mv      s6,ra
e00000b2:       8b86                    mv      s7,ra
e00000b4:       8c06                    mv      s8,ra
e00000b6:       8c86                    mv      s9,ra
e00000b8:       8d06                    mv      s10,ra
e00000ba:       8d86                    mv      s11,ra
e00000bc:       8e06                    mv      t3,ra
e00000be:       8e86                    mv      t4,ra
e00000c0:       8f06                    mv      t5,ra
e00000c2:       8f86                    mv      t6,ra
e00000c4:       00010117                auipc   sp,0x10
e00000c8:       f3c10113                addi    sp,sp,-196 # e0010000 <_stack_start>

e00000cc <_start>:
e00000cc:       00000d17                auipc   s10,0x0
e00000d0:       464d0d13                addi    s10,s10,1124 # e0000530 <buffer_plain_idma>
e00000d4:       00000d97                auipc   s11,0x0
e00000d8:       494d8d93                addi    s11,s11,1172 # e0000568 <_bss_end>
e00000dc:       01bd5763                bge     s10,s11,e00000ea <main_entry>

e00000e0 <zero_loop>:
zero_loop():
e00000e0:       /-> 000d2023            sw      zero,0(s10)
e00000e4:       |   0d11                        addi    s10,s10,4
e00000e6:       \-- ffaddde3            bge     s11,s10,e00000e0 <zero_loop>

e00000ea <main_entry>:
zero_loop_end():
e00000ea:       4501                    li      a0,0
e00000ec:       4581                    li      a1,0
e00000ee:       31e000ef                jal     ra,e000040c <main>
e00000f2:       c11c0537                lui     a0,0xc11c0
e00000f6:       0561                    addi    a0,a0,24
e00000f8:       4285                    li      t0,1
e00000fa:       00552023                sw      t0,0(a0) # c11c0000 <fromhost+0xe11afff0>

e00000fe <sleep_loop>:
sleep_loop():
e00000fe:       /-> 10500073            wfi
e0000102:       \-- bff5                        j       e00000fe <sleep_loop>

e0000104 <initialize_memory>:
initialize_memory():
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:127
    aes = mmio_region_from_addr(TOP_EARLGREY_AES_BASE_ADDR); //CONF
    while(!mmio_region_get_bit32(aes, AES_STATUS_REG_OFFSET, AES_STATUS_IDLE_BIT)); //CONF
}

void initialize_memory()
{
e0000104:           00000517            auipc   a0,0x0
e0000108:           42c50513            addi    a0,a0,1068 # e0000530 <buffer_plain_idma>
e000010c:           fff005b7            lui     a1,0xfff00
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:130

#if TITANSSL_CFG_MEM_L3
    buffer_plain_idma.data = (uint8_t*)TITANSSL_ADDR_PLAIN_IDMA;
e0000110:           c10c                        sw      a1,0(a0)
e0000112:           6585                        lui     a1,0x1
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:131
    buffer_plain_idma.n = TITANSSL_SIZE_PLAIN;
e0000114:           c14c                        sw      a1,4(a0)
e0000116:           00000517            auipc   a0,0x0
e000011a:           42250513            addi    a0,a0,1058 # e0000538 <buffer_cipher_idma>
e000011e:           fff04637            lui     a2,0xfff04
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:133

    buffer_cipher_idma.data = (uint8_t*)TITANSSL_ADDR_CIPHER_IDMA;
e0000122:           c110                        sw      a2,0(a0)
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:134
    buffer_cipher_idma.n = TITANSSL_SIZE_PLAIN;
e0000124:           c14c                        sw      a1,4(a0)
e0000126:           00000517            auipc   a0,0x0
e000012a:           41a50513            addi    a0,a0,1050 # e0000540 <buffer_plain>
e000012e:           80720637            lui     a2,0x80720
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:136
#endif
    buffer_plain.data = (uint8_t*)TITANSSL_ADDR_PLAIN;
e0000132:           c110                        sw      a2,0(a0)
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:137
    buffer_plain.n = TITANSSL_SIZE_PLAIN;
e0000134:           c14c                        sw      a1,4(a0)
e0000136:           00000517            auipc   a0,0x0
e000013a:           41250513            addi    a0,a0,1042 # e0000548 <buffer_cipher>
e000013e:           80740637            lui     a2,0x80740
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:140
    //for (size_t i=0; i<TITANSSL_SIZE_PLAIN; i++) buffer_plain.data[i] = 0x0;

    buffer_cipher.data = (uint8_t*)TITANSSL_ADDR_CIPHER;
e0000142:           c110                        sw      a2,0(a0)
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:141
    buffer_cipher.n = TITANSSL_SIZE_CIPHER;
e0000144:           c14c                        sw      a1,4(a0)
e0000146:           00000517            auipc   a0,0x0
e000014a:           40a50513            addi    a0,a0,1034 # e0000550 <buffer_key>
e000014e:           e0006637            lui     a2,0xe0006
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:144
    //for (size_t i=0; i<TITANSSL_SIZE_CIPHER; i++) buffer_cipher.data[i] = 0x0;

    buffer_key.data = (uint8_t*)TITANSSL_ADDR_KEY;
e0000152:           c110                        sw      a2,0(a0)
e0000154:           02000593            li      a1,32
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:145
    buffer_key.n = TITANSSL_SIZE_KEY;
e0000158:           c14c                        sw      a1,4(a0)
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:146
    for (size_t i=0; i<TITANSSL_SIZE_KEY; i++) buffer_key.data[i] = 0x0;
e000015a:           00060023            sb      zero,0(a2) # e0006000 <fromhost+0xffff5ff0>
e000015e:           4605                        li      a2,1
e0000160:       /-> 4114                        lw      a3,0(a0)
e0000162:       |   96b2                        add     a3,a3,a2
e0000164:       |   0605                        addi    a2,a2,1
e0000166:       |   00068023            sb      zero,0(a3)
e000016a:       \-- feb61be3            bne     a2,a1,e0000160 <initialize_memory+0x5c>
e000016e:           e0006637            lui     a2,0xe0006
e0000172:           10060593            addi    a1,a2,256 # e0006100 <fromhost+0xffff60f0>
e0000176:           00000517            auipc   a0,0x0
e000017a:           3e250513            addi    a0,a0,994 # e0000558 <buffer_iv>
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:148

    buffer_iv.data = (uint8_t*)TITANSSL_ADDR_IV;
e000017e:           c10c                        sw      a1,0(a0)
e0000180:           45c1                        li      a1,16
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:149
    buffer_iv.n = TITANSSL_SIZE_IV;
e0000182:           c14c                        sw      a1,4(a0)
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:150
    for (size_t i=0; i<TITANSSL_SIZE_IV; i++) buffer_iv.data[i] = 0x0;
e0000184:           10060023            sb      zero,256(a2)
e0000188:           4605                        li      a2,1
e000018a:       /-> 4114                        lw      a3,0(a0)
e000018c:       |   96b2                        add     a3,a3,a2
e000018e:       |   0605                        addi    a2,a2,1
e0000190:       |   00068023            sb      zero,0(a3)
e0000194:       \-- feb61be3            bne     a2,a1,e000018a <initialize_memory+0x86>
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:151
}
e0000198:           8082                        ret

e000019a <titanssl_benchmark_aes>:
titanssl_benchmark_aes():
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:169
    uint8_t *dp_dst; //CONF
    // Get the AES IP base address
    aes = mmio_region_from_addr(TOP_EARLGREY_AES_BASE_ADDR); //CONF

#if TITANSSL_CFG_MEM_L3
    uint32_t src_addr_int = (uint32_t)(uintptr_t)plain->data;//CONF
e000019a:                 00062883              lw      a7,0(a2) # 8000 <_stack_len>
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:170
    uint32_t dst_addr_int = (uint32_t)(uintptr_t)plain_idma->data;//CONF
e000019e:                 00052803              lw      a6,0(a0)
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:171
    next_id = issue_idma_transaction(src_addr_int, dst_addr_int, plain->n);//CONF
e00001a2:                 00462283              lw      t0,4(a2)
e00001a6:                 fef00337              lui     t1,0xfef00
issue_idma_transaction():
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:100
    *ptr32 = src_addr; // IDMA
e00001aa:                 01132023              sw      a7,0(t1) # fef00000 <fromhost+0x1eeefff0>
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:102
    *ptr32 = dst_addr; // IDMA
e00001ae:                 01032223              sw      a6,4(t1)
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:104
    *ptr32 = num_bytes; // IDMA
e00001b2:                 00532423              sw      t0,8(t1)
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:106
    buff = *ptr32; // IDMA
e00001b6:                 02032883              lw      a7,32(t1)
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:107
    return *ptr32; // IDMA
e00001ba:                 02032283              lw      t0,32(t1)
titanssl_benchmark_aes():
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:171
    next_id = issue_idma_transaction(src_addr_int, dst_addr_int, plain->n);//CONF
e00001be:                 00000897              auipc   a7,0x0
e00001c2:                 3a288893              addi    a7,a7,930 # e0000560 <next_id>
e00001c6:                 0058a023              sw      t0,0(a7)
e00001ca:                 c11002b7              lui     t0,0xc1100
mmio_region_read32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:96
 * @param offset the offset to read at, in bytes.
 * @return the read value.
 */
OT_WARN_UNUSED_RESULT
inline uint32_t mmio_region_read32(mmio_region_t base, ptrdiff_t offset) {
  return ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)];
e00001ce:             /-> 0842a303              lw      t1,132(t0) # c1100084 <fromhost+0xe10f0074>
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
 */
OT_WARN_UNUSED_RESULT
inline bool bitfield_bit32_read(uint32_t bitfield,
                                bitfield_bit32_index_t bit_index) {
  return bitfield_field32_read(bitfield,
                               bitfield_bit32_to_field32(bit_index)) == 0x1u;
e00001d2:             |   00137313              andi    t1,t1,1
titanssl_benchmark_aes():
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:175
#endif

    // Reset the IP
    while(!mmio_region_get_bit32(aes, AES_STATUS_REG_OFFSET, AES_STATUS_IDLE_BIT)); //CONF
e00001d6:             \-- fe030ce3              beqz    t1,e00001ce <titanssl_benchmark_aes+0x34>
e00001da:                 c11002b7              lui     t0,0xc1100
e00001de:                 6321                  lui     t1,0x8
mmio_region_write32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:145
 * @param offset the offset to write at, in bytes.
 * @param value the value to write.
 */
inline void mmio_region_write32(mmio_region_t base, ptrdiff_t offset,
                                uint32_t value) {
  ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)] = value;
e00001e0:                 0662aa23              sw      t1,116(t0) # c1100074 <fromhost+0xe10f0064>
e00001e4:                 0662aa23              sw      t1,116(t0)
e00001e8:                 08028313              addi    t1,t0,128
e00001ec:                 4399                  li      t2,6
e00001ee:                 00732023              sw      t2,0(t1) # 8000 <_stack_len>
mmio_region_read32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:96
  return ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)];
e00001f2:             /-> 0842a303              lw      t1,132(t0)
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
e00001f6:             |   00137313              andi    t1,t1,1
titanssl_benchmark_aes():
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:182
    mmio_region_write32(aes, AES_CTRL_SHADOWED_REG_OFFSET, reg); //CONF
    mmio_region_write32(aes, AES_CTRL_SHADOWED_REG_OFFSET, reg); //CONF
    reg = bitfield_bit32_write(0, AES_TRIGGER_KEY_IV_DATA_IN_CLEAR_BIT, true); //CONF
    reg = bitfield_bit32_write(reg, AES_TRIGGER_DATA_OUT_CLEAR_BIT, true); //CONF
    mmio_region_write32(aes, AES_TRIGGER_REG_OFFSET, reg); //CONF
    while (!mmio_region_get_bit32(aes, AES_STATUS_REG_OFFSET, AES_STATUS_IDLE_BIT)); //CONF
e00001fa:             \-- fe030ce3              beqz    t1,e00001f2 <titanssl_benchmark_aes+0x58>
e00001fe:                 c11002b7              lui     t0,0xc1100
e0000202:                 78300313              li      t1,1923
mmio_region_write32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:145
  ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)] = value;
e0000206:                 0662aa23              sw      t1,116(t0) # c1100074 <fromhost+0xe10f0064>
e000020a:                 07428393              addi    t2,t0,116
e000020e:                 0063a023              sw      t1,0(t2)
mmio_region_read32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:96
  return ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)];
e0000212:             /-> 0842a303              lw      t1,132(t0)
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
e0000216:             |   00137313              andi    t1,t1,1
titanssl_benchmark_aes():
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:190
    reg = bitfield_field32_write(reg, AES_CTRL_SHADOWED_KEY_LEN_FIELD, AES_CTRL_SHADOWED_KEY_LEN_MASK); //CONF
    mmio_region_write32(aes, AES_CTRL_SHADOWED_REG_OFFSET, reg); //CONF
    mmio_region_write32(aes, AES_CTRL_SHADOWED_REG_OFFSET, reg); //CONF

    // Initialize AES IP configurations
    while(!mmio_region_get_bit32(aes, AES_STATUS_REG_OFFSET, AES_STATUS_IDLE_BIT)); //CONF
e000021a:             \-- fe030ce3              beqz    t1,e0000212 <titanssl_benchmark_aes+0x78>
e000021e:                 6289                  lui     t0,0x2
e0000220:                 40928313              addi    t1,t0,1033 # 2409 <_min_stack+0x409>
e0000224:                 c11002b7              lui     t0,0xc1100
mmio_region_write32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:145
  ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)] = value;
e0000228:                 0662aa23              sw      t1,116(t0) # c1100074 <fromhost+0xe10f0064>
e000022c:                 0662aa23              sw      t1,116(t0)
e0000230:                 0602ac23              sw      zero,120(t0)
e0000234:                 0602ac23              sw      zero,120(t0)
e0000238:                 4305                  li      t1,1
e000023a:                 0662ae23              sw      t1,124(t0)
titanssl_benchmark_aes():
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:208
    mmio_region_write32(aes, AES_CTRL_AUX_SHADOWED_REG_OFFSET, reg); //CONF
    mmio_region_write32(aes, AES_CTRL_AUX_SHADOWED_REG_OFFSET, reg); //CONF
    mmio_region_write32(aes, AES_CTRL_AUX_REGWEN_REG_OFFSET, true); //CONF

    // Initialize key shares
    mmio_region_write32(aes, AES_KEY_SHARE0_0_REG_OFFSET, ((uint32_t*)(key->data))[0]); //CONF
e000023e:                 00072303              lw      t1,0(a4)
e0000242:                 00032703              lw      a4,0(t1)
mmio_region_write32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:145
e0000246:                 00e2a223              sw      a4,4(t0)
titanssl_benchmark_aes():
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:209
    mmio_region_write32(aes, AES_KEY_SHARE0_1_REG_OFFSET, ((uint32_t*)(key->data))[1]); //CONF
e000024a:                 00432703              lw      a4,4(t1)
mmio_region_write32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:145
e000024e:                 00e2a423              sw      a4,8(t0)
titanssl_benchmark_aes():
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:210
    mmio_region_write32(aes, AES_KEY_SHARE0_2_REG_OFFSET, ((uint32_t*)(key->data))[2]); //CONF
e0000252:                 00832703              lw      a4,8(t1)
mmio_region_write32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:145
e0000256:                 00e2a623              sw      a4,12(t0)
titanssl_benchmark_aes():
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:211
    mmio_region_write32(aes, AES_KEY_SHARE0_3_REG_OFFSET, ((uint32_t*)(key->data))[3]); //CONF
e000025a:                 00c32703              lw      a4,12(t1)
mmio_region_write32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:145
e000025e:                 00e2a823              sw      a4,16(t0)
titanssl_benchmark_aes():
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:212
    mmio_region_write32(aes, AES_KEY_SHARE0_4_REG_OFFSET, ((uint32_t*)(key->data))[4]); //CONF
e0000262:                 01032703              lw      a4,16(t1)
mmio_region_write32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:145
e0000266:                 00e2aa23              sw      a4,20(t0)
titanssl_benchmark_aes():
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:213
    mmio_region_write32(aes, AES_KEY_SHARE0_5_REG_OFFSET, ((uint32_t*)(key->data))[5]); //CONF
e000026a:                 01432703              lw      a4,20(t1)
mmio_region_write32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:145
e000026e:                 00e2ac23              sw      a4,24(t0)
titanssl_benchmark_aes():
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:214
    mmio_region_write32(aes, AES_KEY_SHARE0_6_REG_OFFSET, ((uint32_t*)(key->data))[6]); //CONF
e0000272:                 01832703              lw      a4,24(t1)
mmio_region_write32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:145
e0000276:                 00e2ae23              sw      a4,28(t0)
titanssl_benchmark_aes():
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:215
    mmio_region_write32(aes, AES_KEY_SHARE0_7_REG_OFFSET, ((uint32_t*)(key->data))[7]); //CONF
e000027a:                 01c32703              lw      a4,28(t1)
mmio_region_write32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:145
e000027e:                 02e2a023              sw      a4,32(t0)
titanssl_benchmark_aes():
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:216
    mmio_region_write32(aes, AES_KEY_SHARE1_0_REG_OFFSET, ((uint32_t*)(key->data))[0]); //CONF
e0000282:                 00032703              lw      a4,0(t1)
mmio_region_write32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:145
e0000286:                 02e2a223              sw      a4,36(t0)
titanssl_benchmark_aes():
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:217
    mmio_region_write32(aes, AES_KEY_SHARE1_1_REG_OFFSET, ((uint32_t*)(key->data))[1]); //CONF
e000028a:                 00432703              lw      a4,4(t1)
mmio_region_write32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:145
e000028e:                 02e2a423              sw      a4,40(t0)
titanssl_benchmark_aes():
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:218
    mmio_region_write32(aes, AES_KEY_SHARE1_2_REG_OFFSET, ((uint32_t*)(key->data))[2]); //CONF
e0000292:                 00832703              lw      a4,8(t1)
mmio_region_write32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:145
e0000296:                 02e2a623              sw      a4,44(t0)
titanssl_benchmark_aes():
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:219
    mmio_region_write32(aes, AES_KEY_SHARE1_3_REG_OFFSET, ((uint32_t*)(key->data))[3]); //CONF
e000029a:                 00c32703              lw      a4,12(t1)
mmio_region_write32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:145
e000029e:                 02e2a823              sw      a4,48(t0)
titanssl_benchmark_aes():
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:220
    mmio_region_write32(aes, AES_KEY_SHARE1_4_REG_OFFSET, ((uint32_t*)(key->data))[4]); //CONF
e00002a2:                 01032703              lw      a4,16(t1)
mmio_region_write32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:145
e00002a6:                 02e2aa23              sw      a4,52(t0)
titanssl_benchmark_aes():
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:221
    mmio_region_write32(aes, AES_KEY_SHARE1_5_REG_OFFSET, ((uint32_t*)(key->data))[5]); //CONF
e00002aa:                 01432703              lw      a4,20(t1)
mmio_region_write32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:145
e00002ae:                 02e2ac23              sw      a4,56(t0)
titanssl_benchmark_aes():
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:222
    mmio_region_write32(aes, AES_KEY_SHARE1_6_REG_OFFSET, ((uint32_t*)(key->data))[6]); //CONF
e00002b2:                 01832703              lw      a4,24(t1)
mmio_region_write32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:145
e00002b6:                 02e2ae23              sw      a4,60(t0)
titanssl_benchmark_aes():
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:223
    mmio_region_write32(aes, AES_KEY_SHARE1_7_REG_OFFSET, ((uint32_t*)(key->data))[7]); //CONF
e00002ba:                 01c32703              lw      a4,28(t1)
mmio_region_write32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:145
e00002be:                 04e2a023              sw      a4,64(t0)
mmio_region_read32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:96
  return ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)];
e00002c2:                 0742a703              lw      a4,116(t0)
titanssl_benchmark_aes():
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:228

    // Initialize IV
    reg = mmio_region_read32(aes, AES_CTRL_SHADOWED_REG_OFFSET); //CONF
    reg = bitfield_field32_read(reg, AES_CTRL_SHADOWED_MODE_FIELD); //CONF
    if (reg != AES_CTRL_SHADOWED_MODE_VALUE_AES_ECB) //CONF
e00002c6:                 0fc77313              andi    t1,a4,252
e00002ca:                 4711                  li      a4,4
e00002cc:          /----- 02e30763              beq     t1,a4,e00002fa <titanssl_benchmark_aes+0x160>
mmio_region_read32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:96
e00002d0:          |  /-> 0842a703              lw      a4,132(t0)
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
e00002d4:          |  |   8b05                  andi    a4,a4,1
titanssl_benchmark_aes():
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:230
    {
        while(!mmio_region_get_bit32(aes, AES_STATUS_REG_OFFSET, AES_STATUS_IDLE_BIT)); //CONF
e00002d6:          |  \-- df6d                  beqz    a4,e00002d0 <titanssl_benchmark_aes+0x136>
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:231
        mmio_region_write32(aes, AES_IV_0_REG_OFFSET, ((uint32_t*)(iv->data))[0]); //CONF
e00002d8:          |      4398                  lw      a4,0(a5)
e00002da:          |      00072283              lw      t0,0(a4)
e00002de:          |      c1100337              lui     t1,0xc1100
mmio_region_write32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:145
  ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)] = value;
e00002e2:          |      04532223              sw      t0,68(t1) # c1100044 <fromhost+0xe10f0034>
titanssl_benchmark_aes():
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:232
        mmio_region_write32(aes, AES_IV_1_REG_OFFSET, ((uint32_t*)(iv->data))[1]); //CONF
e00002e6:          |      435c                  lw      a5,4(a4)
mmio_region_write32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:145
e00002e8:          |      04f32423              sw      a5,72(t1)
titanssl_benchmark_aes():
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:233
        mmio_region_write32(aes, AES_IV_2_REG_OFFSET, ((uint32_t*)(iv->data))[2]); //CONF
e00002ec:          |      471c                  lw      a5,8(a4)
mmio_region_write32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:145
e00002ee:          |      04f32623              sw      a5,76(t1)
titanssl_benchmark_aes():
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:234
        mmio_region_write32(aes, AES_IV_3_REG_OFFSET, ((uint32_t*)(iv->data))[3]); //CONF
e00002f2:          |      4758                  lw      a4,12(a4)
e00002f4:          |      05030793              addi    a5,t1,80
mmio_region_write32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:145
e00002f8:          |      c398                  sw      a4,0(a5)
titanssl_benchmark_aes():
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:237
    } //CONF
#if TITANSSL_CFG_MEM_L3
    wait_for_idma_eot(next_id); //CONF
e00002fa:          \----> 0008a703              lw      a4,0(a7)
e00002fe:                 fef008b7              lui     a7,0xfef00
wait_for_idma_eot():
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:92
    while(*ptr!=next_id)  //IDMA_WAIT
e0000302:                 0248a783              lw      a5,36(a7) # fef00024 <fromhost+0x1eef0014>
e0000306:          /----- 00e78963              beq     a5,a4,e0000318 <titanssl_benchmark_aes+0x17e>
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:93
      asm volatile("nop");  //IDMA_WAIT
e000030a:          |  /-> 0001                  nop
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:92
    while(*ptr!=next_id)  //IDMA_WAIT
e000030c:          |  |   0248a783              lw      a5,36(a7)
e0000310:          |  \-- fee79de3              bne     a5,a4,e000030a <titanssl_benchmark_aes+0x170>
titanssl_benchmark_aes():
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:239
    // Compute AES
    dp_src = plain_idma->data; //CIPHER
e0000314:          |      00052803              lw      a6,0(a0)
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:246
#elif TITANSSL_CFG_MEM_L1
    // Compute AES
    dp_src = plain->data; //CIPHER
    dp_dst = cipher->data; //CIPHER
#endif
    mmio_region_write32(aes, AES_DATA_IN_0_REG_OFFSET, ((uint32_t*)dp_src)[0]); //CIPHER
e0000318:          \----> 00082703              lw      a4,0(a6)
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:240
    dp_dst = cipher_idma->data; //CIPHER
e000031c:                 0005a883              lw      a7,0(a1) # fef00000 <fromhost+0x1eeefff0>
e0000320:                 c1100537              lui     a0,0xc1100
mmio_region_write32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:145
e0000324:                 c978                  sw      a4,84(a0)
titanssl_benchmark_aes():
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:247
    mmio_region_write32(aes, AES_DATA_IN_1_REG_OFFSET, ((uint32_t*)dp_src)[1]); //CIPHER
e0000326:                 00482583              lw      a1,4(a6)
mmio_region_write32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:145
e000032a:                 cd2c                  sw      a1,88(a0)
titanssl_benchmark_aes():
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:248
    mmio_region_write32(aes, AES_DATA_IN_2_REG_OFFSET, ((uint32_t*)dp_src)[2]); //CIPHER
e000032c:                 00882583              lw      a1,8(a6)
mmio_region_write32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:145
e0000330:                 cd6c                  sw      a1,92(a0)
titanssl_benchmark_aes():
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:249
    mmio_region_write32(aes, AES_DATA_IN_3_REG_OFFSET, ((uint32_t*)dp_src)[3]); //CIPHER
e0000332:                 00c82583              lw      a1,12(a6)
mmio_region_write32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:145
e0000336:                 d12c                  sw      a1,96(a0)
mmio_region_read32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:96
  return ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)];
e0000338:             /-> 08452583              lw      a1,132(a0) # c1100084 <fromhost+0xe10f0074>
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
e000033c:             |   89c1                  andi    a1,a1,16
titanssl_benchmark_aes():
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:250
    while(!mmio_region_get_bit32(aes, AES_STATUS_REG_OFFSET, AES_STATUS_INPUT_READY_BIT)); //CIPHER
e000033e:             \-- dded                  beqz    a1,e0000338 <titanssl_benchmark_aes+0x19e>
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:253
    dp_src += 16; //CIPHER
    #if TITANSSL_CFG_MEM_L3
    while (dp_src - plain_idma->data < plain->n) { //CIPHER
e0000340:                 4248                  lw      a0,4(a2)
e0000342:                 4745                  li      a4,17
e0000344:                 85c6                  mv      a1,a7
e0000346:       /-------- 04e56a63              bltu    a0,a4,e000039a <titanssl_benchmark_aes+0x200>
e000034a:       |         01080513              addi    a0,a6,16
e000034e:       |         c1100737              lui     a4,0xc1100
e0000352:       |         06070293              addi    t0,a4,96 # c1100060 <fromhost+0xe10f0050>
e0000356:       |         8342                  mv      t1,a6
e0000358:       |         85c6                  mv      a1,a7
e000035a:       |  /----> 879a                  mv      a5,t1
e000035c:       |  |      832a                  mv      t1,a0
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:257
    #elif TITANSSL_CFG_MEM_L1
    while (dp_src - plain->data < plain->n) { //CIPHER
    #endif
        mmio_region_write32(aes, AES_DATA_IN_0_REG_OFFSET, ((uint32_t*)dp_src)[0]); //CIPHER
e000035e:       |  |      4108                  lw      a0,0(a0)
mmio_region_write32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:145
  ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)] = value;
e0000360:       |  |      cb68                  sw      a0,84(a4)
titanssl_benchmark_aes():
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:258
        mmio_region_write32(aes, AES_DATA_IN_1_REG_OFFSET, ((uint32_t*)dp_src)[1]); //CIPHER
e0000362:       |  |      4bc8                  lw      a0,20(a5)
mmio_region_write32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:145
e0000364:       |  |      cf28                  sw      a0,88(a4)
titanssl_benchmark_aes():
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:259
        mmio_region_write32(aes, AES_DATA_IN_2_REG_OFFSET, ((uint32_t*)dp_src)[2]); //CIPHER
e0000366:       |  |      4f88                  lw      a0,24(a5)
mmio_region_write32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:145
e0000368:       |  |      cf68                  sw      a0,92(a4)
titanssl_benchmark_aes():
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:260
        mmio_region_write32(aes, AES_DATA_IN_3_REG_OFFSET, ((uint32_t*)dp_src)[3]); //CIPHER
e000036a:       |  |      4fc8                  lw      a0,28(a5)
mmio_region_write32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:145
e000036c:       |  |      00a2a023              sw      a0,0(t0)
mmio_region_read32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:96
  return ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)];
e0000370:       |  |  /-> 08472503              lw      a0,132(a4)
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
e0000374:       |  |  |   8921                  andi    a0,a0,8
titanssl_benchmark_aes():
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:262

        while(!mmio_region_get_bit32(aes, AES_STATUS_REG_OFFSET, AES_STATUS_OUTPUT_VALID_BIT)); //CIPHER
e0000376:       |  |  \-- dd6d                  beqz    a0,e0000370 <titanssl_benchmark_aes+0x1d6>
mmio_region_read32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:96
e0000378:       |  |      5368                  lw      a0,100(a4)
titanssl_benchmark_aes():
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:263
        ((uint32_t*)(dp_dst))[0] = mmio_region_read32(aes, AES_DATA_OUT_0_REG_OFFSET); //CIPHER
e000037a:       |  |      c188                  sw      a0,0(a1)
mmio_region_read32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:96
e000037c:       |  |      5728                  lw      a0,104(a4)
titanssl_benchmark_aes():
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:264
        ((uint32_t*)(dp_dst))[1] = mmio_region_read32(aes, AES_DATA_OUT_1_REG_OFFSET); //CIPHER
e000037e:       |  |      c1c8                  sw      a0,4(a1)
mmio_region_read32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:96
e0000380:       |  |      5768                  lw      a0,108(a4)
titanssl_benchmark_aes():
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:265
        ((uint32_t*)(dp_dst))[2] = mmio_region_read32(aes, AES_DATA_OUT_2_REG_OFFSET); //CIPHER
e0000382:       |  |      c588                  sw      a0,8(a1)
mmio_region_read32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:96
e0000384:       |  |      5b28                  lw      a0,112(a4)
titanssl_benchmark_aes():
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:266
        ((uint32_t*)(dp_dst))[3] = mmio_region_read32(aes, AES_DATA_OUT_3_REG_OFFSET); //CIPHER
e0000386:       |  |      c5c8                  sw      a0,12(a1)
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:253
    while (dp_src - plain_idma->data < plain->n) { //CIPHER
e0000388:       |  |      00462383              lw      t2,4(a2)
e000038c:       |  |      01030513              addi    a0,t1,16
e0000390:       |  |      410507b3              sub     a5,a0,a6
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:267
        dp_dst += 16; //CIPHER
e0000394:       |  |      05c1                  addi    a1,a1,16
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:253
    while (dp_src - plain_idma->data < plain->n) { //CIPHER
e0000396:       |  \----- fc77e2e3              bltu    a5,t2,e000035a <titanssl_benchmark_aes+0x1c0>
e000039a:       \-------> c1100537              lui     a0,0xc1100
mmio_region_read32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:96
e000039e:             /-> 08452703              lw      a4,132(a0) # c1100084 <fromhost+0xe10f0074>
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
e00003a2:             |   8b21                  andi    a4,a4,8
titanssl_benchmark_aes():
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:270
        dp_src += 16; //CIPHER
    }
    while(!mmio_region_get_bit32(aes, AES_STATUS_REG_OFFSET, AES_STATUS_OUTPUT_VALID_BIT)); //CIPHER
e00003a4:             \-- df6d                  beqz    a4,e000039e <titanssl_benchmark_aes+0x204>
e00003a6:                 c1100537              lui     a0,0xc1100
mmio_region_read32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:96
e00003aa:                 5178                  lw      a4,100(a0)
titanssl_benchmark_aes():
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:271
    ((uint32_t*)(dp_dst))[0] = mmio_region_read32(aes, AES_DATA_OUT_0_REG_OFFSET); //CIPHER
e00003ac:                 c198                  sw      a4,0(a1)
mmio_region_read32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:96
e00003ae:                 5538                  lw      a4,104(a0)
titanssl_benchmark_aes():
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:272
    ((uint32_t*)(dp_dst))[1] = mmio_region_read32(aes, AES_DATA_OUT_1_REG_OFFSET); //CIPHER
e00003b0:                 c1d8                  sw      a4,4(a1)
mmio_region_read32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:96
e00003b2:                 5578                  lw      a4,108(a0)
titanssl_benchmark_aes():
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:273
    ((uint32_t*)(dp_dst))[2] = mmio_region_read32(aes, AES_DATA_OUT_2_REG_OFFSET); //CIPHER
e00003b4:                 c598                  sw      a4,8(a1)
mmio_region_read32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:96
e00003b6:                 5938                  lw      a4,112(a0)
titanssl_benchmark_aes():
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:274
    ((uint32_t*)(dp_dst))[3] = mmio_region_read32(aes, AES_DATA_OUT_3_REG_OFFSET); //CIPHER
e00003b8:                 c5d8                  sw      a4,12(a1)
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:277
#if TITANSSL_CFG_MEM_L3
    uint32_t src_addr_int_cipher = (uint32_t)(uintptr_t)cipher_idma->data; //CIPHER
    uint32_t dst_addr_int_cipher = (uint32_t)(uintptr_t)cipher->data; //CIPHER
e00003ba:                 428c                  lw      a1,0(a3)
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:278
    new_next_id = issue_idma_transaction(src_addr_int_cipher, dst_addr_int_cipher, plain->n);
e00003bc:                 4250                  lw      a2,4(a2)
e00003be:                 fef006b7              lui     a3,0xfef00
issue_idma_transaction():
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:100
    *ptr32 = src_addr; // IDMA
e00003c2:                 0116a023              sw      a7,0(a3) # fef00000 <fromhost+0x1eeefff0>
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:102
    *ptr32 = dst_addr; // IDMA
e00003c6:                 c2cc                  sw      a1,4(a3)
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:104
    *ptr32 = num_bytes; // IDMA
e00003c8:                 c690                  sw      a2,8(a3)
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:106
    buff = *ptr32; // IDMA
e00003ca:                 528c                  lw      a1,32(a3)
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:107
    return *ptr32; // IDMA
e00003cc:                 5290                  lw      a2,32(a3)
titanssl_benchmark_aes():
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:278
    new_next_id = issue_idma_transaction(src_addr_int_cipher, dst_addr_int_cipher, plain->n);
e00003ce:                 00000597              auipc   a1,0x0
e00003d2:                 19658593              addi    a1,a1,406 # e0000564 <new_next_id>
e00003d6:                 c190                  sw      a2,0(a1)
mmio_region_read32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:96
e00003d8:             /-> 08452603              lw      a2,132(a0) # c1100084 <fromhost+0xe10f0074>
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
e00003dc:             |   8a05                  andi    a2,a2,1
titanssl_benchmark_aes():
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:281
#endif
    // Reset operation mode, key, iv, and data registers
    while(!mmio_region_get_bit32(aes, AES_STATUS_REG_OFFSET, AES_STATUS_IDLE_BIT)); //CONF
e00003de:             \-- de6d                  beqz    a2,e00003d8 <titanssl_benchmark_aes+0x23e>
e00003e0:                 c1100537              lui     a0,0xc1100
e00003e4:                 6621                  lui     a2,0x8
mmio_region_write32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:145
  ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)] = value;
e00003e6:                 d970                  sw      a2,116(a0)
e00003e8:                 d970                  sw      a2,116(a0)
e00003ea:                 08050613              addi    a2,a0,128 # c1100080 <fromhost+0xe10f0070>
e00003ee:                 4699                  li      a3,6
e00003f0:                 c214                  sw      a3,0(a2)
mmio_region_read32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:96
  return ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)];
e00003f2:             /-> 08452603              lw      a2,132(a0)
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
e00003f6:             |   8a05                  andi    a2,a2,1
titanssl_benchmark_aes():
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:288
    mmio_region_write32(aes, AES_CTRL_SHADOWED_REG_OFFSET, reg);//CONF
    mmio_region_write32(aes, AES_CTRL_SHADOWED_REG_OFFSET, reg);//CONF
    reg = bitfield_bit32_write(0, AES_TRIGGER_KEY_IV_DATA_IN_CLEAR_BIT, true);//CONF
    reg = bitfield_bit32_write(reg, AES_TRIGGER_DATA_OUT_CLEAR_BIT, true);//CONF
    mmio_region_write32(aes, AES_TRIGGER_REG_OFFSET, reg);//CONF
    while (!mmio_region_get_bit32(aes, AES_STATUS_REG_OFFSET, AES_STATUS_IDLE_BIT));//CONF
e00003f8:             \-- de6d                  beqz    a2,e00003f2 <titanssl_benchmark_aes+0x258>
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:290
#if TITANSSL_CFG_MEM_L3
    wait_for_idma_eot(new_next_id); //IDMA_WAIT
e00003fa:                 4188                  lw      a0,0(a1)
e00003fc:                 fef005b7              lui     a1,0xfef00
wait_for_idma_eot():
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:92
    while(*ptr!=next_id)  //IDMA_WAIT
e0000400:             /-> 51d0                  lw      a2,36(a1)
e0000402:          /--|-- 00a60463              beq     a2,a0,e000040a <titanssl_benchmark_aes+0x270>
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:93
      asm volatile("nop");  //IDMA_WAIT
e0000406:          |  |   0001                  nop
e0000408:          |  \-- bfe5                  j       e0000400 <titanssl_benchmark_aes+0x266>
titanssl_benchmark_aes():
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:292
#endif
}//CONF
e000040a:          \----> 8082                  ret

e000040c <main>:
main():
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:297

int main(
        int argc, 
        char **argv)
{
e000040c:           1141                        addi    sp,sp,-16
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:305
#define test_freq 50000000
#else
#define baud_rate 115200
#define test_freq 100000000
#endif
        uart_set_cfg(
e000040e:           c606                        sw      ra,12(sp)
e0000410:           45ed                        li      a1,27
e0000412:           4501                        li      a0,0
e0000414:           2895                        jal     e0000488 <uart_set_cfg>
e0000416:           00909537            lui     a0,0x909
e000041a:           09950513            addi    a0,a0,153 # 909099 <tohost+0x8e9091>
e000041e:           c11605b7            lui     a1,0xc1160
initialize_edn():
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:115
    *p = 0x00909099;
e0000422:           d1c8                        sw      a0,36(a1)
e0000424:           4519                        li      a0,6
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:117
    *p = 0x00000006;
e0000426:           d188                        sw      a0,32(a1)
e0000428:           c1150537            lui     a0,0xc1150
e000042c:           66600593            li      a1,1638
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:119
    *p = 0x00000666;
e0000430:           c94c                        sw      a1,20(a0)
e0000432:           c1170537            lui     a0,0xc1170
e0000436:           0551                        addi    a0,a0,20
e0000438:           65a9                        lui     a1,0xa
e000043a:           96658593            addi    a1,a1,-1690 # 9966 <_stack_len+0x1966>
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:121
    *p = 0x00009966;
e000043e:           c10c                        sw      a1,0(a0)
e0000440:           c1100537            lui     a0,0xc1100
mmio_region_read32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:96
e0000444:       /-> 08452583            lw      a1,132(a0) # c1100084 <fromhost+0xe10f0074>
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
e0000448:       |   8985                        andi    a1,a1,1
initialize_edn():
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:123
    while(!mmio_region_get_bit32(aes, AES_STATUS_REG_OFFSET, AES_STATUS_IDLE_BIT)); //CONF
e000044a:       \-- dded                        beqz    a1,e0000444 <main+0x38>
main():
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:311
        0,
        (test_freq/baud_rate)>>4
    );

    initialize_edn();
    initialize_memory();
e000044c:           3965                        jal     e0000104 <initialize_memory>
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:312
    titanssl_benchmark_aes(
e000044e:           00000517            auipc   a0,0x0
e0000452:           0e250513            addi    a0,a0,226 # e0000530 <buffer_plain_idma>
e0000456:           00000597            auipc   a1,0x0
e000045a:           0e258593            addi    a1,a1,226 # e0000538 <buffer_cipher_idma>
e000045e:           00000617            auipc   a2,0x0
e0000462:           0e260613            addi    a2,a2,226 # e0000540 <buffer_plain>
e0000466:           00000697            auipc   a3,0x0
e000046a:           0e268693            addi    a3,a3,226 # e0000548 <buffer_cipher>
e000046e:           00000717            auipc   a4,0x0
e0000472:           0e270713            addi    a4,a4,226 # e0000550 <buffer_key>
e0000476:           00000797            auipc   a5,0x0
e000047a:           0e278793            addi    a5,a5,226 # e0000558 <buffer_iv>
e000047e:           3b31                        jal     e000019a <titanssl_benchmark_aes>
/proc/self/cwd/sw/tests/opentitan/titanssl_sram_aes_idma/titanssl_sram_aes_idma.c:354
        }
  printf("\r\n");
  uart_wait_tx_done();
#endif

        return 0;
e0000480:           4501                        li      a0,0
e0000482:           40b2                        lw      ra,12(sp)
e0000484:           0141                        addi    sp,sp,16
e0000486:           8082                        ret

e0000488 <uart_set_cfg>:
uart_set_cfg():
/proc/self/cwd/sw/tests/opentitan/common/utils.c:42
  putchar('\n');
  */
}


void uart_set_cfg(int parity, uint16_t clk_counter) {
e0000488:       40000537                lui     a0,0x40000
e000048c:       08300613                li      a2,131
/proc/self/cwd/sw/tests/opentitan/common/utils.c:44
  unsigned int i;
  *(volatile unsigned int*)(UART_REG_LCR) = 0x83; //sets 8N1 and set DLAB to 1
e0000490:       c550                    sw      a2,12(a0)
/proc/self/cwd/sw/tests/opentitan/common/utils.c:45
  *(volatile unsigned int*)(UART_REG_DLM) = (clk_counter >> 8) & 0xFF;
e0000492:       0085d613                srli    a2,a1,0x8
e0000496:       c150                    sw      a2,4(a0)
/proc/self/cwd/sw/tests/opentitan/common/utils.c:46
  *(volatile unsigned int*)(UART_REG_DLL) =  clk_counter       & 0xFF;
e0000498:       0ff5f593                andi    a1,a1,255
e000049c:       c10c                    sw      a1,0(a0)
e000049e:       0a700593                li      a1,167
/proc/self/cwd/sw/tests/opentitan/common/utils.c:47
  *(volatile unsigned int*)(UART_REG_FCR) = 0xA7; //enables 16byte FIFO and clear FIFOs
e00004a2:       c50c                    sw      a1,8(a0)
e00004a4:       458d                    li      a1,3
/proc/self/cwd/sw/tests/opentitan/common/utils.c:48
  *(volatile unsigned int*)(UART_REG_LCR) = 0x03; //sets 8N1 and set DLAB to 0
e00004a6:       c54c                    sw      a1,12(a0)
/proc/self/cwd/sw/tests/opentitan/common/utils.c:50

  *(volatile unsigned int*)(UART_REG_IER) = ((*(volatile unsigned int*)(UART_REG_IER)) & 0xF0) | 0x02; // set IER (interrupt enable register) on UART
e00004a8:       414c                    lw      a1,4(a0)
e00004aa:       0f05f593                andi    a1,a1,240
e00004ae:       0025e593                ori     a1,a1,2
e00004b2:       c14c                    sw      a1,4(a0)
/proc/self/cwd/sw/tests/opentitan/common/utils.c:51
}
e00004b4:       8082                    ret

e00004b6 <external_irq_handler>:
external_irq_handler():
/proc/self/cwd/sw/tests/opentitan/common/utils.c:338
  putchar('\n');

  return i;
}

void external_irq_handler(void)  {
e00004b6:           1101                        addi    sp,sp,-32
e00004b8:           ce2a                        sw      a0,28(sp)
e00004ba:           cc2e                        sw      a1,24(sp)
e00004bc:           ca32                        sw      a2,20(sp)
e00004be:           c836                        sw      a3,16(sp)
e00004c0:           c63a                        sw      a4,12(sp)
e00004c2:           c43e                        sw      a5,8(sp)
e00004c4:           c242                        sw      a6,4(sp)
e00004c6:           c8200537            lui     a0,0xc8200
e00004ca:           09f00593            li      a1,159
/proc/self/cwd/sw/tests/opentitan/common/utils.c:355
  p_reg5 = (int *) 0x1040401C;

  // start of """Interrupt Service Routine"""
  
  plic_check = (int *) 0xC8200004;
  while(*plic_check != mbox_id);   //check wether the intr is the correct one
e00004ce:       /-> 4150                        lw      a2,4(a0)
e00004d0:       \-- feb61fe3            bne     a2,a1,e00004ce <external_irq_handler+0x18>
e00004d4:           10404537            lui     a0,0x10404
/proc/self/cwd/sw/tests/opentitan/common/utils.c:358
  
  p_reg = (int *) 0x10404020;
 *p_reg = 0x00000000;        //clearing the pending interrupt signal
e00004d8:           02052023            sw      zero,32(a0) # 10404020 <tohost+0x103e4018>
e00004dc:           c82005b7            lui     a1,0xc8200
e00004e0:           09f00613            li      a2,159
/proc/self/cwd/sw/tests/opentitan/common/utils.c:360
 
 *plic_check = mbox_id;      //completing interrupt
e00004e4:           c1d0                        sw      a2,4(a1)
/proc/self/cwd/sw/tests/opentitan/common/utils.c:362
 
  a = *p_reg1;
e00004e6:           450c                        lw      a1,8(a0)
/proc/self/cwd/sw/tests/opentitan/common/utils.c:363
  b = *p_reg2;
e00004e8:           4910                        lw      a2,16(a0)
/proc/self/cwd/sw/tests/opentitan/common/utils.c:364
  c = *p_reg3;
e00004ea:           4954                        lw      a3,20(a0)
/proc/self/cwd/sw/tests/opentitan/common/utils.c:365
  d = *p_reg4;
e00004ec:           4d18                        lw      a4,24(a0)
/proc/self/cwd/sw/tests/opentitan/common/utils.c:366
  e = *p_reg5;
e00004ee:           01c52803            lw      a6,28(a0)
e00004f2:           baadc7b7            lui     a5,0xbaadc
e00004f6:           0de78793            addi    a5,a5,222 # baadc0de <fromhost+0xdaacc0ce>
/proc/self/cwd/sw/tests/opentitan/common/utils.c:369
  
  
  if( a == 0xBAADC0DE &&  b == 0xBAADC0DE && c == 0xBAADC0DE && d == 0xBAADC0DE && e == 0xBAADC0DE){
e00004fa:           8dbd                        xor     a1,a1,a5
e00004fc:           8e3d                        xor     a2,a2,a5
e00004fe:           8dd1                        or      a1,a1,a2
e0000500:           00f6c633            xor     a2,a3,a5
e0000504:           8dd1                        or      a1,a1,a2
e0000506:           00f74633            xor     a2,a4,a5
e000050a:           8dd1                        or      a1,a1,a2
e000050c:           00f84633            xor     a2,a6,a5
e0000510:           8dd1                        or      a1,a1,a2
e0000512:       /-- e589                        bnez    a1,e000051c <external_irq_handler+0x66>
e0000514:       |   02450513            addi    a0,a0,36
e0000518:       |   4585                        li      a1,1
/proc/self/cwd/sw/tests/opentitan/common/utils.c:371
      p_reg = (int *) 0x10404024; // completion interrupt to ariane agent
     *p_reg = 0x00000001;
e000051a:       |   c10c                        sw      a1,0(a0)
/proc/self/cwd/sw/tests/opentitan/common/utils.c:375
  }
  
  return;
}
e000051c:       \-> 4812                        lw      a6,4(sp)
e000051e:           47a2                        lw      a5,8(sp)
e0000520:           4732                        lw      a4,12(sp)
e0000522:           46c2                        lw      a3,16(sp)
e0000524:           4652                        lw      a2,20(sp)
e0000526:           45e2                        lw      a1,24(sp)
e0000528:           4572                        lw      a0,28(sp)
e000052a:           6105                        addi    sp,sp,32
e000052c:           30200073            mret
