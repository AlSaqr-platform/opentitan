
bazel-out/k8-fastbuild-ST-2cc462681f62/bin/sw/device/silicon_creator/rom/rom_with_fake_keys_sim_verilator.elf:     file format elf32-littleriscv
bazel-out/k8-fastbuild-ST-2cc462681f62/bin/sw/device/silicon_creator/rom/rom_with_fake_keys_sim_verilator.elf
architecture: riscv:rv32, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0xd0008180

Program Header:
    LOAD off    0x00001000 vaddr 0xd0008000 paddr 0xd0008000 align 2**12
         filesz 0x00007594 memsz 0x00007594 flags r-x
    LOAD off    0x00000000 vaddr 0xe0000000 paddr 0xe0000000 align 2**12
         filesz 0x00000000 memsz 0x000024fc flags rw-
   STACK off    0x00000000 vaddr 0x00000000 paddr 0x00000000 align 2**4
         filesz 0x00000000 memsz 0x00000000 flags rw-

Sections:
Idx Name              Size      VMA       LMA       File off  Algn  Flags
  0 .vectors          00000180  d0008000  d0008000  00001000  2**8  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .crt              00000680  d0008180  d0008180  00001180  2**2  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text             00005aa4  d0008800  d0008800  00001800  2**2  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .shutdown         00000298  d000e2a4  d000e2a4  000072a4  2**2  CONTENTS, ALLOC, LOAD, READONLY, CODE
  4 .rodata           00001054  d000e540  d000e540  00007540  2**5  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .static_critical  00001fc4  e0000000  e0000000  00009000  2**2  ALLOC
  6 .data             00000084  e0001fc4  e0001fc4  00009000  2**2  ALLOC
  7 .bss              000004b4  e0002048  e0002048  00009000  2**3  ALLOC
  8 .logs.fields      0000008c  00000000  00000000  00008594  2**2  CONTENTS, READONLY
  9 .riscv.attributes 00000026  00000000  00000000  00008620  2**0  CONTENTS, READONLY
 10 .debug_info       00031d9a  00000000  00000000  00008646  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_abbrev     000049e1  00000000  00000000  0003a3e0  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_aranges    00000088  00000000  00000000  0003edc1  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_line       0001f734  00000000  00000000  0003ee49  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_loc        0002628f  00000000  00000000  0005e57d  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges     00003700  00000000  00000000  0008480c  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_str        0001be10  00000000  00000000  00087f0c  2**0  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_frame      00005ce4  00000000  00000000  000a3d1c  2**2  CONTENTS, READONLY, DEBUGGING, OCTETS
SYMBOL TABLE:
d0008000 l    d  .vectors       00000000 .vectors
d0008180 l    d  .crt   00000000 .crt
d0008800 l    d  .text  00000000 .text
d000e2a4 l    d  .shutdown      00000000 .shutdown
d000e540 l    d  .rodata        00000000 .rodata
e0000000 l    d  .static_critical       00000000 .static_critical
e0001fc4 l    d  .data  00000000 .data
e0002048 l    d  .bss   00000000 .bss
00000000 l    d  .logs.fields   00000000 .logs.fields
00000000 l    d  .riscv.attributes      00000000 .riscv.attributes
00000000 l    d  .debug_info    00000000 .debug_info
00000000 l    d  .debug_abbrev  00000000 .debug_abbrev
00000000 l    d  .debug_aranges 00000000 .debug_aranges
00000000 l    d  .debug_line    00000000 .debug_line
00000000 l    d  .debug_loc     00000000 .debug_loc
00000000 l    d  .debug_ranges  00000000 .debug_ranges
00000000 l    d  .debug_str     00000000 .debug_str
00000000 l    d  .debug_frame   00000000 .debug_frame
00000000 l    df *ABS*  00000000 rom_start.o
c0001073 l       *ABS*  00000000 UNIMP
00030d40 l       *ABS*  00000000 WDOG_BITE_THOLD
00036ee8 l       *ABS*  00000000 WDOG_BARK_THOLD
d0008000 l       .vectors       00000000 
d0008000 l       .vectors       00000000 
d0008080 l       .vectors       00000000 
d0008100 l       .vectors       00000000 
d0008100 l       .vectors       00000000 
d0008180 l       .crt   00000000 
d0008180 l       .crt   00000000 
d0008198 l       .crt   00000000 .SECURE_BOOT
d0008198 l       .crt   00000000 
d00081a0 l       .crt   00000000 kRomStartBootMaybeHalt
d00081a0 l       .crt   00000000 
d00081b0 l       .crt   00000000 
d00081b2 l       .crt   00000000 kRomStartBootExecEn
d00081b2 l       .crt   00000000 
d00081b2 l       .crt   00000000 
d00081e4 l       .crt   00000000 kRomStartStoreT1ToBiteThold
d00081e4 l       .crt   00000000 
d00081ee l       .crt   00000000 kRomStartWatchdogEnabled
d00081ee l       .crt   00000000 
00000000 l       .debug_info    00000000 
00000000 l       .debug_abbrev  00000000 
d0008180 l       .vectors       00000000 
d000839a l       .crt   00000000 
00000000 l       .debug_ranges  00000000 
00000000 l    df *ABS*  00000000 rom.c
d0008800 l       .text  00000000 
d0008800 l       .text  00000000 
d0008800 l       .text  00000000 
d0008802 l       .text  00000000 
d000880a l       .text  00000000 
d000880c l       .text  00000000 
d000880c l       .text  00000000 
d0008810 l       .text  00000000 
d0008810 l       .text  00000000 
d0008818 l       .text  00000000 
d0008818 l       .text  00000000 
d000881c l       .text  00000000 
d0008828 l       .text  00000000 
d000882e l       .text  00000000 
d000882e l       .text  00000000 
d0008836 l       .text  00000000 
d0008838 l       .text  00000000 
d0008838 l       .text  00000000 
d000883a l       .text  00000000 
d000883a l       .text  00000000 
d000883e l       .text  00000000 
d0008840 l       .text  00000000 
00000000 l     O .logs.fields   00000014 init_spi_host.kLogFields
d0008840 l       .text  00000000 
d000884c l       .text  00000000 
d000884c l       .text  00000000 
d000884e l       .text  00000000 
d000884e l       .text  00000000 
d0008866 l       .text  00000000 
d0008866 l       .text  00000000 
d000886c l       .text  00000000 
d0008870 l       .text  00000000 
d0008870 l       .text  00000000 
d0008878 l       .text  00000000 
d000887a l       .text  00000000 
d000887c l       .text  00000000 
d000887c l       .text  00000000 
d0008880 l       .text  00000000 
d0008882 l       .text  00000000 
00000014 l     O .logs.fields   00000014 init_spi_host.kLogFields.2
d0008882 l       .text  00000000 
d000888e l       .text  00000000 
d000888e l       .text  00000000 
d0008890 l       .text  00000000 
d0008890 l       .text  00000000 
d00088a8 l       .text  00000000 
d00088a8 l       .text  00000000 
d00088ae l       .text  00000000 
d00088b2 l       .text  00000000 
d00088b2 l       .text  00000000 
d00088be l       .text  00000000 
d00088be l       .text  00000000 
d00088be l       .text  00000000 
d00088be l       .text  00000000 
d00088be l       .text  00000000 
d00088c0 l       .text  00000000 
d00088c0 l       .text  00000000 
d00088f4 l       .text  00000000 
d00088f4 l       .text  00000000 
d00088f4 l       .text  00000000 
d00088fc l       .text  00000000 
d00088fc l       .text  00000000 
d0008902 l       .text  00000000 
d0008902 l       .text  00000000 
d0008908 l       .text  00000000 
d0008908 l       .text  00000000 
d000890e l       .text  00000000 
e000204c l     O .bss   00000004 spi_host
d000890e l       .text  00000000 
d000891e l       .text  00000000 
d000891e l       .text  00000000 
d000892a l       .text  00000000 
d000892a l       .text  00000000 
d000892c l       .text  00000000 
d000892c l       .text  00000000 
d000892e l       .text  00000000 
d000892e l       .text  00000000 
d0008932 l       .text  00000000 
00000028 l     O .logs.fields   00000014 spi_flash_load_data.kLogFields
d0008932 l       .text  00000000 
d000893e l       .text  00000000 
d000893e l       .text  00000000 
d0008940 l       .text  00000000 
d0008940 l       .text  00000000 
d0008958 l       .text  00000000 
d0008958 l       .text  00000000 
d000895e l       .text  00000000 
d0008962 l       .text  00000000 
d0008962 l       .text  00000000 
d0008976 l       .text  00000000 
d0008976 l       .text  00000000 
d000897e l       .text  00000000 
d0008982 l       .text  00000000 
d000898a l       .text  00000000 
d000898a l       .text  00000000 
d000899c l       .text  00000000 
0000003c l     O .logs.fields   00000014 spi_flash_load_data.kLogFields.6
d00089b0 l       .text  00000000 
d00089b0 l       .text  00000000 
d00089b2 l       .text  00000000 
d00089b2 l       .text  00000000 
d00089b6 l       .text  00000000 
d00089b6 l       .text  00000000 
d00089d0 l       .text  00000000 
d00089d6 l       .text  00000000 
d00089d6 l       .text  00000000 
d00089fa l       .text  00000000 
d0008a0a l       .text  00000000 
d0008a1e l       .text  00000000 
d0008a1e l       .text  00000000 
d0008a2a l       .text  00000000 
d0008a2c l       .text  00000000 
d0008a2e l       .text  00000000 
d0008a2e l       .text  00000000 
d0008a32 l       .text  00000000 
d0008a3c l       .text  00000000 
d0008a3c l       .text  00000000 
d0008a3e l       .text  00000000 
d0008a3e l       .text  00000000 
d0008a50 l       .text  00000000 
d0008a50 l       .text  00000000 
d0008a56 l       .text  00000000 
d0008a56 l       .text  00000000 
d0008a5a l       .text  00000000 
d0008a5a l       .text  00000000 
d0008a5e l       .text  00000000 
d0008a60 l       .text  00000000 
d0008a62 l       .text  00000000 
d0008a64 l       .text  00000000 
d0008a66 l       .text  00000000 
d0008a68 l       .text  00000000 
d0008a6a l       .text  00000000 
d0008a6e l       .text  00000000 
d0008a70 l       .text  00000000 
d0008a70 l       .text  00000000 
d0008a72 l       .text  00000000 
d0008a74 l       .text  00000000 
d0008a78 l       .text  00000000 
d0008a78 l       .text  00000000 
d0008a7a l       .text  00000000 
d0008a7e l       .text  00000000 
d0008a82 l       .text  00000000 
d0008a8a l       .text  00000000 
d0008a8a l       .text  00000000 
d0008a98 l       .text  00000000 
d0008a9c l       .text  00000000 
d0008a9c l       .text  00000000 
d0008aaa l       .text  00000000 
d0008aaa l       .text  00000000 
d0008aac l       .text  00000000 
d0008aae l       .text  00000000 
d0008ab2 l       .text  00000000 
00000050 l     O .logs.fields   00000014 spi_flash_load_data.kLogFields.9
d0008ab2 l       .text  00000000 
d0008abe l       .text  00000000 
d0008abe l       .text  00000000 
d0008ac0 l       .text  00000000 
d0008ac0 l       .text  00000000 
d0008ad8 l       .text  00000000 
d0008ad8 l       .text  00000000 
d0008ade l       .text  00000000 
d0008ae2 l       .text  00000000 
d0008ae2 l       .text  00000000 
d0008b0e l       .text  00000000 
d0008b1a l       .text  00000000 
d0008b1a l       .text  00000000 
d0008b1a l       .text  00000000 
d0008b1a l       .text  00000000 
d0008b1a l       .text  00000000 
d0008b1c l       .text  00000000 
d0008b2a l       .text  00000000 
d0008b32 l       .text  00000000 
d0008b36 l       .text  00000000 
d0008b36 l       .text  00000000 
d0008b36 l       .text  00000000 
d0008b36 l       .text  00000000 
d0008b52 l       .text  00000000 
d0008b52 l       .text  00000000 
d0008b54 l       .text  00000000 
d0008b54 l       .text  00000000 
d0008b58 l       .text  00000000 
d0008b58 l       .text  00000000 
d0008b5c l       .text  00000000 
d0008b5c l       .text  00000000 
d0008b5c l       .text  00000000 
d0008b5c l       .text  00000000 
d0008b7c l       .text  00000000 
d0008b7c l       .text  00000000 
d0008b7c l       .text  00000000 
d0008b7c l       .text  00000000 
d0008b98 l       .text  00000000 
d0008b98 l       .text  00000000 
d0008b98 l       .text  00000000 
d0008b98 l       .text  00000000 
d0008b9c l       .text  00000000 
d0008b9c l       .text  00000000 
d0008ba0 l       .text  00000000 
d0008ba0 l       .text  00000000 
d0008baa l       .text  00000000 
d0008bae l       .text  00000000 
d0008bae l       .text  00000000 
d0008bb6 l       .text  00000000 
d0008bb6 l       .text  00000000 
d0008bba l       .text  00000000 
d0008bbe l       .text  00000000 
d0008bc2 l       .text  00000000 
d0008bc2 l       .text  00000000 
d0008bca l       .text  00000000 
d0008bca l       .text  00000000 
d0008bce l       .text  00000000 
d0008bce l       .text  00000000 
d0008bd2 l       .text  00000000 
d0008bd2 l       .text  00000000 
d0008bd4 l       .text  00000000 
d0008bd4 l       .text  00000000 
d0008bd8 l       .text  00000000 
d0008bdc l       .text  00000000 
d0008bdc l       .text  00000000 
d0008be6 l       .text  00000000 
d0008bea l       .text  00000000 
d0008bea l       .text  00000000 
d0008bec l       .text  00000000 
d0008bf0 l       .text  00000000 
d0008bf0 l       .text  00000000 
d0008bf8 l       .text  00000000 
d0008bfa l       .text  00000000 
d0008bfa l       .text  00000000 
d0008bfc l       .text  00000000 
d0008bfc l       .text  00000000 
d0008c00 l       .text  00000000 
d0008c00 l       .text  00000000 
d0008c04 l       .text  00000000 
d0008c06 l       .text  00000000 
d0008c06 l       .text  00000000 
d0008c06 l       .text  00000000 
d0008c06 l       .text  00000000 
d0008c0a l       .text  00000000 
d0008c0a l       .text  00000000 
d0008c0e l       .text  00000000 
d0008c1a l       .text  00000000 
d0008c1a l       .text  00000000 
d0008c1e l       .text  00000000 
d0008c1e l       .text  00000000 
d0008c20 l       .text  00000000 
d0008c22 l       .text  00000000 
d0008c26 l       .text  00000000 
d0008c2a l       .text  00000000 
d0008c2a l       .text  00000000 
d0008c30 l       .text  00000000 
d0008c30 l       .text  00000000 
d0008c32 l       .text  00000000 
d0008c32 l       .text  00000000 
d0008c36 l       .text  00000000 
d0008c36 l       .text  00000000 
d0008c3a l       .text  00000000 
d0008c46 l       .text  00000000 
d0008c46 l       .text  00000000 
d0008c4a l       .text  00000000 
d0008c4c l       .text  00000000 
d0008c4c l       .text  00000000 
d0008c54 l       .text  00000000 
d0008c54 l       .text  00000000 
d0008c58 l       .text  00000000 
d0008c58 l       .text  00000000 
d0008c5c l       .text  00000000 
d0008c5c l       .text  00000000 
d0008c5e l       .text  00000000 
d0008c62 l       .text  00000000 
d0008c62 l       .text  00000000 
d0008c66 l       .text  00000000 
d0008c66 l       .text  00000000 
d0008c6a l       .text  00000000 
d0008c70 l       .text  00000000 
d0008c70 l       .text  00000000 
d0008c74 l       .text  00000000 
d0008c74 l       .text  00000000 
d0008c78 l       .text  00000000 
d0008c78 l       .text  00000000 
d0008c7c l       .text  00000000 
d0008c7c l       .text  00000000 
d0008c82 l       .text  00000000 
d0008c82 l       .text  00000000 
d0008ca4 l       .text  00000000 
d0008ca4 l       .text  00000000 
d0008ca6 l       .text  00000000 
d0008ca6 l       .text  00000000 
d0008ca8 l       .text  00000000 
d0008ca8 l       .text  00000000 
d0008caa l       .text  00000000 
d0008caa l       .text  00000000 
d0008cae l       .text  00000000 
d0008cae l       .text  00000000 
d0008cb2 l       .text  00000000 
d0008cc2 l       .text  00000000 
d0008cc2 l       .text  00000000 
d0008cc6 l       .text  00000000 
d0008cca l       .text  00000000 
d0008cca l       .text  00000000 
d0008ccc l       .text  00000000 
d0008ccc l       .text  00000000 
d0008cec l       .text  00000000 
d0008cec l       .text  00000000 
d0008cec l       .text  00000000 
d0008cec l       .text  00000000 
d0008cf0 l       .text  00000000 
d0008cf6 l       .text  00000000 
d0008d02 l       .text  00000000 
d0008d06 l       .text  00000000 
d0008d06 l       .text  00000000 
d0008d08 l       .text  00000000 
d0008d08 l       .text  00000000 
d0008d0c l       .text  00000000 
d0008d0c l       .text  00000000 
d0008d10 l       .text  00000000 
d0008d1c l       .text  00000000 
d0008d20 l       .text  00000000 
d0008d20 l       .text  00000000 
d0008d24 l       .text  00000000 
d0008d24 l       .text  00000000 
d0008d28 l       .text  00000000 
d0008d28 l       .text  00000000 
d0008d2e l       .text  00000000 
d0008d2e l       .text  00000000 
d0008d32 l       .text  00000000 
d0008d32 l       .text  00000000 
d0008d36 l       .text  00000000 
d0008d4e l       .text  00000000 
d0008d4e l       .text  00000000 
d0008d52 l       .text  00000000 
d0008d52 l       .text  00000000 
d0008d56 l       .text  00000000 
d0008d56 l       .text  00000000 
d0008d56 l       .text  00000000 
d0008d56 l       .text  00000000 
d0008d76 l       .text  00000000 
d0008d76 l       .text  00000000 
d0008d76 l       .text  00000000 
d0008d7c l     F .text  00000224 rom_try_boot
d0008d76 l       .text  00000000 
d0008d78 l       .text  00000000 
d0008d78 l       .text  00000000 
d0008d7c l       .text  00000000 
d0008d7c l       .text  00000000 
d0008d7c l       .text  00000000 
d0008d7c l       .text  00000000 
d0008d7c l       .text  00000000 
d0008d7c l       .text  00000000 
d0008d7e l       .text  00000000 
d0008d8c l       .text  00000000 
d0008d90 l       .text  00000000 
d0008daa l       .text  00000000 
d0008daa l       .text  00000000 
d0008daa l       .text  00000000 
d0008daa l       .text  00000000 
d0008dbc l       .text  00000000 
d0008dbc l       .text  00000000 
d0008dbe l       .text  00000000 
d0008dbe l       .text  00000000 
d0008dc2 l       .text  00000000 
d0008dc2 l       .text  00000000 
d0008dc6 l       .text  00000000 
d0008dd2 l       .text  00000000 
d0008dd2 l       .text  00000000 
d0008dd4 l       .text  00000000 
d0008dd4 l       .text  00000000 
d0008dd6 l       .text  00000000 
d0008ddc l       .text  00000000 
d0008df0 l       .text  00000000 
d0008df0 l       .text  00000000 
d0008df4 l       .text  00000000 
d0008df4 l       .text  00000000 
d0008df8 l       .text  00000000 
d0008df8 l       .text  00000000 
d0008df8 l       .text  00000000 
d0008df8 l       .text  00000000 
d0008dfa l       .text  00000000 
d0008dfe l       .text  00000000 
d0008e0c l       .text  00000000 
d0008e0e l       .text  00000000 
d0008e10 l       .text  00000000 
d0008e10 l       .text  00000000 
d0008e16 l       .text  00000000 
d0008e16 l       .text  00000000 
d0008e16 l       .text  00000000 
d0008e16 l       .text  00000000 
d0008fa0 l     F .text  0000014e rom_verify
d0008e1c l       .text  00000000 
d0008e1c l       .text  00000000 
d0008e30 l       .text  00000000 
d0008e36 l       .text  00000000 
d0008e36 l       .text  00000000 
d0008e36 l       .text  00000000 
d0008e36 l       .text  00000000 
d0008e38 l       .text  00000000 
d0008e38 l       .text  00000000 
d0008e3c l       .text  00000000 
d0008e3c l       .text  00000000 
d0008e40 l       .text  00000000 
d0008e4c l       .text  00000000 
d0008e4e l       .text  00000000 
d0008e4e l       .text  00000000 
d0008e52 l       .text  00000000 
d0008e62 l       .text  00000000 
d0008e64 l       .text  00000000 
d0008e64 l       .text  00000000 
d0008e64 l       .text  00000000 
d0008e64 l       .text  00000000 
d0008e7a l       .text  00000000 
d0008e7a l       .text  00000000 
d0008e7e l       .text  00000000 
d0008e7e l       .text  00000000 
d0008e80 l       .text  00000000 
d0008e80 l       .text  00000000 
d0008e80 l       .text  00000000 
d0008e80 l       .text  00000000 
d0008e96 l       .text  00000000 
d0008e96 l       .text  00000000 
d0008e96 l       .text  00000000 
d0008e96 l       .text  00000000 
d0008e98 l       .text  00000000 
d00090ee l     F .text  000003ce rom_boot
d0008e9c l       .text  00000000 
d0008e9c l       .text  00000000 
d0008e9e l       .text  00000000 
d0008e9e l       .text  00000000 
d0008ea2 l       .text  00000000 
d0008eb0 l       .text  00000000 
d0008eb0 l       .text  00000000 
d0008eb2 l       .text  00000000 
d0008eb2 l       .text  00000000 
d0008eb6 l       .text  00000000 
d0008eca l       .text  00000000 
d0008eca l       .text  00000000 
d0008eca l       .text  00000000 
d0008eca l       .text  00000000 
d0008ece l       .text  00000000 
d0008ece l       .text  00000000 
d0008ece l       .text  00000000 
d0008ece l       .text  00000000 
d0008ed0 l       .text  00000000 
d0008ed4 l       .text  00000000 
d0008ee8 l       .text  00000000 
d0008ee8 l       .text  00000000 
d0008ee8 l       .text  00000000 
d0008ee8 l       .text  00000000 
d0008eee l       .text  00000000 
d0008eee l       .text  00000000 
d0008ef0 l       .text  00000000 
d0008ef0 l       .text  00000000 
d0008ef4 l       .text  00000000 
d0008ef4 l       .text  00000000 
d0008ef8 l       .text  00000000 
d0008f04 l       .text  00000000 
d0008f04 l       .text  00000000 
d0008f06 l       .text  00000000 
d0008f06 l       .text  00000000 
d0008f0a l       .text  00000000 
d0008f1e l       .text  00000000 
d0008f1e l       .text  00000000 
d0008f1e l       .text  00000000 
d0008f1e l       .text  00000000 
d0008f20 l       .text  00000000 
d0008f24 l       .text  00000000 
d0008f30 l       .text  00000000 
d0008f4a l       .text  00000000 
d0008f4a l       .text  00000000 
d0008f4e l       .text  00000000 
d0008f4e l       .text  00000000 
d0008f50 l       .text  00000000 
d0008f50 l       .text  00000000 
d0008f50 l       .text  00000000 
d0008f50 l       .text  00000000 
d0008f6a l       .text  00000000 
d0008f6a l       .text  00000000 
d0008f6a l       .text  00000000 
d0008f6a l       .text  00000000 
d0008f6c l       .text  00000000 
d0008f70 l       .text  00000000 
d0008f70 l       .text  00000000 
d0008f72 l       .text  00000000 
d0008f72 l       .text  00000000 
d0008f76 l       .text  00000000 
d0008f76 l       .text  00000000 
d0008f7a l       .text  00000000 
d0008f86 l       .text  00000000 
d0008f86 l       .text  00000000 
d0008f8e l       .text  00000000 
d0008f8e l       .text  00000000 
d0008fa0 l       .text  00000000 
d0008fa0 l       .text  00000000 
d000839c l       .crt   00000000 
d000839c l       .crt   00000000 
d000839c l       .crt   00000000 
d000839c l       .crt   00000000 
d00083a0 l       .crt   00000000 
d00083a0 l       .crt   00000000 
d00083a4 l       .crt   00000000 
d00083a6 l       .crt   00000000 
d00083a8 l       .crt   00000000 
d00083aa l       .crt   00000000 
d00083b6 l       .crt   00000000 
d00083b6 l       .crt   00000000 
d00083ba l       .crt   00000000 
d00083ba l       .crt   00000000 
d0008fa0 l       .text  00000000 
d0008fa0 l       .text  00000000 
d0008fa0 l       .text  00000000 
d0008fa2 l       .text  00000000 
d0008fb2 l       .text  00000000 
d0008fb2 l       .text  00000000 
d0008fb6 l       .text  00000000 
d0008fcc l       .text  00000000 
d0008fcc l       .text  00000000 
d0008fce l       .text  00000000 
d0008fce l       .text  00000000 
d0008fd4 l       .text  00000000 
d0008fd4 l       .text  00000000 
d0008fd4 l       .text  00000000 
d0008fd4 l       .text  00000000 
d0008fd8 l       .text  00000000 
d0008fd8 l       .text  00000000 
d0008fe2 l       .text  00000000 
d0008fe2 l       .text  00000000 
d0008fe4 l       .text  00000000 
d0008fe4 l       .text  00000000 
d0008fe8 l       .text  00000000 
d0008fe8 l       .text  00000000 
d0008fec l       .text  00000000 
d0008ff8 l       .text  00000000 
d0008ff8 l       .text  00000000 
d0008ffc l       .text  00000000 
d0008ffc l       .text  00000000 
d0009008 l       .text  00000000 
d000900e l       .text  00000000 
d000900e l       .text  00000000 
d0009010 l       .text  00000000 
d0009010 l       .text  00000000 
d0009014 l       .text  00000000 
d0009014 l       .text  00000000 
d000901c l       .text  00000000 
d0009028 l       .text  00000000 
d0009028 l       .text  00000000 
d000902c l       .text  00000000 
d000902c l       .text  00000000 
d000902e l       .text  00000000 
d000903a l       .text  00000000 
d000903a l       .text  00000000 
d000903e l       .text  00000000 
d0009040 l       .text  00000000 
d0009040 l       .text  00000000 
d0009042 l       .text  00000000 
d0009042 l       .text  00000000 
d0009046 l       .text  00000000 
d0009046 l       .text  00000000 
d000904a l       .text  00000000 
d000904a l       .text  00000000 
d000904e l       .text  00000000 
d000904e l       .text  00000000 
d000904e l       .text  00000000 
d000904e l       .text  00000000 
d0009052 l       .text  00000000 
d0009056 l       .text  00000000 
d0009058 l       .text  00000000 
d0009058 l       .text  00000000 
d000905a l       .text  00000000 
d000905a l       .text  00000000 
d0009062 l       .text  00000000 
d0009062 l       .text  00000000 
d0009066 l       .text  00000000 
d0009076 l       .text  00000000 
d000907a l       .text  00000000 
d0009080 l       .text  00000000 
d0009080 l       .text  00000000 
d000908a l       .text  00000000 
d000908a l       .text  00000000 
d000908e l       .text  00000000 
d0009092 l       .text  00000000 
d0009092 l       .text  00000000 
d0009098 l       .text  00000000 
d0009098 l       .text  00000000 
d000909e l       .text  00000000 
d000909e l       .text  00000000 
d00090b0 l       .text  00000000 
d00090b0 l       .text  00000000 
d00090ca l       .text  00000000 
d00090ca l       .text  00000000 
d00090ca l       .text  00000000 
d00090ca l       .text  00000000 
d00090cc l       .text  00000000 
d00090cc l       .text  00000000 
d00090d0 l       .text  00000000 
d00090da l       .text  00000000 
d00090da l       .text  00000000 
d00090dc l       .text  00000000 
d00090e4 l       .text  00000000 
d00090ee l       .text  00000000 
d00090ee l       .text  00000000 
d00090ee l       .text  00000000 
d00090ee l       .text  00000000 
d00090ee l       .text  00000000 
d00090f0 l       .text  00000000 
d0009106 l       .text  00000000 
d0009106 l       .text  00000000 
d000910a l       .text  00000000 
d0009124 l       .text  00000000 
d0009124 l       .text  00000000 
d0009126 l       .text  00000000 
d0009126 l       .text  00000000 
d000912e l       .text  00000000 
d000912e l       .text  00000000 
d000912e l       .text  00000000 
d000912e l       .text  00000000 
d0009134 l       .text  00000000 
d0009134 l       .text  00000000 
d0009136 l       .text  00000000 
d0009136 l       .text  00000000 
d000913a l       .text  00000000 
d000913a l       .text  00000000 
d000913e l       .text  00000000 
d000914a l       .text  00000000 
d000914a l       .text  00000000 
d000914e l       .text  00000000 
d000914e l       .text  00000000 
d0009152 l       .text  00000000 
d0009156 l       .text  00000000 
d0009156 l       .text  00000000 
d0009158 l       .text  00000000 
d0009158 l       .text  00000000 
d000915c l       .text  00000000 
d000915c l       .text  00000000 
d0009160 l       .text  00000000 
d000916c l       .text  00000000 
d000916c l       .text  00000000 
d0009174 l       .text  00000000 
d0009176 l       .text  00000000 
d000917a l       .text  00000000 
d0009188 l       .text  00000000 
d0009188 l       .text  00000000 
d000918a l       .text  00000000 
d000918e l       .text  00000000 
d000918e l       .text  00000000 
d0009192 l       .text  00000000 
d0009196 l       .text  00000000 
d0009196 l       .text  00000000 
d000919e l       .text  00000000 
d00091a8 l       .text  00000000 
d00091ae l       .text  00000000 
d00091ae l       .text  00000000 
d00091b2 l       .text  00000000 
d00091b2 l       .text  00000000 
d00091b6 l       .text  00000000 
d00091ba l       .text  00000000 
d00091ba l       .text  00000000 
d00091be l       .text  00000000 
d00091be l       .text  00000000 
d00091be l       .text  00000000 
d00091c2 l       .text  00000000 
d00091c2 l       .text  00000000 
d00091c6 l       .text  00000000 
d00091c6 l       .text  00000000 
d00091d8 l       .text  00000000 
d00091d8 l       .text  00000000 
d00091da l       .text  00000000 
d00091de l       .text  00000000 
d00091e2 l       .text  00000000 
d00091f2 l       .text  00000000 
d00091f2 l       .text  00000000 
d000920c l       .text  00000000 
d000920c l       .text  00000000 
d0009216 l       .text  00000000 
d0009216 l       .text  00000000 
d000921a l       .text  00000000 
d000921a l       .text  00000000 
d000921c l       .text  00000000 
d000921c l       .text  00000000 
d0009220 l       .text  00000000 
d0009220 l       .text  00000000 
d0009224 l       .text  00000000 
d0009230 l       .text  00000000 
d0009230 l       .text  00000000 
d0009236 l       .text  00000000 
d000923a l       .text  00000000 
d000923a l       .text  00000000 
d000923e l       .text  00000000 
d000923e l       .text  00000000 
d0009240 l       .text  00000000 
d0009240 l       .text  00000000 
d0009244 l       .text  00000000 
d0009244 l       .text  00000000 
d0009248 l       .text  00000000 
d0009248 l       .text  00000000 
d000924c l       .text  00000000 
d0009250 l       .text  00000000 
d0009250 l       .text  00000000 
d000925c l       .text  00000000 
d000925c l       .text  00000000 
d000925e l       .text  00000000 
d0009262 l       .text  00000000 
d0009262 l       .text  00000000 
d0009266 l       .text  00000000 
d0009266 l       .text  00000000 
d0009268 l       .text  00000000 
d0009268 l       .text  00000000 
d000926c l       .text  00000000 
d000926c l       .text  00000000 
d0009270 l       .text  00000000 
d000927c l       .text  00000000 
d000927c l       .text  00000000 
d0009280 l       .text  00000000 
d0009280 l       .text  00000000 
d0009284 l       .text  00000000 
d000929c l       .text  00000000 
d000929c l       .text  00000000 
d00092a0 l       .text  00000000 
d00092a0 l       .text  00000000 
d00092a4 l       .text  00000000 
d00092a4 l       .text  00000000 
d00092a4 l       .text  00000000 
d00092a4 l       .text  00000000 
d00092c4 l       .text  00000000 
d00092c4 l       .text  00000000 
d00092c4 l       .text  00000000 
d00092c4 l       .text  00000000 
d00092e0 l       .text  00000000 
d00092e0 l       .text  00000000 
d00092e0 l       .text  00000000 
d00092e0 l       .text  00000000 
d00092ee l       .text  00000000 
d00092ee l       .text  00000000 
d00092f0 l       .text  00000000 
d00092f0 l       .text  00000000 
d00092f4 l       .text  00000000 
d0009300 l       .text  00000000 
d0009300 l       .text  00000000 
d0009304 l       .text  00000000 
d0009304 l       .text  00000000 
d0009308 l       .text  00000000 
d0009320 l       .text  00000000 
d0009320 l       .text  00000000 
d0009320 l       .text  00000000 
d0009320 l       .text  00000000 
d0009324 l       .text  00000000 
d0009324 l       .text  00000000 
d0009326 l       .text  00000000 
d0009326 l       .text  00000000 
d0009328 l       .text  00000000 
d000932c l       .text  00000000 
d000932c l       .text  00000000 
d0009338 l       .text  00000000 
d000933c l       .text  00000000 
d000933c l       .text  00000000 
d0009340 l       .text  00000000 
d0009358 l       .text  00000000 
d0009358 l       .text  00000000 
d0009358 l       .text  00000000 
d0009358 l       .text  00000000 
d0009360 l       .text  00000000 
d0009360 l       .text  00000000 
d0009362 l       .text  00000000 
d0009362 l       .text  00000000 
d0009366 l       .text  00000000 
d0009366 l       .text  00000000 
d000936a l       .text  00000000 
d000936a l       .text  00000000 
d0009376 l       .text  00000000 
d000937a l       .text  00000000 
d000937a l       .text  00000000 
d000937e l       .text  00000000 
d0009396 l       .text  00000000 
d0009396 l       .text  00000000 
d0009396 l       .text  00000000 
d0009396 l       .text  00000000 
d000939e l       .text  00000000 
d000939e l       .text  00000000 
d00093a2 l       .text  00000000 
d00093a2 l       .text  00000000 
d00093a6 l       .text  00000000 
d00093a6 l       .text  00000000 
d00093a8 l       .text  00000000 
d00093a8 l       .text  00000000 
d00093ac l       .text  00000000 
d00093ac l       .text  00000000 
d00093b8 l       .text  00000000 
d00093bc l       .text  00000000 
d00093bc l       .text  00000000 
d00093c0 l       .text  00000000 
d00093c0 l       .text  00000000 
d00093d4 l       .text  00000000 
d00093dc l       .text  00000000 
d00093dc l       .text  00000000 
d00093dc l       .text  00000000 
d00093dc l       .text  00000000 
d00093e2 l       .text  00000000 
d00093e2 l       .text  00000000 
d0009402 l       .text  00000000 
d0009402 l       .text  00000000 
d0009402 l       .text  00000000 
d0009402 l       .text  00000000 
d0009406 l       .text  00000000 
d000940a l       .text  00000000 
d0009422 l       .text  00000000 
d0009422 l       .text  00000000 
d0009422 l       .text  00000000 
d0009422 l       .text  00000000 
d0009426 l       .text  00000000 
d000942a l       .text  00000000 
d0009436 l       .text  00000000 
d000943c l       .text  00000000 
d000943c l       .text  00000000 
d0009446 l       .text  00000000 
d000944a l       .text  00000000 
d000944a l       .text  00000000 
d000944e l       .text  00000000 
d000944e l       .text  00000000 
d0009454 l       .text  00000000 
d0009454 l       .text  00000000 
d0009474 l       .text  00000000 
d0009474 l       .text  00000000 
d0009474 l       .text  00000000 
d0009474 l       .text  00000000 
d0009476 l       .text  00000000 
d0009476 l       .text  00000000 
d000947e l       .text  00000000 
d000947e l       .text  00000000 
d000948e l       .text  00000000 
d0009498 l       .text  00000000 
d0009498 l       .text  00000000 
d000949c l       .text  00000000 
d000949c l       .text  00000000 
d00094a4 l       .text  00000000 
d00094a4 l       .text  00000000 
d00094ac l       .text  00000000 
d00094ac l       .text  00000000 
d00094b4 l       .text  00000000 
d00094b4 l       .text  00000000 
d00094bc l       .text  00000000 
d00094bc l       .text  00000000 
d00094bc l       .text  00000000 
00000000 l       .debug_loc     00000000 
0000003c l       .debug_loc     00000000 
00000057 l       .debug_loc     00000000 
00000146 l       .debug_loc     00000000 
00000177 l       .debug_loc     00000000 
000001a8 l       .debug_loc     00000000 
0000020c l       .debug_loc     00000000 
0000026a l       .debug_loc     00000000 
000002c8 l       .debug_loc     00000000 
00000307 l       .debug_loc     00000000 
00000346 l       .debug_loc     00000000 
000003ab l       .debug_loc     00000000 
0000043f l       .debug_loc     00000000 
000004af l       .debug_loc     00000000 
000004e0 l       .debug_loc     00000000 
000004fb l       .debug_loc     00000000 
00000516 l       .debug_loc     00000000 
0000053c l       .debug_loc     00000000 
0000057b l       .debug_loc     00000000 
00000596 l       .debug_loc     00000000 
000005c7 l       .debug_loc     00000000 
000005e2 l       .debug_loc     00000000 
00000612 l       .debug_loc     00000000 
00000640 l       .debug_loc     00000000 
00000666 l       .debug_loc     00000000 
00000689 l       .debug_loc     00000000 
000006a4 l       .debug_loc     00000000 
000006d5 l       .debug_loc     00000000 
000006fb l       .debug_loc     00000000 
00000716 l       .debug_loc     00000000 
0000073c l       .debug_loc     00000000 
00000757 l       .debug_loc     00000000 
00000772 l       .debug_loc     00000000 
0000078d l       .debug_loc     00000000 
000007b3 l       .debug_loc     00000000 
000007d9 l       .debug_loc     00000000 
000007ff l       .debug_loc     00000000 
00000825 l       .debug_loc     00000000 
0000084b l       .debug_loc     00000000 
00000866 l       .debug_loc     00000000 
00000893 l       .debug_loc     00000000 
000008dd l       .debug_loc     00000000 
00000903 l       .debug_loc     00000000 
00000929 l       .debug_loc     00000000 
0000094f l       .debug_loc     00000000 
0000096a l       .debug_loc     00000000 
00000990 l       .debug_loc     00000000 
000009ab l       .debug_loc     00000000 
000009d1 l       .debug_loc     00000000 
000009ec l       .debug_loc     00000000 
00000a07 l       .debug_loc     00000000 
00000a22 l       .debug_loc     00000000 
00000a74 l       .debug_loc     00000000 
00000ac6 l       .debug_loc     00000000 
00000aec l       .debug_loc     00000000 
00000b07 l       .debug_loc     00000000 
00000b3c l       .debug_loc     00000000 
00000b62 l       .debug_loc     00000000 
00000b7d l       .debug_loc     00000000 
00000bb0 l       .debug_loc     00000000 
00000bd6 l       .debug_loc     00000000 
00000bff l       .debug_loc     00000000 
00000c2c l       .debug_loc     00000000 
00000c94 l       .debug_loc     00000000 
00000cfc l       .debug_loc     00000000 
00000d22 l       .debug_loc     00000000 
00000d3d l       .debug_loc     00000000 
00000d79 l       .debug_loc     00000000 
00000d9f l       .debug_loc     00000000 
00000dc5 l       .debug_loc     00000000 
00000e96 l       .debug_loc     00000000 
00000f11 l       .debug_loc     00000000 
00000f37 l       .debug_loc     00000000 
00000f52 l       .debug_loc     00000000 
00000f78 l       .debug_loc     00000000 
00000f93 l       .debug_loc     00000000 
00000fb9 l       .debug_loc     00000000 
00000fd4 l       .debug_loc     00000000 
00000ffa l       .debug_loc     00000000 
00001020 l       .debug_loc     00000000 
00001046 l       .debug_loc     00000000 
0000106c l       .debug_loc     00000000 
00001092 l       .debug_loc     00000000 
000010b8 l       .debug_loc     00000000 
000010da l       .debug_loc     00000000 
00001100 l       .debug_loc     00000000 
00001126 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00000074 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
000000a8 l       .debug_ranges  00000000 
000000a7 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
000000d1 l       .debug_str     00000000 
0000012c l       .debug_str     00000000 
0000011c l       .debug_str     00000000 
000000da l       .debug_str     00000000 
000000e7 l       .debug_str     00000000 
000000f3 l       .debug_str     00000000 
00000100 l       .debug_str     00000000 
00000110 l       .debug_str     00000000 
0000013e l       .debug_str     00000000 
000001d6 l       .debug_str     00000000 
0000014d l       .debug_str     00000000 
00002d70 l       .debug_str     00000000 
0000216c l       .debug_str     00000000 
0001a749 l       .debug_str     00000000 
00000182 l       .debug_str     00000000 
0000019f l       .debug_str     00000000 
000001b8 l       .debug_str     00000000 
00000154 l       .debug_str     00000000 
00000148 l       .debug_str     00000000 
00000179 l       .debug_str     00000000 
00000162 l       .debug_str     00000000 
000001ce l       .debug_str     00000000 
000001c0 l       .debug_str     00000000 
0000191a l       .debug_str     00000000 
000001e2 l       .debug_str     00000000 
000002ab l       .debug_str     00000000 
00001005 l       .debug_str     00000000 
00006392 l       .debug_str     00000000 
00000326 l       .debug_str     00000000 
00000266 l       .debug_str     00000000 
00000271 l       .debug_str     00000000 
00000237 l       .debug_str     00000000 
0000024f l       .debug_str     00000000 
0001a893 l       .debug_str     00000000 
00000259 l       .debug_str     00000000 
0000025f l       .debug_str     00000000 
00000240 l       .debug_str     00000000 
00000233 l       .debug_str     00000000 
000001ed l       .debug_str     00000000 
000001fe l       .debug_str     00000000 
0000020f l       .debug_str     00000000 
00000221 l       .debug_str     00000000 
000001c9 l       .debug_str     00000000 
00001928 l       .debug_str     00000000 
000019d1 l       .debug_str     00000000 
0000122b l       .debug_str     00000000 
0000199f l       .debug_str     00000000 
000019bf l       .debug_str     00000000 
000019c8 l       .debug_str     00000000 
0001a6a3 l       .debug_str     00000000 
000019dd l       .debug_str     00000000 
000020fd l       .debug_str     00000000 
0000027e l       .debug_str     00000000 
000019e7 l       .debug_str     00000000 
00002d67 l       .debug_str     00000000 
000019ef l       .debug_str     00000000 
00006907 l       .debug_str     00000000 
0001b320 l       .debug_str     00000000 
000019f8 l       .debug_str     00000000 
00001a02 l       .debug_str     00000000 
00001a0c l       .debug_str     00000000 
000019ed l       .debug_str     00000000 
0001b267 l       .debug_str     00000000 
000002b4 l       .debug_str     00000000 
000002a7 l       .debug_str     00000000 
00000299 l       .debug_str     00000000 
0000028d l       .debug_str     00000000 
00000288 l       .debug_str     00000000 
000002c3 l       .debug_str     00000000 
000002ca l       .debug_str     00000000 
000002d4 l       .debug_str     00000000 
000002df l       .debug_str     00000000 
000002ea l       .debug_str     00000000 
000002fa l       .debug_str     00000000 
00000309 l       .debug_str     00000000 
00000318 l       .debug_str     00000000 
000003a6 l       .debug_str     00000000 
00000331 l       .debug_str     00000000 
00000346 l       .debug_str     00000000 
0000035f l       .debug_str     00000000 
00000371 l       .debug_str     00000000 
00000382 l       .debug_str     00000000 
00000394 l       .debug_str     00000000 
0000045f l       .debug_str     00000000 
000003b2 l       .debug_str     00000000 
000003cf l       .debug_str     00000000 
000003ed l       .debug_str     00000000 
00000409 l       .debug_str     00000000 
00000422 l       .debug_str     00000000 
0000043b l       .debug_str     00000000 
000004bc l       .debug_str     00000000 
00000479 l       .debug_str     00000000 
00000492 l       .debug_str     00000000 
000004a7 l       .debug_str     00000000 
000004fb l       .debug_str     00000000 
000004cf l       .debug_str     00000000 
000004e5 l       .debug_str     00000000 
00000512 l       .debug_str     00000000 
00000544 l       .debug_str     00000000 
00000587 l       .debug_str     00000000 
000005b9 l       .debug_str     00000000 
000005fc l       .debug_str     00000000 
0000062e l       .debug_str     00000000 
00000671 l       .debug_str     00000000 
000006a3 l       .debug_str     00000000 
000006e6 l       .debug_str     00000000 
000006f6 l       .debug_str     00000000 
00000706 l       .debug_str     00000000 
00000718 l       .debug_str     00000000 
0000072b l       .debug_str     00000000 
00000743 l       .debug_str     00000000 
00000753 l       .debug_str     00000000 
00000761 l       .debug_str     00000000 
0000076d l       .debug_str     00000000 
00000779 l       .debug_str     00000000 
00000787 l       .debug_str     00000000 
00000796 l       .debug_str     00000000 
000007aa l       .debug_str     00000000 
00000bca l       .debug_str     00000000 
000007b6 l       .debug_str     00000000 
000007bf l       .debug_str     00000000 
000007cd l       .debug_str     00000000 
000007ee l       .debug_str     00000000 
00000804 l       .debug_str     00000000 
00000820 l       .debug_str     00000000 
00000835 l       .debug_str     00000000 
00000851 l       .debug_str     00000000 
0000086d l       .debug_str     00000000 
00000881 l       .debug_str     00000000 
00000895 l       .debug_str     00000000 
000008aa l       .debug_str     00000000 
000008c3 l       .debug_str     00000000 
000008d7 l       .debug_str     00000000 
000008eb l       .debug_str     00000000 
000008fb l       .debug_str     00000000 
0000090e l       .debug_str     00000000 
00000928 l       .debug_str     00000000 
0000093f l       .debug_str     00000000 
00000959 l       .debug_str     00000000 
00000975 l       .debug_str     00000000 
00000991 l       .debug_str     00000000 
000009a8 l       .debug_str     00000000 
000009be l       .debug_str     00000000 
000009d6 l       .debug_str     00000000 
000009ee l       .debug_str     00000000 
00000a07 l       .debug_str     00000000 
00000a20 l       .debug_str     00000000 
00000a39 l       .debug_str     00000000 
00000a52 l       .debug_str     00000000 
00000a71 l       .debug_str     00000000 
00000a8f l       .debug_str     00000000 
00000aa9 l       .debug_str     00000000 
00000ac2 l       .debug_str     00000000 
00000ade l       .debug_str     00000000 
00000afc l       .debug_str     00000000 
00000b18 l       .debug_str     00000000 
00000b34 l       .debug_str     00000000 
00000b50 l       .debug_str     00000000 
00000b67 l       .debug_str     00000000 
00000b80 l       .debug_str     00000000 
00000b96 l       .debug_str     00000000 
00000bb5 l       .debug_str     00000000 
00000bf9 l       .debug_str     00000000 
00000bd4 l       .debug_str     00000000 
00000be6 l       .debug_str     00000000 
00000c07 l       .debug_str     00000000 
00000c1c l       .debug_str     00000000 
00000c36 l       .debug_str     00000000 
00000c4e l       .debug_str     00000000 
00000c78 l       .debug_str     00000000 
00000c9b l       .debug_str     00000000 
00000cc0 l       .debug_str     00000000 
00000cd9 l       .debug_str     00000000 
00000cf5 l       .debug_str     00000000 
00000d13 l       .debug_str     00000000 
00000d36 l       .debug_str     00000000 
00000e27 l       .debug_str     00000000 
00000d4c l       .debug_str     00000000 
00000d61 l       .debug_str     00000000 
00000d7b l       .debug_str     00000000 
00000d98 l       .debug_str     00000000 
00000db0 l       .debug_str     00000000 
00000dc6 l       .debug_str     00000000 
00000de1 l       .debug_str     00000000 
00000df9 l       .debug_str     00000000 
00000e15 l       .debug_str     00000000 
00000e35 l       .debug_str     00000000 
00000efc l       .debug_str     00000000 
00000e49 l       .debug_str     00000000 
00000e5b l       .debug_str     00000000 
00000e6c l       .debug_str     00000000 
00000e87 l       .debug_str     00000000 
00000ea8 l       .debug_str     00000000 
00000ebd l       .debug_str     00000000 
00000ed2 l       .debug_str     00000000 
00000ee6 l       .debug_str     00000000 
00000f09 l       .debug_str     00000000 
00000f1c l       .debug_str     00000000 
00000f37 l       .debug_str     00000000 
00000f56 l       .debug_str     00000000 
00000f76 l       .debug_str     00000000 
00000175 l       .debug_str     00000000 
00000faf l       .debug_str     00000000 
00000f9a l       .debug_str     00000000 
00001937 l       .debug_str     00000000 
00000fc6 l       .debug_str     00000000 
00003401 l       .debug_str     00000000 
00000fd0 l       .debug_str     00000000 
00000fe4 l       .debug_str     00000000 
00001050 l       .debug_str     00000000 
00000ffb l       .debug_str     00000000 
0000101e l       .debug_str     00000000 
000061c7 l       .debug_str     00000000 
0000102a l       .debug_str     00000000 
00001030 l       .debug_str     00000000 
00001035 l       .debug_str     00000000 
00001046 l       .debug_str     00000000 
0000104b l       .debug_str     00000000 
00001040 l       .debug_str     00000000 
00001064 l       .debug_str     00000000 
00001079 l       .debug_str     00000000 
00001090 l       .debug_str     00000000 
000010a0 l       .debug_str     00000000 
000010c0 l       .debug_str     00000000 
000010d4 l       .debug_str     00000000 
000010dd l       .debug_str     00000000 
0000110e l       .debug_str     00000000 
0000113f l       .debug_str     00000000 
00001170 l       .debug_str     00000000 
000011a1 l       .debug_str     00000000 
000011b3 l       .debug_str     00000000 
0000122f l       .debug_str     00000000 
0001bd0c l       .debug_str     00000000 
00002449 l       .debug_str     00000000 
000004c9 l       .debug_str     00000000 
0001aeb1 l       .debug_str     00000000 
00006915 l       .debug_str     00000000 
00001216 l       .debug_str     00000000 
0001a603 l       .debug_str     00000000 
000018e0 l       .debug_str     00000000 
0000121d l       .debug_str     00000000 
00001223 l       .debug_str     00000000 
00001229 l       .debug_str     00000000 
000011cc l       .debug_str     00000000 
000011e8 l       .debug_str     00000000 
000011fd l       .debug_str     00000000 
00001244 l       .debug_str     00000000 
000037aa l       .debug_str     00000000 
0000124e l       .debug_str     00000000 
00001263 l       .debug_str     00000000 
0000126d l       .debug_str     00000000 
00001277 l       .debug_str     00000000 
00001283 l       .debug_str     00000000 
00001291 l       .debug_str     00000000 
00001b32 l       .debug_str     00000000 
00001257 l       .debug_str     00000000 
0000129c l       .debug_str     00000000 
00003912 l       .debug_str     00000000 
0001bb6e l       .debug_str     00000000 
000012c4 l       .debug_str     00000000 
000012b3 l       .debug_str     00000000 
0001a4da l       .debug_str     00000000 
000012d7 l       .debug_str     00000000 
0000193c l       .debug_str     00000000 
00001a16 l       .debug_str     00000000 
00001a34 l       .debug_str     00000000 
00000040 l       .debug_ranges  00000000 
00000028 l       .debug_ranges  00000000 
000012e1 l       .debug_str     00000000 
000012ef l       .debug_str     00000000 
000012fb l       .debug_str     00000000 
00001305 l       .debug_str     00000000 
00001312 l       .debug_str     00000000 
00001321 l       .debug_str     00000000 
0000132c l       .debug_str     00000000 
00001337 l       .debug_str     00000000 
0000134b l       .debug_str     00000000 
00001365 l       .debug_str     00000000 
00001373 l       .debug_str     00000000 
00001381 l       .debug_str     00000000 
00001391 l       .debug_str     00000000 
000013a5 l       .debug_str     00000000 
000013af l       .debug_str     00000000 
000013c1 l       .debug_str     00000000 
000013d5 l       .debug_str     00000000 
00001408 l       .debug_str     00000000 
000013e8 l       .debug_str     00000000 
000013f9 l       .debug_str     00000000 
00001417 l       .debug_str     00000000 
0000142b l       .debug_str     00000000 
00001445 l       .debug_str     00000000 
0000145b l       .debug_str     00000000 
00001473 l       .debug_str     00000000 
00001487 l       .debug_str     00000000 
00001498 l       .debug_str     00000000 
000014a2 l       .debug_str     00000000 
00001945 l       .debug_str     00000000 
00001651 l       .debug_str     00000000 
00001a59 l       .debug_str     00000000 
000031bd l       .debug_str     00000000 
000014b4 l       .debug_str     00000000 
000014c3 l       .debug_str     00000000 
00001645 l       .debug_str     00000000 
000014dd l       .debug_str     00000000 
0000163a l       .debug_str     00000000 
00001631 l       .debug_str     00000000 
000014e5 l       .debug_str     00000000 
00001593 l       .debug_str     00000000 
0001b215 l       .debug_str     00000000 
000015c2 l       .debug_str     00000000 
000015d6 l       .debug_str     00000000 
000015e4 l       .debug_str     00000000 
000015f2 l       .debug_str     00000000 
00001603 l       .debug_str     00000000 
00000fa1 l       .debug_str     00000000 
0000160d l       .debug_str     00000000 
0000161d l       .debug_str     00000000 
00001628 l       .debug_str     00000000 
00000fd8 l       .debug_str     00000000 
00001504 l       .debug_str     00000000 
000014ef l       .debug_str     00000000 
000015a5 l       .debug_str     00000000 
0000158a l       .debug_str     00000000 
0000151b l       .debug_str     00000000 
00001533 l       .debug_str     00000000 
00001553 l       .debug_str     00000000 
00001567 l       .debug_str     00000000 
00001579 l       .debug_str     00000000 
0000153d l       .debug_str     00000000 
00001529 l       .debug_str     00000000 
00001968 l       .debug_str     00000000 
00001a64 l       .debug_str     00000000 
00001a7e l       .debug_str     00000000 
0000171a l       .debug_str     00000000 
00001a9d l       .debug_str     00000000 
000016ad l       .debug_str     00000000 
00001aab l       .debug_str     00000000 
00001973 l       .debug_str     00000000 
00001ab6 l       .debug_str     00000000 
00001ace l       .debug_str     00000000 
00001ae6 l       .debug_str     00000000 
00000058 l       .debug_ranges  00000000 
00000070 l       .debug_ranges  00000000 
00000090 l       .debug_ranges  00000000 
0000165b l       .debug_str     00000000 
00001669 l       .debug_str     00000000 
00001952 l       .debug_str     00000000 
00001670 l       .debug_str     00000000 
00001689 l       .debug_str     00000000 
000016bb l       .debug_str     00000000 
000016a4 l       .debug_str     00000000 
000016d4 l       .debug_str     00000000 
000016ef l       .debug_str     00000000 
0000170c l       .debug_str     00000000 
0000420b l       .debug_str     00000000 
00001705 l       .debug_str     00000000 
0000171e l       .debug_str     00000000 
0000172f l       .debug_str     00000000 
00001742 l       .debug_str     00000000 
00001762 l       .debug_str     00000000 
00001774 l       .debug_str     00000000 
0000177b l       .debug_str     00000000 
00001790 l       .debug_str     00000000 
000017b5 l       .debug_str     00000000 
000017a9 l       .debug_str     00000000 
0001b330 l       .debug_str     00000000 
000017c3 l       .debug_str     00000000 
000017dc l       .debug_str     00000000 
000017ef l       .debug_str     00000000 
000017fe l       .debug_str     00000000 
0000180b l       .debug_str     00000000 
00001817 l       .debug_str     00000000 
00006501 l       .debug_str     00000000 
0000182c l       .debug_str     00000000 
00001843 l       .debug_str     00000000 
00001856 l       .debug_str     00000000 
0000186c l       .debug_str     00000000 
00001887 l       .debug_str     00000000 
0000189d l       .debug_str     00000000 
000018ae l       .debug_str     00000000 
000018c8 l       .debug_str     00000000 
000018e3 l       .debug_str     00000000 
000018f6 l       .debug_str     00000000 
00001906 l       .debug_str     00000000 
0000197c l       .debug_str     00000000 
00001992 l       .debug_str     00000000 
000019a8 l       .debug_str     00000000 
00001a24 l       .debug_str     00000000 
00001a41 l       .debug_str     00000000 
00001a89 l       .debug_str     00000000 
00000000 l       .debug_frame   00000000 
d00088be l       .text  00000000 
d0008b1a l       .text  00000000 
d0008d7c l       .text  00000000 
d0008fa0 l       .text  00000000 
d00083ba l       .crt   00000000 
d00090ee l       .text  00000000 
d00094bc l       .text  00000000 
00000000 l    df *ABS*  00000000 irq_asm.o
d00083bc l       .crt   00000000 
d00083bc l       .crt   00000000 
d00083d2 l       .crt   00000000 
00006163 l       .debug_info    00000000 
00000f55 l       .debug_abbrev  00000000 
d00083d4 l       .crt   00000000 
00000000 l    df *ABS*  00000000 crt.o
d00083d4 l       .crt   00000000 
d00083d4 l       .crt   00000000 
d00083f6 l       .crt   00000000 
d00083f8 l       .crt   00000000 
d00083f8 l       .crt   00000000 
0002a85e l       .debug_info    00000000 
00002a47 l       .debug_abbrev  00000000 
d0008432 l       .crt   00000000 
00000000 l    df *ABS*  00000000 rom_epmp_init.o
d0008434 l       .crt   00000000 
d0008434 l       .crt   00000000 
0002cf55 l       .debug_info    00000000 
00003609 l       .debug_abbrev  00000000 
d00084c0 l       .crt   00000000 
00000000 l    df *ABS*  00000000 boot_policy.c
d00094bc l       .text  00000000 
d00094bc l       .text  00000000 
d00094bc l       .text  00000000 
d00094c0 l       .text  00000000 
d00094c8 l       .text  00000000 
d00094cc l       .text  00000000 
d00094d0 l       .text  00000000 
d00094d4 l       .text  00000000 
d00094d6 l       .text  00000000 
d00094de l       .text  00000000 
d00094e0 l       .text  00000000 
d00094e0 l       .text  00000000 
d00094e0 l       .text  00000000 
d00094e0 l       .text  00000000 
d00094e0 l       .text  00000000 
d00094e0 l       .text  00000000 
d00094ec l       .text  00000000 
d00094f0 l       .text  00000000 
d00094f4 l       .text  00000000 
d0009502 l       .text  00000000 
d0009506 l       .text  00000000 
d0009508 l       .text  00000000 
d000950c l       .text  00000000 
d0009510 l       .text  00000000 
d0009514 l       .text  00000000 
d0009514 l       .text  00000000 
d0009518 l       .text  00000000 
d000951c l       .text  00000000 
d0009528 l       .text  00000000 
d0009534 l       .text  00000000 
d0009540 l       .text  00000000 
d000954e l       .text  00000000 
d0009552 l       .text  00000000 
d000955e l       .text  00000000 
d000956a l       .text  00000000 
d000956a l       .text  00000000 
d000956e l       .text  00000000 
d000956e l       .text  00000000 
d000956e l       .text  00000000 
d000956e l       .text  00000000 
d0009570 l       .text  00000000 
d0009570 l       .text  00000000 
d0009574 l       .text  00000000 
d0009578 l       .text  00000000 
d000957a l       .text  00000000 
d000957e l       .text  00000000 
d0009584 l       .text  00000000 
d0009584 l       .text  00000000 
d0009588 l       .text  00000000 
d000959a l       .text  00000000 
d000959a l       .text  00000000 
0000114c l       .debug_loc     00000000 
00001193 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00001af2 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
000000e8 l       .debug_ranges  00000000 
00000bca l       .debug_str     00000000 
000007b6 l       .debug_str     00000000 
000007bf l       .debug_str     00000000 
000007cd l       .debug_str     00000000 
000007ee l       .debug_str     00000000 
00000804 l       .debug_str     00000000 
00000820 l       .debug_str     00000000 
00000835 l       .debug_str     00000000 
00000851 l       .debug_str     00000000 
0000086d l       .debug_str     00000000 
00000881 l       .debug_str     00000000 
00000895 l       .debug_str     00000000 
000008aa l       .debug_str     00000000 
000008c3 l       .debug_str     00000000 
000008d7 l       .debug_str     00000000 
000008eb l       .debug_str     00000000 
000008fb l       .debug_str     00000000 
0000090e l       .debug_str     00000000 
00000928 l       .debug_str     00000000 
0000093f l       .debug_str     00000000 
00000959 l       .debug_str     00000000 
00000975 l       .debug_str     00000000 
00000991 l       .debug_str     00000000 
000009a8 l       .debug_str     00000000 
000009be l       .debug_str     00000000 
000009d6 l       .debug_str     00000000 
000009ee l       .debug_str     00000000 
00000a07 l       .debug_str     00000000 
00000a20 l       .debug_str     00000000 
00000a39 l       .debug_str     00000000 
00000a52 l       .debug_str     00000000 
00000a71 l       .debug_str     00000000 
00000a8f l       .debug_str     00000000 
00000aa9 l       .debug_str     00000000 
00000ac2 l       .debug_str     00000000 
00000ade l       .debug_str     00000000 
00000afc l       .debug_str     00000000 
00000b18 l       .debug_str     00000000 
00000b34 l       .debug_str     00000000 
00000b50 l       .debug_str     00000000 
00000b67 l       .debug_str     00000000 
00000b80 l       .debug_str     00000000 
00000b96 l       .debug_str     00000000 
00000bb5 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
0000163a l       .debug_str     00000000 
00001631 l       .debug_str     00000000 
000014e5 l       .debug_str     00000000 
00001593 l       .debug_str     00000000 
0001b215 l       .debug_str     00000000 
000015c2 l       .debug_str     00000000 
0000216c l       .debug_str     00000000 
00001216 l       .debug_str     00000000 
000015d6 l       .debug_str     00000000 
000015e4 l       .debug_str     00000000 
000015f2 l       .debug_str     00000000 
00001603 l       .debug_str     00000000 
00000fa1 l       .debug_str     00000000 
0000160d l       .debug_str     00000000 
0000161d l       .debug_str     00000000 
00001628 l       .debug_str     00000000 
00000fd8 l       .debug_str     00000000 
00001504 l       .debug_str     00000000 
000014ef l       .debug_str     00000000 
00001937 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
000015a5 l       .debug_str     00000000 
0000158a l       .debug_str     00000000 
0000151b l       .debug_str     00000000 
00001533 l       .debug_str     00000000 
00001553 l       .debug_str     00000000 
00001567 l       .debug_str     00000000 
00001579 l       .debug_str     00000000 
0000153d l       .debug_str     00000000 
00001529 l       .debug_str     00000000 
00000179 l       .debug_str     00000000 
00000162 l       .debug_str     00000000 
00000faf l       .debug_str     00000000 
00000f9a l       .debug_str     00000000 
000014c3 l       .debug_str     00000000 
00001b1e l       .debug_str     00000000 
00001b25 l       .debug_str     00000000 
000016e0 l       .debug_str     00000000 
00001257 l       .debug_str     00000000 
000012d7 l       .debug_str     00000000 
000037aa l       .debug_str     00000000 
000016d4 l       .debug_str     00000000 
0000013e l       .debug_str     00000000 
00001b2c l       .debug_str     00000000 
00001a41 l       .debug_str     00000000 
00001645 l       .debug_str     00000000 
000014dd l       .debug_str     00000000 
000001d6 l       .debug_str     00000000 
0000014d l       .debug_str     00000000 
00002d70 l       .debug_str     00000000 
0001a749 l       .debug_str     00000000 
00000182 l       .debug_str     00000000 
0000019f l       .debug_str     00000000 
000001b8 l       .debug_str     00000000 
00000154 l       .debug_str     00000000 
00000148 l       .debug_str     00000000 
000001ce l       .debug_str     00000000 
000001c0 l       .debug_str     00000000 
0000010c l       .debug_frame   00000000 
d00094e0 l       .text  00000000 
d000959a l       .text  00000000 
00000000 l    df *ABS*  00000000 boot_data.c
d000959a l       .text  00000000 
d000959a l       .text  00000000 
d000959a l       .text  00000000 
d000959c l       .text  00000000 
d00095a4 l       .text  00000000 
d00095a6 l       .text  00000000 
d00095a8 l       .text  00000000 
d00095a8 l       .text  00000000 
d0009774 l     F .text  0000039a boot_data_active_page_find
d00095ac l       .text  00000000 
d00095ae l       .text  00000000 
d00095ae l       .text  00000000 
d00095b0 l       .text  00000000 
d00095b0 l       .text  00000000 
d00095b4 l       .text  00000000 
d00095b4 l       .text  00000000 
d00095b8 l       .text  00000000 
d00095c4 l       .text  00000000 
d00095c4 l       .text  00000000 
d00095c6 l       .text  00000000 
d00095c6 l       .text  00000000 
d00095c8 l       .text  00000000 
d00095c8 l       .text  00000000 
d00095cc l       .text  00000000 
d00095cc l       .text  00000000 
d00095d0 l       .text  00000000 
d00095d0 l       .text  00000000 
d00095dc l       .text  00000000 
d00095dc l       .text  00000000 
d00095e4 l       .text  00000000 
d00095e4 l       .text  00000000 
d00095ec l       .text  00000000 
d00095ec l       .text  00000000 
d00095ec l       .text  00000000 
d00095ec l       .text  00000000 
d00095ee l       .text  00000000 
d00095ee l       .text  00000000 
d00095ee l       .text  00000000 
d00095ee l       .text  00000000 
d00095f0 l       .text  00000000 
d00095f0 l       .text  00000000 
d00095f8 l       .text  00000000 
d00095f8 l       .text  00000000 
d00095fc l       .text  00000000 
d00095fc l       .text  00000000 
d0009600 l       .text  00000000 
d0009604 l       .text  00000000 
d000960c l       .text  00000000 
d0009610 l       .text  00000000 
d0009620 l       .text  00000000 
d0009620 l       .text  00000000 
d0009626 l       .text  00000000 
d000962a l       .text  00000000 
d000962e l       .text  00000000 
d000963c l       .text  00000000 
d000963c l       .text  00000000 
d0009644 l       .text  00000000 
d0009644 l       .text  00000000 
d0009648 l       .text  00000000 
d0009654 l       .text  00000000 
d0009654 l       .text  00000000 
d0009656 l       .text  00000000 
d0009656 l       .text  00000000 
d000965a l       .text  00000000 
d000965a l       .text  00000000 
d000965e l       .text  00000000 
d000965e l       .text  00000000 
d000966e l       .text  00000000 
d000966e l       .text  00000000 
d0009674 l       .text  00000000 
d0009678 l       .text  00000000 
d000967c l       .text  00000000 
d0009692 l       .text  00000000 
d0009692 l       .text  00000000 
d000969a l       .text  00000000 
d000969e l       .text  00000000 
d00096aa l       .text  00000000 
d00096aa l       .text  00000000 
d00096ac l       .text  00000000 
d00096ac l       .text  00000000 
d00096b0 l       .text  00000000 
d00096b0 l       .text  00000000 
d00096b4 l       .text  00000000 
d00096b4 l       .text  00000000 
d00096c4 l       .text  00000000 
d00096c4 l       .text  00000000 
d00096ca l       .text  00000000 
d00096ce l       .text  00000000 
d00096d2 l       .text  00000000 
d00096d6 l       .text  00000000 
d00096ea l       .text  00000000 
d00096ea l       .text  00000000 
d00096ee l       .text  00000000 
d00096ee l       .text  00000000 
d00096f0 l       .text  00000000 
d00096f0 l       .text  00000000 
d00096f4 l       .text  00000000 
d00096f4 l       .text  00000000 
d00096f8 l       .text  00000000 
d0009704 l       .text  00000000 
d0009704 l       .text  00000000 
d0009708 l       .text  00000000 
d0009708 l       .text  00000000 
d000970a l       .text  00000000 
d000971a l       .text  00000000 
d0009720 l       .text  00000000 
d0009724 l       .text  00000000 
d000972c l       .text  00000000 
d000972c l       .text  00000000 
d0009730 l       .text  00000000 
d0009738 l       .text  00000000 
d0009738 l       .text  00000000 
d000973c l       .text  00000000 
d000973c l       .text  00000000 
d0009740 l       .text  00000000 
d0009740 l       .text  00000000 
d000974a l       .text  00000000 
d000974a l       .text  00000000 
d0009750 l       .text  00000000 
d0009750 l       .text  00000000 
d0009754 l       .text  00000000 
d000975e l       .text  00000000 
d000975e l       .text  00000000 
d0009764 l       .text  00000000 
d000976c l       .text  00000000 
d000976c l       .text  00000000 
d0009774 l       .text  00000000 
d0009774 l       .text  00000000 
d0009774 l       .text  00000000 
d0009774 l       .text  00000000 
d0009774 l       .text  00000000 
d0009774 l       .text  00000000 
d0009776 l       .text  00000000 
d0009798 l       .text  00000000 
d000979a l       .text  00000000 
d000979a l       .text  00000000 
d000979c l       .text  00000000 
d000979c l       .text  00000000 
d00097b8 l       .text  00000000 
d00097b8 l       .text  00000000 
d00097b8 l       .text  00000000 
d00097b8 l       .text  00000000 
d00097bc l       .text  00000000 
d00097be l       .text  00000000 
d00097be l       .text  00000000 
d00097c2 l       .text  00000000 
d00097c2 l       .text  00000000 
d00097c4 l       .text  00000000 
d000e744 l     O .rodata        00000008 kPages
d00097ea l       .text  00000000 
d00097ea l       .text  00000000 
d00097f6 l       .text  00000000 
d00097f6 l       .text  00000000 
d00097f8 l       .text  00000000 
d0009806 l       .text  00000000 
d0009806 l       .text  00000000 
d000980a l       .text  00000000 
d000980a l       .text  00000000 
d000980e l       .text  00000000 
d000980e l       .text  00000000 
d0009814 l       .text  00000000 
d0009814 l       .text  00000000 
d000981a l       .text  00000000 
d000981a l       .text  00000000 
d0009824 l       .text  00000000 
d0009824 l       .text  00000000 
d0009828 l       .text  00000000 
d000982c l       .text  00000000 
d0009830 l       .text  00000000 
d0009830 l       .text  00000000 
d000983a l       .text  00000000 
d000983c l       .text  00000000 
d000983c l       .text  00000000 
d000983e l       .text  00000000 
d000983e l       .text  00000000 
d0009842 l       .text  00000000 
d0009842 l       .text  00000000 
d0009846 l       .text  00000000 
d0009852 l       .text  00000000 
d0009852 l       .text  00000000 
d0009854 l       .text  00000000 
d0009856 l       .text  00000000 
d0009858 l       .text  00000000 
d000985a l       .text  00000000 
d000985c l       .text  00000000 
d0009862 l       .text  00000000 
d0009862 l       .text  00000000 
d0009864 l       .text  00000000 
d0009866 l       .text  00000000 
d0009866 l       .text  00000000 
d0009868 l       .text  00000000 
d0009868 l       .text  00000000 
d000986c l       .text  00000000 
d0009878 l       .text  00000000 
d0009878 l       .text  00000000 
d000987e l       .text  00000000 
d000987e l       .text  00000000 
d000988a l       .text  00000000 
d000988c l       .text  00000000 
d000988c l       .text  00000000 
d000988c l       .text  00000000 
d000988c l       .text  00000000 
d0009890 l       .text  00000000 
d0009890 l       .text  00000000 
d0009896 l       .text  00000000 
d0009896 l       .text  00000000 
d00098a2 l       .text  00000000 
d00098a2 l       .text  00000000 
d00098a2 l       .text  00000000 
d00098a2 l       .text  00000000 
d00098a8 l       .text  00000000 
d00098a8 l       .text  00000000 
d00098ae l       .text  00000000 
d00098ae l       .text  00000000 
d00098b0 l       .text  00000000 
d00098b0 l       .text  00000000 
d00098b2 l       .text  00000000 
d00098b4 l       .text  00000000 
d00098b6 l       .text  00000000 
d00098b6 l       .text  00000000 
d00098b8 l       .text  00000000 
d00098b8 l       .text  00000000 
d00098ba l       .text  00000000 
d00098c0 l       .text  00000000 
d00098c0 l       .text  00000000 
d00098c4 l       .text  00000000 
d00098c4 l       .text  00000000 
d00098d0 l       .text  00000000 
d00098d0 l       .text  00000000 
d00098d2 l       .text  00000000 
d00098d2 l       .text  00000000 
d00098d6 l       .text  00000000 
d00098d6 l       .text  00000000 
d00098dc l       .text  00000000 
d00098dc l       .text  00000000 
d00098ec l       .text  00000000 
d00098ec l       .text  00000000 
d00098ee l       .text  00000000 
d00098ee l       .text  00000000 
d00098f2 l       .text  00000000 
d00098f2 l       .text  00000000 
d00098fe l       .text  00000000 
d0009900 l       .text  00000000 
d0009900 l       .text  00000000 
d0009902 l       .text  00000000 
d0009902 l       .text  00000000 
d0009908 l       .text  00000000 
d0009908 l       .text  00000000 
d0009914 l       .text  00000000 
d0009914 l       .text  00000000 
d0009916 l       .text  00000000 
d000991e l       .text  00000000 
d000991e l       .text  00000000 
d000992a l       .text  00000000 
d000992a l       .text  00000000 
d000992c l       .text  00000000 
d000992c l       .text  00000000 
d0009930 l       .text  00000000 
d0009930 l       .text  00000000 
d0009932 l       .text  00000000 
d0009932 l       .text  00000000 
d0009944 l       .text  00000000 
d0009944 l       .text  00000000 
d0009946 l       .text  00000000 
d0009946 l       .text  00000000 
d000994a l       .text  00000000 
d000994a l       .text  00000000 
d000994e l       .text  00000000 
d0009954 l       .text  00000000 
d0009954 l       .text  00000000 
d0009960 l       .text  00000000 
d0009962 l       .text  00000000 
d0009962 l       .text  00000000 
d0009962 l       .text  00000000 
d0009962 l       .text  00000000 
d0009966 l       .text  00000000 
d0009972 l       .text  00000000 
d0009972 l       .text  00000000 
d0009976 l       .text  00000000 
d0009976 l       .text  00000000 
d0009978 l       .text  00000000 
d0009978 l       .text  00000000 
d000997c l       .text  00000000 
d000997c l       .text  00000000 
d000998a l       .text  00000000 
d000998a l       .text  00000000 
d000998c l       .text  00000000 
d000998c l       .text  00000000 
d000998e l       .text  00000000 
d000998e l       .text  00000000 
d0009990 l       .text  00000000 
d0009990 l       .text  00000000 
d000999c l       .text  00000000 
d000999c l       .text  00000000 
d000999e l       .text  00000000 
d00099a2 l       .text  00000000 
d00099a2 l       .text  00000000 
d00099ae l       .text  00000000 
d00099ae l       .text  00000000 
d00099b0 l       .text  00000000 
d00099b0 l       .text  00000000 
d00099b4 l       .text  00000000 
d00099b4 l       .text  00000000 
d00099b8 l       .text  00000000 
d00099b8 l       .text  00000000 
d00099c8 l       .text  00000000 
d00099cc l       .text  00000000 
d00099cc l       .text  00000000 
d00099cc l       .text  00000000 
d00099cc l       .text  00000000 
d00099d4 l       .text  00000000 
d00099d8 l       .text  00000000 
d00099e4 l       .text  00000000 
d00099f8 l       .text  00000000 
d0009a00 l       .text  00000000 
d0009a08 l       .text  00000000 
d0009a0e l       .text  00000000 
d0009a0e l       .text  00000000 
d0009a0e l       .text  00000000 
d0009a0e l       .text  00000000 
d0009a12 l       .text  00000000 
d0009a14 l       .text  00000000 
d0009a14 l       .text  00000000 
d0009a14 l       .text  00000000 
d0009a14 l       .text  00000000 
d0009a18 l       .text  00000000 
d0009a1c l       .text  00000000 
d0009a30 l       .text  00000000 
d0009a42 l       .text  00000000 
d0009a56 l       .text  00000000 
d0009a5e l       .text  00000000 
d0009a72 l       .text  00000000 
d0009a84 l       .text  00000000 
d0009a84 l       .text  00000000 
d0009a8a l       .text  00000000 
d0009a8a l       .text  00000000 
d0009a98 l       .text  00000000 
d0009a98 l       .text  00000000 
d0009aa0 l       .text  00000000 
d0009aa6 l       .text  00000000 
d0009aa6 l       .text  00000000 
d0009aa8 l       .text  00000000 
d0009aa8 l       .text  00000000 
d0009aac l       .text  00000000 
d0009aac l       .text  00000000 
d0009aae l       .text  00000000 
d0009aae l       .text  00000000 
d0009aba l       .text  00000000 
d0009aba l       .text  00000000 
d0009abc l       .text  00000000 
d0009abc l       .text  00000000 
d0009ac4 l       .text  00000000 
d0009ac4 l       .text  00000000 
d0009ad4 l       .text  00000000 
d0009ad4 l       .text  00000000 
d0009ad6 l       .text  00000000 
d0009ae6 l       .text  00000000 
d0009b0e l       .text  00000000 
d0009b0e l       .text  00000000 
d0009b0e l       .text  00000000 
d0009b0e l       .text  00000000 
d0009b0e l       .text  00000000 
d0009b10 l       .text  00000000 
d0009b18 l       .text  00000000 
d0009b1a l       .text  00000000 
d0009b1a l       .text  00000000 
d0009b1e l       .text  00000000 
d0009b1e l       .text  00000000 
d0009b22 l       .text  00000000 
d0009b2a l       .text  00000000 
d0009b2a l       .text  00000000 
d0009b32 l       .text  00000000 
d0009b32 l       .text  00000000 
d0009b34 l       .text  00000000 
d0009b34 l       .text  00000000 
d0009b42 l       .text  00000000 
d0009b42 l       .text  00000000 
d0009b46 l       .text  00000000 
d0009b46 l       .text  00000000 
d0009b48 l       .text  00000000 
d000e74c l     O .rodata        00000024 kCheckShares
d0009b58 l       .text  00000000 
d0009b58 l       .text  00000000 
d0009b5a l       .text  00000000 
d0009b5c l       .text  00000000 
d0009b60 l       .text  00000000 
d0009b62 l       .text  00000000 
d0009b62 l       .text  00000000 
d0009b64 l       .text  00000000 
d0009b66 l       .text  00000000 
d0009b6a l       .text  00000000 
d0009b6a l       .text  00000000 
d0009b6c l       .text  00000000 
d0009b6c l       .text  00000000 
d0009b76 l       .text  00000000 
d0009b76 l       .text  00000000 
d0009b78 l       .text  00000000 
d0009b84 l       .text  00000000 
d0009b88 l       .text  00000000 
d0009b94 l       .text  00000000 
d0009b94 l       .text  00000000 
d0009b96 l       .text  00000000 
d0009b96 l       .text  00000000 
d0009b9a l       .text  00000000 
d0009b9a l       .text  00000000 
d0009b9e l       .text  00000000 
d0009b9e l       .text  00000000 
d0009bac l       .text  00000000 
d0009bae l       .text  00000000 
d0009bb8 l       .text  00000000 
d0009bb8 l       .text  00000000 
000011c4 l       .debug_loc     00000000 
000011f5 l       .debug_loc     00000000 
00001226 l       .debug_loc     00000000 
0000124c l       .debug_loc     00000000 
00001267 l       .debug_loc     00000000 
0000128d l       .debug_loc     00000000 
000012be l       .debug_loc     00000000 
000012ef l       .debug_loc     00000000 
0000131a l       .debug_loc     00000000 
0000136c l       .debug_loc     00000000 
00001392 l       .debug_loc     00000000 
000013d9 l       .debug_loc     00000000 
000013ff l       .debug_loc     00000000 
00001425 l       .debug_loc     00000000 
0000144b l       .debug_loc     00000000 
00001487 l       .debug_loc     00000000 
000014c6 l       .debug_loc     00000000 
00001503 l       .debug_loc     00000000 
00001535 l       .debug_loc     00000000 
0000155d l       .debug_loc     00000000 
0000158e l       .debug_loc     00000000 
000015b4 l       .debug_loc     00000000 
000015f1 l       .debug_loc     00000000 
00001655 l       .debug_loc     00000000 
00001694 l       .debug_loc     00000000 
000016bc l       .debug_loc     00000000 
000016e2 l       .debug_loc     00000000 
00001708 l       .debug_loc     00000000 
00001723 l       .debug_loc     00000000 
00001749 l       .debug_loc     00000000 
00001764 l       .debug_loc     00000000 
0000177f l       .debug_loc     00000000 
000017a5 l       .debug_loc     00000000 
000017cb l       .debug_loc     00000000 
000017e6 l       .debug_loc     00000000 
00001823 l       .debug_loc     00000000 
00001858 l       .debug_loc     00000000 
0000188f l       .debug_loc     00000000 
000018c2 l       .debug_loc     00000000 
000018f7 l       .debug_loc     00000000 
0000191d l       .debug_loc     00000000 
00001943 l       .debug_loc     00000000 
00001981 l       .debug_loc     00000000 
000019b8 l       .debug_loc     00000000 
000019de l       .debug_loc     00000000 
00001a1a l       .debug_loc     00000000 
00001a40 l       .debug_loc     00000000 
00001a66 l       .debug_loc     00000000 
00001a81 l       .debug_loc     00000000 
00001aa7 l       .debug_loc     00000000 
00001acd l       .debug_loc     00000000 
00001af3 l       .debug_loc     00000000 
00001b0e l       .debug_loc     00000000 
00001b34 l       .debug_loc     00000000 
00001b4f l       .debug_loc     00000000 
00001b75 l       .debug_loc     00000000 
00001b90 l       .debug_loc     00000000 
00001bab l       .debug_loc     00000000 
00001bc6 l       .debug_loc     00000000 
00001be1 l       .debug_loc     00000000 
00001bfc l       .debug_loc     00000000 
00001c25 l       .debug_loc     00000000 
00001c40 l       .debug_loc     00000000 
00001c5b l       .debug_loc     00000000 
00001c76 l       .debug_loc     00000000 
00001c9c l       .debug_loc     00000000 
00001cc2 l       .debug_loc     00000000 
00001ce8 l       .debug_loc     00000000 
00001d0e l       .debug_loc     00000000 
00001d29 l       .debug_loc     00000000 
00001d44 l       .debug_loc     00000000 
00001d5f l       .debug_loc     00000000 
00001d7a l       .debug_loc     00000000 
00001d95 l       .debug_loc     00000000 
00001db0 l       .debug_loc     00000000 
00001dcb l       .debug_loc     00000000 
00001dfc l       .debug_loc     00000000 
00001e3d l       .debug_loc     00000000 
00001e7a l       .debug_loc     00000000 
00001ea1 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00001b39 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00000240 l       .debug_ranges  00000000 
00001b63 l       .debug_str     00000000 
00001e03 l       .debug_str     00000000 
00001dee l       .debug_str     00000000 
00001b6a l       .debug_str     00000000 
00001b86 l       .debug_str     00000000 
00001ba6 l       .debug_str     00000000 
00001bc4 l       .debug_str     00000000 
00001be6 l       .debug_str     00000000 
00001c08 l       .debug_str     00000000 
00001c2a l       .debug_str     00000000 
00001c4b l       .debug_str     00000000 
00001c6c l       .debug_str     00000000 
00001c8d l       .debug_str     00000000 
00001cae l       .debug_str     00000000 
00001cca l       .debug_str     00000000 
00001ce6 l       .debug_str     00000000 
00001d03 l       .debug_str     00000000 
00001d20 l       .debug_str     00000000 
00001d42 l       .debug_str     00000000 
00001d64 l       .debug_str     00000000 
00001d89 l       .debug_str     00000000 
00001da8 l       .debug_str     00000000 
00001dcb l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
00001e1a l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
00000bca l       .debug_str     00000000 
000007b6 l       .debug_str     00000000 
000007bf l       .debug_str     00000000 
000007cd l       .debug_str     00000000 
000007ee l       .debug_str     00000000 
00000804 l       .debug_str     00000000 
00000820 l       .debug_str     00000000 
00000835 l       .debug_str     00000000 
00000851 l       .debug_str     00000000 
0000086d l       .debug_str     00000000 
00000881 l       .debug_str     00000000 
00000895 l       .debug_str     00000000 
000008aa l       .debug_str     00000000 
000008c3 l       .debug_str     00000000 
000008d7 l       .debug_str     00000000 
000008eb l       .debug_str     00000000 
000008fb l       .debug_str     00000000 
0000090e l       .debug_str     00000000 
00000928 l       .debug_str     00000000 
0000093f l       .debug_str     00000000 
00000959 l       .debug_str     00000000 
00000975 l       .debug_str     00000000 
00000991 l       .debug_str     00000000 
000009a8 l       .debug_str     00000000 
000009be l       .debug_str     00000000 
000009d6 l       .debug_str     00000000 
000009ee l       .debug_str     00000000 
00000a07 l       .debug_str     00000000 
00000a20 l       .debug_str     00000000 
00000a39 l       .debug_str     00000000 
00000a52 l       .debug_str     00000000 
00000a71 l       .debug_str     00000000 
00000a8f l       .debug_str     00000000 
00000aa9 l       .debug_str     00000000 
00000ac2 l       .debug_str     00000000 
00000ade l       .debug_str     00000000 
00000afc l       .debug_str     00000000 
00000b18 l       .debug_str     00000000 
00000b34 l       .debug_str     00000000 
00000b50 l       .debug_str     00000000 
00000b67 l       .debug_str     00000000 
00000b80 l       .debug_str     00000000 
00000b96 l       .debug_str     00000000 
00000bb5 l       .debug_str     00000000 
0000011c l       .debug_str     00000000 
000000da l       .debug_str     00000000 
000000e7 l       .debug_str     00000000 
000000f3 l       .debug_str     00000000 
00000100 l       .debug_str     00000000 
00000110 l       .debug_str     00000000 
00000bf9 l       .debug_str     00000000 
00000bd4 l       .debug_str     00000000 
00000be6 l       .debug_str     00000000 
00001e27 l       .debug_str     00000000 
00001e3b l       .debug_str     00000000 
00001e4f l       .debug_str     00000000 
00001e65 l       .debug_str     00000000 
00001e80 l       .debug_str     00000000 
00001e92 l       .debug_str     00000000 
00001ea5 l       .debug_str     00000000 
00001eb8 l       .debug_str     00000000 
00000162 l       .debug_str     00000000 
00001ed0 l       .debug_str     00000000 
00001f84 l       .debug_str     00000000 
00001ee4 l       .debug_str     00000000 
00001ef7 l       .debug_str     00000000 
00001f0b l       .debug_str     00000000 
00001f1e l       .debug_str     00000000 
00001f32 l       .debug_str     00000000 
00001f46 l       .debug_str     00000000 
00001f5b l       .debug_str     00000000 
00001f6f l       .debug_str     00000000 
00000c4e l       .debug_str     00000000 
00000c78 l       .debug_str     00000000 
00000c9b l       .debug_str     00000000 
00000cc0 l       .debug_str     00000000 
00000cd9 l       .debug_str     00000000 
00000cf5 l       .debug_str     00000000 
00000d13 l       .debug_str     00000000 
00000d36 l       .debug_str     00000000 
00001f93 l       .debug_str     00000000 
00001fa8 l       .debug_str     00000000 
00001fb7 l       .debug_str     00000000 
00000e35 l       .debug_str     00000000 
00001fc9 l       .debug_str     00000000 
0000200b l       .debug_str     00000000 
00001fdb l       .debug_str     00000000 
00001ff3 l       .debug_str     00000000 
00002021 l       .debug_str     00000000 
00002039 l       .debug_str     00000000 
00002051 l       .debug_str     00000000 
00001a24 l       .debug_str     00000000 
000001c9 l       .debug_str     00000000 
000012d7 l       .debug_str     00000000 
000037aa l       .debug_str     00000000 
00002066 l       .debug_str     00000000 
000000d1 l       .debug_str     00000000 
0000013e l       .debug_str     00000000 
00001e23 l       .debug_str     00000000 
0000207c l       .debug_str     00000000 
00001b32 l       .debug_str     00000000 
00001257 l       .debug_str     00000000 
0000012c l       .debug_str     00000000 
000001d6 l       .debug_str     00000000 
0000014d l       .debug_str     00000000 
00002d70 l       .debug_str     00000000 
0000216c l       .debug_str     00000000 
0001a749 l       .debug_str     00000000 
00000182 l       .debug_str     00000000 
0000019f l       .debug_str     00000000 
000001b8 l       .debug_str     00000000 
00000154 l       .debug_str     00000000 
00000148 l       .debug_str     00000000 
00000179 l       .debug_str     00000000 
000001ce l       .debug_str     00000000 
000001c0 l       .debug_str     00000000 
00001244 l       .debug_str     00000000 
0000208c l       .debug_str     00000000 
000014b4 l       .debug_str     00000000 
000022a2 l       .debug_str     00000000 
00000100 l       .debug_ranges  00000000 
00002261 l       .debug_str     00000000 
0000210a l       .debug_str     00000000 
0001b267 l       .debug_str     00000000 
00000120 l       .debug_ranges  00000000 
00000208 l       .debug_ranges  00000000 
00000140 l       .debug_ranges  00000000 
00000158 l       .debug_ranges  00000000 
00000170 l       .debug_ranges  00000000 
00000188 l       .debug_ranges  00000000 
000001a0 l       .debug_ranges  00000000 
000001b8 l       .debug_ranges  00000000 
000001d8 l       .debug_ranges  00000000 
000001f0 l       .debug_ranges  00000000 
0000132c l       .debug_str     00000000 
0000171e l       .debug_str     00000000 
0000172f l       .debug_str     00000000 
00001762 l       .debug_str     00000000 
000020a5 l       .debug_str     00000000 
000022a9 l       .debug_str     00000000 
000031bd l       .debug_str     00000000 
00002114 l       .debug_str     00000000 
00002103 l       .debug_str     00000000 
000020c0 l       .debug_str     00000000 
000020d0 l       .debug_str     00000000 
000020e2 l       .debug_str     00000000 
000020f2 l       .debug_str     00000000 
00003401 l       .debug_str     00000000 
00002127 l       .debug_str     00000000 
00002147 l       .debug_str     00000000 
0000122b l       .debug_str     00000000 
000019ed l       .debug_str     00000000 
00002155 l       .debug_str     00000000 
000020fd l       .debug_str     00000000 
00002165 l       .debug_str     00000000 
0001bb62 l       .debug_str     00000000 
00002177 l       .debug_str     00000000 
0000218c l       .debug_str     00000000 
00002196 l       .debug_str     00000000 
0000219f l       .debug_str     00000000 
0001b17a l       .debug_str     00000000 
000021a7 l       .debug_str     00000000 
000021d2 l       .debug_str     00000000 
00002b74 l       .debug_str     00000000 
000012ad l       .debug_str     00000000 
0000270b l       .debug_str     00000000 
000021c1 l       .debug_str     00000000 
000021e3 l       .debug_str     00000000 
000018f6 l       .debug_str     00000000 
00001a7e l       .debug_str     00000000 
00000228 l       .debug_ranges  00000000 
000021f8 l       .debug_str     00000000 
0000227c l       .debug_str     00000000 
000022ae l       .debug_str     00000000 
000022b8 l       .debug_str     00000000 
00001b2c l       .debug_str     00000000 
000022c3 l       .debug_str     00000000 
0000228c l       .debug_str     00000000 
00002213 l       .debug_str     00000000 
00002229 l       .debug_str     00000000 
0001abb2 l       .debug_str     00000000 
00002244 l       .debug_str     00000000 
0000225a l       .debug_str     00000000 
00000175 l       .debug_str     00000000 
00000140 l       .debug_frame   00000000 
d0009774 l       .text  00000000 
d0009b0e l       .text  00000000 
d0009bb8 l       .text  00000000 
00000000 l    df *ABS*  00000000 bootstrap.c
d0009bb8 l       .text  00000000 
d0009bb8 l       .text  00000000 
d0009bb8 l       .text  00000000 
d0009bba l       .text  00000000 
d0009bba l       .text  00000000 
d0009bbc l       .text  00000000 
d0009bc4 l       .text  00000000 
d0009bc6 l       .text  00000000 
d0009bc6 l       .text  00000000 
d0009bc8 l       .text  00000000 
d0009bc8 l       .text  00000000 
d0009bd0 l       .text  00000000 
d0009bd0 l       .text  00000000 
d0009bd4 l       .text  00000000 
d0009bd4 l       .text  00000000 
d0009be4 l       .text  00000000 
d0009be4 l       .text  00000000 
d0009bea l       .text  00000000 
d0009bea l       .text  00000000 
d0009bec l       .text  00000000 
d0009bf0 l       .text  00000000 
d0009bf0 l       .text  00000000 
d0009bf2 l       .text  00000000 
d0009bf2 l       .text  00000000 
d0009bf6 l       .text  00000000 
d0009bf6 l       .text  00000000 
d0009bfa l       .text  00000000 
d0009c08 l       .text  00000000 
d0009c0e l       .text  00000000 
d0009c0e l       .text  00000000 
d0009c0e l       .text  00000000 
d0009c0e l       .text  00000000 
d0009c0e l       .text  00000000 
d0009c10 l       .text  00000000 
d0009c10 l       .text  00000000 
d0009c44 l       .text  00000000 
d0009c46 l       .text  00000000 
d0009c46 l       .text  00000000 
d0009c48 l       .text  00000000 
d0009c48 l       .text  00000000 
d0009c4c l       .text  00000000 
d0009c4c l       .text  00000000 
d0009c50 l       .text  00000000 
d0009c50 l       .text  00000000 
d0009c5c l       .text  00000000 
d0009c5e l       .text  00000000 
d0009c5e l       .text  00000000 
d0009cbc l       .text  00000000 
d0009cbc l       .text  00000000 
d0009cbe l       .text  00000000 
d0009cbe l       .text  00000000 
d0009cc2 l       .text  00000000 
d0009cc6 l       .text  00000000 
d0009cca l       .text  00000000 
d0009cce l       .text  00000000 
d0009cda l       .text  00000000 
d0009cda l       .text  00000000 
d0009ce6 l       .text  00000000 
d0009ce6 l       .text  00000000 
d0009cea l       .text  00000000 
d0009cea l       .text  00000000 
d0009cee l       .text  00000000 
d0009cee l       .text  00000000 
d0009cf0 l       .text  00000000 
d0009cf0 l       .text  00000000 
d0009cf2 l       .text  00000000 
d0009cf2 l       .text  00000000 
d0009cf6 l       .text  00000000 
d0009cf6 l       .text  00000000 
d0009cfa l       .text  00000000 
d0009cfa l       .text  00000000 
d0009cfc l       .text  00000000 
d0009fa0 l     F .text  0000005c bootstrap_chip_erase
d0009d08 l       .text  00000000 
d0009d0a l       .text  00000000 
d0009d0c l       .text  00000000 
d0009d0c l       .text  00000000 
d0009d0c l       .text  00000000 
d0009d0c l       .text  00000000 
d0009d10 l       .text  00000000 
d0009d1e l       .text  00000000 
d0009d1e l       .text  00000000 
d0009d20 l       .text  00000000 
d0009d20 l       .text  00000000 
d0009d2c l       .text  00000000 
d0009d2c l       .text  00000000 
d0009d38 l       .text  00000000 
d0009d38 l       .text  00000000 
d0009d3c l       .text  00000000 
d0009d3e l       .text  00000000 
d0009d3e l       .text  00000000 
d0009d42 l       .text  00000000 
d0009d42 l       .text  00000000 
d0009d44 l       .text  00000000 
d0009d48 l       .text  00000000 
d0009d4a l       .text  00000000 
d0009d4a l       .text  00000000 
d0009d4c l       .text  00000000 
d0009d4c l       .text  00000000 
d0009d50 l       .text  00000000 
d0009d50 l       .text  00000000 
d0009d54 l       .text  00000000 
d0009d56 l       .text  00000000 
d0009d56 l       .text  00000000 
d0009d5a l       .text  00000000 
d0009d70 l       .text  00000000 
d0009d72 l       .text  00000000 
d0009d72 l       .text  00000000 
d0009d7c l       .text  00000000 
d0009d82 l       .text  00000000 
d0009d82 l       .text  00000000 
d0009d86 l       .text  00000000 
d0009d98 l       .text  00000000 
d0009d98 l       .text  00000000 
d0009da2 l       .text  00000000 
d0009da4 l       .text  00000000 
d0009da4 l       .text  00000000 
d0009daa l       .text  00000000 
d0009db0 l       .text  00000000 
d0009db2 l       .text  00000000 
d0009db2 l       .text  00000000 
d0009dc4 l       .text  00000000 
d0009dc4 l       .text  00000000 
d0009dc6 l       .text  00000000 
d0009dc6 l       .text  00000000 
d0009dca l       .text  00000000 
d0009dca l       .text  00000000 
d0009dd8 l       .text  00000000 
d0009dd8 l       .text  00000000 
d0009de8 l       .text  00000000 
d0009df4 l       .text  00000000 
d0009df4 l       .text  00000000 
d0009e00 l       .text  00000000 
d0009e08 l       .text  00000000 
d0009e0a l       .text  00000000 
d0009e0a l       .text  00000000 
d0009e12 l       .text  00000000 
d0009e12 l       .text  00000000 
d0009e14 l       .text  00000000 
d0009e14 l       .text  00000000 
d0009e18 l       .text  00000000 
d0009e24 l       .text  00000000 
d0009e24 l       .text  00000000 
d0009e26 l       .text  00000000 
d0009e26 l       .text  00000000 
d0009e2a l       .text  00000000 
d0009e36 l       .text  00000000 
d0009e36 l       .text  00000000 
d0009e38 l       .text  00000000 
d0009e38 l       .text  00000000 
d0009e3a l       .text  00000000 
d0009e3c l       .text  00000000 
d0009e44 l       .text  00000000 
d0009e44 l       .text  00000000 
d0009e48 l       .text  00000000 
d0009e4a l       .text  00000000 
d0009e4c l       .text  00000000 
d0009e4c l       .text  00000000 
d0009e4e l       .text  00000000 
d0009e4e l       .text  00000000 
d0009e50 l       .text  00000000 
d0009e50 l       .text  00000000 
d0009e52 l       .text  00000000 
d0009e5a l       .text  00000000 
d0009e5a l       .text  00000000 
d0009e5c l       .text  00000000 
d0009e5c l       .text  00000000 
d0009e60 l       .text  00000000 
d0009e60 l       .text  00000000 
d0009e62 l       .text  00000000 
d0009e62 l       .text  00000000 
d0009e6e l       .text  00000000 
d0009e6e l       .text  00000000 
d0009e70 l       .text  00000000 
d0009e70 l       .text  00000000 
d0009e74 l       .text  00000000 
d0009e74 l       .text  00000000 
d0009e76 l       .text  00000000 
d0009e78 l       .text  00000000 
d0009e7c l       .text  00000000 
d0009e7e l       .text  00000000 
d0009e84 l       .text  00000000 
d0009e84 l       .text  00000000 
d0009e8a l       .text  00000000 
d0009e8c l       .text  00000000 
d0009e90 l       .text  00000000 
d0009e90 l       .text  00000000 
d0009e94 l       .text  00000000 
d0009e94 l       .text  00000000 
d0009e96 l       .text  00000000 
d0009ea8 l       .text  00000000 
d0009ea8 l       .text  00000000 
d0009eac l       .text  00000000 
d0009eac l       .text  00000000 
d0009eb0 l       .text  00000000 
d0009eb2 l       .text  00000000 
d0009eb2 l       .text  00000000 
d0009eba l       .text  00000000 
d0009eba l       .text  00000000 
d0009ebc l       .text  00000000 
d0009ebc l       .text  00000000 
d0009ebe l       .text  00000000 
d0009ec2 l       .text  00000000 
d0009ec4 l       .text  00000000 
d0009ec4 l       .text  00000000 
d0009ece l       .text  00000000 
d0009ed0 l       .text  00000000 
d0009ed0 l       .text  00000000 
d0009ed4 l       .text  00000000 
d0009ed8 l       .text  00000000 
d0009ee0 l       .text  00000000 
d0009ee0 l       .text  00000000 
d0009ee4 l       .text  00000000 
d0009ee4 l       .text  00000000 
d0009ee8 l       .text  00000000 
d0009ee8 l       .text  00000000 
d0009ef0 l       .text  00000000 
d0009ef2 l       .text  00000000 
d0009ef2 l       .text  00000000 
d0009ef4 l       .text  00000000 
d0009f06 l       .text  00000000 
d0009f06 l       .text  00000000 
d0009f08 l       .text  00000000 
d0009f08 l       .text  00000000 
d0009f0c l       .text  00000000 
d0009f1a l       .text  00000000 
d0009f1a l       .text  00000000 
d0009f26 l       .text  00000000 
d0009f26 l       .text  00000000 
d0009f28 l       .text  00000000 
d0009f28 l       .text  00000000 
d0009f2c l       .text  00000000 
d0009f38 l       .text  00000000 
d0009f38 l       .text  00000000 
d0009f3a l       .text  00000000 
d0009f3a l       .text  00000000 
d0009f3c l       .text  00000000 
d0009f3c l       .text  00000000 
d0009f40 l       .text  00000000 
d0009f4e l       .text  00000000 
d0009f4e l       .text  00000000 
d0009f54 l       .text  00000000 
d0009f54 l       .text  00000000 
d0009f5a l       .text  00000000 
d0009f5a l       .text  00000000 
d0009f5e l       .text  00000000 
d0009f62 l       .text  00000000 
d0009f9c l       .text  00000000 
d0009f9c l       .text  00000000 
d0009fa0 l       .text  00000000 
d0009fa0 l       .text  00000000 
d0009fa0 l       .text  00000000 
d0009fa0 l       .text  00000000 
d0009fa0 l       .text  00000000 
d0009fa0 l       .text  00000000 
d0009fa2 l       .text  00000000 
d0009fa2 l       .text  00000000 
d0009faa l       .text  00000000 
d0009fb6 l       .text  00000000 
d0009fb6 l       .text  00000000 
d0009fbe l       .text  00000000 
d0009fc6 l       .text  00000000 
d0009fc8 l       .text  00000000 
d0009fc8 l       .text  00000000 
d0009fd0 l       .text  00000000 
d0009fd2 l       .text  00000000 
d0009fd2 l       .text  00000000 
d0009fda l       .text  00000000 
d0009fda l       .text  00000000 
d0009fdc l       .text  00000000 
d0009fdc l       .text  00000000 
d0009fe0 l       .text  00000000 
d0009fee l       .text  00000000 
d0009fee l       .text  00000000 
d0009ffc l       .text  00000000 
d0009ffc l       .text  00000000 
00001ec7 l       .debug_loc     00000000 
00001eed l       .debug_loc     00000000 
00001f13 l       .debug_loc     00000000 
00001f39 l       .debug_loc     00000000 
00001f5f l       .debug_loc     00000000 
00001f85 l       .debug_loc     00000000 
00001fad l       .debug_loc     00000000 
0000200a l       .debug_loc     00000000 
00002030 l       .debug_loc     00000000 
0000204b l       .debug_loc     00000000 
00002066 l       .debug_loc     00000000 
0000208e l       .debug_loc     00000000 
000020b4 l       .debug_loc     00000000 
000020cf l       .debug_loc     00000000 
000020ea l       .debug_loc     00000000 
00002144 l       .debug_loc     00000000 
0000216a l       .debug_loc     00000000 
00002185 l       .debug_loc     00000000 
000021a0 l       .debug_loc     00000000 
000021c6 l       .debug_loc     00000000 
000021e1 l       .debug_loc     00000000 
00002207 l       .debug_loc     00000000 
00002222 l       .debug_loc     00000000 
00002248 l       .debug_loc     00000000 
0000228f l       .debug_loc     00000000 
000022b5 l       .debug_loc     00000000 
000022e6 l       .debug_loc     00000000 
0000230c l       .debug_loc     00000000 
0000232b l       .debug_loc     00000000 
00002347 l       .debug_loc     00000000 
0000236d l       .debug_loc     00000000 
000023a1 l       .debug_loc     00000000 
000023c7 l       .debug_loc     00000000 
000023ed l       .debug_loc     00000000 
00002424 l       .debug_loc     00000000 
0000244a l       .debug_loc     00000000 
00002470 l       .debug_loc     00000000 
00002496 l       .debug_loc     00000000 
000024b1 l       .debug_loc     00000000 
000024cc l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
000022cc l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
000002b8 l       .debug_ranges  00000000 
00000bf9 l       .debug_str     00000000 
00000bd4 l       .debug_str     00000000 
00000be6 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
00000bca l       .debug_str     00000000 
000007b6 l       .debug_str     00000000 
000007bf l       .debug_str     00000000 
000007cd l       .debug_str     00000000 
000007ee l       .debug_str     00000000 
00000804 l       .debug_str     00000000 
00000820 l       .debug_str     00000000 
00000835 l       .debug_str     00000000 
00000851 l       .debug_str     00000000 
0000086d l       .debug_str     00000000 
00000881 l       .debug_str     00000000 
00000895 l       .debug_str     00000000 
000008aa l       .debug_str     00000000 
000008c3 l       .debug_str     00000000 
000008d7 l       .debug_str     00000000 
000008eb l       .debug_str     00000000 
000008fb l       .debug_str     00000000 
0000090e l       .debug_str     00000000 
00000928 l       .debug_str     00000000 
0000093f l       .debug_str     00000000 
00000959 l       .debug_str     00000000 
00000975 l       .debug_str     00000000 
00000991 l       .debug_str     00000000 
000009a8 l       .debug_str     00000000 
000009be l       .debug_str     00000000 
000009d6 l       .debug_str     00000000 
000009ee l       .debug_str     00000000 
00000a07 l       .debug_str     00000000 
00000a20 l       .debug_str     00000000 
00000a39 l       .debug_str     00000000 
00000a52 l       .debug_str     00000000 
00000a71 l       .debug_str     00000000 
00000a8f l       .debug_str     00000000 
00000aa9 l       .debug_str     00000000 
00000ac2 l       .debug_str     00000000 
00000ade l       .debug_str     00000000 
00000afc l       .debug_str     00000000 
00000b18 l       .debug_str     00000000 
00000b34 l       .debug_str     00000000 
00000b50 l       .debug_str     00000000 
00000b67 l       .debug_str     00000000 
00000b80 l       .debug_str     00000000 
00000b96 l       .debug_str     00000000 
00000bb5 l       .debug_str     00000000 
0000233d l       .debug_str     00000000 
000022f6 l       .debug_str     00000000 
0000230b l       .debug_str     00000000 
00002326 l       .debug_str     00000000 
0000243e l       .debug_str     00000000 
0000234d l       .debug_str     00000000 
00002368 l       .debug_str     00000000 
00002384 l       .debug_str     00000000 
0000239d l       .debug_str     00000000 
000023b7 l       .debug_str     00000000 
000023d3 l       .debug_str     00000000 
000023ef l       .debug_str     00000000 
00002405 l       .debug_str     00000000 
00002421 l       .debug_str     00000000 
00002450 l       .debug_str     00000000 
0000246b l       .debug_str     00000000 
00002484 l       .debug_str     00000000 
000024a0 l       .debug_str     00000000 
000024be l       .debug_str     00000000 
000024dc l       .debug_str     00000000 
0000200b l       .debug_str     00000000 
00001fdb l       .debug_str     00000000 
00001ff3 l       .debug_str     00000000 
000024ed l       .debug_str     00000000 
000024f9 l       .debug_str     00000000 
00001f84 l       .debug_str     00000000 
00001ee4 l       .debug_str     00000000 
00001ef7 l       .debug_str     00000000 
00001f0b l       .debug_str     00000000 
00001f1e l       .debug_str     00000000 
00001f32 l       .debug_str     00000000 
00001f46 l       .debug_str     00000000 
00001f5b l       .debug_str     00000000 
00001f6f l       .debug_str     00000000 
00002507 l       .debug_str     00000000 
00002516 l       .debug_str     00000000 
00002529 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
000012d7 l       .debug_str     00000000 
000037aa l       .debug_str     00000000 
0000253c l       .debug_str     00000000 
0001a6a3 l       .debug_str     00000000 
00001473 l       .debug_str     00000000 
00001e23 l       .debug_str     00000000 
0000132c l       .debug_str     00000000 
0000254c l       .debug_str     00000000 
000000d4 l       .debug_str     00000000 
000025af l       .debug_str     00000000 
000031bd l       .debug_str     00000000 
00001b2c l       .debug_str     00000000 
00001b32 l       .debug_str     00000000 
00001257 l       .debug_str     00000000 
00002563 l       .debug_str     00000000 
000025b3 l       .debug_str     00000000 
000025a4 l       .debug_str     00000000 
00002449 l       .debug_str     00000000 
00006907 l       .debug_str     00000000 
00002589 l       .debug_str     00000000 
0000259c l       .debug_str     00000000 
00002575 l       .debug_str     00000000 
00003401 l       .debug_str     00000000 
000001ce l       .debug_str     00000000 
000001c0 l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
000025c4 l       .debug_str     00000000 
000010d4 l       .debug_str     00000000 
00006501 l       .debug_str     00000000 
00001040 l       .debug_str     00000000 
0000182c l       .debug_str     00000000 
000025d8 l       .debug_str     00000000 
000025f1 l       .debug_str     00000000 
00002608 l       .debug_str     00000000 
0000260e l       .debug_str     00000000 
00002614 l       .debug_str     00000000 
00002632 l       .debug_str     00000000 
00002591 l       .debug_str     00000000 
00001937 l       .debug_str     00000000 
00002649 l       .debug_str     00000000 
00002661 l       .debug_str     00000000 
00002670 l       .debug_str     00000000 
00002687 l       .debug_str     00000000 
0001b267 l       .debug_str     00000000 
00002874 l       .debug_str     00000000 
00001498 l       .debug_str     00000000 
0000147d l       .debug_str     00000000 
00000270 l       .debug_ranges  00000000 
00000298 l       .debug_ranges  00000000 
0000269a l       .debug_str     00000000 
000026aa l       .debug_str     00000000 
000026bd l       .debug_str     00000000 
0000278f l       .debug_str     00000000 
000026d9 l       .debug_str     00000000 
000021d2 l       .debug_str     00000000 
00002b74 l       .debug_str     00000000 
000012ad l       .debug_str     00000000 
0000270b l       .debug_str     00000000 
000021c1 l       .debug_str     00000000 
000026fb l       .debug_str     00000000 
00002711 l       .debug_str     00000000 
0000272e l       .debug_str     00000000 
0000274c l       .debug_str     00000000 
00002762 l       .debug_str     00000000 
0000276f l       .debug_str     00000000 
00001a24 l       .debug_str     00000000 
00000200 l       .debug_frame   00000000 
d0009c0e l       .text  00000000 
d0009fa0 l       .text  00000000 
d0009ffc l       .text  00000000 
00000000 l    df *ABS*  00000000 spi_device.c
d0009ffc l       .text  00000000 
d0009ffc l       .text  00000000 
d0009ffc l       .text  00000000 
d0009ffe l       .text  00000000 
d0009ffe l       .text  00000000 
d000a004 l       .text  00000000 
d000a004 l       .text  00000000 
d000a016 l       .text  00000000 
d000a016 l       .text  00000000 
d000a01e l       .text  00000000 
d000a01e l       .text  00000000 
d000a020 l       .text  00000000 
d000a020 l       .text  00000000 
d000a026 l       .text  00000000 
d000a026 l       .text  00000000 
d000a02a l       .text  00000000 
d000a02e l       .text  00000000 
d000a030 l       .text  00000000 
d000a030 l       .text  00000000 
d000a032 l       .text  00000000 
d000a032 l       .text  00000000 
d000a034 l       .text  00000000 
d000a034 l       .text  00000000 
d000a038 l       .text  00000000 
d000a03a l       .text  00000000 
d000a03a l       .text  00000000 
d000a042 l       .text  00000000 
d000a042 l       .text  00000000 
d000a044 l       .text  00000000 
d000a044 l       .text  00000000 
d000a046 l       .text  00000000 
d000a046 l       .text  00000000 
d000a052 l       .text  00000000 
d000a052 l       .text  00000000 
d000a056 l       .text  00000000 
d000a058 l       .text  00000000 
d000a058 l       .text  00000000 
d000a05c l       .text  00000000 
d000a05c l       .text  00000000 
d000a05e l       .text  00000000 
d000a05e l       .text  00000000 
d000a060 l       .text  00000000 
d000a060 l       .text  00000000 
d000a064 l       .text  00000000 
d000a064 l       .text  00000000 
d000a06c l       .text  00000000 
d000a06e l       .text  00000000 
d000a072 l       .text  00000000 
d000a072 l       .text  00000000 
d000a076 l       .text  00000000 
d000a078 l       .text  00000000 
d000a078 l       .text  00000000 
d000a07a l       .text  00000000 
d000a07a l       .text  00000000 
d000a07e l       .text  00000000 
d000a084 l       .text  00000000 
d000a084 l       .text  00000000 
d000a088 l       .text  00000000 
d000a088 l       .text  00000000 
d000a08a l       .text  00000000 
d000a08a l       .text  00000000 
d000a08e l       .text  00000000 
d000a08e l       .text  00000000 
d000a092 l       .text  00000000 
d000a092 l       .text  00000000 
d000a096 l       .text  00000000 
d000a096 l       .text  00000000 
d000a0a2 l       .text  00000000 
d000a0a2 l       .text  00000000 
d000a0aa l       .text  00000000 
d000a0aa l       .text  00000000 
d000a0b6 l       .text  00000000 
d000a0b6 l       .text  00000000 
d000a0c2 l       .text  00000000 
d000a0c2 l       .text  00000000 
d000a0ca l       .text  00000000 
d000a0ca l       .text  00000000 
d000a0d2 l       .text  00000000 
d000a0d2 l       .text  00000000 
d000a0da l       .text  00000000 
d000a0da l       .text  00000000 
d000a0e2 l       .text  00000000 
d000a0e2 l       .text  00000000 
d000a0e8 l       .text  00000000 
d000a0e8 l       .text  00000000 
d000a0ec l       .text  00000000 
d000a0ec l       .text  00000000 
d000a0f6 l       .text  00000000 
d000a0f6 l       .text  00000000 
d000a0f6 l       .text  00000000 
d000a0f6 l       .text  00000000 
d000a0f6 l       .text  00000000 
d000a0fa l       .text  00000000 
d000a0fa l       .text  00000000 
d000a0fc l       .text  00000000 
d000a0fc l       .text  00000000 
d000a100 l       .text  00000000 
d000a100 l       .text  00000000 
d000a10c l       .text  00000000 
d000a10c l       .text  00000000 
d000a10e l       .text  00000000 
d000a10e l       .text  00000000 
d000a110 l       .text  00000000 
d000a110 l       .text  00000000 
d000a112 l       .text  00000000 
d000a112 l       .text  00000000 
d000a114 l       .text  00000000 
d000a116 l       .text  00000000 
d000a116 l       .text  00000000 
d000a118 l       .text  00000000 
d000a118 l       .text  00000000 
d000a11a l       .text  00000000 
d000a11a l       .text  00000000 
d000a11c l       .text  00000000 
d000a11c l       .text  00000000 
d000a11e l       .text  00000000 
d000a122 l       .text  00000000 
d000a122 l       .text  00000000 
d000a124 l       .text  00000000 
d000a124 l       .text  00000000 
d000a126 l       .text  00000000 
d000a12a l       .text  00000000 
d000a12a l       .text  00000000 
d000a12c l       .text  00000000 
d000a12c l       .text  00000000 
d000a130 l       .text  00000000 
d000a130 l       .text  00000000 
d000a136 l       .text  00000000 
d000a142 l       .text  00000000 
d000a142 l       .text  00000000 
d000a148 l       .text  00000000 
d000a14a l       .text  00000000 
d000a14a l       .text  00000000 
d000a14c l       .text  00000000 
d000a158 l       .text  00000000 
d000a158 l       .text  00000000 
d000a15c l       .text  00000000 
d000a15c l       .text  00000000 
d000a15e l       .text  00000000 
d000a15e l       .text  00000000 
d000a162 l       .text  00000000 
d000a164 l       .text  00000000 
d000a164 l       .text  00000000 
d000a166 l       .text  00000000 
d000a168 l       .text  00000000 
d000a16e l       .text  00000000 
d000a16e l       .text  00000000 
d000a172 l       .text  00000000 
d000a176 l       .text  00000000 
d000a17a l       .text  00000000 
d000a17a l       .text  00000000 
d000a17a l       .text  00000000 
d000a17a l       .text  00000000 
d000a17a l       .text  00000000 
d000a17e l       .text  00000000 
d000a17e l       .text  00000000 
d000a182 l       .text  00000000 
d000a182 l       .text  00000000 
d000a184 l       .text  00000000 
d000a184 l       .text  00000000 
d000a184 l       .text  00000000 
d000a184 l       .text  00000000 
d000a184 l       .text  00000000 
d000a188 l       .text  00000000 
d000a188 l       .text  00000000 
d000a18a l       .text  00000000 
d000a18a l       .text  00000000 
d000a18c l       .text  00000000 
d000a18c l       .text  00000000 
000024f2 l       .debug_loc     00000000 
00002581 l       .debug_loc     00000000 
000025a8 l       .debug_loc     00000000 
000025d6 l       .debug_loc     00000000 
000025f8 l       .debug_loc     00000000 
0000261a l       .debug_loc     00000000 
0000263e l       .debug_loc     00000000 
00002682 l       .debug_loc     00000000 
000026a6 l       .debug_loc     00000000 
000026cf l       .debug_loc     00000000 
00002702 l       .debug_loc     00000000 
00002767 l       .debug_loc     00000000 
00002782 l       .debug_loc     00000000 
000027c1 l       .debug_loc     00000000 
000027ee l       .debug_loc     00000000 
00002824 l       .debug_loc     00000000 
00002862 l       .debug_loc     00000000 
000028a4 l       .debug_loc     00000000 
000028ea l       .debug_loc     00000000 
00002930 l       .debug_loc     00000000 
00002976 l       .debug_loc     00000000 
000029bc l       .debug_loc     00000000 
000029d7 l       .debug_loc     00000000 
00002a08 l       .debug_loc     00000000 
00002a2c l       .debug_loc     00000000 
00002a53 l       .debug_loc     00000000 
00002a70 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
000027a4 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
000002f0 l       .debug_ranges  00000000 
000027d7 l       .debug_str     00000000 
00002904 l       .debug_str     00000000 
000028ee l       .debug_str     00000000 
00002830 l       .debug_str     00000000 
00002855 l       .debug_str     00000000 
000028d7 l       .debug_str     00000000 
0000283c l       .debug_str     00000000 
00002825 l       .debug_str     00000000 
000014e5 l       .debug_str     00000000 
000027eb l       .debug_str     00000000 
000027fa l       .debug_str     00000000 
00002809 l       .debug_str     00000000 
00002815 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000001ce l       .debug_str     00000000 
000001c0 l       .debug_str     00000000 
000028b2 l       .debug_str     00000000 
0000289a l       .debug_str     00000000 
00002861 l       .debug_str     00000000 
0000286e l       .debug_str     00000000 
0000287f l       .debug_str     00000000 
0000288d l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
000028dc l       .debug_str     00000000 
000028cc l       .debug_str     00000000 
00001937 l       .debug_str     00000000 
0000291c l       .debug_str     00000000 
00002922 l       .debug_str     00000000 
00002935 l       .debug_str     00000000 
00002946 l       .debug_str     00000000 
00002955 l       .debug_str     00000000 
00002964 l       .debug_str     00000000 
00002974 l       .debug_str     00000000 
00002987 l       .debug_str     00000000 
0000299a l       .debug_str     00000000 
000029ae l       .debug_str     00000000 
000029c1 l       .debug_str     00000000 
000029d4 l       .debug_str     00000000 
000029e4 l       .debug_str     00000000 
000029f4 l       .debug_str     00000000 
00002a06 l       .debug_str     00000000 
00002a18 l       .debug_str     00000000 
00002a30 l       .debug_str     00000000 
00002a4d l       .debug_str     00000000 
00002a64 l       .debug_str     00000000 
00002a7b l       .debug_str     00000000 
00002a92 l       .debug_str     00000000 
00002aae l       .debug_str     00000000 
00002450 l       .debug_str     00000000 
0000246b l       .debug_str     00000000 
00002484 l       .debug_str     00000000 
000024a0 l       .debug_str     00000000 
000024be l       .debug_str     00000000 
000024dc l       .debug_str     00000000 
0000243e l       .debug_str     00000000 
0000234d l       .debug_str     00000000 
00002368 l       .debug_str     00000000 
00002384 l       .debug_str     00000000 
0000239d l       .debug_str     00000000 
000023b7 l       .debug_str     00000000 
000023d3 l       .debug_str     00000000 
000023ef l       .debug_str     00000000 
00002405 l       .debug_str     00000000 
00002421 l       .debug_str     00000000 
00000bca l       .debug_str     00000000 
000007b6 l       .debug_str     00000000 
000007bf l       .debug_str     00000000 
000007cd l       .debug_str     00000000 
000007ee l       .debug_str     00000000 
00000804 l       .debug_str     00000000 
00000820 l       .debug_str     00000000 
00000835 l       .debug_str     00000000 
00000851 l       .debug_str     00000000 
0000086d l       .debug_str     00000000 
00000881 l       .debug_str     00000000 
00000895 l       .debug_str     00000000 
000008aa l       .debug_str     00000000 
000008c3 l       .debug_str     00000000 
000008d7 l       .debug_str     00000000 
000008eb l       .debug_str     00000000 
000008fb l       .debug_str     00000000 
0000090e l       .debug_str     00000000 
00000928 l       .debug_str     00000000 
0000093f l       .debug_str     00000000 
00000959 l       .debug_str     00000000 
00000975 l       .debug_str     00000000 
00000991 l       .debug_str     00000000 
000009a8 l       .debug_str     00000000 
000009be l       .debug_str     00000000 
000009d6 l       .debug_str     00000000 
000009ee l       .debug_str     00000000 
00000a07 l       .debug_str     00000000 
00000a20 l       .debug_str     00000000 
00000a39 l       .debug_str     00000000 
00000a52 l       .debug_str     00000000 
00000a71 l       .debug_str     00000000 
00000a8f l       .debug_str     00000000 
00000aa9 l       .debug_str     00000000 
00000ac2 l       .debug_str     00000000 
00000ade l       .debug_str     00000000 
00000afc l       .debug_str     00000000 
00000b18 l       .debug_str     00000000 
00000b34 l       .debug_str     00000000 
00000b50 l       .debug_str     00000000 
00000b67 l       .debug_str     00000000 
00000b80 l       .debug_str     00000000 
00000b96 l       .debug_str     00000000 
00000bb5 l       .debug_str     00000000 
000001c9 l       .debug_str     00000000 
00002ac2 l       .debug_str     00000000 
0001a6a3 l       .debug_str     00000000 
0001bb6e l       .debug_str     00000000 
0000129c l       .debug_str     00000000 
000010d4 l       .debug_str     00000000 
00003912 l       .debug_str     00000000 
000012c4 l       .debug_str     00000000 
000012b3 l       .debug_str     00000000 
0001a4da l       .debug_str     00000000 
000020fd l       .debug_str     00000000 
0000219f l       .debug_str     00000000 
0001b17a l       .debug_str     00000000 
000037aa l       .debug_str     00000000 
00002ad3 l       .debug_str     00000000 
00002ae0 l       .debug_str     00000000 
0000334c l       .debug_str     00000000 
00002b17 l       .debug_str     00000000 
00002ae9 l       .debug_str     00000000 
00002af4 l       .debug_str     00000000 
00006907 l       .debug_str     00000000 
00002afc l       .debug_str     00000000 
00002b09 l       .debug_str     00000000 
00001040 l       .debug_str     00000000 
0000269a l       .debug_str     00000000 
00002b5c l       .debug_str     00000000 
000028fe l       .debug_str     00000000 
00002b95 l       .debug_str     00000000 
0001b267 l       .debug_str     00000000 
000002d8 l       .debug_ranges  00000000 
00002b22 l       .debug_str     00000000 
00002b52 l       .debug_str     00000000 
00002b37 l       .debug_str     00000000 
00002b49 l       .debug_str     00000000 
00002b40 l       .debug_str     00000000 
00001312 l       .debug_str     00000000 
0000253c l       .debug_str     00000000 
000025c4 l       .debug_str     00000000 
00006501 l       .debug_str     00000000 
0000182c l       .debug_str     00000000 
00002b63 l       .debug_str     00000000 
00002b79 l       .debug_str     00000000 
000026aa l       .debug_str     00000000 
000025af l       .debug_str     00000000 
00002b9a l       .debug_str     00000000 
00002b9e l       .debug_str     00000000 
0000272e l       .debug_str     00000000 
000026bd l       .debug_str     00000000 
00001257 l       .debug_str     00000000 
00002b82 l       .debug_str     00000000 
00003401 l       .debug_str     00000000 
000025b3 l       .debug_str     00000000 
000025a4 l       .debug_str     00000000 
00002449 l       .debug_str     00000000 
00002589 l       .debug_str     00000000 
0000259c l       .debug_str     00000000 
00002575 l       .debug_str     00000000 
00000278 l       .debug_frame   00000000 
d000a0f6 l       .text  00000000 
d000a17a l       .text  00000000 
d000a184 l       .text  00000000 
d000a18c l       .text  00000000 
00000000 l    df *ABS*  00000000 uart.c
d000a18c l       .text  00000000 
d000a18c l       .text  00000000 
d000a18c l       .text  00000000 
d000a190 l       .text  00000000 
d000a194 l       .text  00000000 
d000a196 l       .text  00000000 
d000a19a l       .text  00000000 
d000a19c l       .text  00000000 
d000a1a0 l       .text  00000000 
d000a1a0 l       .text  00000000 
d000a1a6 l       .text  00000000 
d000a1aa l       .text  00000000 
d000a1ac l       .text  00000000 
d000a1ae l       .text  00000000 
d000a1b2 l       .text  00000000 
d000a1b6 l       .text  00000000 
d000a1b8 l       .text  00000000 
d000a1ba l       .text  00000000 
d000a1ba l       .text  00000000 
00002a96 l       .debug_loc     00000000 
00002ab1 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00002baa l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00000318 l       .debug_ranges  00000000 
0000016c l       .debug_str     00000000 
00000175 l       .debug_str     00000000 
00001305 l       .debug_str     00000000 
00002c06 l       .debug_str     00000000 
00002c0d l       .debug_str     00000000 
0001b267 l       .debug_str     00000000 
00002bcf l       .debug_str     00000000 
00002c19 l       .debug_str     00000000 
0001aa41 l       .debug_str     00000000 
00002bd9 l       .debug_str     00000000 
00002be6 l       .debug_str     00000000 
000033e7 l       .debug_str     00000000 
00002bf4 l       .debug_str     00000000 
000001c9 l       .debug_str     00000000 
00002b40 l       .debug_str     00000000 
00001312 l       .debug_str     00000000 
000002d8 l       .debug_frame   00000000 
d000a1ba l       .text  00000000 
00000000 l    df *ABS*  00000000 sigverify_keys.c
d000a1ba l       .text  00000000 
d000a1ba l       .text  00000000 
d000a1ba l       .text  00000000 
d000a1bc l       .text  00000000 
d000a1d4 l       .text  00000000 
d000a1d6 l       .text  00000000 
d000a1d8 l       .text  00000000 
d000a1da l       .text  00000000 
d000a1da l       .text  00000000 
d000a1de l       .text  00000000 
d000a1de l       .text  00000000 
d000a1ea l       .text  00000000 
d000a1ea l       .text  00000000 
d000a1ec l       .text  00000000 
d000a1ec l       .text  00000000 
d000a1f6 l       .text  00000000 
d000a1fa l       .text  00000000 
d000a206 l       .text  00000000 
d000a20a l       .text  00000000 
d000a20c l       .text  00000000 
d000a214 l       .text  00000000 
d000a214 l       .text  00000000 
d000a21e l       .text  00000000 
d000a21e l       .text  00000000 
d000a220 l       .text  00000000 
d000a220 l       .text  00000000 
d000a224 l       .text  00000000 
d000a224 l       .text  00000000 
d000a226 l       .text  00000000 
d000a226 l       .text  00000000 
d000a22a l       .text  00000000 
d000a236 l       .text  00000000 
d000a238 l       .text  00000000 
d000a2e8 l     F .text  000001ae key_is_valid
d000a23c l       .text  00000000 
d000a23c l       .text  00000000 
d000a23e l       .text  00000000 
d000a23e l       .text  00000000 
d000a242 l       .text  00000000 
d000a242 l       .text  00000000 
d000a24e l       .text  00000000 
d000a24e l       .text  00000000 
d000a250 l       .text  00000000 
d000a250 l       .text  00000000 
d000a254 l       .text  00000000 
d000a254 l       .text  00000000 
d000a256 l       .text  00000000 
d000a256 l       .text  00000000 
d000a258 l       .text  00000000 
d000a258 l       .text  00000000 
d000a25c l       .text  00000000 
d000a25c l       .text  00000000 
d000a25e l       .text  00000000 
d000a262 l       .text  00000000 
d000a262 l       .text  00000000 
d000a264 l       .text  00000000 
d000a264 l       .text  00000000 
d000a270 l       .text  00000000 
d000a270 l       .text  00000000 
d000a272 l       .text  00000000 
d000a272 l       .text  00000000 
d000a278 l       .text  00000000 
d000a278 l       .text  00000000 
d000a27a l       .text  00000000 
d000a27a l       .text  00000000 
d000a286 l       .text  00000000 
d000a286 l       .text  00000000 
d000a288 l       .text  00000000 
d000a288 l       .text  00000000 
d000a28c l       .text  00000000 
d000a28c l       .text  00000000 
d000a290 l       .text  00000000 
d000a290 l       .text  00000000 
d000a29c l       .text  00000000 
d000a2a8 l       .text  00000000 
d000a2ae l       .text  00000000 
d000a2ae l       .text  00000000 
d000a2b2 l       .text  00000000 
d000a2be l       .text  00000000 
d000a2c4 l       .text  00000000 
d000a2c4 l       .text  00000000 
d000a2cc l       .text  00000000 
d000a2d8 l       .text  00000000 
d000a2dc l       .text  00000000 
d000a2de l       .text  00000000 
d000a2e8 l       .text  00000000 
d000a2e8 l       .text  00000000 
d000a2e8 l       .text  00000000 
d000a2e8 l       .text  00000000 
d000a2e8 l       .text  00000000 
d000a2e8 l       .text  00000000 
d000a2ea l       .text  00000000 
d000a2ea l       .text  00000000 
d000a2f2 l       .text  00000000 
d000a2f2 l       .text  00000000 
d000a2f6 l       .text  00000000 
d000a2f6 l       .text  00000000 
d000a2fa l       .text  00000000 
d000a2fe l       .text  00000000 
d000a306 l       .text  00000000 
d000a30a l       .text  00000000 
d000a316 l       .text  00000000 
d000a316 l       .text  00000000 
d000a318 l       .text  00000000 
d000a318 l       .text  00000000 
d000a318 l       .text  00000000 
d000a320 l       .text  00000000 
d000a320 l       .text  00000000 
d000a324 l       .text  00000000 
d000a324 l       .text  00000000 
d000a32c l       .text  00000000 
d000a330 l       .text  00000000 
d000a33e l       .text  00000000 
d000a33e l       .text  00000000 
d000a346 l       .text  00000000 
d000a34a l       .text  00000000 
d000a358 l       .text  00000000 
d000a360 l       .text  00000000 
d000a36c l       .text  00000000 
d000a36c l       .text  00000000 
d000a36e l       .text  00000000 
d000a36e l       .text  00000000 
d000a36e l       .text  00000000 
d000a376 l       .text  00000000 
d000a376 l       .text  00000000 
d000a37a l       .text  00000000 
d000a37a l       .text  00000000 
d000a382 l       .text  00000000 
d000a386 l       .text  00000000 
d000a394 l       .text  00000000 
d000a394 l       .text  00000000 
d000a39c l       .text  00000000 
d000a3a0 l       .text  00000000 
d000a3ac l       .text  00000000 
d000a3ae l       .text  00000000 
d000a496 l     F .text  00000062 key_is_valid_in_lc_state_prod
d000a3b0 l       .text  00000000 
d000a3b4 l       .text  00000000 
d000a3b8 l       .text  00000000 
d000a3bc l       .text  00000000 
d000a3c8 l       .text  00000000 
d000a3c8 l       .text  00000000 
d000a3ca l       .text  00000000 
d000a3ca l       .text  00000000 
d000a3ca l       .text  00000000 
d000a3d2 l       .text  00000000 
d000a3d2 l       .text  00000000 
d000a3d6 l       .text  00000000 
d000a3d6 l       .text  00000000 
d000a3de l       .text  00000000 
d000a3e2 l       .text  00000000 
d000a3f0 l       .text  00000000 
d000a3f0 l       .text  00000000 
d000a3fe l       .text  00000000 
d000a3fe l       .text  00000000 
d000a40c l       .text  00000000 
d000a40c l       .text  00000000 
d000a41a l       .text  00000000 
d000a41a l       .text  00000000 
d000a422 l       .text  00000000 
d000a422 l       .text  00000000 
d000a426 l       .text  00000000 
d000a432 l       .text  00000000 
d000a432 l       .text  00000000 
d000a434 l       .text  00000000 
d000a4f8 l     F .text  0000004a key_is_valid_in_otp
d000a436 l       .text  00000000 
d000a43a l       .text  00000000 
d000a43e l       .text  00000000 
d000a43e l       .text  00000000 
d000a442 l       .text  00000000 
d000a44e l       .text  00000000 
d000a44e l       .text  00000000 
d000a452 l       .text  00000000 
d000a456 l       .text  00000000 
d000a458 l       .text  00000000 
d000a458 l       .text  00000000 
d000a460 l       .text  00000000 
d000a460 l       .text  00000000 
d000a464 l       .text  00000000 
d000a470 l       .text  00000000 
d000a470 l       .text  00000000 
d000a474 l       .text  00000000 
d000a474 l       .text  00000000 
d000a476 l       .text  00000000 
d000a476 l       .text  00000000 
d000a47e l       .text  00000000 
d000a47e l       .text  00000000 
d000a486 l       .text  00000000 
d000a486 l       .text  00000000 
d000a48e l       .text  00000000 
d000a48e l       .text  00000000 
d000a496 l       .text  00000000 
d000a496 l       .text  00000000 
d000a496 l       .text  00000000 
d000a496 l       .text  00000000 
d000a496 l       .text  00000000 
d000a496 l       .text  00000000 
d000a496 l       .text  00000000 
d000a498 l       .text  00000000 
d000a498 l       .text  00000000 
d000a4a0 l       .text  00000000 
d000a4a0 l       .text  00000000 
d000a4a4 l       .text  00000000 
d000a4a4 l       .text  00000000 
d000a4ac l       .text  00000000 
d000a4b0 l       .text  00000000 
d000a4bc l       .text  00000000 
d000a4be l       .text  00000000 
d000a4c0 l       .text  00000000 
d000a4c0 l       .text  00000000 
d000a4ce l       .text  00000000 
d000a4d2 l       .text  00000000 
d000a4d6 l       .text  00000000 
d000a4da l       .text  00000000 
d000a4e6 l       .text  00000000 
d000a4ea l       .text  00000000 
d000a4ee l       .text  00000000 
d000a4f0 l       .text  00000000 
d000a4f0 l       .text  00000000 
d000a4f8 l       .text  00000000 
d000a4f8 l       .text  00000000 
d000a4f8 l       .text  00000000 
d000a4f8 l       .text  00000000 
d000a4f8 l       .text  00000000 
d000a4fa l       .text  00000000 
d000a4fa l       .text  00000000 
d000a4fe l       .text  00000000 
d000a504 l       .text  00000000 
d000a504 l       .text  00000000 
d000a508 l       .text  00000000 
d000a50a l       .text  00000000 
d000a50e l       .text  00000000 
d000a50e l       .text  00000000 
d000a512 l       .text  00000000 
d000a512 l       .text  00000000 
d000a516 l       .text  00000000 
d000a516 l       .text  00000000 
d000a518 l       .text  00000000 
d000a518 l       .text  00000000 
d000a51c l       .text  00000000 
d000a51c l       .text  00000000 
d000a520 l       .text  00000000 
d000a520 l       .text  00000000 
d000a530 l       .text  00000000 
d000a530 l       .text  00000000 
d000a532 l       .text  00000000 
d000a536 l       .text  00000000 
d000a53a l       .text  00000000 
d000a542 l       .text  00000000 
d000a542 l       .text  00000000 
00002acc l       .debug_loc     00000000 
00002afd l       .debug_loc     00000000 
00002b2e l       .debug_loc     00000000 
00002b5f l       .debug_loc     00000000 
00002baa l       .debug_loc     00000000 
00002bdc l       .debug_loc     00000000 
00002c0f l       .debug_loc     00000000 
00002c40 l       .debug_loc     00000000 
00002c66 l       .debug_loc     00000000 
00002c81 l       .debug_loc     00000000 
00002ca7 l       .debug_loc     00000000 
00002cc2 l       .debug_loc     00000000 
00002ce8 l       .debug_loc     00000000 
00002d0e l       .debug_loc     00000000 
00002d29 l       .debug_loc     00000000 
00002d65 l       .debug_loc     00000000 
00002dac l       .debug_loc     00000000 
00002de8 l       .debug_loc     00000000 
00002e0e l       .debug_loc     00000000 
00002e34 l       .debug_loc     00000000 
00002e5a l       .debug_loc     00000000 
00002e96 l       .debug_loc     00000000 
00002ebc l       .debug_loc     00000000 
00002ef8 l       .debug_loc     00000000 
00002f34 l       .debug_loc     00000000 
00002f5a l       .debug_loc     00000000 
00002f96 l       .debug_loc     00000000 
00002fc7 l       .debug_loc     00000000 
00002fe2 l       .debug_loc     00000000 
00003008 l       .debug_loc     00000000 
00003023 l       .debug_loc     00000000 
00003043 l       .debug_loc     00000000 
0000305e l       .debug_loc     00000000 
0000307e l       .debug_loc     00000000 
00003099 l       .debug_loc     00000000 
000030bf l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00002c1d l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
000003f0 l       .debug_ranges  00000000 
00000bca l       .debug_str     00000000 
000007b6 l       .debug_str     00000000 
000007bf l       .debug_str     00000000 
000007cd l       .debug_str     00000000 
000007ee l       .debug_str     00000000 
00000804 l       .debug_str     00000000 
00000820 l       .debug_str     00000000 
00000835 l       .debug_str     00000000 
00000851 l       .debug_str     00000000 
0000086d l       .debug_str     00000000 
00000881 l       .debug_str     00000000 
00000895 l       .debug_str     00000000 
000008aa l       .debug_str     00000000 
000008c3 l       .debug_str     00000000 
000008d7 l       .debug_str     00000000 
000008eb l       .debug_str     00000000 
000008fb l       .debug_str     00000000 
0000090e l       .debug_str     00000000 
00000928 l       .debug_str     00000000 
0000093f l       .debug_str     00000000 
00000959 l       .debug_str     00000000 
00000975 l       .debug_str     00000000 
00000991 l       .debug_str     00000000 
000009a8 l       .debug_str     00000000 
000009be l       .debug_str     00000000 
000009d6 l       .debug_str     00000000 
000009ee l       .debug_str     00000000 
00000a07 l       .debug_str     00000000 
00000a20 l       .debug_str     00000000 
00000a39 l       .debug_str     00000000 
00000a52 l       .debug_str     00000000 
00000a71 l       .debug_str     00000000 
00000a8f l       .debug_str     00000000 
00000aa9 l       .debug_str     00000000 
00000ac2 l       .debug_str     00000000 
00000ade l       .debug_str     00000000 
00000afc l       .debug_str     00000000 
00000b18 l       .debug_str     00000000 
00000b34 l       .debug_str     00000000 
00000b50 l       .debug_str     00000000 
00000b67 l       .debug_str     00000000 
00000b80 l       .debug_str     00000000 
00000b96 l       .debug_str     00000000 
00000bb5 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
0000011c l       .debug_str     00000000 
000000da l       .debug_str     00000000 
000000e7 l       .debug_str     00000000 
000000f3 l       .debug_str     00000000 
00000100 l       .debug_str     00000000 
00000110 l       .debug_str     00000000 
00002c8d l       .debug_str     00000000 
00002c4c l       .debug_str     00000000 
00002c62 l       .debug_str     00000000 
00002c78 l       .debug_str     00000000 
00002ca0 l       .debug_str     00000000 
00002cec l       .debug_str     00000000 
00002cbf l       .debug_str     00000000 
00002cd5 l       .debug_str     00000000 
00000179 l       .debug_str     00000000 
00000162 l       .debug_str     00000000 
000012d7 l       .debug_str     00000000 
000037aa l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
00001670 l       .debug_str     00000000 
0001b215 l       .debug_str     00000000 
00001504 l       .debug_str     00000000 
000014ef l       .debug_str     00000000 
00001937 l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
000016ef l       .debug_str     00000000 
00002dab l       .debug_str     00000000 
000000d1 l       .debug_str     00000000 
0000171a l       .debug_str     00000000 
00002db2 l       .debug_str     00000000 
00002dc1 l       .debug_str     00000000 
0001b267 l       .debug_str     00000000 
00000348 l       .debug_ranges  00000000 
00000360 l       .debug_ranges  00000000 
000002c8 l       .debug_str     00000000 
00002df0 l       .debug_str     00000000 
000031bd l       .debug_str     00000000 
00001321 l       .debug_str     00000000 
00002d6c l       .debug_str     00000000 
00002c97 l       .debug_str     00000000 
00002db7 l       .debug_str     00000000 
00000378 l       .debug_ranges  00000000 
000003a0 l       .debug_ranges  00000000 
000003c8 l       .debug_ranges  00000000 
00002cff l       .debug_str     00000000 
00001257 l       .debug_str     00000000 
00002d1c l       .debug_str     00000000 
00003401 l       .debug_str     00000000 
00002d31 l       .debug_str     00000000 
00002d4e l       .debug_str     00000000 
00002d79 l       .debug_str     00000000 
00002d97 l       .debug_str     00000000 
00003912 l       .debug_str     00000000 
0001a6a3 l       .debug_str     00000000 
00002d70 l       .debug_str     00000000 
00002b63 l       .debug_str     00000000 
000010d4 l       .debug_str     00000000 
000012c4 l       .debug_str     00000000 
000012b3 l       .debug_str     00000000 
0001a4da l       .debug_str     00000000 
000020fd l       .debug_str     00000000 
0000132c l       .debug_str     00000000 
0000012c l       .debug_str     00000000 
00001a89 l       .debug_str     00000000 
0000170c l       .debug_str     00000000 
0000420b l       .debug_str     00000000 
00001705 l       .debug_str     00000000 
00002ddc l       .debug_str     00000000 
00002dca l       .debug_str     00000000 
00002df5 l       .debug_str     00000000 
0000033c l       .debug_frame   00000000 
d000a2e8 l       .text  00000000 
d000a496 l       .text  00000000 
d000a4f8 l       .text  00000000 
d000a542 l       .text  00000000 
00000000 l    df *ABS*  00000000 shutdown.c
d000a542 l       .text  00000000 
d000a542 l       .text  00000000 
d000a542 l       .text  00000000 
d000a544 l       .text  00000000 
d000a55e l       .text  00000000 
d000a560 l       .text  00000000 
d000a560 l       .text  00000000 
d000a560 l       .text  00000000 
d000a560 l       .text  00000000 
d000a568 l       .text  00000000 
d000a568 l       .text  00000000 
d000a56c l       .text  00000000 
d000a56c l       .text  00000000 
d000a570 l       .text  00000000 
d000a574 l       .text  00000000 
d000a57c l       .text  00000000 
d000a580 l       .text  00000000 
d000a58e l       .text  00000000 
d000a58e l       .text  00000000 
d000a590 l       .text  00000000 
d000a590 l       .text  00000000 
d000a592 l       .text  00000000 
d000a59a l       .text  00000000 
d000a59e l       .text  00000000 
d000a5ac l       .text  00000000 
d000a5ac l       .text  00000000 
d000a5ae l       .text  00000000 
d000a5ae l       .text  00000000 
d000a5b0 l       .text  00000000 
d000a5b8 l       .text  00000000 
d000a5c6 l       .text  00000000 
d000a5c6 l       .text  00000000 
d000a5c8 l       .text  00000000 
d000a5c8 l       .text  00000000 
d000a5cc l       .text  00000000 
d000a5cc l       .text  00000000 
d000a5ce l       .text  00000000 
d000a5d6 l       .text  00000000 
d000a5da l       .text  00000000 
d000a5da l       .text  00000000 
d000a5de l       .text  00000000 
d000a5de l       .text  00000000 
d000a5ea l       .text  00000000 
d000a5ea l       .text  00000000 
d000a5ea l       .text  00000000 
d000a5ea l       .text  00000000 
d000a5ee l       .text  00000000 
d000a5ee l       .text  00000000 
d000a5f6 l       .text  00000000 
d000a5f8 l       .text  00000000 
d000a5f8 l       .text  00000000 
d000a600 l       .text  00000000 
d000a600 l       .text  00000000 
d000a602 l       .text  00000000 
d000a602 l       .text  00000000 
d000a608 l       .text  00000000 
d000a608 l       .text  00000000 
d000a60c l       .text  00000000 
d000a60c l       .text  00000000 
d000a616 l       .text  00000000 
d000a616 l       .text  00000000 
d000a61a l       .text  00000000 
d000a61e l       .text  00000000 
d000a61e l       .text  00000000 
d000a620 l       .text  00000000 
d000a620 l       .text  00000000 
d000a624 l       .text  00000000 
d000a628 l       .text  00000000 
d000a628 l       .text  00000000 
d000a62a l       .text  00000000 
d000a62a l       .text  00000000 
d000a62c l       .text  00000000 
d000a62c l       .text  00000000 
d000a62e l       .text  00000000 
d000a638 l       .text  00000000 
d000a638 l       .text  00000000 
d000a63a l       .text  00000000 
d000a63e l       .text  00000000 
d000a642 l       .text  00000000 
d000a644 l       .text  00000000 
d000a644 l       .text  00000000 
d000a646 l       .text  00000000 
d000a646 l       .text  00000000 
d000a64a l       .text  00000000 
d000a64a l       .text  00000000 
d000a64e l       .text  00000000 
d000a64e l       .text  00000000 
d000a654 l       .text  00000000 
d000a66c l       .text  00000000 
d000a66c l       .text  00000000 
d000a672 l       .text  00000000 
d000a672 l       .text  00000000 
d000a676 l       .text  00000000 
d000a676 l       .text  00000000 
d000a67a l       .text  00000000 
d000a67a l       .text  00000000 
d000a67e l       .text  00000000 
d000a686 l       .text  00000000 
d000a686 l       .text  00000000 
d000a694 l       .text  00000000 
d000a69a l       .text  00000000 
d000a69e l       .text  00000000 
d000a69e l       .text  00000000 
d000a6a2 l       .text  00000000 
d000a6a2 l       .text  00000000 
d000a6a4 l       .text  00000000 
d000a6a6 l       .text  00000000 
d000a6a6 l       .text  00000000 
d000a6a8 l       .text  00000000 
d000a6a8 l       .text  00000000 
d000a6ae l       .text  00000000 
d000a6ae l       .text  00000000 
d000a6b2 l       .text  00000000 
d000a6b6 l       .text  00000000 
d000a6b8 l       .text  00000000 
d000a6ba l       .text  00000000 
d000a6ba l       .text  00000000 
d000a6bc l       .text  00000000 
d000a6bc l       .text  00000000 
d000a6be l       .text  00000000 
d000a6be l       .text  00000000 
d000a6c2 l       .text  00000000 
d000a6c2 l       .text  00000000 
d000a6de l       .text  00000000 
d000a6de l       .text  00000000 
d000a6e4 l       .text  00000000 
d000a6e4 l       .text  00000000 
d000a6e8 l       .text  00000000 
d000a6e8 l       .text  00000000 
d000a6ec l       .text  00000000 
d000a6ec l       .text  00000000 
d000a6f0 l       .text  00000000 
d000a6f8 l       .text  00000000 
d000a6f8 l       .text  00000000 
d000a706 l       .text  00000000 
d000a70c l       .text  00000000 
d000a710 l       .text  00000000 
d000a710 l       .text  00000000 
d000a714 l       .text  00000000 
d000a714 l       .text  00000000 
d000a716 l       .text  00000000 
d000a718 l       .text  00000000 
d000a718 l       .text  00000000 
d000a71a l       .text  00000000 
d000a71a l       .text  00000000 
d000a720 l       .text  00000000 
d000a720 l       .text  00000000 
d000a72a l       .text  00000000 
d000a72a l       .text  00000000 
d000a72c l       .text  00000000 
d000a72c l       .text  00000000 
d000a72e l       .text  00000000 
d000a72e l       .text  00000000 
d000a732 l       .text  00000000 
d000a732 l       .text  00000000 
d000a736 l       .text  00000000 
d000a736 l       .text  00000000 
d000a73a l       .text  00000000 
d000a742 l       .text  00000000 
d000a746 l       .text  00000000 
d000a748 l       .text  00000000 
d000a74e l       .text  00000000 
d000a752 l       .text  00000000 
d000a75a l       .text  00000000 
d000a766 l       .text  00000000 
d000a766 l       .text  00000000 
d000a770 l       .text  00000000 
d000a776 l       .text  00000000 
d000a778 l       .text  00000000 
d000a77a l       .text  00000000 
d000a77e l       .text  00000000 
d000a782 l       .text  00000000 
d000a782 l       .text  00000000 
d000a784 l       .text  00000000 
d000a788 l       .text  00000000 
d000a78c l       .text  00000000 
d000a78c l       .text  00000000 
d000a78e l       .text  00000000 
d000a78e l       .text  00000000 
d000a790 l       .text  00000000 
d000a790 l       .text  00000000 
d000a790 l       .text  00000000 
d000a790 l       .text  00000000 
d000a792 l       .text  00000000 
d000a792 l       .text  00000000 
d000a796 l       .text  00000000 
d000a796 l       .text  00000000 
d000a79e l       .text  00000000 
d000a79e l       .text  00000000 
d000a7a4 l       .text  00000000 
d000a7a4 l       .text  00000000 
d000a7a8 l       .text  00000000 
d000a7a8 l       .text  00000000 
d000a7aa l       .text  00000000 
d000a7aa l       .text  00000000 
d000a7b4 l       .text  00000000 
d000a7b4 l       .text  00000000 
d000a7ba l       .text  00000000 
d000a7bc l       .text  00000000 
d000a7c2 l       .text  00000000 
d000a7c2 l       .text  00000000 
d000a7c8 l       .text  00000000 
d000a7cc l       .text  00000000 
d000a7cc l       .text  00000000 
d000a7ce l       .text  00000000 
d000a7ce l       .text  00000000 
d000a7d2 l       .text  00000000 
d000a7d2 l       .text  00000000 
d000a7d4 l       .text  00000000 
d000a7d6 l       .text  00000000 
d000a7d6 l       .text  00000000 
d000a7d8 l       .text  00000000 
d000a7d8 l       .text  00000000 
d000a7de l       .text  00000000 
d000a7de l       .text  00000000 
d000a7e0 l       .text  00000000 
d000a7e4 l       .text  00000000 
d000a7e6 l       .text  00000000 
d000a7e8 l       .text  00000000 
d000a7ea l       .text  00000000 
d000a7f2 l       .text  00000000 
d000a7f6 l       .text  00000000 
d000a806 l       .text  00000000 
d000a806 l       .text  00000000 
d000a824 l       .text  00000000 
d000a824 l       .text  00000000 
d000a82c l       .text  00000000 
d000a82c l       .text  00000000 
d000e2a4 l       .shutdown      00000000 
d000e2a4 l       .shutdown      00000000 
d000e2a4 l       .shutdown      00000000 
d000e2a8 l       .shutdown      00000000 
d000e2a8 l       .shutdown      00000000 
d000e2aa l       .shutdown      00000000 
d000e2aa l       .shutdown      00000000 
d000e2b0 l       .shutdown      00000000 
d000e2b0 l       .shutdown      00000000 
d000e2b4 l       .shutdown      00000000 
d000e2b4 l       .shutdown      00000000 
d000e2c4 l       .shutdown      00000000 
d000e2c4 l       .shutdown      00000000 
d000e2c8 l       .shutdown      00000000 
d000e2c8 l       .shutdown      00000000 
d000e2d0 l       .shutdown      00000000 
d000e2d4 l       .shutdown      00000000 
d000e2dc l       .shutdown      00000000 
d000e2e0 l       .shutdown      00000000 
d000e2e8 l       .shutdown      00000000 
d000e2ec l       .shutdown      00000000 
d000e302 l       .shutdown      00000000 
d000e306 l       .shutdown      00000000 
d000e30e l       .shutdown      00000000 
d000e312 l       .shutdown      00000000 
d000e31a l       .shutdown      00000000 
d000e31e l       .shutdown      00000000 
d000e326 l       .shutdown      00000000 
d000e32c l       .shutdown      00000000 
d000e330 l       .shutdown      00000000 
d000e334 l       .shutdown      00000000 
d000e33c l       .shutdown      00000000 
d000e340 l       .shutdown      00000000 
d000e352 l       .shutdown      00000000 
d000e356 l       .shutdown      00000000 
d000e35e l       .shutdown      00000000 
d000e362 l       .shutdown      00000000 
d000e36a l       .shutdown      00000000 
d000e36e l       .shutdown      00000000 
d000e372 l       .shutdown      00000000 
d000e372 l       .shutdown      00000000 
d000e378 l       .shutdown      00000000 
d000e378 l       .shutdown      00000000 
d000e380 l       .shutdown      00000000 
d000e384 l       .shutdown      00000000 
d000e384 l       .shutdown      00000000 
d000e388 l       .shutdown      00000000 
d000e38a l       .shutdown      00000000 
d000e38c l       .shutdown      00000000 
d000e394 l       .shutdown      00000000 
d000e398 l       .shutdown      00000000 
d000e3a0 l       .shutdown      00000000 
d000e3a4 l       .shutdown      00000000 
d000e3ac l       .shutdown      00000000 
d000e3b0 l       .shutdown      00000000 
d000e3b4 l       .shutdown      00000000 
d000e3b8 l       .shutdown      00000000 
d000e3b8 l       .shutdown      00000000 
d000e3ba l       .shutdown      00000000 
d000e3ba l       .shutdown      00000000 
d000e3c0 l       .shutdown      00000000 
d000e3c0 l       .shutdown      00000000 
d000e3c2 l       .shutdown      00000000 
d000e3c4 l       .shutdown      00000000 
d000e3c6 l       .shutdown      00000000 
d000e3cc l       .shutdown      00000000 
d000e3cc l       .shutdown      00000000 
d000e3ce l       .shutdown      00000000 
d000e3ce l       .shutdown      00000000 
d000e3d0 l       .shutdown      00000000 
d000e3d0 l       .shutdown      00000000 
d000e3d4 l       .shutdown      00000000 
d000e3d4 l       .shutdown      00000000 
d000e3de l       .shutdown      00000000 
d000e3de l       .shutdown      00000000 
d000e3e8 l       .shutdown      00000000 
d000e3e8 l       .shutdown      00000000 
d000e3f0 l       .shutdown      00000000 
d000e3f0 l       .shutdown      00000000 
d000e3f8 l       .shutdown      00000000 
d000e3f8 l       .shutdown      00000000 
d000e3fe l       .shutdown      00000000 
d000e3fe l       .shutdown      00000000 
d000e400 l       .shutdown      00000000 
d000e400 l       .shutdown      00000000 
d000e408 l       .shutdown      00000000 
d000e40a l       .shutdown      00000000 
d000e40a l       .shutdown      00000000 
d000e40e l       .shutdown      00000000 
d000e40e l       .shutdown      00000000 
d000e412 l       .shutdown      00000000 
d000e414 l       .shutdown      00000000 
d000e414 l       .shutdown      00000000 
d000e416 l       .shutdown      00000000 
d000e41a l       .shutdown      00000000 
d000e41a l       .shutdown      00000000 
d000e41c l       .shutdown      00000000 
d000e41c l       .shutdown      00000000 
d000e41e l       .shutdown      00000000 
d000e41e l       .shutdown      00000000 
d000e420 l       .shutdown      00000000 
d000e420 l       .shutdown      00000000 
d000e422 l       .shutdown      00000000 
d000e426 l       .shutdown      00000000 
d000e426 l       .shutdown      00000000 
d000e428 l       .shutdown      00000000 
d000e428 l       .shutdown      00000000 
d000e42e l       .shutdown      00000000 
d000e42e l       .shutdown      00000000 
d000e434 l       .shutdown      00000000 
d000e434 l       .shutdown      00000000 
d000e43a l       .shutdown      00000000 
d000e43a l       .shutdown      00000000 
d000e43c l       .shutdown      00000000 
d000e43c l       .shutdown      00000000 
d000e440 l       .shutdown      00000000 
d000e440 l       .shutdown      00000000 
d000e444 l       .shutdown      00000000 
d000e444 l       .shutdown      00000000 
d000e444 l       .shutdown      00000000 
d000e444 l       .shutdown      00000000 
d000e448 l       .shutdown      00000000 
d000e448 l       .shutdown      00000000 
d000e450 l       .shutdown      00000000 
d000e450 l       .shutdown      00000000 
d000e454 l       .shutdown      00000000 
d000e456 l       .shutdown      00000000 
d000e456 l       .shutdown      00000000 
d000e458 l       .shutdown      00000000 
d000e45c l       .shutdown      00000000 
d000e45c l       .shutdown      00000000 
d000e45e l       .shutdown      00000000 
d000e45e l       .shutdown      00000000 
d000e460 l       .shutdown      00000000 
d000e460 l       .shutdown      00000000 
d000e462 l       .shutdown      00000000 
d000e462 l       .shutdown      00000000 
d000e464 l       .shutdown      00000000 
d000e468 l       .shutdown      00000000 
d000e468 l       .shutdown      00000000 
d000e46c l       .shutdown      00000000 
d000e46c l       .shutdown      00000000 
d000e470 l       .shutdown      00000000 
d000e470 l       .shutdown      00000000 
d000e472 l       .shutdown      00000000 
d000e472 l       .shutdown      00000000 
d000e476 l       .shutdown      00000000 
d000e476 l       .shutdown      00000000 
d000e480 l       .shutdown      00000000 
d000e480 l       .shutdown      00000000 
d000e482 l       .shutdown      00000000 
d000e482 l       .shutdown      00000000 
d000e486 l       .shutdown      00000000 
d000e486 l       .shutdown      00000000 
d000e488 l       .shutdown      00000000 
d000e48c l       .shutdown      00000000 
d000e48c l       .shutdown      00000000 
d000e490 l       .shutdown      00000000 
d000e490 l       .shutdown      00000000 
d000e492 l       .shutdown      00000000 
d000e492 l       .shutdown      00000000 
d000e494 l       .shutdown      00000000 
d000e494 l       .shutdown      00000000 
d000e498 l       .shutdown      00000000 
d000e498 l       .shutdown      00000000 
d000e4a4 l       .shutdown      00000000 
d000e4a4 l       .shutdown      00000000 
d000e4a6 l       .shutdown      00000000 
d000e4aa l       .shutdown      00000000 
d000e4aa l       .shutdown      00000000 
d000e4ac l       .shutdown      00000000 
d000e4ac l       .shutdown      00000000 
d000e4b4 l       .shutdown      00000000 
d000e4b4 l       .shutdown      00000000 
d000e4bc l       .shutdown      00000000 
d000e4bc l       .shutdown      00000000 
d000e4c4 l       .shutdown      00000000 
d000e4c4 l       .shutdown      00000000 
d000e4c8 l       .shutdown      00000000 
d000e4c8 l       .shutdown      00000000 
d000e4dc l       .shutdown      00000000 
d000e4dc l       .shutdown      00000000 
d000e53c l       .shutdown      00000000 
d000e53c l       .shutdown      00000000 
d000e53c l       .shutdown      00000000 
000030e5 l       .debug_loc     00000000 
00003121 l       .debug_loc     00000000 
00003147 l       .debug_loc     00000000 
0000316e l       .debug_loc     00000000 
000031b9 l       .debug_loc     00000000 
000031e0 l       .debug_loc     00000000 
00003207 l       .debug_loc     00000000 
0000322d l       .debug_loc     00000000 
00003249 l       .debug_loc     00000000 
000032d3 l       .debug_loc     00000000 
0000333e l       .debug_loc     00000000 
00003359 l       .debug_loc     00000000 
000033a1 l       .debug_loc     00000000 
000033bc l       .debug_loc     00000000 
000033fa l       .debug_loc     00000000 
00003438 l       .debug_loc     00000000 
00003475 l       .debug_loc     00000000 
00003498 l       .debug_loc     00000000 
000034b3 l       .debug_loc     00000000 
000034ce l       .debug_loc     00000000 
000034e9 l       .debug_loc     00000000 
00003526 l       .debug_loc     00000000 
00003549 l       .debug_loc     00000000 
00003564 l       .debug_loc     00000000 
0000357f l       .debug_loc     00000000 
0000359a l       .debug_loc     00000000 
000035d7 l       .debug_loc     00000000 
00003620 l       .debug_loc     00000000 
00003667 l       .debug_loc     00000000 
00003682 l       .debug_loc     00000000 
000036b3 l       .debug_loc     00000000 
000036d9 l       .debug_loc     00000000 
000036ff l       .debug_loc     00000000 
00003725 l       .debug_loc     00000000 
0000374b l       .debug_loc     00000000 
00003770 l       .debug_loc     00000000 
00003794 l       .debug_loc     00000000 
000037bb l       .debug_loc     00000000 
000037d6 l       .debug_loc     00000000 
000037f1 l       .debug_loc     00000000 
00003817 l       .debug_loc     00000000 
00003848 l       .debug_loc     00000000 
00003879 l       .debug_loc     00000000 
0000389f l       .debug_loc     00000000 
000038c6 l       .debug_loc     00000000 
000038f7 l       .debug_loc     00000000 
0000391d l       .debug_loc     00000000 
00003943 l       .debug_loc     00000000 
0000395e l       .debug_loc     00000000 
00003984 l       .debug_loc     00000000 
000039a9 l       .debug_loc     00000000 
000039cd l       .debug_loc     00000000 
000039f3 l       .debug_loc     00000000 
00003a15 l       .debug_loc     00000000 
00003a30 l       .debug_loc     00000000 
00003a56 l       .debug_loc     00000000 
00003a88 l       .debug_loc     00000000 
00003abb l       .debug_loc     00000000 
00003aee l       .debug_loc     00000000 
00003b2d l       .debug_loc     00000000 
00003b48 l       .debug_loc     00000000 
00003b86 l       .debug_loc     00000000 
00003bad l       .debug_loc     00000000 
00003bec l       .debug_loc     00000000 
00003c07 l       .debug_loc     00000000 
00003c22 l       .debug_loc     00000000 
00003c3d l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00002e0a l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00000510 l       .debug_ranges  00000000 
00000bca l       .debug_str     00000000 
000007b6 l       .debug_str     00000000 
000007bf l       .debug_str     00000000 
000007cd l       .debug_str     00000000 
000007ee l       .debug_str     00000000 
00000804 l       .debug_str     00000000 
00000820 l       .debug_str     00000000 
00000835 l       .debug_str     00000000 
00000851 l       .debug_str     00000000 
0000086d l       .debug_str     00000000 
00000881 l       .debug_str     00000000 
00000895 l       .debug_str     00000000 
000008aa l       .debug_str     00000000 
000008c3 l       .debug_str     00000000 
000008d7 l       .debug_str     00000000 
000008eb l       .debug_str     00000000 
000008fb l       .debug_str     00000000 
0000090e l       .debug_str     00000000 
00000928 l       .debug_str     00000000 
0000093f l       .debug_str     00000000 
00000959 l       .debug_str     00000000 
00000975 l       .debug_str     00000000 
00000991 l       .debug_str     00000000 
000009a8 l       .debug_str     00000000 
000009be l       .debug_str     00000000 
000009d6 l       .debug_str     00000000 
000009ee l       .debug_str     00000000 
00000a07 l       .debug_str     00000000 
00000a20 l       .debug_str     00000000 
00000a39 l       .debug_str     00000000 
00000a52 l       .debug_str     00000000 
00000a71 l       .debug_str     00000000 
00000a8f l       .debug_str     00000000 
00000aa9 l       .debug_str     00000000 
00000ac2 l       .debug_str     00000000 
00000ade l       .debug_str     00000000 
00000afc l       .debug_str     00000000 
00000b18 l       .debug_str     00000000 
00000b34 l       .debug_str     00000000 
00000b50 l       .debug_str     00000000 
00000b67 l       .debug_str     00000000 
00000b80 l       .debug_str     00000000 
00000b96 l       .debug_str     00000000 
00000bb5 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
0000011c l       .debug_str     00000000 
000000da l       .debug_str     00000000 
000000e7 l       .debug_str     00000000 
000000f3 l       .debug_str     00000000 
00000100 l       .debug_str     00000000 
00000110 l       .debug_str     00000000 
00001373 l       .debug_str     00000000 
00002e33 l       .debug_str     00000000 
00002e40 l       .debug_str     00000000 
00002e50 l       .debug_str     00000000 
00002e5c l       .debug_str     00000000 
000000d1 l       .debug_str     00000000 
00003397 l       .debug_str     00000000 
00003220 l       .debug_str     00000000 
00006392 l       .debug_str     00000000 
000032c5 l       .debug_str     00000000 
000032ce l       .debug_str     00000000 
0001b267 l       .debug_str     00000000 
000031bd l       .debug_str     00000000 
000032de l       .debug_str     00000000 
000032eb l       .debug_str     00000000 
000032fa l       .debug_str     00000000 
00000418 l       .debug_ranges  00000000 
00000430 l       .debug_ranges  00000000 
00000448 l       .debug_ranges  00000000 
0001bb6e l       .debug_str     00000000 
0001a7c3 l       .debug_str     00000000 
000030ce l       .debug_str     00000000 
00000460 l       .debug_ranges  00000000 
00000478 l       .debug_ranges  00000000 
00006926 l       .debug_str     00000000 
00000490 l       .debug_ranges  00000000 
00002ea0 l       .debug_str     00000000 
00002e68 l       .debug_str     00000000 
00002e79 l       .debug_str     00000000 
00002e8d l       .debug_str     00000000 
00002f13 l       .debug_str     00000000 
00002eac l       .debug_str     00000000 
00002ebf l       .debug_str     00000000 
00002ed4 l       .debug_str     00000000 
00002ee9 l       .debug_str     00000000 
00002efe l       .debug_str     00000000 
00002f62 l       .debug_str     00000000 
00002f21 l       .debug_str     00000000 
00002f2e l       .debug_str     00000000 
00002f3b l       .debug_str     00000000 
00002f48 l       .debug_str     00000000 
00002f55 l       .debug_str     00000000 
00002fd3 l       .debug_str     00000000 
00002f6d l       .debug_str     00000000 
00002f86 l       .debug_str     00000000 
00002fa0 l       .debug_str     00000000 
00002fbb l       .debug_str     00000000 
00002fe9 l       .debug_str     00000000 
00002ff4 l       .debug_str     00000000 
00003001 l       .debug_str     00000000 
0000300b l       .debug_str     00000000 
00003051 l       .debug_str     00000000 
00003019 l       .debug_str     00000000 
00003035 l       .debug_str     00000000 
0000291c l       .debug_str     00000000 
00001f84 l       .debug_str     00000000 
00001ee4 l       .debug_str     00000000 
00001ef7 l       .debug_str     00000000 
00001f0b l       .debug_str     00000000 
00001f1e l       .debug_str     00000000 
00001f32 l       .debug_str     00000000 
00001f46 l       .debug_str     00000000 
00001f5b l       .debug_str     00000000 
00001f6f l       .debug_str     00000000 
00003065 l       .debug_str     00000000 
00003073 l       .debug_str     00000000 
0000307f l       .debug_str     00000000 
0000308e l       .debug_str     00000000 
0000309f l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
000030ad l       .debug_str     00000000 
000012d7 l       .debug_str     00000000 
000037aa l       .debug_str     00000000 
00002b63 l       .debug_str     00000000 
000010d4 l       .debug_str     00000000 
00003912 l       .debug_str     00000000 
000012c4 l       .debug_str     00000000 
000012b3 l       .debug_str     00000000 
0001a4da l       .debug_str     00000000 
000020fd l       .debug_str     00000000 
000030c5 l       .debug_str     00000000 
00003401 l       .debug_str     00000000 
0000132c l       .debug_str     00000000 
000030d2 l       .debug_str     00000000 
000030e2 l       .debug_str     00000000 
000030f8 l       .debug_str     00000000 
00003145 l       .debug_str     00000000 
000066f1 l       .debug_str     00000000 
0000310e l       .debug_str     00000000 
00003119 l       .debug_str     00000000 
00003129 l       .debug_str     00000000 
00003138 l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
00003156 l       .debug_str     00000000 
00000e2e l       .debug_str     00000000 
00000237 l       .debug_str     00000000 
0000316d l       .debug_str     00000000 
00001257 l       .debug_str     00000000 
0000129c l       .debug_str     00000000 
00003289 l       .debug_str     00000000 
000004b0 l       .debug_ranges  00000000 
0000253c l       .debug_str     00000000 
0001a6a3 l       .debug_str     00000000 
00003176 l       .debug_str     00000000 
00003194 l       .debug_str     00000000 
00003299 l       .debug_str     00000000 
000004c8 l       .debug_ranges  00000000 
0000319e l       .debug_str     00000000 
000032a9 l       .debug_str     00000000 
000031b4 l       .debug_str     00000000 
000031c3 l       .debug_str     00000000 
000031d1 l       .debug_str     00000000 
000061c4 l       .debug_str     00000000 
00001040 l       .debug_str     00000000 
00002ac2 l       .debug_str     00000000 
00001817 l       .debug_str     00000000 
00006501 l       .debug_str     00000000 
0000182c l       .debug_str     00000000 
000031d8 l       .debug_str     00000000 
0000305e l       .debug_str     00000000 
000031fd l       .debug_str     00000000 
00003207 l       .debug_str     00000000 
000031e7 l       .debug_str     00000000 
000001c9 l       .debug_str     00000000 
000001ce l       .debug_str     00000000 
000001c0 l       .debug_str     00000000 
000025c4 l       .debug_str     00000000 
0000320e l       .debug_str     00000000 
00003229 l       .debug_str     00000000 
00003243 l       .debug_str     00000000 
0000334c l       .debug_str     00000000 
00003258 l       .debug_str     00000000 
00003267 l       .debug_str     00000000 
0000327b l       .debug_str     00000000 
000014a2 l       .debug_str     00000000 
000004e0 l       .debug_ranges  00000000 
000004f8 l       .debug_ranges  00000000 
000032b0 l       .debug_str     00000000 
0000012c l       .debug_str     00000000 
000003b4 l       .debug_frame   00000000 
d000a82c l       .text  00000000 
d000e53c l       .shutdown      00000000 
00000000 l    df *ABS*  00000000 alert.c
d000a82c l       .text  00000000 
d000a82c l       .text  00000000 
d000a82c l       .text  00000000 
d000a830 l       .text  00000000 
d000a834 l       .text  00000000 
d000a838 l       .text  00000000 
d000a83c l       .text  00000000 
d000a83e l       .text  00000000 
d000a83e l       .text  00000000 
d000a846 l       .text  00000000 
d000a84a l       .text  00000000 
d000a84a l       .text  00000000 
d000a852 l       .text  00000000 
d000a856 l       .text  00000000 
d000a85a l       .text  00000000 
d000a85e l       .text  00000000 
d000a862 l       .text  00000000 
d000a866 l       .text  00000000 
d000a86a l       .text  00000000 
d000a86e l       .text  00000000 
d000a872 l       .text  00000000 
d000a872 l       .text  00000000 
d000a876 l       .text  00000000 
d000a87c l       .text  00000000 
d000a87c l       .text  00000000 
d000a880 l       .text  00000000 
d000a884 l       .text  00000000 
d000a888 l       .text  00000000 
d000a88c l       .text  00000000 
d000a890 l       .text  00000000 
d000a890 l       .text  00000000 
d000a894 l       .text  00000000 
d000a894 l       .text  00000000 
d000a898 l       .text  00000000 
d000a898 l       .text  00000000 
d000a89c l       .text  00000000 
d000a89c l       .text  00000000 
d000a8a0 l       .text  00000000 
d000a8a0 l       .text  00000000 
d000a8bc l       .text  00000000 
d000a8c2 l       .text  00000000 
d000a8c2 l       .text  00000000 
d000a8c6 l       .text  00000000 
d000a8ca l       .text  00000000 
d000a8ca l       .text  00000000 
d000a8ce l       .text  00000000 
d000a8ce l       .text  00000000 
d000a8d0 l       .text  00000000 
d000a8d0 l       .text  00000000 
d000a8d6 l       .text  00000000 
d000a8d6 l       .text  00000000 
d000a8dc l       .text  00000000 
d000a8dc l       .text  00000000 
d000a8e0 l       .text  00000000 
d000a8e4 l       .text  00000000 
d000a8e4 l       .text  00000000 
d000a8e6 l       .text  00000000 
d000a8e6 l       .text  00000000 
d000a8ec l       .text  00000000 
d000a8ec l       .text  00000000 
d000a8ec l       .text  00000000 
d000a8ec l       .text  00000000 
d000a8ec l       .text  00000000 
d000a8ee l       .text  00000000 
d000a8f2 l       .text  00000000 
d000a8f6 l       .text  00000000 
d000a8fa l       .text  00000000 
d000a8fc l       .text  00000000 
d000a8fc l       .text  00000000 
d000a904 l       .text  00000000 
d000a908 l       .text  00000000 
d000a908 l       .text  00000000 
d000a910 l       .text  00000000 
d000a914 l       .text  00000000 
d000a918 l       .text  00000000 
d000a91c l       .text  00000000 
d000a920 l       .text  00000000 
d000a924 l       .text  00000000 
d000a928 l       .text  00000000 
d000a92c l       .text  00000000 
d000a930 l       .text  00000000 
d000a930 l       .text  00000000 
d000a934 l       .text  00000000 
d000a93a l       .text  00000000 
d000a93a l       .text  00000000 
d000a93e l       .text  00000000 
d000a942 l       .text  00000000 
d000a946 l       .text  00000000 
d000a94a l       .text  00000000 
d000a94e l       .text  00000000 
d000a94e l       .text  00000000 
d000a952 l       .text  00000000 
d000a952 l       .text  00000000 
d000a956 l       .text  00000000 
d000a956 l       .text  00000000 
d000a95a l       .text  00000000 
d000a95a l       .text  00000000 
d000a95e l       .text  00000000 
d000a95e l       .text  00000000 
d000a97a l       .text  00000000 
d000a980 l       .text  00000000 
d000a980 l       .text  00000000 
d000a984 l       .text  00000000 
d000a988 l       .text  00000000 
d000a988 l       .text  00000000 
d000a98c l       .text  00000000 
d000a98c l       .text  00000000 
d000a98e l       .text  00000000 
d000a98e l       .text  00000000 
d000a994 l       .text  00000000 
d000a994 l       .text  00000000 
d000a99a l       .text  00000000 
d000a99a l       .text  00000000 
d000a99e l       .text  00000000 
d000a9a2 l       .text  00000000 
d000a9a2 l       .text  00000000 
d000a9a4 l       .text  00000000 
d000a9a4 l       .text  00000000 
d000a9aa l       .text  00000000 
d000a9aa l       .text  00000000 
d000a9aa l       .text  00000000 
d000a9aa l       .text  00000000 
d000a9aa l       .text  00000000 
d000a9ac l       .text  00000000 
d000a9b4 l       .text  00000000 
d000a9b8 l       .text  00000000 
d000a9bc l       .text  00000000 
d000a9c0 l       .text  00000000 
d000a9c4 l       .text  00000000 
d000a9c8 l       .text  00000000 
d000a9cc l       .text  00000000 
d000a9cc l       .text  00000000 
d000a9d2 l       .text  00000000 
d000a9d6 l       .text  00000000 
d000a9da l       .text  00000000 
d000a9de l       .text  00000000 
d000a9e2 l       .text  00000000 
d000a9ea l       .text  00000000 
d000a9ec l       .text  00000000 
d000a9f0 l       .text  00000000 
d000a9f0 l       .text  00000000 
d000a9f8 l       .text  00000000 
d000a9fc l       .text  00000000 
d000aa00 l       .text  00000000 
d000aa04 l       .text  00000000 
d000aa08 l       .text  00000000 
d000aa0c l       .text  00000000 
d000aa12 l       .text  00000000 
d000aa14 l       .text  00000000 
d000aa1e l       .text  00000000 
d000aa1e l       .text  00000000 
d000aa2c l       .text  00000000 
d000aa30 l       .text  00000000 
d000aa34 l       .text  00000000 
d000aa38 l       .text  00000000 
d000aa3c l       .text  00000000 
d000aa40 l       .text  00000000 
d000aa44 l       .text  00000000 
d000aa48 l       .text  00000000 
d000aa48 l       .text  00000000 
d000aa4a l       .text  00000000 
d000aa4a l       .text  00000000 
d000aa4e l       .text  00000000 
d000aa52 l       .text  00000000 
d000aa56 l       .text  00000000 
d000aa5a l       .text  00000000 
d000aa5a l       .text  00000000 
d000aa5e l       .text  00000000 
d000aa5e l       .text  00000000 
d000aa62 l       .text  00000000 
d000aa62 l       .text  00000000 
d000aa66 l       .text  00000000 
d000aa66 l       .text  00000000 
d000aa6a l       .text  00000000 
d000aa6a l       .text  00000000 
d000aa72 l       .text  00000000 
d000aa72 l       .text  00000000 
d000aa74 l       .text  00000000 
d000aa74 l       .text  00000000 
d000aa78 l       .text  00000000 
d000aa7c l       .text  00000000 
d000aa7c l       .text  00000000 
d000aa7e l       .text  00000000 
d000aa7e l       .text  00000000 
d000aa82 l       .text  00000000 
d000aa86 l       .text  00000000 
d000aa86 l       .text  00000000 
d000aa88 l       .text  00000000 
d000aa88 l       .text  00000000 
d000aa8a l       .text  00000000 
d000aa8a l       .text  00000000 
d000aa8e l       .text  00000000 
d000aa96 l       .text  00000000 
d000aa96 l       .text  00000000 
d000aa98 l       .text  00000000 
d000aa98 l       .text  00000000 
d000aa9a l       .text  00000000 
d000aa9a l       .text  00000000 
d000aaa4 l       .text  00000000 
d000aaa4 l       .text  00000000 
d000aaa6 l       .text  00000000 
d000aaa6 l       .text  00000000 
d000aaa8 l       .text  00000000 
d000aaa8 l       .text  00000000 
d000aaaa l       .text  00000000 
d000aaaa l       .text  00000000 
d000aaae l       .text  00000000 
d000aaae l       .text  00000000 
d000aab6 l       .text  00000000 
d000aaba l       .text  00000000 
d000aaba l       .text  00000000 
d000aabe l       .text  00000000 
d000aabe l       .text  00000000 
d000aac0 l       .text  00000000 
d000aac0 l       .text  00000000 
d000aac8 l       .text  00000000 
d000aaca l       .text  00000000 
d000aaca l       .text  00000000 
d000aaca l       .text  00000000 
d000aaca l       .text  00000000 
d000aaca l       .text  00000000 
d000aacc l       .text  00000000 
d000aadc l       .text  00000000 
d000aae4 l       .text  00000000 
d000aae8 l       .text  00000000 
d000aae8 l       .text  00000000 
d000aaee l       .text  00000000 
d000aaee l       .text  00000000 
d000aaf2 l       .text  00000000 
d000aaf4 l       .text  00000000 
d000aaf4 l       .text  00000000 
d000aaf8 l       .text  00000000 
d000aaf8 l       .text  00000000 
d000aafa l       .text  00000000 
d000aafa l       .text  00000000 
d000aafe l       .text  00000000 
d000aafe l       .text  00000000 
d000ab04 l       .text  00000000 
d000ab04 l       .text  00000000 
d000ab08 l       .text  00000000 
d000ab0c l       .text  00000000 
d000ab0c l       .text  00000000 
d000ab10 l       .text  00000000 
d000ab10 l       .text  00000000 
d000ab12 l       .text  00000000 
d000ab12 l       .text  00000000 
d000ab16 l       .text  00000000 
d000ab16 l       .text  00000000 
d000ab1c l       .text  00000000 
d000ab1c l       .text  00000000 
d000ab20 l       .text  00000000 
d000ab24 l       .text  00000000 
d000ab24 l       .text  00000000 
d000ab28 l       .text  00000000 
d000ab28 l       .text  00000000 
d000ab2a l       .text  00000000 
d000ab2a l       .text  00000000 
d000ab2e l       .text  00000000 
d000ab2e l       .text  00000000 
d000ab32 l       .text  00000000 
d000ab32 l       .text  00000000 
d000ab36 l       .text  00000000 
d000ab3a l       .text  00000000 
d000ab3a l       .text  00000000 
d000ab3e l       .text  00000000 
d000ab3e l       .text  00000000 
d000ab40 l       .text  00000000 
d000ab40 l       .text  00000000 
d000ab44 l       .text  00000000 
d000ab44 l       .text  00000000 
d000ab48 l       .text  00000000 
d000ab48 l       .text  00000000 
d000ab4c l       .text  00000000 
d000ab50 l       .text  00000000 
d000ab50 l       .text  00000000 
d000ab54 l       .text  00000000 
d000ab54 l       .text  00000000 
d000ab56 l       .text  00000000 
d000ab56 l       .text  00000000 
d000ab5a l       .text  00000000 
d000ab5a l       .text  00000000 
d000ab5e l       .text  00000000 
d000ab5e l       .text  00000000 
d000ab62 l       .text  00000000 
d000ab66 l       .text  00000000 
d000ab66 l       .text  00000000 
d000ab6a l       .text  00000000 
d000ab6a l       .text  00000000 
d000ab6c l       .text  00000000 
d000ab6c l       .text  00000000 
d000ab70 l       .text  00000000 
d000ab70 l       .text  00000000 
d000ab82 l       .text  00000000 
d000ab82 l       .text  00000000 
d000ab86 l       .text  00000000 
d000ab86 l       .text  00000000 
d000ab8a l       .text  00000000 
d000ab8a l       .text  00000000 
d000ab8e l       .text  00000000 
d000ab8e l       .text  00000000 
d000ab90 l       .text  00000000 
d000ab92 l       .text  00000000 
d000ab92 l       .text  00000000 
d000ab96 l       .text  00000000 
d000ab96 l       .text  00000000 
d000ab9a l       .text  00000000 
d000ab9a l       .text  00000000 
d000ab9e l       .text  00000000 
d000ab9e l       .text  00000000 
d000aba2 l       .text  00000000 
d000aba2 l       .text  00000000 
d000aba6 l       .text  00000000 
d000aba6 l       .text  00000000 
d000abaa l       .text  00000000 
d000abaa l       .text  00000000 
d000abac l       .text  00000000 
d000abac l       .text  00000000 
d000abb0 l       .text  00000000 
d000abb2 l       .text  00000000 
d000abb2 l       .text  00000000 
d000abb6 l       .text  00000000 
d000abb6 l       .text  00000000 
d000abb8 l       .text  00000000 
d000abb8 l       .text  00000000 
d000abbc l       .text  00000000 
d000abbc l       .text  00000000 
d000abbe l       .text  00000000 
d000abc6 l       .text  00000000 
d000abc6 l       .text  00000000 
d000abca l       .text  00000000 
d000abca l       .text  00000000 
d000abde l       .text  00000000 
d000abde l       .text  00000000 
d000abde l       .text  00000000 
d000abde l       .text  00000000 
d000abde l       .text  00000000 
d000abe0 l       .text  00000000 
d000abe6 l       .text  00000000 
d000abe8 l       .text  00000000 
d000abe8 l       .text  00000000 
d000abea l       .text  00000000 
d000abea l       .text  00000000 
d000abec l       .text  00000000 
d000abec l       .text  00000000 
d000abf4 l       .text  00000000 
d000abf4 l       .text  00000000 
d000abf6 l       .text  00000000 
d000abf6 l       .text  00000000 
d000abfa l       .text  00000000 
d000abfa l       .text  00000000 
d000abfe l       .text  00000000 
d000ac02 l       .text  00000000 
d000ac0a l       .text  00000000 
d000ac0e l       .text  00000000 
d000ac1a l       .text  00000000 
d000ac20 l       .text  00000000 
d000ac28 l       .text  00000000 
d000ac2c l       .text  00000000 
d000ac38 l       .text  00000000 
d000ac3e l       .text  00000000 
d000ac46 l       .text  00000000 
d000ac52 l       .text  00000000 
d000ac58 l       .text  00000000 
d000ac60 l       .text  00000000 
d000ac64 l       .text  00000000 
d000ac70 l       .text  00000000 
d000ac74 l       .text  00000000 
d000ac78 l       .text  00000000 
d000ac7c l       .text  00000000 
d000ac7e l       .text  00000000 
d000ac7e l       .text  00000000 
d000ac80 l       .text  00000000 
d000ac80 l       .text  00000000 
d000ac84 l       .text  00000000 
d000ac84 l       .text  00000000 
d000ac88 l       .text  00000000 
d000ac88 l       .text  00000000 
d000ac96 l       .text  00000000 
d000ac9a l       .text  00000000 
d000ac9e l       .text  00000000 
d000aca0 l       .text  00000000 
d000aca2 l       .text  00000000 
d000aca8 l       .text  00000000 
d000aca8 l       .text  00000000 
d000acb0 l       .text  00000000 
d000acb4 l       .text  00000000 
d000acc4 l       .text  00000000 
d000acc6 l       .text  00000000 
d000acc8 l       .text  00000000 
d000acd0 l       .text  00000000 
d000acd0 l       .text  00000000 
00003c5d l       .debug_loc     00000000 
00003c8e l       .debug_loc     00000000 
00003ce0 l       .debug_loc     00000000 
00003d11 l       .debug_loc     00000000 
00003d42 l       .debug_loc     00000000 
00003d94 l       .debug_loc     00000000 
00003dc5 l       .debug_loc     00000000 
00003e01 l       .debug_loc     00000000 
00003e32 l       .debug_loc     00000000 
00003e8d l       .debug_loc     00000000 
00003efe l       .debug_loc     00000000 
00003f20 l       .debug_loc     00000000 
00003f42 l       .debug_loc     00000000 
00003f64 l       .debug_loc     00000000 
00003f86 l       .debug_loc     00000000 
00003fc5 l       .debug_loc     00000000 
00003ff8 l       .debug_loc     00000000 
00004034 l       .debug_loc     00000000 
00004067 l       .debug_loc     00000000 
000040a5 l       .debug_loc     00000000 
000040d8 l       .debug_loc     00000000 
00004116 l       .debug_loc     00000000 
00004149 l       .debug_loc     00000000 
00004187 l       .debug_loc     00000000 
000041ba l       .debug_loc     00000000 
000041f8 l       .debug_loc     00000000 
0000422b l       .debug_loc     00000000 
00004269 l       .debug_loc     00000000 
00004287 l       .debug_loc     00000000 
000042a2 l       .debug_loc     00000000 
000042bf l       .debug_loc     00000000 
000042f2 l       .debug_loc     00000000 
00004323 l       .debug_loc     00000000 
00004349 l       .debug_loc     00000000 
0000436f l       .debug_loc     00000000 
00004395 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00003303 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00000550 l       .debug_ranges  00000000 
00000bca l       .debug_str     00000000 
000007b6 l       .debug_str     00000000 
000007bf l       .debug_str     00000000 
000007cd l       .debug_str     00000000 
000007ee l       .debug_str     00000000 
00000804 l       .debug_str     00000000 
00000820 l       .debug_str     00000000 
00000835 l       .debug_str     00000000 
00000851 l       .debug_str     00000000 
0000086d l       .debug_str     00000000 
00000881 l       .debug_str     00000000 
00000895 l       .debug_str     00000000 
000008aa l       .debug_str     00000000 
000008c3 l       .debug_str     00000000 
000008d7 l       .debug_str     00000000 
000008eb l       .debug_str     00000000 
000008fb l       .debug_str     00000000 
0000090e l       .debug_str     00000000 
00000928 l       .debug_str     00000000 
0000093f l       .debug_str     00000000 
00000959 l       .debug_str     00000000 
00000975 l       .debug_str     00000000 
00000991 l       .debug_str     00000000 
000009a8 l       .debug_str     00000000 
000009be l       .debug_str     00000000 
000009d6 l       .debug_str     00000000 
000009ee l       .debug_str     00000000 
00000a07 l       .debug_str     00000000 
00000a20 l       .debug_str     00000000 
00000a39 l       .debug_str     00000000 
00000a52 l       .debug_str     00000000 
00000a71 l       .debug_str     00000000 
00000a8f l       .debug_str     00000000 
00000aa9 l       .debug_str     00000000 
00000ac2 l       .debug_str     00000000 
00000ade l       .debug_str     00000000 
00000afc l       .debug_str     00000000 
00000b18 l       .debug_str     00000000 
00000b34 l       .debug_str     00000000 
00000b50 l       .debug_str     00000000 
00000b67 l       .debug_str     00000000 
00000b80 l       .debug_str     00000000 
00000b96 l       .debug_str     00000000 
00000bb5 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
00002f62 l       .debug_str     00000000 
00002f21 l       .debug_str     00000000 
00002f2e l       .debug_str     00000000 
00002f3b l       .debug_str     00000000 
00002f48 l       .debug_str     00000000 
00002f55 l       .debug_str     00000000 
00002ea0 l       .debug_str     00000000 
00002e68 l       .debug_str     00000000 
00002e79 l       .debug_str     00000000 
00002e8d l       .debug_str     00000000 
0000291c l       .debug_str     00000000 
00002f13 l       .debug_str     00000000 
00002eac l       .debug_str     00000000 
00002ebf l       .debug_str     00000000 
00002ed4 l       .debug_str     00000000 
00002ee9 l       .debug_str     00000000 
00002efe l       .debug_str     00000000 
0000339e l       .debug_str     00000000 
00003331 l       .debug_str     00000000 
0001a602 l       .debug_str     00000000 
000033b1 l       .debug_str     00000000 
000033b7 l       .debug_str     00000000 
0000011c l       .debug_str     00000000 
000000da l       .debug_str     00000000 
000000e7 l       .debug_str     00000000 
000000f3 l       .debug_str     00000000 
00000100 l       .debug_str     00000000 
00000110 l       .debug_str     00000000 
000018e3 l       .debug_str     00000000 
0000333c l       .debug_str     00000000 
000000d1 l       .debug_str     00000000 
00001e23 l       .debug_str     00000000 
000033ab l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
00003229 l       .debug_str     00000000 
0001a6a3 l       .debug_str     00000000 
0001bb6e l       .debug_str     00000000 
00002ac2 l       .debug_str     00000000 
000030d2 l       .debug_str     00000000 
000020fd l       .debug_str     00000000 
000030ce l       .debug_str     00000000 
000066f1 l       .debug_str     00000000 
000030e2 l       .debug_str     00000000 
0000129c l       .debug_str     00000000 
000010d4 l       .debug_str     00000000 
00003912 l       .debug_str     00000000 
000012c4 l       .debug_str     00000000 
000012b3 l       .debug_str     00000000 
0001a4da l       .debug_str     00000000 
00001817 l       .debug_str     00000000 
00006501 l       .debug_str     00000000 
0000182c l       .debug_str     00000000 
00001040 l       .debug_str     00000000 
000030f8 l       .debug_str     00000000 
00006392 l       .debug_str     00000000 
0000334c l       .debug_str     00000000 
0001bb62 l       .debug_str     00000000 
0001b267 l       .debug_str     00000000 
00000538 l       .debug_ranges  00000000 
0000338c l       .debug_str     00000000 
0000253c l       .debug_str     00000000 
00003342 l       .debug_str     00000000 
00003350 l       .debug_str     00000000 
0000335f l       .debug_str     00000000 
00003401 l       .debug_str     00000000 
00003368 l       .debug_str     00000000 
00003373 l       .debug_str     00000000 
0000337f l       .debug_str     00000000 
000012d7 l       .debug_str     00000000 
000037aa l       .debug_str     00000000 
0000132c l       .debug_str     00000000 
00001257 l       .debug_str     00000000 
0000309f l       .debug_str     00000000 
0000307f l       .debug_str     00000000 
000032b0 l       .debug_str     00000000 
00003145 l       .debug_str     00000000 
0000310e l       .debug_str     00000000 
00003119 l       .debug_str     00000000 
00003129 l       .debug_str     00000000 
00003138 l       .debug_str     00000000 
0000308e l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
0000012c l       .debug_str     00000000 
00000428 l       .debug_frame   00000000 
d000a8ec l       .text  00000000 
d000a9aa l       .text  00000000 
d000aaca l       .text  00000000 
d000abde l       .text  00000000 
d000acd0 l       .text  00000000 
00000000 l    df *ABS*  00000000 crc32.c
d000acd0 l       .text  00000000 
d000acd0 l       .text  00000000 
d000acd0 l       .text  00000000 
d000acd2 l       .text  00000000 
d000acd4 l       .text  00000000 
d000acd6 l       .text  00000000 
d000acd6 l       .text  00000000 
d000acd6 l       .text  00000000 
d000acd6 l       .text  00000000 
d000acd6 l       .text  00000000 
d000acd8 l       .text  00000000 
d000acec l       .text  00000000 
d000acec l       .text  00000000 
d000acf0 l       .text  00000000 
d000acf0 l       .text  00000000 
d000acf4 l       .text  00000000 
d000acf4 l       .text  00000000 
d000acf8 l       .text  00000000 
d000acfa l       .text  00000000 
d000acfc l       .text  00000000 
d000acfe l       .text  00000000 
d000acfe l       .text  00000000 
d000ad00 l       .text  00000000 
d000ad00 l       .text  00000000 
d000ad02 l       .text  00000000 
d000ad02 l       .text  00000000 
d000ad04 l       .text  00000000 
d000ad08 l       .text  00000000 
d000ad0c l       .text  00000000 
d000ad12 l       .text  00000000 
d000ad12 l       .text  00000000 
d000ad14 l       .text  00000000 
d000ad14 l       .text  00000000 
d000ad18 l       .text  00000000 
d000ad18 l       .text  00000000 
d000ad18 l       .text  00000000 
d000ad18 l       .text  00000000 
d000ad18 l       .text  00000000 
d000ad18 l       .text  00000000 
d000ad1a l       .text  00000000 
d000ad1a l       .text  00000000 
d000ad1e l       .text  00000000 
d000ad20 l       .text  00000000 
d000ad20 l       .text  00000000 
000043bb l       .debug_loc     00000000 
000043d6 l       .debug_loc     00000000 
0000440f l       .debug_loc     00000000 
0000442a l       .debug_loc     00000000 
00004445 l       .debug_loc     00000000 
00004460 l       .debug_loc     00000000 
00004499 l       .debug_loc     00000000 
000044bf l       .debug_loc     00000000 
000044e5 l       .debug_loc     00000000 
0000450b l       .debug_loc     00000000 
00004526 l       .debug_loc     00000000 
00004541 l       .debug_loc     00000000 
0000457a l       .debug_loc     00000000 
00004595 l       .debug_loc     00000000 
000045ce l       .debug_loc     00000000 
000045e9 l       .debug_loc     00000000 
0000460f l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
000033c3 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00000608 l       .debug_ranges  00000000 
000033e9 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000001c9 l       .debug_str     00000000 
00000fc6 l       .debug_str     00000000 
00000588 l       .debug_ranges  00000000 
000033f4 l       .debug_str     00000000 
0001a602 l       .debug_str     00000000 
00006841 l       .debug_str     00000000 
0001b267 l       .debug_str     00000000 
0000286a l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
000001ce l       .debug_str     00000000 
000001c0 l       .debug_str     00000000 
00003401 l       .debug_str     00000000 
000033ff l       .debug_str     00000000 
00001040 l       .debug_str     00000000 
00003373 l       .debug_str     00000000 
00001ab1 l       .debug_str     00000000 
0001bbd7 l       .debug_str     00000000 
000005a0 l       .debug_ranges  00000000 
0000219f l       .debug_str     00000000 
0001b17a l       .debug_str     00000000 
000037aa l       .debug_str     00000000 
00003408 l       .debug_str     00000000 
0000122b l       .debug_str     00000000 
0001aa41 l       .debug_str     00000000 
00001937 l       .debug_str     00000000 
000005b8 l       .debug_ranges  00000000 
000005d8 l       .debug_ranges  00000000 
000005f0 l       .debug_ranges  00000000 
00003368 l       .debug_str     00000000 
0000337f l       .debug_str     00000000 
000033ab l       .debug_str     00000000 
000004bc l       .debug_frame   00000000 
d000acd6 l       .text  00000000 
d000ad18 l       .text  00000000 
d000ad20 l       .text  00000000 
00000000 l    df *ABS*  00000000 ast.c
d000ad20 l       .text  00000000 
d000ad20 l       .text  00000000 
d000ad20 l       .text  00000000 
d000ad22 l       .text  00000000 
d000ad22 l       .text  00000000 
d000ad22 l       .text  00000000 
d000ad24 l       .text  00000000 
d000ad26 l       .text  00000000 
d000ad26 l       .text  00000000 
d000ad2e l       .text  00000000 
d000ad2e l       .text  00000000 
d000ad32 l       .text  00000000 
d000ad32 l       .text  00000000 
d000ad36 l       .text  00000000 
d000ad3a l       .text  00000000 
d000ad42 l       .text  00000000 
d000ad46 l       .text  00000000 
d000ad54 l       .text  00000000 
d000ad5c l       .text  00000000 
d000ad60 l       .text  00000000 
d000ad6e l       .text  00000000 
d000ad76 l       .text  00000000 
d000ad84 l       .text  00000000 
d000ad8c l       .text  00000000 
d000ad90 l       .text  00000000 
d000ad9c l       .text  00000000 
d000ada0 l       .text  00000000 
d000ada4 l       .text  00000000 
d000ada4 l       .text  00000000 
d000ada6 l       .text  00000000 
d000ada6 l       .text  00000000 
d000ada8 l       .text  00000000 
d000ada8 l       .text  00000000 
d000adac l       .text  00000000 
d000adac l       .text  00000000 
d000adba l       .text  00000000 
d000adba l       .text  00000000 
d000adbe l       .text  00000000 
d000adbe l       .text  00000000 
d000add6 l       .text  00000000 
d000add6 l       .text  00000000 
d000adda l       .text  00000000 
d000adda l       .text  00000000 
d000addc l       .text  00000000 
d000addc l       .text  00000000 
d000ade4 l       .text  00000000 
d000ade4 l       .text  00000000 
d000ade6 l       .text  00000000 
d000adea l       .text  00000000 
d000adea l       .text  00000000 
d000adec l       .text  00000000 
d000adec l       .text  00000000 
d000adf2 l       .text  00000000 
d000adf6 l       .text  00000000 
d000adf6 l       .text  00000000 
d000ae02 l       .text  00000000 
d000ae02 l       .text  00000000 
d000ae06 l       .text  00000000 
d000ae08 l       .text  00000000 
d000ae14 l       .text  00000000 
d000ae1c l       .text  00000000 
d000ae20 l       .text  00000000 
d000ae2c l       .text  00000000 
d000ae2c l       .text  00000000 
d000ae30 l       .text  00000000 
d000ae36 l       .text  00000000 
d000ae36 l       .text  00000000 
d000ae3e l       .text  00000000 
d000ae3e l       .text  00000000 
00004635 l       .debug_loc     00000000 
00004666 l       .debug_loc     00000000 
0000468c l       .debug_loc     00000000 
000046b2 l       .debug_loc     00000000 
000046cd l       .debug_loc     00000000 
00004703 l       .debug_loc     00000000 
00004737 l       .debug_loc     00000000 
00004752 l       .debug_loc     00000000 
0000476d l       .debug_loc     00000000 
00004796 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00003412 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00000640 l       .debug_ranges  00000000 
00000bca l       .debug_str     00000000 
000007b6 l       .debug_str     00000000 
000007bf l       .debug_str     00000000 
000007cd l       .debug_str     00000000 
000007ee l       .debug_str     00000000 
00000804 l       .debug_str     00000000 
00000820 l       .debug_str     00000000 
00000835 l       .debug_str     00000000 
00000851 l       .debug_str     00000000 
0000086d l       .debug_str     00000000 
00000881 l       .debug_str     00000000 
00000895 l       .debug_str     00000000 
000008aa l       .debug_str     00000000 
000008c3 l       .debug_str     00000000 
000008d7 l       .debug_str     00000000 
000008eb l       .debug_str     00000000 
000008fb l       .debug_str     00000000 
0000090e l       .debug_str     00000000 
00000928 l       .debug_str     00000000 
0000093f l       .debug_str     00000000 
00000959 l       .debug_str     00000000 
00000975 l       .debug_str     00000000 
00000991 l       .debug_str     00000000 
000009a8 l       .debug_str     00000000 
000009be l       .debug_str     00000000 
000009d6 l       .debug_str     00000000 
000009ee l       .debug_str     00000000 
00000a07 l       .debug_str     00000000 
00000a20 l       .debug_str     00000000 
00000a39 l       .debug_str     00000000 
00000a52 l       .debug_str     00000000 
00000a71 l       .debug_str     00000000 
00000a8f l       .debug_str     00000000 
00000aa9 l       .debug_str     00000000 
00000ac2 l       .debug_str     00000000 
00000ade l       .debug_str     00000000 
00000afc l       .debug_str     00000000 
00000b18 l       .debug_str     00000000 
00000b34 l       .debug_str     00000000 
00000b50 l       .debug_str     00000000 
00000b67 l       .debug_str     00000000 
00000b80 l       .debug_str     00000000 
00000b96 l       .debug_str     00000000 
00000bb5 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
0000011c l       .debug_str     00000000 
000000da l       .debug_str     00000000 
000000e7 l       .debug_str     00000000 
000000f3 l       .debug_str     00000000 
00000100 l       .debug_str     00000000 
00000110 l       .debug_str     00000000 
00001f84 l       .debug_str     00000000 
00001ee4 l       .debug_str     00000000 
00001ef7 l       .debug_str     00000000 
00001f0b l       .debug_str     00000000 
00001f1e l       .debug_str     00000000 
00001f32 l       .debug_str     00000000 
00001f46 l       .debug_str     00000000 
00001f5b l       .debug_str     00000000 
00001f6f l       .debug_str     00000000 
00000bf9 l       .debug_str     00000000 
00000bd4 l       .debug_str     00000000 
00000be6 l       .debug_str     00000000 
0000291c l       .debug_str     00000000 
00001257 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
000012d7 l       .debug_str     00000000 
000037aa l       .debug_str     00000000 
0000253c l       .debug_str     00000000 
0001a6a3 l       .debug_str     00000000 
0000343e l       .debug_str     00000000 
0000334c l       .debug_str     00000000 
00001040 l       .debug_str     00000000 
0000344b l       .debug_str     00000000 
00001e23 l       .debug_str     00000000 
00001a24 l       .debug_str     00000000 
000025c4 l       .debug_str     00000000 
000010d4 l       .debug_str     00000000 
00006501 l       .debug_str     00000000 
0000182c l       .debug_str     00000000 
000013a5 l       .debug_str     00000000 
000000d1 l       .debug_str     00000000 
00002ffe l       .debug_str     00000000 
000031d1 l       .debug_str     00000000 
0000344f l       .debug_str     00000000 
0000132c l       .debug_str     00000000 
0000012c l       .debug_str     00000000 
0000054c l       .debug_frame   00000000 
d000ae3e l       .text  00000000 
00000000 l    df *ABS*  00000000 flash_ctrl.c
d000ae3e l       .text  00000000 
d000ae3e l       .text  00000000 
d000ae3e l       .text  00000000 
d000ae40 l       .text  00000000 
d000ae48 l       .text  00000000 
d000ae4e l       .text  00000000 
d000ae4e l       .text  00000000 
d000ae50 l       .text  00000000 
d000ae50 l       .text  00000000 
d000ae58 l       .text  00000000 
d000ae58 l       .text  00000000 
d000ae5c l       .text  00000000 
d000ae5c l       .text  00000000 
d000ae60 l       .text  00000000 
d000ae64 l       .text  00000000 
d000ae64 l       .text  00000000 
d000ae66 l       .text  00000000 
d000ae66 l       .text  00000000 
d000ae6a l       .text  00000000 
d000ae6a l       .text  00000000 
d000ae72 l       .text  00000000 
d000ae74 l       .text  00000000 
d000ae74 l       .text  00000000 
d000ae7c l       .text  00000000 
d000ae7c l       .text  00000000 
d000ae80 l       .text  00000000 
d000ae80 l       .text  00000000 
d000ae84 l       .text  00000000 
d000ae88 l       .text  00000000 
d000ae88 l       .text  00000000 
d000ae8a l       .text  00000000 
d000ae8a l       .text  00000000 
d000ae8e l       .text  00000000 
d000ae8e l       .text  00000000 
d000aea0 l       .text  00000000 
d000aea0 l       .text  00000000 
d000aeb2 l       .text  00000000 
d000aeb2 l       .text  00000000 
d000aeb4 l       .text  00000000 
d000aeb6 l       .text  00000000 
d000aeb8 l       .text  00000000 
d000aebe l       .text  00000000 
d000aebe l       .text  00000000 
d000aebe l       .text  00000000 
d000aebe l       .text  00000000 
d000aebe l       .text  00000000 
d000aec0 l       .text  00000000 
d000aec6 l       .text  00000000 
d000aec8 l       .text  00000000 
d000aed0 l       .text  00000000 
d000aed6 l       .text  00000000 
d000aed6 l       .text  00000000 
d000aede l       .text  00000000 
d000aede l       .text  00000000 
d000aee0 l       .text  00000000 
d000aee0 l       .text  00000000 
d000aee2 l       .text  00000000 
d000aee2 l       .text  00000000 
d000aee4 l       .text  00000000 
d000aee4 l       .text  00000000 
d000aee6 l       .text  00000000 
d000aee8 l       .text  00000000 
d000aee8 l       .text  00000000 
d000aeea l       .text  00000000 
d000aeea l       .text  00000000 
d000aeec l       .text  00000000 
d000aeee l       .text  00000000 
d000aeee l       .text  00000000 
d000aef0 l       .text  00000000 
d000aef0 l       .text  00000000 
d000aef2 l       .text  00000000 
d000aef4 l       .text  00000000 
d000aef6 l       .text  00000000 
d000aef6 l       .text  00000000 
d000aefc l       .text  00000000 
d000af04 l       .text  00000000 
d000af04 l       .text  00000000 
d000af04 l       .text  00000000 
d000af04 l       .text  00000000 
d000af04 l       .text  00000000 
d000af04 l       .text  00000000 
d000af06 l       .text  00000000 
d000af0c l       .text  00000000 
d000af0e l       .text  00000000 
d000b522 l     F .text  00000366 info_cfg_regs
d000af0e l       .text  00000000 
d000af10 l       .text  00000000 
d000af12 l       .text  00000000 
d000af12 l       .text  00000000 
d000af18 l       .text  00000000 
d000af18 l       .text  00000000 
d000af1c l       .text  00000000 
d000af20 l       .text  00000000 
d000af20 l       .text  00000000 
d000af22 l       .text  00000000 
d000af22 l       .text  00000000 
d000af24 l       .text  00000000 
d000af24 l       .text  00000000 
d000af26 l       .text  00000000 
d000af26 l       .text  00000000 
d000af28 l       .text  00000000 
d000af28 l       .text  00000000 
d000af2a l       .text  00000000 
d000af2a l       .text  00000000 
d000af2c l       .text  00000000 
d000af2e l       .text  00000000 
d000af2e l       .text  00000000 
d000af30 l       .text  00000000 
d000af32 l       .text  00000000 
d000af32 l       .text  00000000 
d000af34 l       .text  00000000 
d000af34 l       .text  00000000 
d000af3c l       .text  00000000 
d000af3c l       .text  00000000 
d000af40 l       .text  00000000 
d000af42 l       .text  00000000 
d000af4a l       .text  00000000 
d000af4a l       .text  00000000 
d000af4a l       .text  00000000 
d000af4a l     F .text  0000007c transaction_start
d000af4a l       .text  00000000 
d000af4a l       .text  00000000 
d000af4a l       .text  00000000 
d000af4a l       .text  00000000 
d000af50 l       .text  00000000 
d000af50 l       .text  00000000 
d000af52 l       .text  00000000 
d000af52 l       .text  00000000 
d000af54 l       .text  00000000 
d000af56 l       .text  00000000 
d000af56 l       .text  00000000 
d000af56 l       .text  00000000 
d000af5e l       .text  00000000 
d000af5e l       .text  00000000 
d000af62 l       .text  00000000 
d000af72 l       .text  00000000 
d000af72 l       .text  00000000 
d000af74 l       .text  00000000 
d000af7c l       .text  00000000 
d000af80 l       .text  00000000 
d000af92 l       .text  00000000 
d000af92 l       .text  00000000 
d000af94 l       .text  00000000 
d000af96 l       .text  00000000 
d000af96 l       .text  00000000 
d000af98 l       .text  00000000 
d000af9c l       .text  00000000 
d000af9c l       .text  00000000 
d000af9e l       .text  00000000 
d000af9e l       .text  00000000 
d000afa0 l       .text  00000000 
d000afa0 l       .text  00000000 
d000afa4 l       .text  00000000 
d000afa8 l       .text  00000000 
d000afa8 l       .text  00000000 
d000afac l       .text  00000000 
d000afac l       .text  00000000 
d000afae l       .text  00000000 
d000afae l       .text  00000000 
d000afb0 l       .text  00000000 
d000afb0 l       .text  00000000 
d000afb6 l       .text  00000000 
d000afb6 l       .text  00000000 
d000afba l       .text  00000000 
d000afba l       .text  00000000 
d000afbc l       .text  00000000 
d000afbc l       .text  00000000 
d000afbe l       .text  00000000 
d000afbe l       .text  00000000 
d000afc6 l       .text  00000000 
d000afc6 l       .text  00000000 
d000afc6 l       .text  00000000 
d000afc6 l       .text  00000000 
d000afc6 l       .text  00000000 
d000afc8 l       .text  00000000 
d000afd0 l       .text  00000000 
d000afd2 l       .text  00000000 
d000afd4 l       .text  00000000 
d000afd6 l       .text  00000000 
d000b038 l     F .text  000002a4 info_page_addr
d000afd6 l       .text  00000000 
d000afd8 l       .text  00000000 
d000afd8 l       .text  00000000 
d000afda l       .text  00000000 
d000afda l       .text  00000000 
d000afe2 l       .text  00000000 
d000afe2 l       .text  00000000 
d000afe6 l       .text  00000000 
d000aff2 l       .text  00000000 
d000aff2 l       .text  00000000 
d000aff4 l       .text  00000000 
d000aff8 l       .text  00000000 
d000aff8 l       .text  00000000 
d000affc l       .text  00000000 
d000affc l       .text  00000000 
d000affe l       .text  00000000 
d000affe l       .text  00000000 
d000b000 l       .text  00000000 
d000b002 l       .text  00000000 
d000b004 l       .text  00000000 
d000b004 l       .text  00000000 
d000b008 l       .text  00000000 
d000b008 l       .text  00000000 
d000b00c l       .text  00000000 
d000b00c l       .text  00000000 
d000b010 l       .text  00000000 
d000b010 l       .text  00000000 
d000b012 l       .text  00000000 
d000b016 l       .text  00000000 
d000b016 l       .text  00000000 
d000b01a l       .text  00000000 
d000b01a l       .text  00000000 
d000b022 l       .text  00000000 
d000b022 l       .text  00000000 
d000b024 l       .text  00000000 
d000b02c l       .text  00000000 
d000b02e l       .text  00000000 
d000b038 l       .text  00000000 
d000b038 l       .text  00000000 
d000b038 l       .text  00000000 
d000b038 l       .text  00000000 
d000b038 l       .text  00000000 
d000b038 l       .text  00000000 
d000b03a l       .text  00000000 
d000b03a l       .text  00000000 
d000b042 l       .text  00000000 
d000b042 l       .text  00000000 
d000b046 l       .text  00000000 
d000b046 l       .text  00000000 
d000b04e l       .text  00000000 
d000b052 l       .text  00000000 
d000b05a l       .text  00000000 
d000b05e l       .text  00000000 
d000b062 l       .text  00000000 
d000b066 l       .text  00000000 
d000b06e l       .text  00000000 
d000b072 l       .text  00000000 
d000b072 l       .text  00000000 
d000b072 l       .text  00000000 
d000b072 l       .text  00000000 
d000b082 l       .text  00000000 
d000b082 l       .text  00000000 
d000b08a l       .text  00000000 
d000b08e l       .text  00000000 
d000b096 l       .text  00000000 
d000b09a l       .text  00000000 
d000b09e l       .text  00000000 
d000b0a2 l       .text  00000000 
d000b0aa l       .text  00000000 
d000b0ae l       .text  00000000 
d000b0ae l       .text  00000000 
d000b0ae l       .text  00000000 
d000b0ae l       .text  00000000 
d000b0be l       .text  00000000 
d000b0be l       .text  00000000 
d000b0c6 l       .text  00000000 
d000b0ca l       .text  00000000 
d000b0ce l       .text  00000000 
d000b0d2 l       .text  00000000 
d000b0da l       .text  00000000 
d000b0de l       .text  00000000 
d000b0de l       .text  00000000 
d000b0de l       .text  00000000 
d000b0de l       .text  00000000 
d000b0ee l       .text  00000000 
d000b0ee l       .text  00000000 
d000b0f6 l       .text  00000000 
d000b0fa l       .text  00000000 
d000b0fe l       .text  00000000 
d000b102 l       .text  00000000 
d000b10a l       .text  00000000 
d000b10e l       .text  00000000 
d000b10e l       .text  00000000 
d000b10e l       .text  00000000 
d000b10e l       .text  00000000 
d000b11e l       .text  00000000 
d000b11e l       .text  00000000 
d000b126 l       .text  00000000 
d000b12a l       .text  00000000 
d000b12c l       .text  00000000 
d000b12c l       .text  00000000 
d000b12c l       .text  00000000 
d000b12c l       .text  00000000 
d000b13a l       .text  00000000 
d000b13a l       .text  00000000 
d000b142 l       .text  00000000 
d000b146 l       .text  00000000 
d000b146 l       .text  00000000 
d000b146 l       .text  00000000 
d000b146 l       .text  00000000 
d000b156 l       .text  00000000 
d000b156 l       .text  00000000 
d000b15e l       .text  00000000 
d000b162 l       .text  00000000 
d000b162 l       .text  00000000 
d000b162 l       .text  00000000 
d000b162 l       .text  00000000 
d000b172 l       .text  00000000 
d000b172 l       .text  00000000 
d000b17a l       .text  00000000 
d000b17e l       .text  00000000 
d000b17e l       .text  00000000 
d000b17e l       .text  00000000 
d000b17e l       .text  00000000 
d000b18e l       .text  00000000 
d000b18e l       .text  00000000 
d000b18e l       .text  00000000 
d000b18e l       .text  00000000 
d000b196 l       .text  00000000 
d000b196 l       .text  00000000 
d000b1a4 l       .text  00000000 
d000b1a6 l       .text  00000000 
d000b1a6 l       .text  00000000 
d000b1a6 l       .text  00000000 
d000b1a6 l       .text  00000000 
d000b1ae l       .text  00000000 
d000b1ae l       .text  00000000 
d000b1be l       .text  00000000 
d000b1be l       .text  00000000 
d000b1be l       .text  00000000 
d000b1be l       .text  00000000 
d000b1c6 l       .text  00000000 
d000b1c6 l       .text  00000000 
d000b1d6 l       .text  00000000 
d000b1d6 l       .text  00000000 
d000b1d6 l       .text  00000000 
d000b1d6 l       .text  00000000 
d000b1de l       .text  00000000 
d000b1de l       .text  00000000 
d000b1ec l       .text  00000000 
d000b1ee l       .text  00000000 
d000b1f6 l       .text  00000000 
d000b1fa l       .text  00000000 
d000b1fa l       .text  00000000 
d000b1fa l       .text  00000000 
d000b1fa l       .text  00000000 
d000b20a l       .text  00000000 
d000b20a l       .text  00000000 
d000b212 l       .text  00000000 
d000b216 l       .text  00000000 
d000b216 l       .text  00000000 
d000b216 l       .text  00000000 
d000b216 l       .text  00000000 
d000b226 l       .text  00000000 
d000b226 l       .text  00000000 
d000b22e l       .text  00000000 
d000b232 l       .text  00000000 
d000b232 l       .text  00000000 
d000b232 l       .text  00000000 
d000b232 l       .text  00000000 
d000b242 l       .text  00000000 
d000b242 l       .text  00000000 
d000b24a l       .text  00000000 
d000b24e l       .text  00000000 
d000b24e l       .text  00000000 
d000b24e l       .text  00000000 
d000b24e l       .text  00000000 
d000b25e l       .text  00000000 
d000b25e l       .text  00000000 
d000b266 l       .text  00000000 
d000b26a l       .text  00000000 
d000b26a l       .text  00000000 
d000b26a l       .text  00000000 
d000b26a l       .text  00000000 
d000b27a l       .text  00000000 
d000b27a l       .text  00000000 
d000b282 l       .text  00000000 
d000b286 l       .text  00000000 
d000b286 l       .text  00000000 
d000b286 l       .text  00000000 
d000b286 l       .text  00000000 
d000b296 l       .text  00000000 
d000b296 l       .text  00000000 
d000b29e l       .text  00000000 
d000b2a2 l       .text  00000000 
d000b2a2 l       .text  00000000 
d000b2a2 l       .text  00000000 
d000b2a2 l       .text  00000000 
d000b2b2 l       .text  00000000 
d000b2b2 l       .text  00000000 
d000b2ba l       .text  00000000 
d000b2be l       .text  00000000 
d000b2be l       .text  00000000 
d000b2be l       .text  00000000 
d000b2be l       .text  00000000 
d000b2cc l       .text  00000000 
d000b2d0 l       .text  00000000 
d000b2d4 l       .text  00000000 
d000b2d4 l       .text  00000000 
d000b2dc l       .text  00000000 
d000b2dc l       .text  00000000 
d000b2dc l       .text  00000000 
d000b2dc l       .text  00000000 
d000b2dc l       .text  00000000 
d000b2e6 l       .text  00000000 
d000b2e8 l       .text  00000000 
d000b2e8 l       .text  00000000 
d000b2ec l     F .text  000000ae write
d000b2ec l       .text  00000000 
d000b2ec l       .text  00000000 
d000b2ec l       .text  00000000 
d000b2ec l       .text  00000000 
d000b2ec l       .text  00000000 
d000b2ec l       .text  00000000 
d000b2ee l       .text  00000000 
d000b2ee l       .text  00000000 
d000b302 l       .text  00000000 
d000b302 l       .text  00000000 
d000b304 l       .text  00000000 
d000b306 l       .text  00000000 
d000b308 l       .text  00000000 
d000b30a l       .text  00000000 
d000b30c l       .text  00000000 
d000b30e l       .text  00000000 
d000b310 l       .text  00000000 
d000b310 l       .text  00000000 
d000b312 l       .text  00000000 
d000b312 l       .text  00000000 
d000b314 l       .text  00000000 
d000b318 l       .text  00000000 
d000b318 l       .text  00000000 
d000b326 l       .text  00000000 
d000b328 l       .text  00000000 
d000b32c l       .text  00000000 
d000b32e l       .text  00000000 
d000b32e l       .text  00000000 
d000b33c l       .text  00000000 
d000b33c l       .text  00000000 
d000b340 l       .text  00000000 
d000b340 l       .text  00000000 
d000b342 l       .text  00000000 
d000b342 l       .text  00000000 
d000b346 l       .text  00000000 
d000b346 l       .text  00000000 
d000b348 l       .text  00000000 
d000b34a l       .text  00000000 
d000b34c l       .text  00000000 
d000b34c l       .text  00000000 
d000b350 l       .text  00000000 
d000b350 l       .text  00000000 
d000b354 l       .text  00000000 
d000b354 l       .text  00000000 
d000b356 l       .text  00000000 
d000b356 l       .text  00000000 
d000b35a l       .text  00000000 
d000b35a l       .text  00000000 
d000b366 l       .text  00000000 
d000b366 l       .text  00000000 
d000b368 l       .text  00000000 
d000b36e l       .text  00000000 
d000b372 l       .text  00000000 
d000b374 l       .text  00000000 
d000b376 l       .text  00000000 
d000b37a l       .text  00000000 
d000b37c l       .text  00000000 
d000b37c l       .text  00000000 
d000b37e l       .text  00000000 
d000b37e l       .text  00000000 
d000b382 l       .text  00000000 
d000b39a l       .text  00000000 
d000b39a l       .text  00000000 
d000b39a l       .text  00000000 
d000b39a l       .text  00000000 
d000b39a l       .text  00000000 
d000b39c l       .text  00000000 
d000b39c l       .text  00000000 
d000b39e l       .text  00000000 
d000b3a2 l       .text  00000000 
d000b3b0 l       .text  00000000 
d000b3b0 l       .text  00000000 
d000b3b4 l       .text  00000000 
d000b3b4 l       .text  00000000 
d000b3b8 l       .text  00000000 
d000b3b8 l       .text  00000000 
d000b3bc l       .text  00000000 
d000b3bc l       .text  00000000 
d000b3be l       .text  00000000 
d000b3c2 l       .text  00000000 
d000b3c2 l       .text  00000000 
d000b3c6 l       .text  00000000 
d000b3c6 l       .text  00000000 
d000b3ce l       .text  00000000 
d000b3ce l       .text  00000000 
d000b3d0 l       .text  00000000 
d000b3d8 l       .text  00000000 
d000b3de l       .text  00000000 
d000b3de l       .text  00000000 
d000b3de l       .text  00000000 
d000b3de l       .text  00000000 
d000b3de l       .text  00000000 
d000b3de l       .text  00000000 
d000b3e0 l       .text  00000000 
d000b3e0 l       .text  00000000 
d000b3e8 l       .text  00000000 
d000b3e8 l       .text  00000000 
d000b3ec l       .text  00000000 
d000b3ec l       .text  00000000 
d000b3fc l       .text  00000000 
d000b3fc l       .text  00000000 
d000b402 l       .text  00000000 
d000b404 l       .text  00000000 
d000b40c l       .text  00000000 
d000b410 l       .text  00000000 
d000b422 l       .text  00000000 
d000b422 l       .text  00000000 
d000b424 l       .text  00000000 
d000b424 l       .text  00000000 
d000b426 l       .text  00000000 
d000b426 l       .text  00000000 
d000b42a l       .text  00000000 
d000b42a l       .text  00000000 
d000b432 l       .text  00000000 
d000b436 l       .text  00000000 
d000b43a l       .text  00000000 
d000b43a l       .text  00000000 
d000b43e l       .text  00000000 
d000b440 l       .text  00000000 
d000b440 l       .text  00000000 
d000b442 l       .text  00000000 
d000b442 l       .text  00000000 
d000b444 l       .text  00000000 
d000b444 l       .text  00000000 
d000b446 l       .text  00000000 
d000b446 l       .text  00000000 
d000b448 l       .text  00000000 
d000b448 l       .text  00000000 
d000b44e l       .text  00000000 
d000b44e l       .text  00000000 
d000b452 l       .text  00000000 
d000b452 l       .text  00000000 
d000b45e l       .text  00000000 
d000b45e l       .text  00000000 
d000b460 l       .text  00000000 
d000b460 l       .text  00000000 
d000b464 l       .text  00000000 
d000b464 l       .text  00000000 
d000b46c l       .text  00000000 
d000b46e l       .text  00000000 
d000b470 l       .text  00000000 
d000b47c l       .text  00000000 
d000b480 l       .text  00000000 
d000b482 l       .text  00000000 
d000b484 l       .text  00000000 
d000b484 l       .text  00000000 
d000b48c l       .text  00000000 
d000b48c l       .text  00000000 
d000b48c l       .text  00000000 
d000b48c l       .text  00000000 
d000b48c l       .text  00000000 
d000b494 l       .text  00000000 
d000b494 l       .text  00000000 
d000b498 l       .text  00000000 
d000b49c l       .text  00000000 
d000b49c l       .text  00000000 
d000b49c l       .text  00000000 
d000b49c l       .text  00000000 
d000b49c l       .text  00000000 
d000b49c l       .text  00000000 
d000b49e l       .text  00000000 
d000b4a4 l       .text  00000000 
d000b4a6 l       .text  00000000 
d000b4ae l       .text  00000000 
d000b4b4 l       .text  00000000 
d000b4b4 l       .text  00000000 
d000b4b8 l       .text  00000000 
d000b4b8 l       .text  00000000 
d000b4ba l       .text  00000000 
d000b4ba l       .text  00000000 
d000b4bc l       .text  00000000 
d000b4bc l       .text  00000000 
d000b4be l       .text  00000000 
d000b4c0 l       .text  00000000 
d000b4c0 l       .text  00000000 
d000b4c2 l       .text  00000000 
d000b4c2 l       .text  00000000 
d000b4c4 l       .text  00000000 
d000b4c8 l       .text  00000000 
d000b4ca l       .text  00000000 
d000b4ca l       .text  00000000 
d000b4cc l       .text  00000000 
d000b4ce l       .text  00000000 
d000b4d0 l       .text  00000000 
d000b4d0 l       .text  00000000 
d000b4d6 l       .text  00000000 
d000b4de l       .text  00000000 
d000b4de l       .text  00000000 
d000b4de l       .text  00000000 
d000b4de l       .text  00000000 
d000b4de l       .text  00000000 
d000b4de l       .text  00000000 
d000b4e0 l       .text  00000000 
d000b4e6 l       .text  00000000 
d000b4e8 l       .text  00000000 
d000b4e8 l       .text  00000000 
d000b4ea l       .text  00000000 
d000b4ec l       .text  00000000 
d000b4ec l       .text  00000000 
d000b4f2 l       .text  00000000 
d000b4f2 l       .text  00000000 
d000b4f6 l       .text  00000000 
d000b4f6 l       .text  00000000 
d000b4f8 l       .text  00000000 
d000b4f8 l       .text  00000000 
d000b4fa l       .text  00000000 
d000b4fa l       .text  00000000 
d000b4fc l       .text  00000000 
d000b4fc l       .text  00000000 
d000b4fe l       .text  00000000 
d000b4fe l       .text  00000000 
d000b502 l       .text  00000000 
d000b502 l       .text  00000000 
d000b504 l       .text  00000000 
d000b506 l       .text  00000000 
d000b506 l       .text  00000000 
d000b508 l       .text  00000000 
d000b50a l       .text  00000000 
d000b50a l       .text  00000000 
d000b50c l       .text  00000000 
d000b50c l       .text  00000000 
d000b514 l       .text  00000000 
d000b514 l       .text  00000000 
d000b518 l       .text  00000000 
d000b51a l       .text  00000000 
d000b522 l       .text  00000000 
d000b522 l       .text  00000000 
d000b522 l       .text  00000000 
d000b522 l       .text  00000000 
d000b522 l       .text  00000000 
d000b522 l       .text  00000000 
d000b522 l       .text  00000000 
d000b524 l       .text  00000000 
d000b524 l       .text  00000000 
d000b52c l       .text  00000000 
d000b52c l       .text  00000000 
d000b530 l       .text  00000000 
d000b530 l       .text  00000000 
d000b538 l       .text  00000000 
d000b53c l       .text  00000000 
d000b544 l       .text  00000000 
d000b548 l       .text  00000000 
d000b54c l       .text  00000000 
d000b550 l       .text  00000000 
d000b558 l       .text  00000000 
d000b55c l       .text  00000000 
d000b55c l       .text  00000000 
d000b55c l       .text  00000000 
d000b55c l       .text  00000000 
d000b574 l       .text  00000000 
d000b576 l       .text  00000000 
d000b576 l       .text  00000000 
d000b57e l       .text  00000000 
d000b582 l       .text  00000000 
d000b58a l       .text  00000000 
d000b58e l       .text  00000000 
d000b592 l       .text  00000000 
d000b596 l       .text  00000000 
d000b59e l       .text  00000000 
d000b5a2 l       .text  00000000 
d000b5a2 l       .text  00000000 
d000b5a2 l       .text  00000000 
d000b5a2 l       .text  00000000 
d000b5ba l       .text  00000000 
d000b5bc l       .text  00000000 
d000b5bc l       .text  00000000 
d000b5c4 l       .text  00000000 
d000b5c8 l       .text  00000000 
d000b5cc l       .text  00000000 
d000b5d0 l       .text  00000000 
d000b5d8 l       .text  00000000 
d000b5dc l       .text  00000000 
d000b5dc l       .text  00000000 
d000b5dc l       .text  00000000 
d000b5dc l       .text  00000000 
d000b5f4 l       .text  00000000 
d000b5f6 l       .text  00000000 
d000b5f6 l       .text  00000000 
d000b5fe l       .text  00000000 
d000b602 l       .text  00000000 
d000b606 l       .text  00000000 
d000b60a l       .text  00000000 
d000b612 l       .text  00000000 
d000b616 l       .text  00000000 
d000b616 l       .text  00000000 
d000b616 l       .text  00000000 
d000b616 l       .text  00000000 
d000b62e l       .text  00000000 
d000b630 l       .text  00000000 
d000b630 l       .text  00000000 
d000b638 l       .text  00000000 
d000b63c l       .text  00000000 
d000b63c l       .text  00000000 
d000b63c l       .text  00000000 
d000b63c l       .text  00000000 
d000b654 l       .text  00000000 
d000b656 l       .text  00000000 
d000b656 l       .text  00000000 
d000b65e l       .text  00000000 
d000b662 l       .text  00000000 
d000b662 l       .text  00000000 
d000b662 l       .text  00000000 
d000b662 l       .text  00000000 
d000b67a l       .text  00000000 
d000b67c l       .text  00000000 
d000b67c l       .text  00000000 
d000b684 l       .text  00000000 
d000b688 l       .text  00000000 
d000b688 l       .text  00000000 
d000b688 l       .text  00000000 
d000b688 l       .text  00000000 
d000b6a0 l       .text  00000000 
d000b6a2 l       .text  00000000 
d000b6a2 l       .text  00000000 
d000b6aa l       .text  00000000 
d000b6ae l       .text  00000000 
d000b6ae l       .text  00000000 
d000b6ae l       .text  00000000 
d000b6ae l       .text  00000000 
d000b6c6 l       .text  00000000 
d000b6c8 l       .text  00000000 
d000b6c8 l       .text  00000000 
d000b6c8 l       .text  00000000 
d000b6c8 l       .text  00000000 
d000b6d0 l       .text  00000000 
d000b6d0 l       .text  00000000 
d000b6e0 l       .text  00000000 
d000b6e8 l       .text  00000000 
d000b6ea l       .text  00000000 
d000b6ea l       .text  00000000 
d000b6ea l       .text  00000000 
d000b6ea l       .text  00000000 
d000b6f2 l       .text  00000000 
d000b6f2 l       .text  00000000 
d000b702 l       .text  00000000 
d000b70a l       .text  00000000 
d000b70c l       .text  00000000 
d000b70c l       .text  00000000 
d000b70c l       .text  00000000 
d000b70c l       .text  00000000 
d000b714 l       .text  00000000 
d000b714 l       .text  00000000 
d000b724 l       .text  00000000 
d000b72c l       .text  00000000 
d000b72e l       .text  00000000 
d000b72e l       .text  00000000 
d000b72e l       .text  00000000 
d000b72e l       .text  00000000 
d000b736 l       .text  00000000 
d000b736 l       .text  00000000 
d000b746 l       .text  00000000 
d000b74e l       .text  00000000 
d000b750 l       .text  00000000 
d000b750 l       .text  00000000 
d000b758 l       .text  00000000 
d000b75c l       .text  00000000 
d000b75c l       .text  00000000 
d000b75c l       .text  00000000 
d000b75c l       .text  00000000 
d000b774 l       .text  00000000 
d000b776 l       .text  00000000 
d000b776 l       .text  00000000 
d000b77e l       .text  00000000 
d000b782 l       .text  00000000 
d000b782 l       .text  00000000 
d000b782 l       .text  00000000 
d000b782 l       .text  00000000 
d000b79a l       .text  00000000 
d000b79c l       .text  00000000 
d000b79c l       .text  00000000 
d000b7a4 l       .text  00000000 
d000b7a8 l       .text  00000000 
d000b7a8 l       .text  00000000 
d000b7a8 l       .text  00000000 
d000b7a8 l       .text  00000000 
d000b7c0 l       .text  00000000 
d000b7c2 l       .text  00000000 
d000b7c2 l       .text  00000000 
d000b7ca l       .text  00000000 
d000b7ce l       .text  00000000 
d000b7ce l       .text  00000000 
d000b7ce l       .text  00000000 
d000b7ce l       .text  00000000 
d000b7e6 l       .text  00000000 
d000b7e8 l       .text  00000000 
d000b7e8 l       .text  00000000 
d000b7f0 l       .text  00000000 
d000b7f4 l       .text  00000000 
d000b7f4 l       .text  00000000 
d000b7f4 l       .text  00000000 
d000b7f4 l       .text  00000000 
d000b80c l       .text  00000000 
d000b80e l       .text  00000000 
d000b80e l       .text  00000000 
d000b816 l       .text  00000000 
d000b81a l       .text  00000000 
d000b81a l       .text  00000000 
d000b81a l       .text  00000000 
d000b81a l       .text  00000000 
d000b832 l       .text  00000000 
d000b834 l       .text  00000000 
d000b834 l       .text  00000000 
d000b83c l       .text  00000000 
d000b840 l       .text  00000000 
d000b840 l       .text  00000000 
d000b840 l       .text  00000000 
d000b840 l       .text  00000000 
d000b858 l       .text  00000000 
d000b85a l       .text  00000000 
d000b85a l       .text  00000000 
d000b862 l       .text  00000000 
d000b866 l       .text  00000000 
d000b866 l       .text  00000000 
d000b866 l       .text  00000000 
d000b866 l       .text  00000000 
d000b87e l       .text  00000000 
d000b880 l       .text  00000000 
d000b880 l       .text  00000000 
d000b888 l       .text  00000000 
d000b888 l       .text  00000000 
d000b888 l       .text  00000000 
d000b888 l       .text  00000000 
d000b888 l       .text  00000000 
d000b888 l       .text  00000000 
d000b88a l       .text  00000000 
d000b88a l       .text  00000000 
d000b88e l       .text  00000000 
d000b88e l       .text  00000000 
d000b892 l       .text  00000000 
d000b892 l       .text  00000000 
d000b894 l       .text  00000000 
d000b8a0 l       .text  00000000 
d000b8a0 l       .text  00000000 
d000b8a2 l       .text  00000000 
d000b8a6 l       .text  00000000 
d000b8aa l       .text  00000000 
d000b8b8 l       .text  00000000 
d000b8b8 l       .text  00000000 
d000b8bc l       .text  00000000 
d000b8c0 l       .text  00000000 
d000b8c4 l       .text  00000000 
d000b8c4 l       .text  00000000 
d000b8cc l       .text  00000000 
d000b8cc l       .text  00000000 
000047b1 l       .debug_loc     00000000 
000047d5 l       .debug_loc     00000000 
000047fb l       .debug_loc     00000000 
0000481f l       .debug_loc     00000000 
0000486f l       .debug_loc     00000000 
00004893 l       .debug_loc     00000000 
000048ae l       .debug_loc     00000000 
000048d2 l       .debug_loc     00000000 
000048f6 l       .debug_loc     00000000 
00004957 l       .debug_loc     00000000 
0000497b l       .debug_loc     00000000 
00004996 l       .debug_loc     00000000 
000049be l       .debug_loc     00000000 
000049f4 l       .debug_loc     00000000 
00004a0f l       .debug_loc     00000000 
00004a31 l       .debug_loc     00000000 
00004a5a l       .debug_loc     00000000 
00004a7a l       .debug_loc     00000000 
00004a9c l       .debug_loc     00000000 
00004ab7 l       .debug_loc     00000000 
00004ad9 l       .debug_loc     00000000 
00004af4 l       .debug_loc     00000000 
00004b0f l       .debug_loc     00000000 
00004b37 l       .debug_loc     00000000 
00004b52 l       .debug_loc     00000000 
00004b9a l       .debug_loc     00000000 
00004bbc l       .debug_loc     00000000 
00004bde l       .debug_loc     00000000 
00004bf9 l       .debug_loc     00000000 
00004c14 l       .debug_loc     00000000 
00004c36 l       .debug_loc     00000000 
00004c58 l       .debug_loc     00000000 
00004c73 l       .debug_loc     00000000 
00004c95 l       .debug_loc     00000000 
00004cb0 l       .debug_loc     00000000 
00004ccb l       .debug_loc     00000000 
00004ce6 l       .debug_loc     00000000 
00004d0c l       .debug_loc     00000000 
00004d32 l       .debug_loc     00000000 
00004d4e l       .debug_loc     00000000 
00004d69 l       .debug_loc     00000000 
00004d84 l       .debug_loc     00000000 
00004d9f l       .debug_loc     00000000 
00004dc7 l       .debug_loc     00000000 
00004e07 l       .debug_loc     00000000 
00004e39 l       .debug_loc     00000000 
00004e60 l       .debug_loc     00000000 
00004e7b l       .debug_loc     00000000 
00004e97 l       .debug_loc     00000000 
00004eb9 l       .debug_loc     00000000 
00004ed4 l       .debug_loc     00000000 
00004ef3 l       .debug_loc     00000000 
00004f15 l       .debug_loc     00000000 
00004f39 l       .debug_loc     00000000 
00004f57 l       .debug_loc     00000000 
00004f79 l       .debug_loc     00000000 
00004f9b l       .debug_loc     00000000 
00004fb6 l       .debug_loc     00000000 
00004fdc l       .debug_loc     00000000 
00005002 l       .debug_loc     00000000 
00005028 l       .debug_loc     00000000 
00005043 l       .debug_loc     00000000 
0000505f l       .debug_loc     00000000 
0000507a l       .debug_loc     00000000 
00005095 l       .debug_loc     00000000 
000050b0 l       .debug_loc     00000000 
000051a7 l       .debug_loc     00000000 
000051cd l       .debug_loc     00000000 
000051f3 l       .debug_loc     00000000 
00005219 l       .debug_loc     00000000 
00005234 l       .debug_loc     00000000 
0000525a l       .debug_loc     00000000 
00005280 l       .debug_loc     00000000 
0000529b l       .debug_loc     00000000 
000052c1 l       .debug_loc     00000000 
00005313 l       .debug_loc     00000000 
0000532e l       .debug_loc     00000000 
00005349 l       .debug_loc     00000000 
0000536f l       .debug_loc     00000000 
000053a0 l       .debug_loc     00000000 
000053d1 l       .debug_loc     00000000 
000053ec l       .debug_loc     00000000 
00005407 l       .debug_loc     00000000 
00005422 l       .debug_loc     00000000 
0000543d l       .debug_loc     00000000 
0000546e l       .debug_loc     00000000 
0000549f l       .debug_loc     00000000 
000054c5 l       .debug_loc     00000000 
0000551e l       .debug_loc     00000000 
00005547 l       .debug_loc     00000000 
0000557c l       .debug_loc     00000000 
000055af l       .debug_loc     00000000 
000055ec l       .debug_loc     00000000 
00005607 l       .debug_loc     00000000 
0000562d l       .debug_loc     00000000 
00005648 l       .debug_loc     00000000 
0000566e l       .debug_loc     00000000 
00005689 l       .debug_loc     00000000 
000056a4 l       .debug_loc     00000000 
000056d5 l       .debug_loc     00000000 
000056fd l       .debug_loc     00000000 
00005723 l       .debug_loc     00000000 
00005745 l       .debug_loc     00000000 
0000576e l       .debug_loc     00000000 
00005789 l       .debug_loc     00000000 
000057ab l       .debug_loc     00000000 
000057c6 l       .debug_loc     00000000 
000057e8 l       .debug_loc     00000000 
00005803 l       .debug_loc     00000000 
0000581e l       .debug_loc     00000000 
00005846 l       .debug_loc     00000000 
00005861 l       .debug_loc     00000000 
000058a9 l       .debug_loc     00000000 
000058cb l       .debug_loc     00000000 
000058ed l       .debug_loc     00000000 
00005908 l       .debug_loc     00000000 
00005923 l       .debug_loc     00000000 
00005945 l       .debug_loc     00000000 
00005960 l       .debug_loc     00000000 
00005982 l       .debug_loc     00000000 
0000599d l       .debug_loc     00000000 
00005a94 l       .debug_loc     00000000 
00005aba l       .debug_loc     00000000 
00005ae0 l       .debug_loc     00000000 
00005b06 l       .debug_loc     00000000 
00005b2d l       .debug_loc     00000000 
00005b6c l       .debug_loc     00000000 
00005b87 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00003459 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00000798 l       .debug_ranges  00000000 
0000348c l       .debug_str     00000000 
00001e03 l       .debug_str     00000000 
00001dee l       .debug_str     00000000 
00001b6a l       .debug_str     00000000 
00001b86 l       .debug_str     00000000 
00001ba6 l       .debug_str     00000000 
00001bc4 l       .debug_str     00000000 
00001be6 l       .debug_str     00000000 
00001c08 l       .debug_str     00000000 
00001c2a l       .debug_str     00000000 
00001c4b l       .debug_str     00000000 
00001c6c l       .debug_str     00000000 
00001c8d l       .debug_str     00000000 
00001cae l       .debug_str     00000000 
00001cca l       .debug_str     00000000 
00001ce6 l       .debug_str     00000000 
00001d03 l       .debug_str     00000000 
00001d20 l       .debug_str     00000000 
00001d42 l       .debug_str     00000000 
00001d64 l       .debug_str     00000000 
00001d89 l       .debug_str     00000000 
00001da8 l       .debug_str     00000000 
00001dcb l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
0000291c l       .debug_str     00000000 
00001f84 l       .debug_str     00000000 
00001ee4 l       .debug_str     00000000 
00001ef7 l       .debug_str     00000000 
00001f0b l       .debug_str     00000000 
00001f1e l       .debug_str     00000000 
00001f32 l       .debug_str     00000000 
00001f46 l       .debug_str     00000000 
00001f5b l       .debug_str     00000000 
00001f6f l       .debug_str     00000000 
00000bca l       .debug_str     00000000 
000007b6 l       .debug_str     00000000 
000007bf l       .debug_str     00000000 
000007cd l       .debug_str     00000000 
000007ee l       .debug_str     00000000 
00000804 l       .debug_str     00000000 
00000820 l       .debug_str     00000000 
00000835 l       .debug_str     00000000 
00000851 l       .debug_str     00000000 
0000086d l       .debug_str     00000000 
00000881 l       .debug_str     00000000 
00000895 l       .debug_str     00000000 
000008aa l       .debug_str     00000000 
000008c3 l       .debug_str     00000000 
000008d7 l       .debug_str     00000000 
000008eb l       .debug_str     00000000 
000008fb l       .debug_str     00000000 
0000090e l       .debug_str     00000000 
00000928 l       .debug_str     00000000 
0000093f l       .debug_str     00000000 
00000959 l       .debug_str     00000000 
00000975 l       .debug_str     00000000 
00000991 l       .debug_str     00000000 
000009a8 l       .debug_str     00000000 
000009be l       .debug_str     00000000 
000009d6 l       .debug_str     00000000 
000009ee l       .debug_str     00000000 
00000a07 l       .debug_str     00000000 
00000a20 l       .debug_str     00000000 
00000a39 l       .debug_str     00000000 
00000a52 l       .debug_str     00000000 
00000a71 l       .debug_str     00000000 
00000a8f l       .debug_str     00000000 
00000aa9 l       .debug_str     00000000 
00000ac2 l       .debug_str     00000000 
00000ade l       .debug_str     00000000 
00000afc l       .debug_str     00000000 
00000b18 l       .debug_str     00000000 
00000b34 l       .debug_str     00000000 
00000b50 l       .debug_str     00000000 
00000b67 l       .debug_str     00000000 
00000b80 l       .debug_str     00000000 
00000b96 l       .debug_str     00000000 
00000bb5 l       .debug_str     00000000 
0000200b l       .debug_str     00000000 
00001fdb l       .debug_str     00000000 
00001ff3 l       .debug_str     00000000 
00003507 l       .debug_str     00000000 
000034a4 l       .debug_str     00000000 
000034bc l       .debug_str     00000000 
000034d5 l       .debug_str     00000000 
000034ee l       .debug_str     00000000 
00001f93 l       .debug_str     00000000 
00000bf9 l       .debug_str     00000000 
00000bd4 l       .debug_str     00000000 
00000be6 l       .debug_str     00000000 
000012ad l       .debug_str     00000000 
0000351c l       .debug_str     00000000 
0001a6a3 l       .debug_str     00000000 
00003512 l       .debug_str     00000000 
00002874 l       .debug_str     00000000 
00001937 l       .debug_str     00000000 
000031bd l       .debug_str     00000000 
00003793 l       .debug_str     00000000 
00001b2c l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
000001c9 l       .debug_str     00000000 
00002ac2 l       .debug_str     00000000 
0001bb6e l       .debug_str     00000000 
00002b63 l       .debug_str     00000000 
000010d4 l       .debug_str     00000000 
00003912 l       .debug_str     00000000 
000012c4 l       .debug_str     00000000 
000012b3 l       .debug_str     00000000 
0001a4da l       .debug_str     00000000 
000020fd l       .debug_str     00000000 
00001381 l       .debug_str     00000000 
0000365f l       .debug_str     00000000 
00003667 l       .debug_str     00000000 
000036aa l       .debug_str     00000000 
0000132c l       .debug_str     00000000 
000035b4 l       .debug_str     00000000 
000036b4 l       .debug_str     00000000 
0000334c l       .debug_str     00000000 
00000658 l       .debug_ranges  00000000 
000035d4 l       .debug_str     00000000 
00001df9 l       .debug_str     00000000 
0000358d l       .debug_str     00000000 
00000670 l       .debug_ranges  00000000 
00000688 l       .debug_ranges  00000000 
000006a0 l       .debug_ranges  00000000 
0000129c l       .debug_str     00000000 
0000352d l       .debug_str     00000000 
0000353d l       .debug_str     00000000 
00003596 l       .debug_str     00000000 
0000253c l       .debug_str     00000000 
000035ec l       .debug_str     00000000 
00003710 l       .debug_str     00000000 
0000370d l       .debug_str     00000000 
00006951 l       .debug_str     00000000 
0001b267 l       .debug_str     00000000 
00003401 l       .debug_str     00000000 
00002b79 l       .debug_str     00000000 
0001b17a l       .debug_str     00000000 
0001b6bb l       .debug_str     00000000 
0000354e l       .debug_str     00000000 
00001257 l       .debug_str     00000000 
000025c4 l       .debug_str     00000000 
00006501 l       .debug_str     00000000 
00001040 l       .debug_str     00000000 
0000182c l       .debug_str     00000000 
00003602 l       .debug_str     00000000 
00003617 l       .debug_str     00000000 
0000375a l       .debug_str     00000000 
00003776 l       .debug_str     00000000 
00003781 l       .debug_str     00000000 
0000378b l       .debug_str     00000000 
000006b8 l       .debug_ranges  00000000 
000006d0 l       .debug_ranges  00000000 
000006e8 l       .debug_ranges  00000000 
000012d7 l       .debug_str     00000000 
000037aa l       .debug_str     00000000 
00001817 l       .debug_str     00000000 
000021e3 l       .debug_str     00000000 
0001bb62 l       .debug_str     00000000 
00003629 l       .debug_str     00000000 
0000274c l       .debug_str     00000000 
0000219f l       .debug_str     00000000 
00006939 l       .debug_str     00000000 
00002213 l       .debug_str     00000000 
000026fb l       .debug_str     00000000 
00002016 l       .debug_str     00000000 
00002711 l       .debug_str     00000000 
00002591 l       .debug_str     00000000 
00000700 l       .debug_ranges  00000000 
00000718 l       .debug_ranges  00000000 
00001ab1 l       .debug_str     00000000 
00002244 l       .debug_str     00000000 
00001906 l       .debug_str     00000000 
000037a5 l       .debug_str     00000000 
000026d9 l       .debug_str     00000000 
000021dd l       .debug_str     00000000 
00000738 l       .debug_ranges  00000000 
000021a7 l       .debug_str     00000000 
00000750 l       .debug_ranges  00000000 
00000768 l       .debug_ranges  00000000 
00000780 l       .debug_ranges  00000000 
0000276f l       .debug_str     00000000 
00003397 l       .debug_str     00000000 
00003558 l       .debug_str     00000000 
00003572 l       .debug_str     00000000 
0000335a l       .debug_str     00000000 
000035a4 l       .debug_str     00000000 
00003580 l       .debug_str     00000000 
00003638 l       .debug_str     00000000 
00003699 l       .debug_str     00000000 
0000368a l       .debug_str     00000000 
00003678 l       .debug_str     00000000 
00003683 l       .debug_str     00000000 
00003687 l       .debug_str     00000000 
000021c1 l       .debug_str     00000000 
000036f9 l       .debug_str     00000000 
000036e7 l       .debug_str     00000000 
000036b8 l       .debug_str     00000000 
000036c0 l       .debug_str     00000000 
000036c9 l       .debug_str     00000000 
000036d3 l       .debug_str     00000000 
000036de l       .debug_str     00000000 
00003761 l       .debug_str     00000000 
0000374e l       .debug_str     00000000 
00003717 l       .debug_str     00000000 
0000371f l       .debug_str     00000000 
00003737 l       .debug_str     00000000 
000037ae l       .debug_str     00000000 
000021d2 l       .debug_str     00000000 
00002b74 l       .debug_str     00000000 
0000270b l       .debug_str     00000000 
00001a24 l       .debug_str     00000000 
00000588 l       .debug_frame   00000000 
d000aebe l       .text  00000000 
d000af04 l       .text  00000000 
d000af4a l       .text  00000000 
d000afc6 l       .text  00000000 
d000b038 l       .text  00000000 
d000b2dc l       .text  00000000 
d000b2ec l       .text  00000000 
d000b39a l       .text  00000000 
d000b3de l       .text  00000000 
d000b48c l       .text  00000000 
d000b49c l       .text  00000000 
d000b4de l       .text  00000000 
d000b522 l       .text  00000000 
d000b888 l       .text  00000000 
d000b8cc l       .text  00000000 
00000000 l    df *ABS*  00000000 ibex.c
d000b8cc l       .text  00000000 
d000b8cc l       .text  00000000 
d000b8cc l       .text  00000000 
d000b8ce l       .text  00000000 
d000b8d6 l       .text  00000000 
d000b8d8 l       .text  00000000 
d000b8d8 l       .text  00000000 
d000b8dc l       .text  00000000 
d000b8de l       .text  00000000 
d000b8e2 l       .text  00000000 
d000b8e2 l       .text  00000000 
d000b8ea l       .text  00000000 
d000b8ea l       .text  00000000 
d000b8f0 l       .text  00000000 
d000b8f0 l       .text  00000000 
d000b8f4 l       .text  00000000 
d000b8fa l       .text  00000000 
d000b8fa l       .text  00000000 
d000b8fe l       .text  00000000 
d000b904 l       .text  00000000 
d000b904 l       .text  00000000 
d000b908 l       .text  00000000 
d000b90e l       .text  00000000 
d000b90e l       .text  00000000 
d000b912 l       .text  00000000 
d000b918 l       .text  00000000 
d000b918 l       .text  00000000 
d000b91c l       .text  00000000 
d000b922 l       .text  00000000 
d000b922 l       .text  00000000 
d000b926 l       .text  00000000 
d000b926 l       .text  00000000 
d000b928 l       .text  00000000 
d000b92a l       .text  00000000 
d000b932 l       .text  00000000 
d000b932 l       .text  00000000 
00005bc1 l       .debug_loc     00000000 
00005bdc l       .debug_loc     00000000 
00005c02 l       .debug_loc     00000000 
00005c1d l       .debug_loc     00000000 
00005c38 l       .debug_loc     00000000 
00005c53 l       .debug_loc     00000000 
00005c79 l       .debug_loc     00000000 
00005c94 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
000037c1 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00000840 l       .debug_ranges  00000000 
0000291c l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
0000253c l       .debug_str     00000000 
0001a6a3 l       .debug_str     00000000 
00003800 l       .debug_str     00000000 
000037ee l       .debug_str     00000000 
00001887 l       .debug_str     00000000 
00003828 l       .debug_str     00000000 
00003836 l       .debug_str     00000000 
000019cc l       .debug_str     00000000 
0001a4da l       .debug_str     00000000 
0000353d l       .debug_str     00000000 
00003812 l       .debug_str     00000000 
00003401 l       .debug_str     00000000 
00000774 l       .debug_frame   00000000 
d000b932 l       .text  00000000 
00000000 l    df *ABS*  00000000 keymgr.c
d000b932 l     F .text  0000005e expected_state_check
d000b932 l       .text  00000000 
d000b932 l       .text  00000000 
d000b932 l       .text  00000000 
d000b934 l       .text  00000000 
d000b93c l       .text  00000000 
d000b93e l       .text  00000000 
d000b944 l       .text  00000000 
d000b944 l       .text  00000000 
d000b948 l       .text  00000000 
d000b948 l       .text  00000000 
d000b94c l       .text  00000000 
d000b94c l       .text  00000000 
d000b950 l       .text  00000000 
d000b950 l       .text  00000000 
d000b954 l       .text  00000000 
d000b954 l       .text  00000000 
d000b958 l       .text  00000000 
d000b95c l       .text  00000000 
d000b95c l       .text  00000000 
d000b960 l       .text  00000000 
d000b960 l       .text  00000000 
d000b968 l       .text  00000000 
d000b968 l       .text  00000000 
d000b96c l       .text  00000000 
d000b96c l       .text  00000000 
d000b974 l       .text  00000000 
d000b974 l       .text  00000000 
d000b97c l       .text  00000000 
d000b984 l       .text  00000000 
d000b986 l       .text  00000000 
d000b988 l       .text  00000000 
d000b98a l       .text  00000000 
d000b990 l       .text  00000000 
d000b990 l       .text  00000000 
d000b990 l       .text  00000000 
d000b990 l       .text  00000000 
d000b990 l       .text  00000000 
d000b992 l       .text  00000000 
d000b99e l       .text  00000000 
d000b9a0 l       .text  00000000 
d000b9a2 l       .text  00000000 
d000b9b0 l       .text  00000000 
d000b9b0 l       .text  00000000 
d000b9ba l       .text  00000000 
d000b9be l       .text  00000000 
d000b9be l       .text  00000000 
d000b9c0 l       .text  00000000 
d000b9c0 l       .text  00000000 
d000b9c4 l       .text  00000000 
d000b9c4 l       .text  00000000 
d000b9ca l       .text  00000000 
d000b9ca l       .text  00000000 
d000b9d8 l       .text  00000000 
d000b9dc l       .text  00000000 
d000b9dc l       .text  00000000 
d000b9de l       .text  00000000 
d000b9de l       .text  00000000 
d000b9e2 l       .text  00000000 
d000b9e2 l       .text  00000000 
d000b9ea l       .text  00000000 
d000b9f2 l       .text  00000000 
d000b9fe l       .text  00000000 
d000b9fe l       .text  00000000 
d000b9fe l       .text  00000000 
d000b9fe l       .text  00000000 
d000b9fe l       .text  00000000 
d000b9fe l       .text  00000000 
d000ba00 l       .text  00000000 
d000ba04 l       .text  00000000 
d000ba06 l       .text  00000000 
d000ba0e l       .text  00000000 
d000ba12 l       .text  00000000 
d000ba12 l       .text  00000000 
d000ba16 l       .text  00000000 
d000ba22 l       .text  00000000 
d000ba22 l       .text  00000000 
d000ba22 l       .text  00000000 
d000ba22 l       .text  00000000 
d000ba22 l       .text  00000000 
d000ba22 l       .text  00000000 
d000ba22 l       .text  00000000 
d000ba24 l       .text  00000000 
d000ba24 l       .text  00000000 
d000ba24 l       .text  00000000 
00005caf l       .debug_loc     00000000 
00005cd5 l       .debug_loc     00000000 
00005cf0 l       .debug_loc     00000000 
00005d0b l       .debug_loc     00000000 
00005d31 l       .debug_loc     00000000 
00005d4c l       .debug_loc     00000000 
00005d67 l       .debug_loc     00000000 
00005d82 l       .debug_loc     00000000 
00005d9d l       .debug_loc     00000000 
00005dc3 l       .debug_loc     00000000 
00005de9 l       .debug_loc     00000000 
00005e1c l       .debug_loc     00000000 
00005e4f l       .debug_loc     00000000 
00005e75 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00003841 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00000860 l       .debug_ranges  00000000 
00000bca l       .debug_str     00000000 
000007b6 l       .debug_str     00000000 
000007bf l       .debug_str     00000000 
000007cd l       .debug_str     00000000 
000007ee l       .debug_str     00000000 
00000804 l       .debug_str     00000000 
00000820 l       .debug_str     00000000 
00000835 l       .debug_str     00000000 
00000851 l       .debug_str     00000000 
0000086d l       .debug_str     00000000 
00000881 l       .debug_str     00000000 
00000895 l       .debug_str     00000000 
000008aa l       .debug_str     00000000 
000008c3 l       .debug_str     00000000 
000008d7 l       .debug_str     00000000 
000008eb l       .debug_str     00000000 
000008fb l       .debug_str     00000000 
0000090e l       .debug_str     00000000 
00000928 l       .debug_str     00000000 
0000093f l       .debug_str     00000000 
00000959 l       .debug_str     00000000 
00000975 l       .debug_str     00000000 
00000991 l       .debug_str     00000000 
000009a8 l       .debug_str     00000000 
000009be l       .debug_str     00000000 
000009d6 l       .debug_str     00000000 
000009ee l       .debug_str     00000000 
00000a07 l       .debug_str     00000000 
00000a20 l       .debug_str     00000000 
00000a39 l       .debug_str     00000000 
00000a52 l       .debug_str     00000000 
00000a71 l       .debug_str     00000000 
00000a8f l       .debug_str     00000000 
00000aa9 l       .debug_str     00000000 
00000ac2 l       .debug_str     00000000 
00000ade l       .debug_str     00000000 
00000afc l       .debug_str     00000000 
00000b18 l       .debug_str     00000000 
00000b34 l       .debug_str     00000000 
00000b50 l       .debug_str     00000000 
00000b67 l       .debug_str     00000000 
00000b80 l       .debug_str     00000000 
00000b96 l       .debug_str     00000000 
00000bb5 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
00000efc l       .debug_str     00000000 
00000e49 l       .debug_str     00000000 
00000e5b l       .debug_str     00000000 
00000e6c l       .debug_str     00000000 
00000e87 l       .debug_str     00000000 
00000ea8 l       .debug_str     00000000 
00000ebd l       .debug_str     00000000 
00000ed2 l       .debug_str     00000000 
00000ee6 l       .debug_str     00000000 
0000291c l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
00003870 l       .debug_str     00000000 
000038e1 l       .debug_str     00000000 
0000334c l       .debug_str     00000000 
00001b2c l       .debug_str     00000000 
0000387c l       .debug_str     00000000 
000038f9 l       .debug_str     00000000 
0000354e l       .debug_str     00000000 
00003908 l       .debug_str     00000000 
00003918 l       .debug_str     00000000 
00003923 l       .debug_str     00000000 
00003558 l       .debug_str     00000000 
0000253c l       .debug_str     00000000 
0001a6a3 l       .debug_str     00000000 
00002b63 l       .debug_str     00000000 
000010d4 l       .debug_str     00000000 
00003912 l       .debug_str     00000000 
000012c4 l       .debug_str     00000000 
000012b3 l       .debug_str     00000000 
0001a4da l       .debug_str     00000000 
000020fd l       .debug_str     00000000 
00002ac2 l       .debug_str     00000000 
0001bb6e l       .debug_str     00000000 
0000352d l       .debug_str     00000000 
00001856 l       .debug_str     00000000 
0000392d l       .debug_str     00000000 
00003943 l       .debug_str     00000000 
0001b267 l       .debug_str     00000000 
0000353d l       .debug_str     00000000 
00003891 l       .debug_str     00000000 
0000186c l       .debug_str     00000000 
0000395d l       .debug_str     00000000 
000038af l       .debug_str     00000000 
00003229 l       .debug_str     00000000 
000038cc l       .debug_str     00000000 
00001843 l       .debug_str     00000000 
00001257 l       .debug_str     00000000 
00002b40 l       .debug_str     00000000 
00001312 l       .debug_str     00000000 
00000faf l       .debug_str     00000000 
00000f9a l       .debug_str     00000000 
00001937 l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
00003401 l       .debug_str     00000000 
00003969 l       .debug_str     00000000 
000007d0 l       .debug_frame   00000000 
d000b990 l       .text  00000000 
d000b9fe l       .text  00000000 
d000ba22 l       .text  00000000 
d000ba24 l       .text  00000000 
00000000 l    df *ABS*  00000000 pinmux.c
d000ba24 l       .text  00000000 
d000ba24 l       .text  00000000 
d000ba24 l       .text  00000000 
d000ba26 l       .text  00000000 
d000ba26 l       .text  00000000 
d000ba28 l       .text  00000000 
d000ba30 l       .text  00000000 
d000ba30 l       .text  00000000 
d000ba32 l       .text  00000000 
d000ba32 l       .text  00000000 
d000ba36 l       .text  00000000 
d000ba36 l       .text  00000000 
d000ba3a l       .text  00000000 
d000ba3a l       .text  00000000 
d000ba4a l       .text  00000000 
d000ba4a l       .text  00000000 
d000ba4c l       .text  00000000 
d000ba4c l       .text  00000000 
d000ba50 l       .text  00000000 
d000ba50 l       .text  00000000 
d000ba54 l       .text  00000000 
d000ba54 l       .text  00000000 
d000ba5a l       .text  00000000 
d000ba5a l       .text  00000000 
d000ba60 l       .text  00000000 
d000ba60 l       .text  00000000 
d000ba6a l       .text  00000000 
d000ba6a l       .text  00000000 
d000ba6c l       .text  00000000 
d000ba6c l       .text  00000000 
d000ba72 l       .text  00000000 
d000ba72 l       .text  00000000 
d000ba7a l       .text  00000000 
d000ba7a l       .text  00000000 
d000ba7e l       .text  00000000 
d000ba7e l       .text  00000000 
d000ba84 l       .text  00000000 
d000ba84 l       .text  00000000 
00005e9b l       .debug_loc     00000000 
00005eb9 l       .debug_loc     00000000 
00005ecc l       .debug_loc     00000000 
00005ee6 l       .debug_loc     00000000 
00005f00 l       .debug_loc     00000000 
00005f1a l       .debug_loc     00000000 
00005f35 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00003978 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
000039a7 l       .debug_str     00000000 
00004e5d l       .debug_str     00000000 
00004e50 l       .debug_str     00000000 
000039b6 l       .debug_str     00000000 
0000490e l       .debug_str     00000000 
00004930 l       .debug_str     00000000 
00004345 l       .debug_str     00000000 
00004323 l       .debug_str     00000000 
000039bd l       .debug_str     00000000 
000039e5 l       .debug_str     00000000 
00003a0d l       .debug_str     00000000 
00003a35 l       .debug_str     00000000 
00003a5d l       .debug_str     00000000 
00003a85 l       .debug_str     00000000 
00003aad l       .debug_str     00000000 
00003ad5 l       .debug_str     00000000 
00003afd l       .debug_str     00000000 
00003b25 l       .debug_str     00000000 
00003b4d l       .debug_str     00000000 
00003b76 l       .debug_str     00000000 
00003b9f l       .debug_str     00000000 
00003bc8 l       .debug_str     00000000 
00003bf1 l       .debug_str     00000000 
00003c1a l       .debug_str     00000000 
00003c43 l       .debug_str     00000000 
00003c6c l       .debug_str     00000000 
00003c95 l       .debug_str     00000000 
00003cbe l       .debug_str     00000000 
00003ce7 l       .debug_str     00000000 
00003d10 l       .debug_str     00000000 
00003d39 l       .debug_str     00000000 
00003d62 l       .debug_str     00000000 
00003d8b l       .debug_str     00000000 
00003db4 l       .debug_str     00000000 
00003ddd l       .debug_str     00000000 
00003e06 l       .debug_str     00000000 
00003e2f l       .debug_str     00000000 
00003e58 l       .debug_str     00000000 
00003e81 l       .debug_str     00000000 
00003eaa l       .debug_str     00000000 
00003ed3 l       .debug_str     00000000 
00003ef9 l       .debug_str     00000000 
00003f1f l       .debug_str     00000000 
00003f45 l       .debug_str     00000000 
00003f6b l       .debug_str     00000000 
00003f91 l       .debug_str     00000000 
00003fb7 l       .debug_str     00000000 
00003fe1 l       .debug_str     00000000 
0000400b l       .debug_str     00000000 
00004035 l       .debug_str     00000000 
0000405f l       .debug_str     00000000 
00004085 l       .debug_str     00000000 
000040ab l       .debug_str     00000000 
000040d1 l       .debug_str     00000000 
000040f7 l       .debug_str     00000000 
00004125 l       .debug_str     00000000 
00004150 l       .debug_str     00000000 
0000417b l       .debug_str     00000000 
000041a6 l       .debug_str     00000000 
000041db l       .debug_str     00000000 
0000420d l       .debug_str     00000000 
0000423f l       .debug_str     00000000 
00004271 l       .debug_str     00000000 
000042a3 l       .debug_str     00000000 
000042d6 l       .debug_str     00000000 
00004300 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
00004914 l       .debug_str     00000000 
000048fa l       .debug_str     00000000 
00004369 l       .debug_str     00000000 
0000438d l       .debug_str     00000000 
000043b0 l       .debug_str     00000000 
000043cc l       .debug_str     00000000 
000043e8 l       .debug_str     00000000 
00004404 l       .debug_str     00000000 
00004420 l       .debug_str     00000000 
0000443c l       .debug_str     00000000 
00004458 l       .debug_str     00000000 
00004474 l       .debug_str     00000000 
00004490 l       .debug_str     00000000 
000044ac l       .debug_str     00000000 
000044c8 l       .debug_str     00000000 
000044e4 l       .debug_str     00000000 
00004500 l       .debug_str     00000000 
0000451c l       .debug_str     00000000 
00004538 l       .debug_str     00000000 
00004554 l       .debug_str     00000000 
00004570 l       .debug_str     00000000 
0000458c l       .debug_str     00000000 
000045a8 l       .debug_str     00000000 
000045c4 l       .debug_str     00000000 
000045e1 l       .debug_str     00000000 
000045fe l       .debug_str     00000000 
0000461b l       .debug_str     00000000 
00004637 l       .debug_str     00000000 
00004653 l       .debug_str     00000000 
0000466f l       .debug_str     00000000 
0000468b l       .debug_str     00000000 
000046a7 l       .debug_str     00000000 
000046c3 l       .debug_str     00000000 
000046df l       .debug_str     00000000 
000046fb l       .debug_str     00000000 
00004717 l       .debug_str     00000000 
00004733 l       .debug_str     00000000 
00004750 l       .debug_str     00000000 
0000476d l       .debug_str     00000000 
0000478a l       .debug_str     00000000 
000047a6 l       .debug_str     00000000 
000047c2 l       .debug_str     00000000 
000047de l       .debug_str     00000000 
000047fa l       .debug_str     00000000 
00004816 l       .debug_str     00000000 
00004832 l       .debug_str     00000000 
0000484e l       .debug_str     00000000 
0000486a l       .debug_str     00000000 
00004887 l       .debug_str     00000000 
000048a4 l       .debug_str     00000000 
000048c1 l       .debug_str     00000000 
000048de l       .debug_str     00000000 
00004e36 l       .debug_str     00000000 
00004e1e l       .debug_str     00000000 
00004934 l       .debug_str     00000000 
0000494e l       .debug_str     00000000 
00004968 l       .debug_str     00000000 
00004982 l       .debug_str     00000000 
0000499c l       .debug_str     00000000 
000049b6 l       .debug_str     00000000 
000049d0 l       .debug_str     00000000 
000049ea l       .debug_str     00000000 
00004a04 l       .debug_str     00000000 
00004a1e l       .debug_str     00000000 
00004a38 l       .debug_str     00000000 
00004a52 l       .debug_str     00000000 
00004a6c l       .debug_str     00000000 
00004a86 l       .debug_str     00000000 
00004aa0 l       .debug_str     00000000 
00004aba l       .debug_str     00000000 
00004ad4 l       .debug_str     00000000 
00004aee l       .debug_str     00000000 
00004b08 l       .debug_str     00000000 
00004b22 l       .debug_str     00000000 
00004b3d l       .debug_str     00000000 
00004b58 l       .debug_str     00000000 
00004b73 l       .debug_str     00000000 
00004b8d l       .debug_str     00000000 
00004ba7 l       .debug_str     00000000 
00004bc1 l       .debug_str     00000000 
00004bdb l       .debug_str     00000000 
00004bf5 l       .debug_str     00000000 
00004c0f l       .debug_str     00000000 
00004c29 l       .debug_str     00000000 
00004c43 l       .debug_str     00000000 
00004c5d l       .debug_str     00000000 
00004c77 l       .debug_str     00000000 
00004c92 l       .debug_str     00000000 
00004cad l       .debug_str     00000000 
00004cc8 l       .debug_str     00000000 
00004ce2 l       .debug_str     00000000 
00004cfc l       .debug_str     00000000 
00004d16 l       .debug_str     00000000 
00004d30 l       .debug_str     00000000 
00004d4a l       .debug_str     00000000 
00004d64 l       .debug_str     00000000 
00004d7e l       .debug_str     00000000 
00004d98 l       .debug_str     00000000 
00004db3 l       .debug_str     00000000 
00004dce l       .debug_str     00000000 
00004de9 l       .debug_str     00000000 
00004e04 l       .debug_str     00000000 
00004e6c l       .debug_str     00000000 
00004e7b l       .debug_str     00000000 
00004e8a l       .debug_str     00000000 
00004e96 l       .debug_str     00000000 
00006004 l       .debug_str     00000000 
00005ff6 l       .debug_str     00000000 
0001af17 l       .debug_str     00000000 
00005fd2 l       .debug_str     00000000 
00005439 l       .debug_str     00000000 
0000541d l       .debug_str     00000000 
00004ea3 l       .debug_str     00000000 
00004ec0 l       .debug_str     00000000 
00004edd l       .debug_str     00000000 
00004efa l       .debug_str     00000000 
00004f17 l       .debug_str     00000000 
00004f34 l       .debug_str     00000000 
00004f51 l       .debug_str     00000000 
00004f6e l       .debug_str     00000000 
00004f8b l       .debug_str     00000000 
00004fa8 l       .debug_str     00000000 
00004fc5 l       .debug_str     00000000 
00004fe2 l       .debug_str     00000000 
00004fff l       .debug_str     00000000 
0000501c l       .debug_str     00000000 
00005039 l       .debug_str     00000000 
00005056 l       .debug_str     00000000 
00005073 l       .debug_str     00000000 
00005090 l       .debug_str     00000000 
000050ad l       .debug_str     00000000 
000050ca l       .debug_str     00000000 
000050e8 l       .debug_str     00000000 
00005106 l       .debug_str     00000000 
00005124 l       .debug_str     00000000 
00005141 l       .debug_str     00000000 
0000515e l       .debug_str     00000000 
0000517b l       .debug_str     00000000 
00005198 l       .debug_str     00000000 
000051b5 l       .debug_str     00000000 
000051d2 l       .debug_str     00000000 
000051ef l       .debug_str     00000000 
0000520c l       .debug_str     00000000 
00005229 l       .debug_str     00000000 
00005246 l       .debug_str     00000000 
00005264 l       .debug_str     00000000 
00005282 l       .debug_str     00000000 
000052a0 l       .debug_str     00000000 
000052bd l       .debug_str     00000000 
000052da l       .debug_str     00000000 
000052f7 l       .debug_str     00000000 
00005314 l       .debug_str     00000000 
00005331 l       .debug_str     00000000 
0000534e l       .debug_str     00000000 
0000536b l       .debug_str     00000000 
00005388 l       .debug_str     00000000 
000053a6 l       .debug_str     00000000 
000053c4 l       .debug_str     00000000 
000053e2 l       .debug_str     00000000 
00005400 l       .debug_str     00000000 
00005fd9 l       .debug_str     00000000 
00005fbe l       .debug_str     00000000 
00005457 l       .debug_str     00000000 
0000547c l       .debug_str     00000000 
000054a0 l       .debug_str     00000000 
000054c6 l       .debug_str     00000000 
000054e8 l       .debug_str     00000000 
0000550a l       .debug_str     00000000 
0000552c l       .debug_str     00000000 
0000554e l       .debug_str     00000000 
00005570 l       .debug_str     00000000 
00005592 l       .debug_str     00000000 
000055b4 l       .debug_str     00000000 
000055d6 l       .debug_str     00000000 
000055f8 l       .debug_str     00000000 
0000561a l       .debug_str     00000000 
0000563d l       .debug_str     00000000 
00005660 l       .debug_str     00000000 
00005683 l       .debug_str     00000000 
000056a6 l       .debug_str     00000000 
000056c9 l       .debug_str     00000000 
000056ec l       .debug_str     00000000 
0000570f l       .debug_str     00000000 
00005732 l       .debug_str     00000000 
00005755 l       .debug_str     00000000 
00005778 l       .debug_str     00000000 
0000579b l       .debug_str     00000000 
000057be l       .debug_str     00000000 
000057e1 l       .debug_str     00000000 
00005804 l       .debug_str     00000000 
00005827 l       .debug_str     00000000 
0000584a l       .debug_str     00000000 
0000586d l       .debug_str     00000000 
00005890 l       .debug_str     00000000 
000058b3 l       .debug_str     00000000 
000058d6 l       .debug_str     00000000 
000058f9 l       .debug_str     00000000 
0000591c l       .debug_str     00000000 
0000593c l       .debug_str     00000000 
0000595c l       .debug_str     00000000 
0000597c l       .debug_str     00000000 
0000599c l       .debug_str     00000000 
000059bc l       .debug_str     00000000 
000059dc l       .debug_str     00000000 
00005a00 l       .debug_str     00000000 
00005a24 l       .debug_str     00000000 
00005a48 l       .debug_str     00000000 
00005a6c l       .debug_str     00000000 
00005a8c l       .debug_str     00000000 
00005aac l       .debug_str     00000000 
00005acc l       .debug_str     00000000 
00005aec l       .debug_str     00000000 
00005b12 l       .debug_str     00000000 
00005b38 l       .debug_str     00000000 
00005b5e l       .debug_str     00000000 
00005b84 l       .debug_str     00000000 
00005ba8 l       .debug_str     00000000 
00005bcc l       .debug_str     00000000 
00005bf1 l       .debug_str     00000000 
00005c20 l       .debug_str     00000000 
00005c4f l       .debug_str     00000000 
00005c7e l       .debug_str     00000000 
00005cad l       .debug_str     00000000 
00005cdc l       .debug_str     00000000 
00005d0b l       .debug_str     00000000 
00005d3a l       .debug_str     00000000 
00005d69 l       .debug_str     00000000 
00005d98 l       .debug_str     00000000 
00005dbb l       .debug_str     00000000 
00005dde l       .debug_str     00000000 
00005e01 l       .debug_str     00000000 
00005e24 l       .debug_str     00000000 
00005e47 l       .debug_str     00000000 
00005e6a l       .debug_str     00000000 
00005e8f l       .debug_str     00000000 
00005ebf l       .debug_str     00000000 
00005eec l       .debug_str     00000000 
00005f19 l       .debug_str     00000000 
00005f46 l       .debug_str     00000000 
00005f73 l       .debug_str     00000000 
00005fa1 l       .debug_str     00000000 
00000bf9 l       .debug_str     00000000 
00000bd4 l       .debug_str     00000000 
00000be6 l       .debug_str     00000000 
0000291c l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
000012d7 l       .debug_str     00000000 
000037aa l       .debug_str     00000000 
00002ac2 l       .debug_str     00000000 
0001a6a3 l       .debug_str     00000000 
0001bb6e l       .debug_str     00000000 
00006014 l       .debug_str     00000000 
0000334c l       .debug_str     00000000 
00006025 l       .debug_str     00000000 
0000602f l       .debug_str     00000000 
00006035 l       .debug_str     00000000 
0000603f l       .debug_str     00000000 
000012ef l       .debug_str     00000000 
00006046 l       .debug_str     00000000 
0000132c l       .debug_str     00000000 
0000089c l       .debug_frame   00000000 
d000ba84 l       .text  00000000 
00000000 l    df *ABS*  00000000 retention_sram.c
d000ba84 l       .text  00000000 
d000ba84 l       .text  00000000 
d000ba84 l       .text  00000000 
d000ba84 l       .text  00000000 
d000ba8a l       .text  00000000 
d000ba8a l       .text  00000000 
d000ba8a l       .text  00000000 
d000ba8a l       .text  00000000 
d000ba8a l       .text  00000000 
d000ba90 l       .text  00000000 
d000ba90 l       .text  00000000 
d000ba92 l       .text  00000000 
d000ba92 l       .text  00000000 
d000ba94 l       .text  00000000 
d000ba94 l       .text  00000000 
00000000 l       .debug_str     00000000 
00006053 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
000008a8 l       .debug_ranges  00000000 
0000291c l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
0000608a l       .debug_str     00000000 
00001408 l       .debug_str     00000000 
00001283 l       .debug_str     00000000 
000013e8 l       .debug_str     00000000 
000013f9 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
000013d5 l       .debug_str     00000000 
000060a2 l       .debug_str     00000000 
0000609b l       .debug_str     00000000 
00000175 l       .debug_str     00000000 
00002ac2 l       .debug_str     00000000 
0001a6a3 l       .debug_str     00000000 
0001bb6e l       .debug_str     00000000 
000013c1 l       .debug_str     00000000 
0000334c l       .debug_str     00000000 
000060b7 l       .debug_str     00000000 
0001b8c3 l       .debug_str     00000000 
000008c8 l       .debug_frame   00000000 
d000ba8a l       .text  00000000 
d000ba94 l       .text  00000000 
00000000 l    df *ABS*  00000000 rstmgr.c
d000ba94 l       .text  00000000 
d000ba94 l       .text  00000000 
d000ba94 l       .text  00000000 
d000ba98 l       .text  00000000 
d000ba98 l       .text  00000000 
d000ba9a l       .text  00000000 
d000ba9a l       .text  00000000 
d000ba9e l       .text  00000000 
d000ba9e l       .text  00000000 
d000baa4 l       .text  00000000 
d000baa4 l       .text  00000000 
d000baa6 l       .text  00000000 
d000baae l       .text  00000000 
d000baae l       .text  00000000 
d000bab2 l       .text  00000000 
d000bab2 l       .text  00000000 
d000bab4 l       .text  00000000 
d000bab4 l       .text  00000000 
d000bab6 l       .text  00000000 
d000bab6 l       .text  00000000 
d000bab8 l       .text  00000000 
d000baba l       .text  00000000 
d000babc l       .text  00000000 
d000bac0 l       .text  00000000 
d000bac4 l       .text  00000000 
d000bac4 l       .text  00000000 
d000bac6 l       .text  00000000 
d000bac6 l       .text  00000000 
d000bac8 l       .text  00000000 
d000bac8 l       .text  00000000 
d000bac8 l       .text  00000000 
d000bac8 l       .text  00000000 
d000bac8 l       .text  00000000 
d000bacc l       .text  00000000 
d000bacc l       .text  00000000 
d000bace l       .text  00000000 
d000bace l       .text  00000000 
d000bad0 l       .text  00000000 
d000bad0 l       .text  00000000 
d000bad0 l       .text  00000000 
d000bad0 l       .text  00000000 
d000bad0 l       .text  00000000 
d000bad8 l       .text  00000000 
d000bad8 l       .text  00000000 
d000bada l       .text  00000000 
d000bada l       .text  00000000 
d000bade l       .text  00000000 
d000bade l       .text  00000000 
d000bae0 l       .text  00000000 
d000bae0 l       .text  00000000 
00005f50 l       .debug_loc     00000000 
00005f72 l       .debug_loc     00000000 
00005f99 l       .debug_loc     00000000 
00005fbb l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
000060cf l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
000008d0 l       .debug_ranges  00000000 
000060fe l       .debug_str     00000000 
00006120 l       .debug_str     00000000 
00006110 l       .debug_str     00000000 
00001216 l       .debug_str     00000000 
00002ae4 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
0000291c l       .debug_str     00000000 
00001f84 l       .debug_str     00000000 
00001ee4 l       .debug_str     00000000 
00001ef7 l       .debug_str     00000000 
00001f0b l       .debug_str     00000000 
00001f1e l       .debug_str     00000000 
00001f32 l       .debug_str     00000000 
00001f46 l       .debug_str     00000000 
00001f5b l       .debug_str     00000000 
00001f6f l       .debug_str     00000000 
0000253c l       .debug_str     00000000 
0001a6a3 l       .debug_str     00000000 
00006134 l       .debug_str     00000000 
0001b267 l       .debug_str     00000000 
00002b63 l       .debug_str     00000000 
000010d4 l       .debug_str     00000000 
00003912 l       .debug_str     00000000 
000012c4 l       .debug_str     00000000 
000012b3 l       .debug_str     00000000 
0001a4da l       .debug_str     00000000 
000020fd l       .debug_str     00000000 
0000129c l       .debug_str     00000000 
0001bb6e l       .debug_str     00000000 
00002ac2 l       .debug_str     00000000 
000013af l       .debug_str     00000000 
00001417 l       .debug_str     00000000 
00001289 l       .debug_str     00000000 
00006161 l       .debug_str     00000000 
0000614e l       .debug_str     00000000 
00002762 l       .debug_str     00000000 
0000091c l       .debug_frame   00000000 
d000bac8 l       .text  00000000 
d000bad0 l       .text  00000000 
d000bae0 l       .text  00000000 
00000000 l    df *ABS*  00000000 uart.c
d000bae0 l       .text  00000000 
d000bae0 l       .text  00000000 
d000bae0 l       .text  00000000 
d000bae4 l       .text  00000000 
d000bae4 l       .text  00000000 
d000baea l       .text  00000000 
d000baea l       .text  00000000 
d000baec l       .text  00000000 
d000baec l       .text  00000000 
d000baf0 l       .text  00000000 
d000baf0 l       .text  00000000 
d000baf4 l       .text  00000000 
d000baf4 l       .text  00000000 
d000bafa l       .text  00000000 
d000bafa l       .text  00000000 
d000bafc l       .text  00000000 
d000bafc l       .text  00000000 
d000bafe l       .text  00000000 
d000bafe l       .text  00000000 
d000bb02 l       .text  00000000 
d000bb02 l       .text  00000000 
d000bb04 l       .text  00000000 
d000bb04 l       .text  00000000 
d000bb08 l       .text  00000000 
d000bb08 l       .text  00000000 
d000bb0c l       .text  00000000 
d000bb0c l       .text  00000000 
d000bb0e l       .text  00000000 
d000bb0e l       .text  00000000 
00005fe2 l       .debug_loc     00000000 
00005ffd l       .debug_loc     00000000 
00006019 l       .debug_loc     00000000 
00006040 l       .debug_loc     00000000 
00006065 l       .debug_loc     00000000 
0000608c l       .debug_loc     00000000 
000060ae l       .debug_loc     00000000 
000060c9 l       .debug_loc     00000000 
000060e4 l       .debug_loc     00000000 
000060ff l       .debug_loc     00000000 
0000611a l       .debug_loc     00000000 
00006135 l       .debug_loc     00000000 
00006166 l       .debug_loc     00000000 
0000618c l       .debug_loc     00000000 
000061a7 l       .debug_loc     00000000 
000061c2 l       .debug_loc     00000000 
000061dd l       .debug_loc     00000000 
000061f8 l       .debug_loc     00000000 
00006213 l       .debug_loc     00000000 
00006239 l       .debug_loc     00000000 
0000625f l       .debug_loc     00000000 
0000627a l       .debug_loc     00000000 
00006295 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
0000617a l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
000008f8 l       .debug_ranges  00000000 
00000bca l       .debug_str     00000000 
000007b6 l       .debug_str     00000000 
000007bf l       .debug_str     00000000 
000007cd l       .debug_str     00000000 
000007ee l       .debug_str     00000000 
00000804 l       .debug_str     00000000 
00000820 l       .debug_str     00000000 
00000835 l       .debug_str     00000000 
00000851 l       .debug_str     00000000 
0000086d l       .debug_str     00000000 
00000881 l       .debug_str     00000000 
00000895 l       .debug_str     00000000 
000008aa l       .debug_str     00000000 
000008c3 l       .debug_str     00000000 
000008d7 l       .debug_str     00000000 
000008eb l       .debug_str     00000000 
000008fb l       .debug_str     00000000 
0000090e l       .debug_str     00000000 
00000928 l       .debug_str     00000000 
0000093f l       .debug_str     00000000 
00000959 l       .debug_str     00000000 
00000975 l       .debug_str     00000000 
00000991 l       .debug_str     00000000 
000009a8 l       .debug_str     00000000 
000009be l       .debug_str     00000000 
000009d6 l       .debug_str     00000000 
000009ee l       .debug_str     00000000 
00000a07 l       .debug_str     00000000 
00000a20 l       .debug_str     00000000 
00000a39 l       .debug_str     00000000 
00000a52 l       .debug_str     00000000 
00000a71 l       .debug_str     00000000 
00000a8f l       .debug_str     00000000 
00000aa9 l       .debug_str     00000000 
00000ac2 l       .debug_str     00000000 
00000ade l       .debug_str     00000000 
00000afc l       .debug_str     00000000 
00000b18 l       .debug_str     00000000 
00000b34 l       .debug_str     00000000 
00000b50 l       .debug_str     00000000 
00000b67 l       .debug_str     00000000 
00000b80 l       .debug_str     00000000 
00000b96 l       .debug_str     00000000 
00000bb5 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000001ce l       .debug_str     00000000 
000001c0 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
00002ac2 l       .debug_str     00000000 
0001a6a3 l       .debug_str     00000000 
0001bb6e l       .debug_str     00000000 
000061a7 l       .debug_str     00000000 
0000334c l       .debug_str     00000000 
0000129c l       .debug_str     00000000 
000010d4 l       .debug_str     00000000 
00003912 l       .debug_str     00000000 
000012c4 l       .debug_str     00000000 
000012b3 l       .debug_str     00000000 
0001a4da l       .debug_str     00000000 
000020fd l       .debug_str     00000000 
00001817 l       .debug_str     00000000 
00006501 l       .debug_str     00000000 
0000182c l       .debug_str     00000000 
00001040 l       .debug_str     00000000 
000012fb l       .debug_str     00000000 
000061f4 l       .debug_str     00000000 
0000253c l       .debug_str     00000000 
000061b2 l       .debug_str     00000000 
000025c4 l       .debug_str     00000000 
000061bf l       .debug_str     00000000 
000061cc l       .debug_str     00000000 
00006841 l       .debug_str     00000000 
000061d9 l       .debug_str     00000000 
00001937 l       .debug_str     00000000 
0001aa41 l       .debug_str     00000000 
000061e4 l       .debug_str     00000000 
00003401 l       .debug_str     00000000 
000061ea l       .debug_str     00000000 
0001a98e l       .debug_str     00000000 
00001257 l       .debug_str     00000000 
000001c9 l       .debug_str     00000000 
00000970 l       .debug_frame   00000000 
d000bb0e l       .text  00000000 
00000000 l    df *ABS*  00000000 watchdog.c
d000bb0e l       .text  00000000 
d000bb0e l       .text  00000000 
d000bb0e l       .text  00000000 
d000bb10 l       .text  00000000 
d000bb10 l       .text  00000000 
d000bb14 l       .text  00000000 
d000bb14 l       .text  00000000 
d000bb14 l       .text  00000000 
d000bb16 l       .text  00000000 
d000bb16 l       .text  00000000 
d000bb1e l       .text  00000000 
d000bb1e l       .text  00000000 
d000bb22 l       .text  00000000 
d000bb22 l       .text  00000000 
d000bb26 l       .text  00000000 
d000bb2a l       .text  00000000 
d000bb32 l       .text  00000000 
d000bb36 l       .text  00000000 
d000bb44 l       .text  00000000 
d000bb4c l       .text  00000000 
d000bb50 l       .text  00000000 
d000bb5e l       .text  00000000 
d000bb66 l       .text  00000000 
d000bb74 l       .text  00000000 
d000bb7c l       .text  00000000 
d000bb80 l       .text  00000000 
d000bb8c l       .text  00000000 
d000bb9a l       .text  00000000 
d000bb9e l       .text  00000000 
d000bbaa l       .text  00000000 
d000bbae l       .text  00000000 
d000bbae l       .text  00000000 
d000bbb2 l       .text  00000000 
d000bbb6 l       .text  00000000 
d000bbb6 l       .text  00000000 
d000bbb8 l       .text  00000000 
d000bbb8 l       .text  00000000 
d000bbba l       .text  00000000 
d000bbba l       .text  00000000 
d000bbbc l       .text  00000000 
d000bbcc l       .text  00000000 
d000bbd2 l       .text  00000000 
d000bbd4 l       .text  00000000 
d000bbdc l       .text  00000000 
d000bbde l       .text  00000000 
d000bbde l       .text  00000000 
d000bbe0 l       .text  00000000 
d000bbe6 l       .text  00000000 
d000bbe6 l       .text  00000000 
d000bbee l       .text  00000000 
d000bbee l       .text  00000000 
d000bbee l       .text  00000000 
d000bbee l       .text  00000000 
d000bbee l       .text  00000000 
d000bbf0 l       .text  00000000 
d000bbf6 l       .text  00000000 
d000bbf8 l       .text  00000000 
d000bc00 l       .text  00000000 
d000bc06 l       .text  00000000 
d000bc06 l       .text  00000000 
d000bc08 l       .text  00000000 
d000bc08 l       .text  00000000 
d000bc12 l       .text  00000000 
d000bc12 l       .text  00000000 
d000bc18 l       .text  00000000 
d000bc18 l       .text  00000000 
d000bc1c l       .text  00000000 
d000bc1c l       .text  00000000 
d000bc1e l       .text  00000000 
d000bc1e l       .text  00000000 
d000bc20 l       .text  00000000 
d000bc20 l       .text  00000000 
d000bc26 l       .text  00000000 
d000bc2a l       .text  00000000 
d000bc2a l       .text  00000000 
d000bc2c l       .text  00000000 
d000bc2c l       .text  00000000 
d000bc2c l       .text  00000000 
d000bc30 l       .text  00000000 
d000bc30 l       .text  00000000 
d000bc34 l       .text  00000000 
d000bc44 l       .text  00000000 
d000bc44 l       .text  00000000 
d000bc46 l       .text  00000000 
d000bc4a l       .text  00000000 
d000bc4e l       .text  00000000 
d000bc5e l       .text  00000000 
d000bc5e l       .text  00000000 
d000bc64 l       .text  00000000 
d000bc68 l       .text  00000000 
d000bc68 l       .text  00000000 
d000bc6e l       .text  00000000 
d000bc6e l       .text  00000000 
d000bc70 l       .text  00000000 
d000bc70 l       .text  00000000 
d000bc74 l       .text  00000000 
d000bc7a l       .text  00000000 
d000bc7a l       .text  00000000 
d000bc82 l       .text  00000000 
d000bc82 l       .text  00000000 
d000bc82 l       .text  00000000 
d000bc82 l       .text  00000000 
d000bc82 l       .text  00000000 
d000bc88 l       .text  00000000 
d000bc8e l       .text  00000000 
d000bc8e l       .text  00000000 
d000bc8e l       .text  00000000 
000062b0 l       .debug_loc     00000000 
000062d6 l       .debug_loc     00000000 
000062fc l       .debug_loc     00000000 
00006333 l       .debug_loc     00000000 
00006359 l       .debug_loc     00000000 
00006374 l       .debug_loc     00000000 
000063a8 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00006206 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00000920 l       .debug_ranges  00000000 
0000011c l       .debug_str     00000000 
000000da l       .debug_str     00000000 
000000e7 l       .debug_str     00000000 
000000f3 l       .debug_str     00000000 
00000100 l       .debug_str     00000000 
00000110 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
00000bf9 l       .debug_str     00000000 
00000bd4 l       .debug_str     00000000 
00000be6 l       .debug_str     00000000 
00006237 l       .debug_str     00000000 
0000291c l       .debug_str     00000000 
0000624d l       .debug_str     00000000 
00006259 l       .debug_str     00000000 
00006265 l       .debug_str     00000000 
00006314 l       .debug_str     00000000 
00006272 l       .debug_str     00000000 
000062ab l       .debug_str     00000000 
000062ea l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
000012d7 l       .debug_str     00000000 
000037aa l       .debug_str     00000000 
00001365 l       .debug_str     00000000 
000000d1 l       .debug_str     00000000 
00003397 l       .debug_str     00000000 
0000637f l       .debug_str     00000000 
0000132c l       .debug_str     00000000 
0000633e l       .debug_str     00000000 
00006392 l       .debug_str     00000000 
0001b8c3 l       .debug_str     00000000 
00002ac2 l       .debug_str     00000000 
0001a6a3 l       .debug_str     00000000 
0001bb6e l       .debug_str     00000000 
0000353d l       .debug_str     00000000 
00001487 l       .debug_str     00000000 
00006351 l       .debug_str     00000000 
0000253c l       .debug_str     00000000 
0000635e l       .debug_str     00000000 
0000012c l       .debug_str     00000000 
00001a24 l       .debug_str     00000000 
00006399 l       .debug_str     00000000 
00006389 l       .debug_str     00000000 
0000636b l       .debug_str     00000000 
0000637a l       .debug_str     00000000 
000009c4 l       .debug_frame   00000000 
d000bbee l       .text  00000000 
d000bc82 l       .text  00000000 
d000bc8e l       .text  00000000 
00000000 l    df *ABS*  00000000 dif_spi_host_autogen.c
d000bc8e l       .text  00000000 
d000bc8e l       .text  00000000 
d000bc8e l       .text  00000000 
d000bc8e l       .text  00000000 
d000bc90 l       .text  00000000 
d000bc92 l       .text  00000000 
d000bc96 l       .text  00000000 
d000bc98 l       .text  00000000 
d000bc9a l       .text  00000000 
d000bc9c l       .text  00000000 
d000bc9c l       .text  00000000 
000063f3 l       .debug_loc     00000000 
0000640e l       .debug_loc     00000000 
00006429 l       .debug_loc     00000000 
00006444 l       .debug_loc     00000000 
00006460 l       .debug_loc     00000000 
0000647c l       .debug_loc     00000000 
00006497 l       .debug_loc     00000000 
000064b2 l       .debug_loc     00000000 
000064cd l       .debug_loc     00000000 
000064e8 l       .debug_loc     00000000 
00006503 l       .debug_loc     00000000 
0000651e l       .debug_loc     00000000 
00006539 l       .debug_loc     00000000 
00006554 l       .debug_loc     00000000 
0000657a l       .debug_loc     00000000 
00006595 l       .debug_loc     00000000 
000065b0 l       .debug_loc     00000000 
000065ce l       .debug_loc     00000000 
000065f5 l       .debug_loc     00000000 
00006610 l       .debug_loc     00000000 
0000662b l       .debug_loc     00000000 
00006646 l       .debug_loc     00000000 
00006664 l       .debug_loc     00000000 
0000668b l       .debug_loc     00000000 
000066a6 l       .debug_loc     00000000 
000066c1 l       .debug_loc     00000000 
000066dc l       .debug_loc     00000000 
000066f7 l       .debug_loc     00000000 
0000671d l       .debug_loc     00000000 
00006738 l       .debug_loc     00000000 
00006753 l       .debug_loc     00000000 
00006779 l       .debug_loc     00000000 
00006799 l       .debug_loc     00000000 
000067bf l       .debug_loc     00000000 
000067dd l       .debug_loc     00000000 
000067f8 l       .debug_loc     00000000 
00006813 l       .debug_loc     00000000 
00006833 l       .debug_loc     00000000 
00006859 l       .debug_loc     00000000 
0000687f l       .debug_loc     00000000 
0000689a l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
000063ab l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00000950 l       .debug_ranges  00000000 
000063dc l       .debug_str     00000000 
00006416 l       .debug_str     00000000 
00006409 l       .debug_str     00000000 
000063e6 l       .debug_str     00000000 
000063f7 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
00000326 l       .debug_str     00000000 
000002c3 l       .debug_str     00000000 
000002ca l       .debug_str     00000000 
000002d4 l       .debug_str     00000000 
000002df l       .debug_str     00000000 
000002ea l       .debug_str     00000000 
000002fa l       .debug_str     00000000 
00000309 l       .debug_str     00000000 
00000318 l       .debug_str     00000000 
00006440 l       .debug_str     00000000 
00006425 l       .debug_str     00000000 
0000647e l       .debug_str     00000000 
00006453 l       .debug_str     00000000 
00006467 l       .debug_str     00000000 
000064b4 l       .debug_str     00000000 
0000648f l       .debug_str     00000000 
000064a2 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
000011a1 l       .debug_str     00000000 
0000027e l       .debug_str     00000000 
000002ab l       .debug_str     00000000 
000064bf l       .debug_str     00000000 
00000288 l       .debug_str     00000000 
0001bb62 l       .debug_str     00000000 
0001bb6e l       .debug_str     00000000 
00000299 l       .debug_str     00000000 
0000028d l       .debug_str     00000000 
000064d3 l       .debug_str     00000000 
00000175 l       .debug_str     00000000 
00006528 l       .debug_str     00000000 
0000644d l       .debug_str     00000000 
00006670 l       .debug_str     00000000 
0000667a l       .debug_str     00000000 
00006541 l       .debug_str     00000000 
0000648b l       .debug_str     00000000 
0001bd0c l       .debug_str     00000000 
000064dd l       .debug_str     00000000 
0000655b l       .debug_str     00000000 
00006689 l       .debug_str     00000000 
000064f0 l       .debug_str     00000000 
0000651e l       .debug_str     00000000 
00001040 l       .debug_str     00000000 
0000650b l       .debug_str     00000000 
0000182c l       .debug_str     00000000 
000025c4 l       .debug_str     00000000 
000010d4 l       .debug_str     00000000 
00006501 l       .debug_str     00000000 
00006576 l       .debug_str     00000000 
00006587 l       .debug_str     00000000 
000066b4 l       .debug_str     00000000 
000020fd l       .debug_str     00000000 
00006592 l       .debug_str     00000000 
0000129c l       .debug_str     00000000 
00003912 l       .debug_str     00000000 
000012c4 l       .debug_str     00000000 
000012b3 l       .debug_str     00000000 
0001a4da l       .debug_str     00000000 
00001817 l       .debug_str     00000000 
000065b3 l       .debug_str     00000000 
000065d0 l       .debug_str     00000000 
000037aa l       .debug_str     00000000 
000066c3 l       .debug_str     00000000 
000065e7 l       .debug_str     00000000 
000000d4 l       .debug_str     00000000 
000066de l       .debug_str     00000000 
000066ee l       .debug_str     00000000 
00006604 l       .debug_str     00000000 
000066f9 l       .debug_str     00000000 
00006621 l       .debug_str     00000000 
0000663e l       .debug_str     00000000 
00001992 l       .debug_str     00000000 
000002b4 l       .debug_str     00000000 
000002a7 l       .debug_str     00000000 
0000665b l       .debug_str     00000000 
00006692 l       .debug_str     00000000 
000066d1 l       .debug_str     00000000 
00006704 l       .debug_str     00000000 
00000a3c l       .debug_frame   00000000 
d000bc9c l       .text  00000000 
00000000 l    df *ABS*  00000000 dif_spi_host.c
d000bc9c l       .text  00000000 
d000bc9c l       .text  00000000 
d000bc9c l       .text  00000000 
d000bc9e l       .text  00000000 
d000bca0 l       .text  00000000 
d000bca8 l       .text  00000000 
d000bcac l       .text  00000000 
d000bcac l       .text  00000000 
d000bcb0 l       .text  00000000 
d000bcb0 l       .text  00000000 
d000bcb4 l       .text  00000000 
d000bcba l       .text  00000000 
d000bcbc l       .text  00000000 
d000bcbc l       .text  00000000 
d000bcc6 l       .text  00000000 
d000bcc8 l       .text  00000000 
d000bcc8 l       .text  00000000 
d000bcca l       .text  00000000 
d000bcca l       .text  00000000 
d000bcce l       .text  00000000 
d000bcce l       .text  00000000 
d000bcd2 l       .text  00000000 
d000bcd2 l       .text  00000000 
d000bcd6 l       .text  00000000 
d000bcd6 l       .text  00000000 
d000bcd8 l       .text  00000000 
d000bcd8 l       .text  00000000 
d000bcde l       .text  00000000 
d000bcde l       .text  00000000 
d000bce2 l       .text  00000000 
d000bce2 l       .text  00000000 
d000bce6 l       .text  00000000 
d000bcee l       .text  00000000 
d000bcee l       .text  00000000 
d000bcf2 l       .text  00000000 
d000bcf2 l       .text  00000000 
d000bcf4 l       .text  00000000 
d000bcf4 l       .text  00000000 
d000bcfa l       .text  00000000 
d000bd00 l       .text  00000000 
d000bd04 l       .text  00000000 
d000bd0c l       .text  00000000 
d000bd0c l       .text  00000000 
d000bd0e l       .text  00000000 
d000bd0e l       .text  00000000 
d000bd12 l       .text  00000000 
d000bd12 l       .text  00000000 
d000bd16 l       .text  00000000 
d000bd16 l       .text  00000000 
d000bd18 l       .text  00000000 
d000bd18 l       .text  00000000 
d000bd1a l       .text  00000000 
d000bd1a l       .text  00000000 
d000bd20 l       .text  00000000 
d000bd20 l       .text  00000000 
d000bd22 l       .text  00000000 
d000bd26 l       .text  00000000 
d000bd2a l       .text  00000000 
d000bd2c l       .text  00000000 
d000bd38 l       .text  00000000 
d000bd38 l       .text  00000000 
d000bd3a l       .text  00000000 
d000bd3a l       .text  00000000 
d000bd3e l       .text  00000000 
d000bd3e l       .text  00000000 
d000bd42 l       .text  00000000 
d000bd42 l       .text  00000000 
d000bd46 l       .text  00000000 
d000bd46 l       .text  00000000 
d000bd4a l       .text  00000000 
d000bd4a l       .text  00000000 
d000bd50 l       .text  00000000 
d000bd52 l       .text  00000000 
d000bd54 l       .text  00000000 
d000bd56 l       .text  00000000 
d000bd58 l       .text  00000000 
d000bd5a l       .text  00000000 
d000bd5a l       .text  00000000 
d000bd5a l       .text  00000000 
d000bd5a l       .text  00000000 
d000bd5a l       .text  00000000 
d000bd5c l       .text  00000000 
d000bd6a l       .text  00000000 
d000bd6c l       .text  00000000 
d000bd6e l       .text  00000000 
d000bd72 l       .text  00000000 
d000bd74 l       .text  00000000 
d000bd76 l       .text  00000000 
d000bd76 l       .text  00000000 
d000bd7e l       .text  00000000 
d000bd84 l       .text  00000000 
d000bd84 l       .text  00000000 
d000bd8c l       .text  00000000 
d000bd9c l       .text  00000000 
d000bd9c l       .text  00000000 
d000bda0 l       .text  00000000 
d000bda0 l       .text  00000000 
d000bda4 l       .text  00000000 
d000bdae l       .text  00000000 
d000bdae l       .text  00000000 
d000bdb0 l       .text  00000000 
d000bdb2 l       .text  00000000 
d000bdb2 l       .text  00000000 
d000bdbc l       .text  00000000 
d000bdc0 l       .text  00000000 
d000bdc0 l       .text  00000000 
d000bdc2 l       .text  00000000 
d000bdc2 l       .text  00000000 
d000bdc4 l       .text  00000000 
d000bdc4 l       .text  00000000 
d000bdc6 l       .text  00000000 
d000bdc6 l       .text  00000000 
d000bdc8 l       .text  00000000 
d000bdc8 l       .text  00000000 
d000bf50 l     F .text  00000038 enqueue_word
d000bdcc l       .text  00000000 
d000bdcc l       .text  00000000 
d000bdce l       .text  00000000 
d000bdce l       .text  00000000 
d000bdd0 l       .text  00000000 
d000bdd2 l       .text  00000000 
d000bdd2 l       .text  00000000 
d000bdd6 l       .text  00000000 
d000bdd6 l       .text  00000000 
d000bddc l       .text  00000000 
d000bde0 l       .text  00000000 
d000bde0 l       .text  00000000 
d000bde4 l       .text  00000000 
d000bde4 l       .text  00000000 
d000bde8 l       .text  00000000 
d000bde8 l       .text  00000000 
d000bdec l       .text  00000000 
d000bdee l       .text  00000000 
d000bdee l       .text  00000000 
d000bdf4 l       .text  00000000 
d000bdf4 l       .text  00000000 
d000bdf8 l       .text  00000000 
d000bdf8 l       .text  00000000 
d000bdfc l       .text  00000000 
d000be04 l       .text  00000000 
d000be04 l       .text  00000000 
d000be0c l       .text  00000000 
d000be0c l       .text  00000000 
d000be10 l       .text  00000000 
d000be16 l       .text  00000000 
d000be1a l       .text  00000000 
d000be22 l       .text  00000000 
d000be28 l       .text  00000000 
d000be2c l       .text  00000000 
d000be2c l       .text  00000000 
d000be2e l       .text  00000000 
d000be2e l       .text  00000000 
d000be30 l       .text  00000000 
d000be30 l       .text  00000000 
d000be32 l       .text  00000000 
d000be32 l       .text  00000000 
d000be34 l       .text  00000000 
d000be34 l       .text  00000000 
d000be38 l       .text  00000000 
d000be38 l       .text  00000000 
d000be3a l       .text  00000000 
d000be3a l       .text  00000000 
d000be3c l       .text  00000000 
d000be3c l       .text  00000000 
d000be3e l       .text  00000000 
d000be3e l       .text  00000000 
d000be40 l       .text  00000000 
d000be40 l       .text  00000000 
d000be44 l       .text  00000000 
d000be44 l       .text  00000000 
d000be46 l       .text  00000000 
d000be46 l       .text  00000000 
d000be4c l       .text  00000000 
d000be4e l       .text  00000000 
d000be52 l       .text  00000000 
d000be52 l       .text  00000000 
d000be58 l       .text  00000000 
d000be5c l       .text  00000000 
d000be5e l       .text  00000000 
d000be5e l       .text  00000000 
d000be64 l       .text  00000000 
d000be68 l       .text  00000000 
d000be68 l       .text  00000000 
d000be6a l       .text  00000000 
d000be6a l       .text  00000000 
d000be6c l       .text  00000000 
d000be6c l       .text  00000000 
d000be6e l       .text  00000000 
d000be6e l       .text  00000000 
d000be70 l       .text  00000000 
d000be70 l       .text  00000000 
d000be74 l       .text  00000000 
d000be74 l       .text  00000000 
d000be76 l       .text  00000000 
d000be76 l       .text  00000000 
d000be78 l       .text  00000000 
d000be7a l       .text  00000000 
d000be7a l       .text  00000000 
d000be7e l       .text  00000000 
d000be7e l       .text  00000000 
d000be84 l       .text  00000000 
d000be88 l       .text  00000000 
d000be88 l       .text  00000000 
d000be8c l       .text  00000000 
d000be8c l       .text  00000000 
d000be90 l       .text  00000000 
d000be90 l       .text  00000000 
d000be94 l       .text  00000000 
d000be9a l       .text  00000000 
d000be9c l       .text  00000000 
d000be9c l       .text  00000000 
d000be9e l       .text  00000000 
d000be9e l       .text  00000000 
d000bea0 l       .text  00000000 
d000bea0 l       .text  00000000 
d000bea8 l       .text  00000000 
d000beb2 l       .text  00000000 
d000beb2 l       .text  00000000 
d000beb2 l       .text  00000000 
d000beb2 l       .text  00000000 
d000beb2 l       .text  00000000 
d000beb4 l       .text  00000000 
d000beb6 l       .text  00000000 
d000beb8 l       .text  00000000 
d000beba l       .text  00000000 
d000bebc l       .text  00000000 
d000bebe l       .text  00000000 
d000bec2 l       .text  00000000 
d000bec4 l       .text  00000000 
d000bec6 l       .text  00000000 
d000bec6 l       .text  00000000 
d000beca l       .text  00000000 
d000becc l       .text  00000000 
d000becc l       .text  00000000 
d000bed2 l       .text  00000000 
d000bed2 l       .text  00000000 
d000bed6 l       .text  00000000 
d000bed6 l       .text  00000000 
d000bed8 l       .text  00000000 
d000bed8 l       .text  00000000 
d000beda l       .text  00000000 
d000beda l       .text  00000000 
d000bedc l       .text  00000000 
d000bedc l       .text  00000000 
d000bee0 l       .text  00000000 
d000bee0 l       .text  00000000 
d000bee2 l       .text  00000000 
d000bee2 l       .text  00000000 
d000bee4 l       .text  00000000 
d000bee4 l       .text  00000000 
d000bee6 l       .text  00000000 
d000bee6 l       .text  00000000 
d000beea l       .text  00000000 
d000beea l       .text  00000000 
d000beee l       .text  00000000 
d000beee l       .text  00000000 
d000bef0 l       .text  00000000 
d000bef0 l       .text  00000000 
d000bef2 l       .text  00000000 
d000bef6 l       .text  00000000 
d000bef6 l       .text  00000000 
d000befa l       .text  00000000 
d000befa l       .text  00000000 
d000befe l       .text  00000000 
d000befe l       .text  00000000 
d000bf04 l       .text  00000000 
d000bf04 l       .text  00000000 
d000bf06 l       .text  00000000 
d000bf06 l       .text  00000000 
d000bf0a l       .text  00000000 
d000bf0a l       .text  00000000 
d000bf0c l       .text  00000000 
d000bf0e l       .text  00000000 
d000bf0e l       .text  00000000 
d000bf12 l       .text  00000000 
d000bf12 l       .text  00000000 
d000bf14 l       .text  00000000 
d000bf14 l       .text  00000000 
d000bf16 l       .text  00000000 
d000bf16 l       .text  00000000 
d000bf1a l       .text  00000000 
d000bf1a l       .text  00000000 
d000bf1c l       .text  00000000 
d000bf1c l       .text  00000000 
d000bf1e l       .text  00000000 
d000bf1e l       .text  00000000 
d000bf20 l       .text  00000000 
d000bf20 l       .text  00000000 
d000bf22 l       .text  00000000 
d000bf22 l       .text  00000000 
d000bf24 l       .text  00000000 
d000bf24 l       .text  00000000 
d000bf26 l       .text  00000000 
d000bf26 l       .text  00000000 
d000bf28 l       .text  00000000 
d000bf28 l       .text  00000000 
d000bf2e l       .text  00000000 
d000bf2e l       .text  00000000 
d000bf30 l       .text  00000000 
d000bf30 l       .text  00000000 
d000bf34 l       .text  00000000 
d000bf34 l       .text  00000000 
d000bf34 l       .text  00000000 
d000bf34 l       .text  00000000 
d000bf34 l       .text  00000000 
d000bf34 l       .text  00000000 
d000bf36 l       .text  00000000 
d000bf38 l       .text  00000000 
d000bf38 l       .text  00000000 
d000bf3a l       .text  00000000 
d000bf3a l       .text  00000000 
d000bf3c l       .text  00000000 
d000bf42 l       .text  00000000 
d000bf42 l       .text  00000000 
d000bf44 l       .text  00000000 
d000bf44 l       .text  00000000 
d000bf46 l       .text  00000000 
d000bf46 l       .text  00000000 
d000bf48 l       .text  00000000 
d000bf48 l       .text  00000000 
d000bf4a l       .text  00000000 
d000bf4a l       .text  00000000 
d000bf4c l       .text  00000000 
d000bf4c l       .text  00000000 
d000bf4e l       .text  00000000 
d000bf4e l       .text  00000000 
d000bf50 l       .text  00000000 
d000bf50 l       .text  00000000 
d000bf50 l       .text  00000000 
d000bf50 l       .text  00000000 
d000bf50 l       .text  00000000 
d000bf50 l       .text  00000000 
d000bf52 l       .text  00000000 
d000bf56 l       .text  00000000 
d000bf58 l       .text  00000000 
d000bf58 l       .text  00000000 
d000bf5e l       .text  00000000 
d000bf60 l       .text  00000000 
d000bf66 l       .text  00000000 
d000bf66 l       .text  00000000 
d000bf68 l       .text  00000000 
d000bf68 l       .text  00000000 
d000bf6a l       .text  00000000 
d000bf6a l       .text  00000000 
d000bf70 l       .text  00000000 
d000bf72 l       .text  00000000 
d000bf72 l       .text  00000000 
d000bf74 l       .text  00000000 
d000bf74 l       .text  00000000 
d000bf78 l       .text  00000000 
d000bf78 l       .text  00000000 
d000bf7a l       .text  00000000 
d000bf7a l       .text  00000000 
d000bf7c l       .text  00000000 
d000bf7c l       .text  00000000 
d000bf7e l       .text  00000000 
d000bf7e l       .text  00000000 
d000bf80 l       .text  00000000 
d000bf80 l       .text  00000000 
d000bf82 l       .text  00000000 
d000bf86 l       .text  00000000 
d000bf88 l       .text  00000000 
d000bf88 l       .text  00000000 
d000bf88 l       .text  00000000 
d000bf88 l       .text  00000000 
d000bf88 l       .text  00000000 
d000bf8a l       .text  00000000 
d000bfa4 l       .text  00000000 
d000bfa6 l       .text  00000000 
d000bfa6 l       .text  00000000 
d000bfa8 l       .text  00000000 
d000bfa8 l       .text  00000000 
d000bfaa l       .text  00000000 
d000bfaa l       .text  00000000 
d000bfae l       .text  00000000 
d000bfb0 l       .text  00000000 
d000bfb2 l       .text  00000000 
d000bfc8 l       .text  00000000 
d000bfde l       .text  00000000 
d000bfe0 l       .text  00000000 
d000bfe0 l       .text  00000000 
d000bfe4 l       .text  00000000 
d000bfe4 l       .text  00000000 
d000bfe6 l       .text  00000000 
d000bfe6 l       .text  00000000 
d000bfea l       .text  00000000 
d000bfea l       .text  00000000 
d000bff2 l       .text  00000000 
d000bff6 l       .text  00000000 
d000c004 l       .text  00000000 
d000c006 l       .text  00000000 
d000c006 l       .text  00000000 
d000c008 l       .text  00000000 
d000c008 l       .text  00000000 
d000c00c l       .text  00000000 
d000c00c l       .text  00000000 
d000c010 l       .text  00000000 
d000c010 l       .text  00000000 
d000c014 l       .text  00000000 
d000c014 l       .text  00000000 
d000c01a l       .text  00000000 
d000c01a l       .text  00000000 
d000c01e l       .text  00000000 
d000c01e l       .text  00000000 
d000c022 l       .text  00000000 
d000c022 l       .text  00000000 
d000c026 l       .text  00000000 
d000c028 l       .text  00000000 
d000c028 l       .text  00000000 
d000c02a l       .text  00000000 
d000c02a l       .text  00000000 
d000c02e l       .text  00000000 
d000c02e l       .text  00000000 
d000c032 l       .text  00000000 
d000c032 l       .text  00000000 
d000c034 l       .text  00000000 
d000c034 l       .text  00000000 
d000c046 l       .text  00000000 
d000c046 l       .text  00000000 
d000c04a l       .text  00000000 
d000c04a l       .text  00000000 
d000c052 l       .text  00000000 
d000c056 l       .text  00000000 
d000c056 l       .text  00000000 
d000c05c l       .text  00000000 
d000c05e l       .text  00000000 
d000c060 l       .text  00000000 
d000c060 l       .text  00000000 
d000c064 l       .text  00000000 
d000c064 l       .text  00000000 
d000c068 l       .text  00000000 
d000c06a l       .text  00000000 
d000c06c l       .text  00000000 
d000c074 l       .text  00000000 
d000c076 l       .text  00000000 
d000c076 l       .text  00000000 
d000c07a l       .text  00000000 
d000c07a l       .text  00000000 
d000c07e l       .text  00000000 
d000c07e l       .text  00000000 
d000c082 l       .text  00000000 
d000c082 l       .text  00000000 
d000c088 l       .text  00000000 
d000c088 l       .text  00000000 
d000c08a l       .text  00000000 
d000c08a l       .text  00000000 
d000c08c l       .text  00000000 
d000c08c l       .text  00000000 
d000c08e l       .text  00000000 
d000c092 l       .text  00000000 
d000c092 l       .text  00000000 
d000c096 l       .text  00000000 
d000c096 l       .text  00000000 
d000c09a l       .text  00000000 
d000c09c l       .text  00000000 
d000c09e l       .text  00000000 
d000c0a2 l       .text  00000000 
d000c0a2 l       .text  00000000 
d000c0a4 l       .text  00000000 
d000c0a4 l       .text  00000000 
d000c0a6 l       .text  00000000 
d000c0a6 l       .text  00000000 
d000c0aa l       .text  00000000 
d000c0aa l       .text  00000000 
d000c0ae l       .text  00000000 
d000c0ae l       .text  00000000 
d000c0b0 l       .text  00000000 
d000c0bc l       .text  00000000 
d000c0c0 l       .text  00000000 
d000c0c0 l       .text  00000000 
d000c0c4 l       .text  00000000 
d000c0c4 l       .text  00000000 
d000c0c8 l       .text  00000000 
d000c0c8 l       .text  00000000 
d000c0ca l       .text  00000000 
d000c0cc l       .text  00000000 
d000c0cc l       .text  00000000 
d000c0d0 l       .text  00000000 
d000c0d0 l       .text  00000000 
d000c0d4 l       .text  00000000 
d000c0d4 l       .text  00000000 
d000c0d6 l       .text  00000000 
d000c0e2 l       .text  00000000 
d000c0e4 l       .text  00000000 
d000c0e4 l       .text  00000000 
d000c0ec l       .text  00000000 
d000c0ec l       .text  00000000 
d000c0f0 l       .text  00000000 
d000c0f0 l       .text  00000000 
d000c0f4 l       .text  00000000 
d000c0fa l       .text  00000000 
d000c0fe l       .text  00000000 
d000c0fe l       .text  00000000 
d000c102 l       .text  00000000 
d000c102 l       .text  00000000 
d000c104 l       .text  00000000 
d000c104 l       .text  00000000 
d000c106 l       .text  00000000 
d000c106 l       .text  00000000 
d000c108 l       .text  00000000 
d000c108 l       .text  00000000 
d000c10a l       .text  00000000 
d000c10a l       .text  00000000 
d000c10e l       .text  00000000 
d000c10e l       .text  00000000 
d000c112 l       .text  00000000 
d000c114 l       .text  00000000 
d000c11e l       .text  00000000 
d000c11e l       .text  00000000 
d000c126 l       .text  00000000 
d000c12a l       .text  00000000 
d000c134 l       .text  00000000 
d000c138 l       .text  00000000 
d000c13e l       .text  00000000 
d000c148 l       .text  00000000 
d000c148 l       .text  00000000 
d000c14a l       .text  00000000 
d000c14e l       .text  00000000 
d000c152 l       .text  00000000 
d000c152 l       .text  00000000 
d000c154 l       .text  00000000 
d000c164 l       .text  00000000 
d000c172 l       .text  00000000 
d000c172 l       .text  00000000 
d000c176 l       .text  00000000 
d000c176 l       .text  00000000 
000068b5 l       .debug_loc     00000000 
000068d0 l       .debug_loc     00000000 
000068eb l       .debug_loc     00000000 
00006911 l       .debug_loc     00000000 
0000692c l       .debug_loc     00000000 
00006947 l       .debug_loc     00000000 
0000696b l       .debug_loc     00000000 
00006986 l       .debug_loc     00000000 
000069a1 l       .debug_loc     00000000 
000069bc l       .debug_loc     00000000 
000069e0 l       .debug_loc     00000000 
000069fb l       .debug_loc     00000000 
00006a16 l       .debug_loc     00000000 
00006a31 l       .debug_loc     00000000 
00006a4c l       .debug_loc     00000000 
00006a70 l       .debug_loc     00000000 
00006a8b l       .debug_loc     00000000 
00006aa6 l       .debug_loc     00000000 
00006ad7 l       .debug_loc     00000000 
00006b08 l       .debug_loc     00000000 
00006b39 l       .debug_loc     00000000 
00006b54 l       .debug_loc     00000000 
00006b6f l       .debug_loc     00000000 
00006b92 l       .debug_loc     00000000 
00006bad l       .debug_loc     00000000 
00006bc8 l       .debug_loc     00000000 
00006c06 l       .debug_loc     00000000 
00006c25 l       .debug_loc     00000000 
00006c40 l       .debug_loc     00000000 
00006c6d l       .debug_loc     00000000 
00006c90 l       .debug_loc     00000000 
00006cab l       .debug_loc     00000000 
00006cc6 l       .debug_loc     00000000 
00006ce9 l       .debug_loc     00000000 
00006d04 l       .debug_loc     00000000 
00006d1f l       .debug_loc     00000000 
00006d5d l       .debug_loc     00000000 
00006d7c l       .debug_loc     00000000 
00006d97 l       .debug_loc     00000000 
00006db7 l       .debug_loc     00000000 
00006dd2 l       .debug_loc     00000000 
00006dee l       .debug_loc     00000000 
00006e09 l       .debug_loc     00000000 
00006e24 l       .debug_loc     00000000 
00006e47 l       .debug_loc     00000000 
00006e68 l       .debug_loc     00000000 
00006eb5 l       .debug_loc     00000000 
00006ed0 l       .debug_loc     00000000 
00006ef7 l       .debug_loc     00000000 
00006f1c l       .debug_loc     00000000 
00006f3e l       .debug_loc     00000000 
00006f59 l       .debug_loc     00000000 
00006f7b l       .debug_loc     00000000 
00006f9c l       .debug_loc     00000000 
00006fb7 l       .debug_loc     00000000 
00006fd7 l       .debug_loc     00000000 
00006ff3 l       .debug_loc     00000000 
0000700e l       .debug_loc     00000000 
00007030 l       .debug_loc     00000000 
0000704b l       .debug_loc     00000000 
00007071 l       .debug_loc     00000000 
0000708d l       .debug_loc     00000000 
000070a8 l       .debug_loc     00000000 
000070ca l       .debug_loc     00000000 
000070e6 l       .debug_loc     00000000 
00007106 l       .debug_loc     00000000 
00007128 l       .debug_loc     00000000 
00007143 l       .debug_loc     00000000 
0000715e l       .debug_loc     00000000 
00007184 l       .debug_loc     00000000 
000071b4 l       .debug_loc     00000000 
000071cf l       .debug_loc     00000000 
000071ef l       .debug_loc     00000000 
00007211 l       .debug_loc     00000000 
00007231 l       .debug_loc     00000000 
00007257 l       .debug_loc     00000000 
00007272 l       .debug_loc     00000000 
000072a7 l       .debug_loc     00000000 
000072ef l       .debug_loc     00000000 
0000732b l       .debug_loc     00000000 
00007346 l       .debug_loc     00000000 
00007382 l       .debug_loc     00000000 
000073be l       .debug_loc     00000000 
000073e5 l       .debug_loc     00000000 
00007400 l       .debug_loc     00000000 
00007420 l       .debug_loc     00000000 
00007442 l       .debug_loc     00000000 
00007466 l       .debug_loc     00000000 
00007481 l       .debug_loc     00000000 
0000749c l       .debug_loc     00000000 
000074be l       .debug_loc     00000000 
000074e7 l       .debug_loc     00000000 
0000750b l       .debug_loc     00000000 
00007526 l       .debug_loc     00000000 
00007541 l       .debug_loc     00000000 
0000755c l       .debug_loc     00000000 
00007577 l       .debug_loc     00000000 
00007592 l       .debug_loc     00000000 
000075b4 l       .debug_loc     00000000 
000075cf l       .debug_loc     00000000 
000075f1 l       .debug_loc     00000000 
0000760d l       .debug_loc     00000000 
00007628 l       .debug_loc     00000000 
00007643 l       .debug_loc     00000000 
0000765e l       .debug_loc     00000000 
00007685 l       .debug_loc     00000000 
000076aa l       .debug_loc     00000000 
000076ce l       .debug_loc     00000000 
000076f5 l       .debug_loc     00000000 
00007725 l       .debug_loc     00000000 
0000774d l       .debug_loc     00000000 
0000776a l       .debug_loc     00000000 
00007790 l       .debug_loc     00000000 
000077ab l       .debug_loc     00000000 
000077c6 l       .debug_loc     00000000 
000077e8 l       .debug_loc     00000000 
0000780a l       .debug_loc     00000000 
0000783b l       .debug_loc     00000000 
0000787a l       .debug_loc     00000000 
000078ab l       .debug_loc     00000000 
000078c6 l       .debug_loc     00000000 
000078e2 l       .debug_loc     00000000 
00007906 l       .debug_loc     00000000 
0000792d l       .debug_loc     00000000 
0000794f l       .debug_loc     00000000 
00007971 l       .debug_loc     00000000 
00007993 l       .debug_loc     00000000 
000079af l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00006727 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00000b18 l       .debug_ranges  00000000 
00000326 l       .debug_str     00000000 
000002c3 l       .debug_str     00000000 
000002ca l       .debug_str     00000000 
000002d4 l       .debug_str     00000000 
000002df l       .debug_str     00000000 
000002ea l       .debug_str     00000000 
000002fa l       .debug_str     00000000 
00000309 l       .debug_str     00000000 
00000318 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
0000045f l       .debug_str     00000000 
000003b2 l       .debug_str     00000000 
000003cf l       .debug_str     00000000 
000003ed l       .debug_str     00000000 
00000409 l       .debug_str     00000000 
00000422 l       .debug_str     00000000 
0000043b l       .debug_str     00000000 
000004bc l       .debug_str     00000000 
00000479 l       .debug_str     00000000 
00000492 l       .debug_str     00000000 
000004a7 l       .debug_str     00000000 
000004fb l       .debug_str     00000000 
000004cf l       .debug_str     00000000 
000004e5 l       .debug_str     00000000 
000067b2 l       .debug_str     00000000 
00006748 l       .debug_str     00000000 
00006762 l       .debug_str     00000000 
00006779 l       .debug_str     00000000 
00006790 l       .debug_str     00000000 
00000fc6 l       .debug_str     00000000 
000001ce l       .debug_str     00000000 
000001c0 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
000067c9 l       .debug_str     00000000 
0001a6a3 l       .debug_str     00000000 
000064d3 l       .debug_str     00000000 
00000175 l       .debug_str     00000000 
000064dd l       .debug_str     00000000 
00000288 l       .debug_str     00000000 
0001bb62 l       .debug_str     00000000 
00000299 l       .debug_str     00000000 
0000028d l       .debug_str     00000000 
000067db l       .debug_str     00000000 
000002ab l       .debug_str     00000000 
000067e8 l       .debug_str     00000000 
0000334c l       .debug_str     00000000 
000002b4 l       .debug_str     00000000 
000002a7 l       .debug_str     00000000 
0000027e l       .debug_str     00000000 
000067ed l       .debug_str     00000000 
000067fc l       .debug_str     00000000 
00002b9a l       .debug_str     00000000 
00002b63 l       .debug_str     00000000 
000010d4 l       .debug_str     00000000 
00003912 l       .debug_str     00000000 
000012c4 l       .debug_str     00000000 
000012b3 l       .debug_str     00000000 
0001a4da l       .debug_str     00000000 
000020fd l       .debug_str     00000000 
00006804 l       .debug_str     00000000 
0001bb6e l       .debug_str     00000000 
00006817 l       .debug_str     00000000 
000037aa l       .debug_str     00000000 
0000219f l       .debug_str     00000000 
0001b17a l       .debug_str     00000000 
000064bf l       .debug_str     00000000 
0000692c l       .debug_str     00000000 
0001aa41 l       .debug_str     00000000 
000009b8 l       .debug_ranges  00000000 
000009d0 l       .debug_ranges  00000000 
00006827 l       .debug_str     00000000 
00006834 l       .debug_str     00000000 
00006839 l       .debug_str     00000000 
00006846 l       .debug_str     00000000 
00006854 l       .debug_str     00000000 
0000684c l       .debug_str     00000000 
00001216 l       .debug_str     00000000 
00001937 l       .debug_str     00000000 
000000b5 l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
00000179 l       .debug_str     00000000 
00000162 l       .debug_str     00000000 
0000685a l       .debug_str     00000000 
00006862 l       .debug_str     00000000 
0000686b l       .debug_str     00000000 
00002b79 l       .debug_str     00000000 
00006944 l       .debug_str     00000000 
00006968 l       .debug_str     00000000 
000009e8 l       .debug_ranges  00000000 
00000a00 l       .debug_ranges  00000000 
000014a0 l       .debug_str     00000000 
0000695b l       .debug_str     00000000 
0001b267 l       .debug_str     00000000 
00000a78 l       .debug_ranges  00000000 
00006878 l       .debug_str     00000000 
00006887 l       .debug_str     00000000 
00001040 l       .debug_str     00000000 
000025c4 l       .debug_str     00000000 
00006501 l       .debug_str     00000000 
0000182c l       .debug_str     00000000 
0000129c l       .debug_str     00000000 
00001817 l       .debug_str     00000000 
0000688e l       .debug_str     00000000 
00003397 l       .debug_str     00000000 
00000fe4 l       .debug_str     00000000 
00006392 l       .debug_str     00000000 
0000696c l       .debug_str     00000000 
00000a18 l       .debug_ranges  00000000 
00000a30 l       .debug_ranges  00000000 
00000a48 l       .debug_ranges  00000000 
00000a60 l       .debug_ranges  00000000 
000010a0 l       .debug_str     00000000 
000066f1 l       .debug_str     00000000 
0000689e l       .debug_str     00000000 
000068ab l       .debug_str     00000000 
000068b0 l       .debug_str     00000000 
000068b6 l       .debug_str     00000000 
000068c8 l       .debug_str     00000000 
000068c3 l       .debug_str     00000000 
000019a8 l       .debug_str     00000000 
0000122f l       .debug_str     00000000 
0001bd0c l       .debug_str     00000000 
00002449 l       .debug_str     00000000 
00006907 l       .debug_str     00000000 
000004c9 l       .debug_str     00000000 
0001aeb1 l       .debug_str     00000000 
00006915 l       .debug_str     00000000 
0001a603 l       .debug_str     00000000 
0000122b l       .debug_str     00000000 
000018e0 l       .debug_str     00000000 
0000121d l       .debug_str     00000000 
00001223 l       .debug_str     00000000 
00001229 l       .debug_str     00000000 
000011cc l       .debug_str     00000000 
000011e8 l       .debug_str     00000000 
000011fd l       .debug_str     00000000 
00003401 l       .debug_str     00000000 
000068d0 l       .debug_str     00000000 
000068e2 l       .debug_str     00000000 
000067bf l       .debug_str     00000000 
00002b40 l       .debug_str     00000000 
00001312 l       .debug_str     00000000 
000068e8 l       .debug_str     00000000 
00006901 l       .debug_str     00000000 
000010c0 l       .debug_str     00000000 
0000690f l       .debug_str     00000000 
0000691b l       .debug_str     00000000 
00001992 l       .debug_str     00000000 
000011b3 l       .debug_str     00000000 
00006974 l       .debug_str     00000000 
0000199f l       .debug_str     00000000 
00000b00 l       .debug_ranges  00000000 
00000a98 l       .debug_ranges  00000000 
00000ab0 l       .debug_ranges  00000000 
00000ac8 l       .debug_ranges  00000000 
00000ae8 l       .debug_ranges  00000000 
000031bd l       .debug_str     00000000 
0000197c l       .debug_str     00000000 
00001050 l       .debug_str     00000000 
00000ffb l       .debug_str     00000000 
00001005 l       .debug_str     00000000 
0000101e l       .debug_str     00000000 
000061c7 l       .debug_str     00000000 
0000102a l       .debug_str     00000000 
00001030 l       .debug_str     00000000 
00001035 l       .debug_str     00000000 
00001046 l       .debug_str     00000000 
0000104b l       .debug_str     00000000 
00000b10 l       .debug_frame   00000000 
d000bd5a l       .text  00000000 
d000beb2 l       .text  00000000 
d000bf34 l       .text  00000000 
d000bf50 l       .text  00000000 
d000bf88 l       .text  00000000 
d000c176 l       .text  00000000 
00000000 l    df *ABS*  00000000 alsaqr_periph_padframe.c
d000c176 l       .text  00000000 
d000c176 l       .text  00000000 
d000c176 l       .text  00000000 
d000c176 l       .text  00000000 
d000c178 l       .text  00000000 
d000c178 l       .text  00000000 
d000c17c l       .text  00000000 
d000c180 l       .text  00000000 
d000c182 l       .text  00000000 
d000c182 l       .text  00000000 
d000c182 l       .text  00000000 
d000c182 l       .text  00000000 
d000c182 l       .text  00000000 
d000c182 l       .text  00000000 
d000c184 l       .text  00000000 
d000c184 l       .text  00000000 
d000c188 l       .text  00000000 
d000c18c l       .text  00000000 
d000c18e l       .text  00000000 
d000c18e l       .text  00000000 
d000c18e l       .text  00000000 
d000c18e l       .text  00000000 
d000c18e l       .text  00000000 
d000c18e l       .text  00000000 
d000c190 l       .text  00000000 
d000c190 l       .text  00000000 
d000c194 l       .text  00000000 
d000c198 l       .text  00000000 
d000c19a l       .text  00000000 
d000c19a l       .text  00000000 
d000c19a l       .text  00000000 
d000c19a l       .text  00000000 
d000c19a l       .text  00000000 
d000c19a l       .text  00000000 
d000c19c l       .text  00000000 
d000c19c l       .text  00000000 
d000c1a0 l       .text  00000000 
d000c1a4 l       .text  00000000 
d000c1a6 l       .text  00000000 
d000c1a6 l       .text  00000000 
000079d6 l       .debug_loc     00000000 
000079f1 l       .debug_loc     00000000 
00007a12 l       .debug_loc     00000000 
00007a38 l       .debug_loc     00000000 
00007a5e l       .debug_loc     00000000 
00007a80 l       .debug_loc     00000000 
00007a9b l       .debug_loc     00000000 
00007ab6 l       .debug_loc     00000000 
00007ad1 l       .debug_loc     00000000 
00007af2 l       .debug_loc     00000000 
00007b14 l       .debug_loc     00000000 
00007b3a l       .debug_loc     00000000 
00007b60 l       .debug_loc     00000000 
00007b82 l       .debug_loc     00000000 
00007b9d l       .debug_loc     00000000 
00007bb8 l       .debug_loc     00000000 
00007bde l       .debug_loc     00000000 
00007c04 l       .debug_loc     00000000 
00007c26 l       .debug_loc     00000000 
00007c41 l       .debug_loc     00000000 
00007c5c l       .debug_loc     00000000 
00007c77 l       .debug_loc     00000000 
00007c9d l       .debug_loc     00000000 
00007cc3 l       .debug_loc     00000000 
00007ce5 l       .debug_loc     00000000 
00007d00 l       .debug_loc     00000000 
00007d1b l       .debug_loc     00000000 
00007d36 l       .debug_loc     00000000 
00007d5c l       .debug_loc     00000000 
00007d82 l       .debug_loc     00000000 
00007da4 l       .debug_loc     00000000 
00007dbf l       .debug_loc     00000000 
00007dda l       .debug_loc     00000000 
00007df5 l       .debug_loc     00000000 
00007e1b l       .debug_loc     00000000 
00007e41 l       .debug_loc     00000000 
00007e63 l       .debug_loc     00000000 
00007e7e l       .debug_loc     00000000 
00007e99 l       .debug_loc     00000000 
00007eb4 l       .debug_loc     00000000 
00007ecf l       .debug_loc     00000000 
00007ef0 l       .debug_loc     00000000 
00007f16 l       .debug_loc     00000000 
00007f3c l       .debug_loc     00000000 
00007f5e l       .debug_loc     00000000 
00007f79 l       .debug_loc     00000000 
00007f94 l       .debug_loc     00000000 
00007faf l       .debug_loc     00000000 
00007fd0 l       .debug_loc     00000000 
00007ff2 l       .debug_loc     00000000 
00008018 l       .debug_loc     00000000 
0000803e l       .debug_loc     00000000 
00008060 l       .debug_loc     00000000 
0000807b l       .debug_loc     00000000 
00008096 l       .debug_loc     00000000 
000080bc l       .debug_loc     00000000 
000080e2 l       .debug_loc     00000000 
00008104 l       .debug_loc     00000000 
0000811f l       .debug_loc     00000000 
0000813a l       .debug_loc     00000000 
00008155 l       .debug_loc     00000000 
0000817b l       .debug_loc     00000000 
000081a1 l       .debug_loc     00000000 
000081c3 l       .debug_loc     00000000 
000081de l       .debug_loc     00000000 
000081f9 l       .debug_loc     00000000 
00008214 l       .debug_loc     00000000 
0000823a l       .debug_loc     00000000 
00008260 l       .debug_loc     00000000 
00008282 l       .debug_loc     00000000 
0000829d l       .debug_loc     00000000 
000082b8 l       .debug_loc     00000000 
000082d3 l       .debug_loc     00000000 
000082f9 l       .debug_loc     00000000 
0000831f l       .debug_loc     00000000 
00008341 l       .debug_loc     00000000 
0000835c l       .debug_loc     00000000 
00008377 l       .debug_loc     00000000 
00008392 l       .debug_loc     00000000 
000083ad l       .debug_loc     00000000 
000083ce l       .debug_loc     00000000 
000083f4 l       .debug_loc     00000000 
0000841a l       .debug_loc     00000000 
0000843c l       .debug_loc     00000000 
00008457 l       .debug_loc     00000000 
00008472 l       .debug_loc     00000000 
0000848d l       .debug_loc     00000000 
000084ae l       .debug_loc     00000000 
000084d0 l       .debug_loc     00000000 
000084f6 l       .debug_loc     00000000 
0000851c l       .debug_loc     00000000 
0000853e l       .debug_loc     00000000 
00008559 l       .debug_loc     00000000 
00008574 l       .debug_loc     00000000 
0000859a l       .debug_loc     00000000 
000085c0 l       .debug_loc     00000000 
000085e2 l       .debug_loc     00000000 
000085fd l       .debug_loc     00000000 
00008618 l       .debug_loc     00000000 
00008633 l       .debug_loc     00000000 
00008659 l       .debug_loc     00000000 
0000867f l       .debug_loc     00000000 
000086a1 l       .debug_loc     00000000 
000086bc l       .debug_loc     00000000 
000086d7 l       .debug_loc     00000000 
000086f2 l       .debug_loc     00000000 
00008718 l       .debug_loc     00000000 
0000873e l       .debug_loc     00000000 
00008760 l       .debug_loc     00000000 
0000877b l       .debug_loc     00000000 
00008796 l       .debug_loc     00000000 
000087b1 l       .debug_loc     00000000 
000087d7 l       .debug_loc     00000000 
000087fd l       .debug_loc     00000000 
0000881f l       .debug_loc     00000000 
0000883a l       .debug_loc     00000000 
00008855 l       .debug_loc     00000000 
00008870 l       .debug_loc     00000000 
0000888b l       .debug_loc     00000000 
000088ac l       .debug_loc     00000000 
000088d2 l       .debug_loc     00000000 
000088f8 l       .debug_loc     00000000 
0000891a l       .debug_loc     00000000 
00008935 l       .debug_loc     00000000 
00008950 l       .debug_loc     00000000 
0000896b l       .debug_loc     00000000 
0000898c l       .debug_loc     00000000 
000089ae l       .debug_loc     00000000 
000089d4 l       .debug_loc     00000000 
000089fa l       .debug_loc     00000000 
00008a1c l       .debug_loc     00000000 
00008a37 l       .debug_loc     00000000 
00008a52 l       .debug_loc     00000000 
00008a78 l       .debug_loc     00000000 
00008a9e l       .debug_loc     00000000 
00008ac0 l       .debug_loc     00000000 
00008adb l       .debug_loc     00000000 
00008af6 l       .debug_loc     00000000 
00008b11 l       .debug_loc     00000000 
00008b37 l       .debug_loc     00000000 
00008b5d l       .debug_loc     00000000 
00008b7f l       .debug_loc     00000000 
00008b9a l       .debug_loc     00000000 
00008bb5 l       .debug_loc     00000000 
00008bd0 l       .debug_loc     00000000 
00008bf6 l       .debug_loc     00000000 
00008c1c l       .debug_loc     00000000 
00008c3e l       .debug_loc     00000000 
00008c59 l       .debug_loc     00000000 
00008c74 l       .debug_loc     00000000 
00008c8f l       .debug_loc     00000000 
00008cb5 l       .debug_loc     00000000 
00008cdb l       .debug_loc     00000000 
00008cfd l       .debug_loc     00000000 
00008d18 l       .debug_loc     00000000 
00008d33 l       .debug_loc     00000000 
00008d4e l       .debug_loc     00000000 
00008d69 l       .debug_loc     00000000 
00008d8a l       .debug_loc     00000000 
00008db0 l       .debug_loc     00000000 
00008dd6 l       .debug_loc     00000000 
00008df8 l       .debug_loc     00000000 
00008e13 l       .debug_loc     00000000 
00008e2e l       .debug_loc     00000000 
00008e49 l       .debug_loc     00000000 
00008e6a l       .debug_loc     00000000 
00008e8c l       .debug_loc     00000000 
00008eb2 l       .debug_loc     00000000 
00008ed8 l       .debug_loc     00000000 
00008efa l       .debug_loc     00000000 
00008f15 l       .debug_loc     00000000 
00008f30 l       .debug_loc     00000000 
00008f56 l       .debug_loc     00000000 
00008f7c l       .debug_loc     00000000 
00008f9e l       .debug_loc     00000000 
00008fb9 l       .debug_loc     00000000 
00008fd4 l       .debug_loc     00000000 
00008fef l       .debug_loc     00000000 
00009015 l       .debug_loc     00000000 
0000903b l       .debug_loc     00000000 
0000905d l       .debug_loc     00000000 
00009078 l       .debug_loc     00000000 
00009093 l       .debug_loc     00000000 
000090ae l       .debug_loc     00000000 
000090d4 l       .debug_loc     00000000 
000090fa l       .debug_loc     00000000 
0000911c l       .debug_loc     00000000 
00009137 l       .debug_loc     00000000 
00009152 l       .debug_loc     00000000 
0000916d l       .debug_loc     00000000 
00009193 l       .debug_loc     00000000 
000091b9 l       .debug_loc     00000000 
000091db l       .debug_loc     00000000 
000091f6 l       .debug_loc     00000000 
00009211 l       .debug_loc     00000000 
0000922c l       .debug_loc     00000000 
00009247 l       .debug_loc     00000000 
00009268 l       .debug_loc     00000000 
0000928e l       .debug_loc     00000000 
000092b4 l       .debug_loc     00000000 
000092d6 l       .debug_loc     00000000 
000092f1 l       .debug_loc     00000000 
0000930c l       .debug_loc     00000000 
00009327 l       .debug_loc     00000000 
00009348 l       .debug_loc     00000000 
0000936a l       .debug_loc     00000000 
00009390 l       .debug_loc     00000000 
000093b6 l       .debug_loc     00000000 
000093d8 l       .debug_loc     00000000 
000093f3 l       .debug_loc     00000000 
0000940e l       .debug_loc     00000000 
00009434 l       .debug_loc     00000000 
0000945a l       .debug_loc     00000000 
0000947c l       .debug_loc     00000000 
00009497 l       .debug_loc     00000000 
000094b2 l       .debug_loc     00000000 
000094cd l       .debug_loc     00000000 
000094f3 l       .debug_loc     00000000 
00009519 l       .debug_loc     00000000 
0000953b l       .debug_loc     00000000 
00009556 l       .debug_loc     00000000 
00009571 l       .debug_loc     00000000 
0000958c l       .debug_loc     00000000 
000095b2 l       .debug_loc     00000000 
000095d8 l       .debug_loc     00000000 
000095fa l       .debug_loc     00000000 
00009615 l       .debug_loc     00000000 
00009630 l       .debug_loc     00000000 
0000964b l       .debug_loc     00000000 
00009671 l       .debug_loc     00000000 
00009697 l       .debug_loc     00000000 
000096b9 l       .debug_loc     00000000 
000096d4 l       .debug_loc     00000000 
000096ef l       .debug_loc     00000000 
0000970a l       .debug_loc     00000000 
00009725 l       .debug_loc     00000000 
00009746 l       .debug_loc     00000000 
0000976c l       .debug_loc     00000000 
00009792 l       .debug_loc     00000000 
000097b4 l       .debug_loc     00000000 
000097cf l       .debug_loc     00000000 
000097ea l       .debug_loc     00000000 
00009805 l       .debug_loc     00000000 
00009826 l       .debug_loc     00000000 
00009848 l       .debug_loc     00000000 
0000986e l       .debug_loc     00000000 
00009894 l       .debug_loc     00000000 
000098b6 l       .debug_loc     00000000 
000098d1 l       .debug_loc     00000000 
000098ec l       .debug_loc     00000000 
00009912 l       .debug_loc     00000000 
00009938 l       .debug_loc     00000000 
0000995a l       .debug_loc     00000000 
00009975 l       .debug_loc     00000000 
00009990 l       .debug_loc     00000000 
000099ab l       .debug_loc     00000000 
000099d1 l       .debug_loc     00000000 
000099f7 l       .debug_loc     00000000 
00009a19 l       .debug_loc     00000000 
00009a34 l       .debug_loc     00000000 
00009a4f l       .debug_loc     00000000 
00009a6a l       .debug_loc     00000000 
00009a90 l       .debug_loc     00000000 
00009ab6 l       .debug_loc     00000000 
00009ad8 l       .debug_loc     00000000 
00009af3 l       .debug_loc     00000000 
00009b0e l       .debug_loc     00000000 
00009b29 l       .debug_loc     00000000 
00009b4f l       .debug_loc     00000000 
00009b75 l       .debug_loc     00000000 
00009b97 l       .debug_loc     00000000 
00009bb2 l       .debug_loc     00000000 
00009bcd l       .debug_loc     00000000 
00009be8 l       .debug_loc     00000000 
00009c03 l       .debug_loc     00000000 
00009c24 l       .debug_loc     00000000 
00009c4a l       .debug_loc     00000000 
00009c70 l       .debug_loc     00000000 
00009c92 l       .debug_loc     00000000 
00009cad l       .debug_loc     00000000 
00009cc8 l       .debug_loc     00000000 
00009ce3 l       .debug_loc     00000000 
00009d04 l       .debug_loc     00000000 
00009d26 l       .debug_loc     00000000 
00009d4c l       .debug_loc     00000000 
00009d72 l       .debug_loc     00000000 
00009d94 l       .debug_loc     00000000 
00009daf l       .debug_loc     00000000 
00009dca l       .debug_loc     00000000 
00009df0 l       .debug_loc     00000000 
00009e16 l       .debug_loc     00000000 
00009e38 l       .debug_loc     00000000 
00009e53 l       .debug_loc     00000000 
00009e6e l       .debug_loc     00000000 
00009e89 l       .debug_loc     00000000 
00009eaf l       .debug_loc     00000000 
00009ed5 l       .debug_loc     00000000 
00009ef7 l       .debug_loc     00000000 
00009f12 l       .debug_loc     00000000 
00009f2d l       .debug_loc     00000000 
00009f48 l       .debug_loc     00000000 
00009f6e l       .debug_loc     00000000 
00009f94 l       .debug_loc     00000000 
00009fb6 l       .debug_loc     00000000 
00009fd1 l       .debug_loc     00000000 
00009fec l       .debug_loc     00000000 
0000a007 l       .debug_loc     00000000 
0000a02d l       .debug_loc     00000000 
0000a053 l       .debug_loc     00000000 
0000a075 l       .debug_loc     00000000 
0000a090 l       .debug_loc     00000000 
0000a0ab l       .debug_loc     00000000 
0000a0c6 l       .debug_loc     00000000 
0000a0e1 l       .debug_loc     00000000 
0000a102 l       .debug_loc     00000000 
0000a128 l       .debug_loc     00000000 
0000a14e l       .debug_loc     00000000 
0000a170 l       .debug_loc     00000000 
0000a18b l       .debug_loc     00000000 
0000a1a6 l       .debug_loc     00000000 
0000a1c1 l       .debug_loc     00000000 
0000a1e2 l       .debug_loc     00000000 
0000a204 l       .debug_loc     00000000 
0000a22a l       .debug_loc     00000000 
0000a250 l       .debug_loc     00000000 
0000a272 l       .debug_loc     00000000 
0000a28d l       .debug_loc     00000000 
0000a2a8 l       .debug_loc     00000000 
0000a2ce l       .debug_loc     00000000 
0000a2f4 l       .debug_loc     00000000 
0000a316 l       .debug_loc     00000000 
0000a331 l       .debug_loc     00000000 
0000a34c l       .debug_loc     00000000 
0000a367 l       .debug_loc     00000000 
0000a38d l       .debug_loc     00000000 
0000a3b3 l       .debug_loc     00000000 
0000a3d5 l       .debug_loc     00000000 
0000a3f0 l       .debug_loc     00000000 
0000a40b l       .debug_loc     00000000 
0000a426 l       .debug_loc     00000000 
0000a44c l       .debug_loc     00000000 
0000a472 l       .debug_loc     00000000 
0000a494 l       .debug_loc     00000000 
0000a4af l       .debug_loc     00000000 
0000a4ca l       .debug_loc     00000000 
0000a4e5 l       .debug_loc     00000000 
0000a50b l       .debug_loc     00000000 
0000a531 l       .debug_loc     00000000 
0000a553 l       .debug_loc     00000000 
0000a56e l       .debug_loc     00000000 
0000a589 l       .debug_loc     00000000 
0000a5a4 l       .debug_loc     00000000 
0000a5bf l       .debug_loc     00000000 
0000a5e0 l       .debug_loc     00000000 
0000a606 l       .debug_loc     00000000 
0000a62c l       .debug_loc     00000000 
0000a64e l       .debug_loc     00000000 
0000a669 l       .debug_loc     00000000 
0000a684 l       .debug_loc     00000000 
0000a69f l       .debug_loc     00000000 
0000a6c0 l       .debug_loc     00000000 
0000a6e2 l       .debug_loc     00000000 
0000a708 l       .debug_loc     00000000 
0000a72e l       .debug_loc     00000000 
0000a750 l       .debug_loc     00000000 
0000a76b l       .debug_loc     00000000 
0000a786 l       .debug_loc     00000000 
0000a7ac l       .debug_loc     00000000 
0000a7d2 l       .debug_loc     00000000 
0000a7f4 l       .debug_loc     00000000 
0000a80f l       .debug_loc     00000000 
0000a82a l       .debug_loc     00000000 
0000a845 l       .debug_loc     00000000 
0000a86b l       .debug_loc     00000000 
0000a891 l       .debug_loc     00000000 
0000a8b3 l       .debug_loc     00000000 
0000a8ce l       .debug_loc     00000000 
0000a8e9 l       .debug_loc     00000000 
0000a904 l       .debug_loc     00000000 
0000a92a l       .debug_loc     00000000 
0000a950 l       .debug_loc     00000000 
0000a972 l       .debug_loc     00000000 
0000a98d l       .debug_loc     00000000 
0000a9a8 l       .debug_loc     00000000 
0000a9c3 l       .debug_loc     00000000 
0000a9e9 l       .debug_loc     00000000 
0000aa0f l       .debug_loc     00000000 
0000aa31 l       .debug_loc     00000000 
0000aa4c l       .debug_loc     00000000 
0000aa67 l       .debug_loc     00000000 
0000aa82 l       .debug_loc     00000000 
0000aa9d l       .debug_loc     00000000 
0000aabe l       .debug_loc     00000000 
0000aae4 l       .debug_loc     00000000 
0000ab0a l       .debug_loc     00000000 
0000ab2c l       .debug_loc     00000000 
0000ab47 l       .debug_loc     00000000 
0000ab62 l       .debug_loc     00000000 
0000ab7d l       .debug_loc     00000000 
0000ab9e l       .debug_loc     00000000 
0000abc0 l       .debug_loc     00000000 
0000abe6 l       .debug_loc     00000000 
0000ac0c l       .debug_loc     00000000 
0000ac2e l       .debug_loc     00000000 
0000ac49 l       .debug_loc     00000000 
0000ac64 l       .debug_loc     00000000 
0000ac8a l       .debug_loc     00000000 
0000acb0 l       .debug_loc     00000000 
0000acd2 l       .debug_loc     00000000 
0000aced l       .debug_loc     00000000 
0000ad08 l       .debug_loc     00000000 
0000ad23 l       .debug_loc     00000000 
0000ad49 l       .debug_loc     00000000 
0000ad6f l       .debug_loc     00000000 
0000ad91 l       .debug_loc     00000000 
0000adac l       .debug_loc     00000000 
0000adc7 l       .debug_loc     00000000 
0000ade2 l       .debug_loc     00000000 
0000ae08 l       .debug_loc     00000000 
0000ae2e l       .debug_loc     00000000 
0000ae50 l       .debug_loc     00000000 
0000ae6b l       .debug_loc     00000000 
0000ae86 l       .debug_loc     00000000 
0000aea1 l       .debug_loc     00000000 
0000aec7 l       .debug_loc     00000000 
0000aeed l       .debug_loc     00000000 
0000af0f l       .debug_loc     00000000 
0000af2a l       .debug_loc     00000000 
0000af45 l       .debug_loc     00000000 
0000af60 l       .debug_loc     00000000 
0000af7b l       .debug_loc     00000000 
0000af9c l       .debug_loc     00000000 
0000afc2 l       .debug_loc     00000000 
0000afe8 l       .debug_loc     00000000 
0000b00a l       .debug_loc     00000000 
0000b025 l       .debug_loc     00000000 
0000b040 l       .debug_loc     00000000 
0000b05b l       .debug_loc     00000000 
0000b07c l       .debug_loc     00000000 
0000b09e l       .debug_loc     00000000 
0000b0c4 l       .debug_loc     00000000 
0000b0ea l       .debug_loc     00000000 
0000b10c l       .debug_loc     00000000 
0000b127 l       .debug_loc     00000000 
0000b142 l       .debug_loc     00000000 
0000b168 l       .debug_loc     00000000 
0000b18e l       .debug_loc     00000000 
0000b1b0 l       .debug_loc     00000000 
0000b1cb l       .debug_loc     00000000 
0000b1e6 l       .debug_loc     00000000 
0000b201 l       .debug_loc     00000000 
0000b227 l       .debug_loc     00000000 
0000b24d l       .debug_loc     00000000 
0000b26f l       .debug_loc     00000000 
0000b28a l       .debug_loc     00000000 
0000b2a5 l       .debug_loc     00000000 
0000b2c0 l       .debug_loc     00000000 
0000b2e6 l       .debug_loc     00000000 
0000b30c l       .debug_loc     00000000 
0000b32e l       .debug_loc     00000000 
0000b349 l       .debug_loc     00000000 
0000b364 l       .debug_loc     00000000 
0000b37f l       .debug_loc     00000000 
0000b3a5 l       .debug_loc     00000000 
0000b3cb l       .debug_loc     00000000 
0000b3ed l       .debug_loc     00000000 
0000b408 l       .debug_loc     00000000 
0000b423 l       .debug_loc     00000000 
0000b43e l       .debug_loc     00000000 
0000b459 l       .debug_loc     00000000 
0000b47a l       .debug_loc     00000000 
0000b4a0 l       .debug_loc     00000000 
0000b4c6 l       .debug_loc     00000000 
0000b4e8 l       .debug_loc     00000000 
0000b503 l       .debug_loc     00000000 
0000b51e l       .debug_loc     00000000 
0000b539 l       .debug_loc     00000000 
0000b55a l       .debug_loc     00000000 
0000b57c l       .debug_loc     00000000 
0000b5a2 l       .debug_loc     00000000 
0000b5c8 l       .debug_loc     00000000 
0000b5ea l       .debug_loc     00000000 
0000b605 l       .debug_loc     00000000 
0000b620 l       .debug_loc     00000000 
0000b646 l       .debug_loc     00000000 
0000b66c l       .debug_loc     00000000 
0000b68e l       .debug_loc     00000000 
0000b6a9 l       .debug_loc     00000000 
0000b6c4 l       .debug_loc     00000000 
0000b6df l       .debug_loc     00000000 
0000b705 l       .debug_loc     00000000 
0000b72b l       .debug_loc     00000000 
0000b74d l       .debug_loc     00000000 
0000b768 l       .debug_loc     00000000 
0000b783 l       .debug_loc     00000000 
0000b79e l       .debug_loc     00000000 
0000b7c4 l       .debug_loc     00000000 
0000b7ea l       .debug_loc     00000000 
0000b80c l       .debug_loc     00000000 
0000b827 l       .debug_loc     00000000 
0000b842 l       .debug_loc     00000000 
0000b85d l       .debug_loc     00000000 
0000b883 l       .debug_loc     00000000 
0000b8a9 l       .debug_loc     00000000 
0000b8cb l       .debug_loc     00000000 
0000b8e6 l       .debug_loc     00000000 
0000b901 l       .debug_loc     00000000 
0000b91c l       .debug_loc     00000000 
0000b937 l       .debug_loc     00000000 
0000b958 l       .debug_loc     00000000 
0000b97e l       .debug_loc     00000000 
0000b9a4 l       .debug_loc     00000000 
0000b9c6 l       .debug_loc     00000000 
0000b9e1 l       .debug_loc     00000000 
0000b9fc l       .debug_loc     00000000 
0000ba17 l       .debug_loc     00000000 
0000ba38 l       .debug_loc     00000000 
0000ba5a l       .debug_loc     00000000 
0000ba80 l       .debug_loc     00000000 
0000baa6 l       .debug_loc     00000000 
0000bac8 l       .debug_loc     00000000 
0000bae3 l       .debug_loc     00000000 
0000bafe l       .debug_loc     00000000 
0000bb24 l       .debug_loc     00000000 
0000bb4a l       .debug_loc     00000000 
0000bb6c l       .debug_loc     00000000 
0000bb87 l       .debug_loc     00000000 
0000bba2 l       .debug_loc     00000000 
0000bbbd l       .debug_loc     00000000 
0000bbe3 l       .debug_loc     00000000 
0000bc09 l       .debug_loc     00000000 
0000bc2b l       .debug_loc     00000000 
0000bc46 l       .debug_loc     00000000 
0000bc61 l       .debug_loc     00000000 
0000bc7c l       .debug_loc     00000000 
0000bca2 l       .debug_loc     00000000 
0000bcc8 l       .debug_loc     00000000 
0000bcea l       .debug_loc     00000000 
0000bd05 l       .debug_loc     00000000 
0000bd20 l       .debug_loc     00000000 
0000bd3b l       .debug_loc     00000000 
0000bd61 l       .debug_loc     00000000 
0000bd87 l       .debug_loc     00000000 
0000bda9 l       .debug_loc     00000000 
0000bdc4 l       .debug_loc     00000000 
0000bddf l       .debug_loc     00000000 
0000bdfa l       .debug_loc     00000000 
0000be15 l       .debug_loc     00000000 
0000be36 l       .debug_loc     00000000 
0000be5c l       .debug_loc     00000000 
0000be82 l       .debug_loc     00000000 
0000bea4 l       .debug_loc     00000000 
0000bebf l       .debug_loc     00000000 
0000beda l       .debug_loc     00000000 
0000bef5 l       .debug_loc     00000000 
0000bf16 l       .debug_loc     00000000 
0000bf38 l       .debug_loc     00000000 
0000bf5e l       .debug_loc     00000000 
0000bf84 l       .debug_loc     00000000 
0000bfa6 l       .debug_loc     00000000 
0000bfc1 l       .debug_loc     00000000 
0000bfdc l       .debug_loc     00000000 
0000c002 l       .debug_loc     00000000 
0000c028 l       .debug_loc     00000000 
0000c04a l       .debug_loc     00000000 
0000c065 l       .debug_loc     00000000 
0000c080 l       .debug_loc     00000000 
0000c09b l       .debug_loc     00000000 
0000c0c1 l       .debug_loc     00000000 
0000c0e7 l       .debug_loc     00000000 
0000c109 l       .debug_loc     00000000 
0000c124 l       .debug_loc     00000000 
0000c13f l       .debug_loc     00000000 
0000c15a l       .debug_loc     00000000 
0000c180 l       .debug_loc     00000000 
0000c1a6 l       .debug_loc     00000000 
0000c1c8 l       .debug_loc     00000000 
0000c1e3 l       .debug_loc     00000000 
0000c1fe l       .debug_loc     00000000 
0000c219 l       .debug_loc     00000000 
0000c23f l       .debug_loc     00000000 
0000c265 l       .debug_loc     00000000 
0000c287 l       .debug_loc     00000000 
0000c2a2 l       .debug_loc     00000000 
0000c2bd l       .debug_loc     00000000 
0000c2d8 l       .debug_loc     00000000 
0000c2f3 l       .debug_loc     00000000 
0000c314 l       .debug_loc     00000000 
0000c33a l       .debug_loc     00000000 
0000c360 l       .debug_loc     00000000 
0000c382 l       .debug_loc     00000000 
0000c39d l       .debug_loc     00000000 
0000c3b8 l       .debug_loc     00000000 
0000c3d3 l       .debug_loc     00000000 
0000c3f4 l       .debug_loc     00000000 
0000c416 l       .debug_loc     00000000 
0000c43c l       .debug_loc     00000000 
0000c462 l       .debug_loc     00000000 
0000c484 l       .debug_loc     00000000 
0000c49f l       .debug_loc     00000000 
0000c4ba l       .debug_loc     00000000 
0000c4e0 l       .debug_loc     00000000 
0000c506 l       .debug_loc     00000000 
0000c528 l       .debug_loc     00000000 
0000c543 l       .debug_loc     00000000 
0000c55e l       .debug_loc     00000000 
0000c579 l       .debug_loc     00000000 
0000c59f l       .debug_loc     00000000 
0000c5c5 l       .debug_loc     00000000 
0000c5e7 l       .debug_loc     00000000 
0000c602 l       .debug_loc     00000000 
0000c61d l       .debug_loc     00000000 
0000c638 l       .debug_loc     00000000 
0000c65e l       .debug_loc     00000000 
0000c684 l       .debug_loc     00000000 
0000c6a6 l       .debug_loc     00000000 
0000c6c1 l       .debug_loc     00000000 
0000c6dc l       .debug_loc     00000000 
0000c6f7 l       .debug_loc     00000000 
0000c71d l       .debug_loc     00000000 
0000c743 l       .debug_loc     00000000 
0000c765 l       .debug_loc     00000000 
0000c780 l       .debug_loc     00000000 
0000c79b l       .debug_loc     00000000 
0000c7b6 l       .debug_loc     00000000 
0000c7d1 l       .debug_loc     00000000 
0000c7f2 l       .debug_loc     00000000 
0000c818 l       .debug_loc     00000000 
0000c83e l       .debug_loc     00000000 
0000c860 l       .debug_loc     00000000 
0000c87b l       .debug_loc     00000000 
0000c896 l       .debug_loc     00000000 
0000c8b1 l       .debug_loc     00000000 
0000c8d2 l       .debug_loc     00000000 
0000c8f4 l       .debug_loc     00000000 
0000c91a l       .debug_loc     00000000 
0000c940 l       .debug_loc     00000000 
0000c962 l       .debug_loc     00000000 
0000c97d l       .debug_loc     00000000 
0000c998 l       .debug_loc     00000000 
0000c9be l       .debug_loc     00000000 
0000c9e4 l       .debug_loc     00000000 
0000ca06 l       .debug_loc     00000000 
0000ca21 l       .debug_loc     00000000 
0000ca3c l       .debug_loc     00000000 
0000ca57 l       .debug_loc     00000000 
0000ca7d l       .debug_loc     00000000 
0000caa3 l       .debug_loc     00000000 
0000cac5 l       .debug_loc     00000000 
0000cae0 l       .debug_loc     00000000 
0000cafb l       .debug_loc     00000000 
0000cb16 l       .debug_loc     00000000 
0000cb3c l       .debug_loc     00000000 
0000cb62 l       .debug_loc     00000000 
0000cb84 l       .debug_loc     00000000 
0000cb9f l       .debug_loc     00000000 
0000cbba l       .debug_loc     00000000 
0000cbd5 l       .debug_loc     00000000 
0000cbfb l       .debug_loc     00000000 
0000cc21 l       .debug_loc     00000000 
0000cc43 l       .debug_loc     00000000 
0000cc5e l       .debug_loc     00000000 
0000cc79 l       .debug_loc     00000000 
0000cc94 l       .debug_loc     00000000 
0000ccaf l       .debug_loc     00000000 
0000ccd0 l       .debug_loc     00000000 
0000ccf6 l       .debug_loc     00000000 
0000cd1c l       .debug_loc     00000000 
0000cd3e l       .debug_loc     00000000 
0000cd59 l       .debug_loc     00000000 
0000cd74 l       .debug_loc     00000000 
0000cd8f l       .debug_loc     00000000 
0000cdb0 l       .debug_loc     00000000 
0000cdd2 l       .debug_loc     00000000 
0000cdf8 l       .debug_loc     00000000 
0000ce1e l       .debug_loc     00000000 
0000ce40 l       .debug_loc     00000000 
0000ce5b l       .debug_loc     00000000 
0000ce76 l       .debug_loc     00000000 
0000ce9c l       .debug_loc     00000000 
0000cec2 l       .debug_loc     00000000 
0000cee4 l       .debug_loc     00000000 
0000ceff l       .debug_loc     00000000 
0000cf1a l       .debug_loc     00000000 
0000cf35 l       .debug_loc     00000000 
0000cf5b l       .debug_loc     00000000 
0000cf81 l       .debug_loc     00000000 
0000cfa3 l       .debug_loc     00000000 
0000cfbe l       .debug_loc     00000000 
0000cfd9 l       .debug_loc     00000000 
0000cff4 l       .debug_loc     00000000 
0000d01a l       .debug_loc     00000000 
0000d040 l       .debug_loc     00000000 
0000d062 l       .debug_loc     00000000 
0000d07d l       .debug_loc     00000000 
0000d098 l       .debug_loc     00000000 
0000d0b3 l       .debug_loc     00000000 
0000d0d9 l       .debug_loc     00000000 
0000d0ff l       .debug_loc     00000000 
0000d121 l       .debug_loc     00000000 
0000d13c l       .debug_loc     00000000 
0000d157 l       .debug_loc     00000000 
0000d172 l       .debug_loc     00000000 
0000d18d l       .debug_loc     00000000 
0000d1ae l       .debug_loc     00000000 
0000d1d4 l       .debug_loc     00000000 
0000d1fa l       .debug_loc     00000000 
0000d21c l       .debug_loc     00000000 
0000d237 l       .debug_loc     00000000 
0000d252 l       .debug_loc     00000000 
0000d26d l       .debug_loc     00000000 
0000d28e l       .debug_loc     00000000 
0000d2b0 l       .debug_loc     00000000 
0000d2d6 l       .debug_loc     00000000 
0000d2fc l       .debug_loc     00000000 
0000d31e l       .debug_loc     00000000 
0000d339 l       .debug_loc     00000000 
0000d354 l       .debug_loc     00000000 
0000d37a l       .debug_loc     00000000 
0000d3a0 l       .debug_loc     00000000 
0000d3c2 l       .debug_loc     00000000 
0000d3dd l       .debug_loc     00000000 
0000d3f8 l       .debug_loc     00000000 
0000d413 l       .debug_loc     00000000 
0000d439 l       .debug_loc     00000000 
0000d45f l       .debug_loc     00000000 
0000d481 l       .debug_loc     00000000 
0000d49c l       .debug_loc     00000000 
0000d4b7 l       .debug_loc     00000000 
0000d4d2 l       .debug_loc     00000000 
0000d4f8 l       .debug_loc     00000000 
0000d51e l       .debug_loc     00000000 
0000d540 l       .debug_loc     00000000 
0000d55b l       .debug_loc     00000000 
0000d576 l       .debug_loc     00000000 
0000d591 l       .debug_loc     00000000 
0000d5b7 l       .debug_loc     00000000 
0000d5dd l       .debug_loc     00000000 
0000d5ff l       .debug_loc     00000000 
0000d61a l       .debug_loc     00000000 
0000d635 l       .debug_loc     00000000 
0000d650 l       .debug_loc     00000000 
0000d66b l       .debug_loc     00000000 
0000d68c l       .debug_loc     00000000 
0000d6b2 l       .debug_loc     00000000 
0000d6d8 l       .debug_loc     00000000 
0000d6fa l       .debug_loc     00000000 
0000d715 l       .debug_loc     00000000 
0000d730 l       .debug_loc     00000000 
0000d74b l       .debug_loc     00000000 
0000d76c l       .debug_loc     00000000 
0000d78e l       .debug_loc     00000000 
0000d7b4 l       .debug_loc     00000000 
0000d7da l       .debug_loc     00000000 
0000d7fc l       .debug_loc     00000000 
0000d817 l       .debug_loc     00000000 
0000d832 l       .debug_loc     00000000 
0000d858 l       .debug_loc     00000000 
0000d87e l       .debug_loc     00000000 
0000d8a0 l       .debug_loc     00000000 
0000d8bb l       .debug_loc     00000000 
0000d8d6 l       .debug_loc     00000000 
0000d8f1 l       .debug_loc     00000000 
0000d917 l       .debug_loc     00000000 
0000d93d l       .debug_loc     00000000 
0000d95f l       .debug_loc     00000000 
0000d97a l       .debug_loc     00000000 
0000d995 l       .debug_loc     00000000 
0000d9b0 l       .debug_loc     00000000 
0000d9d6 l       .debug_loc     00000000 
0000d9fc l       .debug_loc     00000000 
0000da1e l       .debug_loc     00000000 
0000da39 l       .debug_loc     00000000 
0000da54 l       .debug_loc     00000000 
0000da6f l       .debug_loc     00000000 
0000da95 l       .debug_loc     00000000 
0000dabb l       .debug_loc     00000000 
0000dadd l       .debug_loc     00000000 
0000daf8 l       .debug_loc     00000000 
0000db13 l       .debug_loc     00000000 
0000db2e l       .debug_loc     00000000 
0000db49 l       .debug_loc     00000000 
0000db6a l       .debug_loc     00000000 
0000db90 l       .debug_loc     00000000 
0000dbb6 l       .debug_loc     00000000 
0000dbd8 l       .debug_loc     00000000 
0000dbf3 l       .debug_loc     00000000 
0000dc0e l       .debug_loc     00000000 
0000dc29 l       .debug_loc     00000000 
0000dc4a l       .debug_loc     00000000 
0000dc6c l       .debug_loc     00000000 
0000dc92 l       .debug_loc     00000000 
0000dcb8 l       .debug_loc     00000000 
0000dcda l       .debug_loc     00000000 
0000dcf5 l       .debug_loc     00000000 
0000dd10 l       .debug_loc     00000000 
0000dd36 l       .debug_loc     00000000 
0000dd5c l       .debug_loc     00000000 
0000dd7e l       .debug_loc     00000000 
0000dd99 l       .debug_loc     00000000 
0000ddb4 l       .debug_loc     00000000 
0000ddcf l       .debug_loc     00000000 
0000ddf5 l       .debug_loc     00000000 
0000de1b l       .debug_loc     00000000 
0000de3d l       .debug_loc     00000000 
0000de58 l       .debug_loc     00000000 
0000de73 l       .debug_loc     00000000 
0000de8e l       .debug_loc     00000000 
0000deb4 l       .debug_loc     00000000 
0000deda l       .debug_loc     00000000 
0000defc l       .debug_loc     00000000 
0000df17 l       .debug_loc     00000000 
0000df32 l       .debug_loc     00000000 
0000df4d l       .debug_loc     00000000 
0000df73 l       .debug_loc     00000000 
0000df99 l       .debug_loc     00000000 
0000dfbb l       .debug_loc     00000000 
0000dfd6 l       .debug_loc     00000000 
0000dff1 l       .debug_loc     00000000 
0000e00c l       .debug_loc     00000000 
0000e027 l       .debug_loc     00000000 
0000e048 l       .debug_loc     00000000 
0000e06e l       .debug_loc     00000000 
0000e094 l       .debug_loc     00000000 
0000e0b6 l       .debug_loc     00000000 
0000e0d1 l       .debug_loc     00000000 
0000e0ec l       .debug_loc     00000000 
0000e107 l       .debug_loc     00000000 
0000e128 l       .debug_loc     00000000 
0000e14a l       .debug_loc     00000000 
0000e170 l       .debug_loc     00000000 
0000e196 l       .debug_loc     00000000 
0000e1b8 l       .debug_loc     00000000 
0000e1d3 l       .debug_loc     00000000 
0000e1ee l       .debug_loc     00000000 
0000e214 l       .debug_loc     00000000 
0000e23a l       .debug_loc     00000000 
0000e25c l       .debug_loc     00000000 
0000e277 l       .debug_loc     00000000 
0000e292 l       .debug_loc     00000000 
0000e2ad l       .debug_loc     00000000 
0000e2d3 l       .debug_loc     00000000 
0000e2f9 l       .debug_loc     00000000 
0000e31b l       .debug_loc     00000000 
0000e336 l       .debug_loc     00000000 
0000e351 l       .debug_loc     00000000 
0000e36c l       .debug_loc     00000000 
0000e392 l       .debug_loc     00000000 
0000e3b8 l       .debug_loc     00000000 
0000e3da l       .debug_loc     00000000 
0000e3f5 l       .debug_loc     00000000 
0000e410 l       .debug_loc     00000000 
0000e42b l       .debug_loc     00000000 
0000e451 l       .debug_loc     00000000 
0000e477 l       .debug_loc     00000000 
0000e499 l       .debug_loc     00000000 
0000e4b4 l       .debug_loc     00000000 
0000e4cf l       .debug_loc     00000000 
0000e4ea l       .debug_loc     00000000 
0000e505 l       .debug_loc     00000000 
0000e526 l       .debug_loc     00000000 
0000e54c l       .debug_loc     00000000 
0000e572 l       .debug_loc     00000000 
0000e594 l       .debug_loc     00000000 
0000e5af l       .debug_loc     00000000 
0000e5ca l       .debug_loc     00000000 
0000e5e5 l       .debug_loc     00000000 
0000e606 l       .debug_loc     00000000 
0000e628 l       .debug_loc     00000000 
0000e64e l       .debug_loc     00000000 
0000e674 l       .debug_loc     00000000 
0000e696 l       .debug_loc     00000000 
0000e6b1 l       .debug_loc     00000000 
0000e6cc l       .debug_loc     00000000 
0000e6f2 l       .debug_loc     00000000 
0000e718 l       .debug_loc     00000000 
0000e73a l       .debug_loc     00000000 
0000e755 l       .debug_loc     00000000 
0000e770 l       .debug_loc     00000000 
0000e78b l       .debug_loc     00000000 
0000e7b1 l       .debug_loc     00000000 
0000e7d7 l       .debug_loc     00000000 
0000e7f9 l       .debug_loc     00000000 
0000e814 l       .debug_loc     00000000 
0000e82f l       .debug_loc     00000000 
0000e84a l       .debug_loc     00000000 
0000e870 l       .debug_loc     00000000 
0000e896 l       .debug_loc     00000000 
0000e8b8 l       .debug_loc     00000000 
0000e8d3 l       .debug_loc     00000000 
0000e8ee l       .debug_loc     00000000 
0000e909 l       .debug_loc     00000000 
0000e92f l       .debug_loc     00000000 
0000e955 l       .debug_loc     00000000 
0000e977 l       .debug_loc     00000000 
0000e992 l       .debug_loc     00000000 
0000e9ad l       .debug_loc     00000000 
0000e9c8 l       .debug_loc     00000000 
0000e9e3 l       .debug_loc     00000000 
0000ea04 l       .debug_loc     00000000 
0000ea2a l       .debug_loc     00000000 
0000ea50 l       .debug_loc     00000000 
0000ea72 l       .debug_loc     00000000 
0000ea8d l       .debug_loc     00000000 
0000eaa8 l       .debug_loc     00000000 
0000eac3 l       .debug_loc     00000000 
0000eae4 l       .debug_loc     00000000 
0000eb06 l       .debug_loc     00000000 
0000eb2c l       .debug_loc     00000000 
0000eb52 l       .debug_loc     00000000 
0000eb74 l       .debug_loc     00000000 
0000eb8f l       .debug_loc     00000000 
0000ebaa l       .debug_loc     00000000 
0000ebd0 l       .debug_loc     00000000 
0000ebf6 l       .debug_loc     00000000 
0000ec18 l       .debug_loc     00000000 
0000ec33 l       .debug_loc     00000000 
0000ec4e l       .debug_loc     00000000 
0000ec69 l       .debug_loc     00000000 
0000ec8f l       .debug_loc     00000000 
0000ecb5 l       .debug_loc     00000000 
0000ecd7 l       .debug_loc     00000000 
0000ecf2 l       .debug_loc     00000000 
0000ed0d l       .debug_loc     00000000 
0000ed28 l       .debug_loc     00000000 
0000ed4e l       .debug_loc     00000000 
0000ed74 l       .debug_loc     00000000 
0000ed96 l       .debug_loc     00000000 
0000edb1 l       .debug_loc     00000000 
0000edcc l       .debug_loc     00000000 
0000ede7 l       .debug_loc     00000000 
0000ee0d l       .debug_loc     00000000 
0000ee33 l       .debug_loc     00000000 
0000ee55 l       .debug_loc     00000000 
0000ee70 l       .debug_loc     00000000 
0000ee8b l       .debug_loc     00000000 
0000eea6 l       .debug_loc     00000000 
0000eec1 l       .debug_loc     00000000 
0000eee2 l       .debug_loc     00000000 
0000ef08 l       .debug_loc     00000000 
0000ef2e l       .debug_loc     00000000 
0000ef50 l       .debug_loc     00000000 
0000ef6b l       .debug_loc     00000000 
0000ef86 l       .debug_loc     00000000 
0000efa1 l       .debug_loc     00000000 
0000efc2 l       .debug_loc     00000000 
0000efe4 l       .debug_loc     00000000 
0000f00a l       .debug_loc     00000000 
0000f030 l       .debug_loc     00000000 
0000f052 l       .debug_loc     00000000 
0000f06d l       .debug_loc     00000000 
0000f088 l       .debug_loc     00000000 
0000f0ae l       .debug_loc     00000000 
0000f0d4 l       .debug_loc     00000000 
0000f0f6 l       .debug_loc     00000000 
0000f111 l       .debug_loc     00000000 
0000f12c l       .debug_loc     00000000 
0000f147 l       .debug_loc     00000000 
0000f16d l       .debug_loc     00000000 
0000f193 l       .debug_loc     00000000 
0000f1b5 l       .debug_loc     00000000 
0000f1d0 l       .debug_loc     00000000 
0000f1eb l       .debug_loc     00000000 
0000f206 l       .debug_loc     00000000 
0000f22c l       .debug_loc     00000000 
0000f252 l       .debug_loc     00000000 
0000f274 l       .debug_loc     00000000 
0000f28f l       .debug_loc     00000000 
0000f2aa l       .debug_loc     00000000 
0000f2c5 l       .debug_loc     00000000 
0000f2eb l       .debug_loc     00000000 
0000f311 l       .debug_loc     00000000 
0000f333 l       .debug_loc     00000000 
0000f34e l       .debug_loc     00000000 
0000f369 l       .debug_loc     00000000 
0000f384 l       .debug_loc     00000000 
0000f39f l       .debug_loc     00000000 
0000f3c0 l       .debug_loc     00000000 
0000f3e6 l       .debug_loc     00000000 
0000f40c l       .debug_loc     00000000 
0000f42e l       .debug_loc     00000000 
0000f449 l       .debug_loc     00000000 
0000f464 l       .debug_loc     00000000 
0000f47f l       .debug_loc     00000000 
0000f4a0 l       .debug_loc     00000000 
0000f4c2 l       .debug_loc     00000000 
0000f4e8 l       .debug_loc     00000000 
0000f50e l       .debug_loc     00000000 
0000f530 l       .debug_loc     00000000 
0000f54b l       .debug_loc     00000000 
0000f566 l       .debug_loc     00000000 
0000f58c l       .debug_loc     00000000 
0000f5b2 l       .debug_loc     00000000 
0000f5d4 l       .debug_loc     00000000 
0000f5ef l       .debug_loc     00000000 
0000f60a l       .debug_loc     00000000 
0000f625 l       .debug_loc     00000000 
0000f64b l       .debug_loc     00000000 
0000f671 l       .debug_loc     00000000 
0000f693 l       .debug_loc     00000000 
0000f6ae l       .debug_loc     00000000 
0000f6c9 l       .debug_loc     00000000 
0000f6e4 l       .debug_loc     00000000 
0000f70a l       .debug_loc     00000000 
0000f730 l       .debug_loc     00000000 
0000f752 l       .debug_loc     00000000 
0000f76d l       .debug_loc     00000000 
0000f788 l       .debug_loc     00000000 
0000f7a3 l       .debug_loc     00000000 
0000f7c9 l       .debug_loc     00000000 
0000f7ef l       .debug_loc     00000000 
0000f811 l       .debug_loc     00000000 
0000f82c l       .debug_loc     00000000 
0000f847 l       .debug_loc     00000000 
0000f862 l       .debug_loc     00000000 
0000f87d l       .debug_loc     00000000 
0000f89e l       .debug_loc     00000000 
0000f8c4 l       .debug_loc     00000000 
0000f8ea l       .debug_loc     00000000 
0000f90c l       .debug_loc     00000000 
0000f927 l       .debug_loc     00000000 
0000f942 l       .debug_loc     00000000 
0000f95d l       .debug_loc     00000000 
0000f97e l       .debug_loc     00000000 
0000f9a0 l       .debug_loc     00000000 
0000f9c6 l       .debug_loc     00000000 
0000f9ec l       .debug_loc     00000000 
0000fa0e l       .debug_loc     00000000 
0000fa29 l       .debug_loc     00000000 
0000fa44 l       .debug_loc     00000000 
0000fa6a l       .debug_loc     00000000 
0000fa90 l       .debug_loc     00000000 
0000fab2 l       .debug_loc     00000000 
0000facd l       .debug_loc     00000000 
0000fae8 l       .debug_loc     00000000 
0000fb03 l       .debug_loc     00000000 
0000fb29 l       .debug_loc     00000000 
0000fb4f l       .debug_loc     00000000 
0000fb71 l       .debug_loc     00000000 
0000fb8c l       .debug_loc     00000000 
0000fba7 l       .debug_loc     00000000 
0000fbc2 l       .debug_loc     00000000 
0000fbe8 l       .debug_loc     00000000 
0000fc0e l       .debug_loc     00000000 
0000fc30 l       .debug_loc     00000000 
0000fc4b l       .debug_loc     00000000 
0000fc66 l       .debug_loc     00000000 
0000fc81 l       .debug_loc     00000000 
0000fca7 l       .debug_loc     00000000 
0000fccd l       .debug_loc     00000000 
0000fcef l       .debug_loc     00000000 
0000fd0a l       .debug_loc     00000000 
0000fd25 l       .debug_loc     00000000 
0000fd40 l       .debug_loc     00000000 
0000fd5b l       .debug_loc     00000000 
0000fd7c l       .debug_loc     00000000 
0000fda2 l       .debug_loc     00000000 
0000fdc8 l       .debug_loc     00000000 
0000fdea l       .debug_loc     00000000 
0000fe05 l       .debug_loc     00000000 
0000fe20 l       .debug_loc     00000000 
0000fe3b l       .debug_loc     00000000 
0000fe5c l       .debug_loc     00000000 
0000fe7e l       .debug_loc     00000000 
0000fea4 l       .debug_loc     00000000 
0000feca l       .debug_loc     00000000 
0000feec l       .debug_loc     00000000 
0000ff07 l       .debug_loc     00000000 
0000ff22 l       .debug_loc     00000000 
0000ff48 l       .debug_loc     00000000 
0000ff6e l       .debug_loc     00000000 
0000ff90 l       .debug_loc     00000000 
0000ffab l       .debug_loc     00000000 
0000ffc6 l       .debug_loc     00000000 
0000ffe1 l       .debug_loc     00000000 
00010007 l       .debug_loc     00000000 
0001002d l       .debug_loc     00000000 
0001004f l       .debug_loc     00000000 
0001006a l       .debug_loc     00000000 
00010085 l       .debug_loc     00000000 
000100a0 l       .debug_loc     00000000 
000100c6 l       .debug_loc     00000000 
000100ec l       .debug_loc     00000000 
0001010e l       .debug_loc     00000000 
00010129 l       .debug_loc     00000000 
00010144 l       .debug_loc     00000000 
0001015f l       .debug_loc     00000000 
00010185 l       .debug_loc     00000000 
000101ab l       .debug_loc     00000000 
000101cd l       .debug_loc     00000000 
000101e8 l       .debug_loc     00000000 
00010203 l       .debug_loc     00000000 
0001021e l       .debug_loc     00000000 
00010239 l       .debug_loc     00000000 
0001025a l       .debug_loc     00000000 
00010280 l       .debug_loc     00000000 
000102a6 l       .debug_loc     00000000 
000102c8 l       .debug_loc     00000000 
000102e3 l       .debug_loc     00000000 
000102fe l       .debug_loc     00000000 
00010319 l       .debug_loc     00000000 
0001033a l       .debug_loc     00000000 
0001035c l       .debug_loc     00000000 
00010382 l       .debug_loc     00000000 
000103a8 l       .debug_loc     00000000 
000103ca l       .debug_loc     00000000 
000103e5 l       .debug_loc     00000000 
00010400 l       .debug_loc     00000000 
00010426 l       .debug_loc     00000000 
0001044c l       .debug_loc     00000000 
0001046e l       .debug_loc     00000000 
00010489 l       .debug_loc     00000000 
000104a4 l       .debug_loc     00000000 
000104bf l       .debug_loc     00000000 
000104e5 l       .debug_loc     00000000 
0001050b l       .debug_loc     00000000 
0001052d l       .debug_loc     00000000 
00010548 l       .debug_loc     00000000 
00010563 l       .debug_loc     00000000 
0001057e l       .debug_loc     00000000 
000105a4 l       .debug_loc     00000000 
000105ca l       .debug_loc     00000000 
000105ec l       .debug_loc     00000000 
00010607 l       .debug_loc     00000000 
00010622 l       .debug_loc     00000000 
0001063d l       .debug_loc     00000000 
00010663 l       .debug_loc     00000000 
00010689 l       .debug_loc     00000000 
000106ab l       .debug_loc     00000000 
000106c6 l       .debug_loc     00000000 
000106e1 l       .debug_loc     00000000 
000106fc l       .debug_loc     00000000 
00010717 l       .debug_loc     00000000 
00010738 l       .debug_loc     00000000 
0001075e l       .debug_loc     00000000 
00010784 l       .debug_loc     00000000 
000107a6 l       .debug_loc     00000000 
000107c1 l       .debug_loc     00000000 
000107dc l       .debug_loc     00000000 
000107f7 l       .debug_loc     00000000 
00010818 l       .debug_loc     00000000 
0001083a l       .debug_loc     00000000 
00010860 l       .debug_loc     00000000 
00010886 l       .debug_loc     00000000 
000108a8 l       .debug_loc     00000000 
000108c3 l       .debug_loc     00000000 
000108de l       .debug_loc     00000000 
00010904 l       .debug_loc     00000000 
0001092a l       .debug_loc     00000000 
0001094c l       .debug_loc     00000000 
00010967 l       .debug_loc     00000000 
00010982 l       .debug_loc     00000000 
0001099d l       .debug_loc     00000000 
000109c3 l       .debug_loc     00000000 
000109e9 l       .debug_loc     00000000 
00010a0b l       .debug_loc     00000000 
00010a26 l       .debug_loc     00000000 
00010a41 l       .debug_loc     00000000 
00010a5c l       .debug_loc     00000000 
00010a82 l       .debug_loc     00000000 
00010aa8 l       .debug_loc     00000000 
00010aca l       .debug_loc     00000000 
00010ae5 l       .debug_loc     00000000 
00010b00 l       .debug_loc     00000000 
00010b1b l       .debug_loc     00000000 
00010b41 l       .debug_loc     00000000 
00010b67 l       .debug_loc     00000000 
00010b89 l       .debug_loc     00000000 
00010ba4 l       .debug_loc     00000000 
00010bbf l       .debug_loc     00000000 
00010bda l       .debug_loc     00000000 
00010bf5 l       .debug_loc     00000000 
00010c16 l       .debug_loc     00000000 
00010c3c l       .debug_loc     00000000 
00010c62 l       .debug_loc     00000000 
00010c84 l       .debug_loc     00000000 
00010c9f l       .debug_loc     00000000 
00010cba l       .debug_loc     00000000 
00010cd5 l       .debug_loc     00000000 
00010cf6 l       .debug_loc     00000000 
00010d18 l       .debug_loc     00000000 
00010d3e l       .debug_loc     00000000 
00010d64 l       .debug_loc     00000000 
00010d86 l       .debug_loc     00000000 
00010da1 l       .debug_loc     00000000 
00010dbc l       .debug_loc     00000000 
00010de2 l       .debug_loc     00000000 
00010e08 l       .debug_loc     00000000 
00010e2a l       .debug_loc     00000000 
00010e45 l       .debug_loc     00000000 
00010e60 l       .debug_loc     00000000 
00010e7b l       .debug_loc     00000000 
00010ea1 l       .debug_loc     00000000 
00010ec7 l       .debug_loc     00000000 
00010ee9 l       .debug_loc     00000000 
00010f04 l       .debug_loc     00000000 
00010f1f l       .debug_loc     00000000 
00010f3a l       .debug_loc     00000000 
00010f60 l       .debug_loc     00000000 
00010f86 l       .debug_loc     00000000 
00010fa8 l       .debug_loc     00000000 
00010fc3 l       .debug_loc     00000000 
00010fde l       .debug_loc     00000000 
00010ff9 l       .debug_loc     00000000 
0001101f l       .debug_loc     00000000 
00011045 l       .debug_loc     00000000 
00011067 l       .debug_loc     00000000 
00011082 l       .debug_loc     00000000 
0001109d l       .debug_loc     00000000 
000110b8 l       .debug_loc     00000000 
000110d3 l       .debug_loc     00000000 
000110f4 l       .debug_loc     00000000 
0001111a l       .debug_loc     00000000 
00011140 l       .debug_loc     00000000 
00011162 l       .debug_loc     00000000 
0001117d l       .debug_loc     00000000 
00011198 l       .debug_loc     00000000 
000111b3 l       .debug_loc     00000000 
000111d4 l       .debug_loc     00000000 
000111f6 l       .debug_loc     00000000 
0001121c l       .debug_loc     00000000 
00011242 l       .debug_loc     00000000 
00011264 l       .debug_loc     00000000 
0001127f l       .debug_loc     00000000 
0001129a l       .debug_loc     00000000 
000112c0 l       .debug_loc     00000000 
000112e6 l       .debug_loc     00000000 
00011308 l       .debug_loc     00000000 
00011323 l       .debug_loc     00000000 
0001133e l       .debug_loc     00000000 
00011359 l       .debug_loc     00000000 
0001137f l       .debug_loc     00000000 
000113a5 l       .debug_loc     00000000 
000113c7 l       .debug_loc     00000000 
000113e2 l       .debug_loc     00000000 
000113fd l       .debug_loc     00000000 
00011418 l       .debug_loc     00000000 
0001143e l       .debug_loc     00000000 
00011464 l       .debug_loc     00000000 
00011486 l       .debug_loc     00000000 
000114a1 l       .debug_loc     00000000 
000114bc l       .debug_loc     00000000 
000114d7 l       .debug_loc     00000000 
000114fd l       .debug_loc     00000000 
00011523 l       .debug_loc     00000000 
00011545 l       .debug_loc     00000000 
00011560 l       .debug_loc     00000000 
0001157b l       .debug_loc     00000000 
00011596 l       .debug_loc     00000000 
000115b1 l       .debug_loc     00000000 
000115d2 l       .debug_loc     00000000 
000115f8 l       .debug_loc     00000000 
0001161e l       .debug_loc     00000000 
00011640 l       .debug_loc     00000000 
0001165b l       .debug_loc     00000000 
00011676 l       .debug_loc     00000000 
00011691 l       .debug_loc     00000000 
000116b2 l       .debug_loc     00000000 
000116d4 l       .debug_loc     00000000 
000116fa l       .debug_loc     00000000 
00011720 l       .debug_loc     00000000 
00011742 l       .debug_loc     00000000 
0001175d l       .debug_loc     00000000 
00011778 l       .debug_loc     00000000 
0001179e l       .debug_loc     00000000 
000117c4 l       .debug_loc     00000000 
000117e6 l       .debug_loc     00000000 
00011801 l       .debug_loc     00000000 
0001181c l       .debug_loc     00000000 
00011837 l       .debug_loc     00000000 
0001185d l       .debug_loc     00000000 
00011883 l       .debug_loc     00000000 
000118a5 l       .debug_loc     00000000 
000118c0 l       .debug_loc     00000000 
000118db l       .debug_loc     00000000 
000118f6 l       .debug_loc     00000000 
0001191c l       .debug_loc     00000000 
00011942 l       .debug_loc     00000000 
00011964 l       .debug_loc     00000000 
0001197f l       .debug_loc     00000000 
0001199a l       .debug_loc     00000000 
000119b5 l       .debug_loc     00000000 
000119db l       .debug_loc     00000000 
00011a01 l       .debug_loc     00000000 
00011a23 l       .debug_loc     00000000 
00011a3e l       .debug_loc     00000000 
00011a59 l       .debug_loc     00000000 
00011a74 l       .debug_loc     00000000 
00011a8f l       .debug_loc     00000000 
00011ab0 l       .debug_loc     00000000 
00011ad6 l       .debug_loc     00000000 
00011afc l       .debug_loc     00000000 
00011b1e l       .debug_loc     00000000 
00011b39 l       .debug_loc     00000000 
00011b54 l       .debug_loc     00000000 
00011b6f l       .debug_loc     00000000 
00011b90 l       .debug_loc     00000000 
00011bb2 l       .debug_loc     00000000 
00011bd8 l       .debug_loc     00000000 
00011bfe l       .debug_loc     00000000 
00011c20 l       .debug_loc     00000000 
00011c3b l       .debug_loc     00000000 
00011c56 l       .debug_loc     00000000 
00011c7c l       .debug_loc     00000000 
00011ca2 l       .debug_loc     00000000 
00011cc4 l       .debug_loc     00000000 
00011cdf l       .debug_loc     00000000 
00011cfa l       .debug_loc     00000000 
00011d15 l       .debug_loc     00000000 
00011d3b l       .debug_loc     00000000 
00011d61 l       .debug_loc     00000000 
00011d83 l       .debug_loc     00000000 
00011d9e l       .debug_loc     00000000 
00011db9 l       .debug_loc     00000000 
00011dd4 l       .debug_loc     00000000 
00011dfa l       .debug_loc     00000000 
00011e20 l       .debug_loc     00000000 
00011e42 l       .debug_loc     00000000 
00011e5d l       .debug_loc     00000000 
00011e78 l       .debug_loc     00000000 
00011e93 l       .debug_loc     00000000 
00011eb9 l       .debug_loc     00000000 
00011edf l       .debug_loc     00000000 
00011f01 l       .debug_loc     00000000 
00011f1c l       .debug_loc     00000000 
00011f37 l       .debug_loc     00000000 
00011f52 l       .debug_loc     00000000 
00011f6d l       .debug_loc     00000000 
00011f8e l       .debug_loc     00000000 
00011fb4 l       .debug_loc     00000000 
00011fda l       .debug_loc     00000000 
00011ffc l       .debug_loc     00000000 
00012017 l       .debug_loc     00000000 
00012032 l       .debug_loc     00000000 
0001204d l       .debug_loc     00000000 
0001206e l       .debug_loc     00000000 
00012090 l       .debug_loc     00000000 
000120b6 l       .debug_loc     00000000 
000120dc l       .debug_loc     00000000 
000120fe l       .debug_loc     00000000 
00012119 l       .debug_loc     00000000 
00012134 l       .debug_loc     00000000 
0001215a l       .debug_loc     00000000 
00012180 l       .debug_loc     00000000 
000121a2 l       .debug_loc     00000000 
000121bd l       .debug_loc     00000000 
000121d8 l       .debug_loc     00000000 
000121f3 l       .debug_loc     00000000 
00012219 l       .debug_loc     00000000 
0001223f l       .debug_loc     00000000 
00012261 l       .debug_loc     00000000 
0001227c l       .debug_loc     00000000 
00012297 l       .debug_loc     00000000 
000122b2 l       .debug_loc     00000000 
000122d8 l       .debug_loc     00000000 
000122fe l       .debug_loc     00000000 
00012320 l       .debug_loc     00000000 
0001233b l       .debug_loc     00000000 
00012356 l       .debug_loc     00000000 
00012371 l       .debug_loc     00000000 
00012397 l       .debug_loc     00000000 
000123bd l       .debug_loc     00000000 
000123df l       .debug_loc     00000000 
000123fa l       .debug_loc     00000000 
00012415 l       .debug_loc     00000000 
00012430 l       .debug_loc     00000000 
0001244b l       .debug_loc     00000000 
0001246c l       .debug_loc     00000000 
00012492 l       .debug_loc     00000000 
000124b8 l       .debug_loc     00000000 
000124da l       .debug_loc     00000000 
000124f5 l       .debug_loc     00000000 
00012510 l       .debug_loc     00000000 
0001252b l       .debug_loc     00000000 
0001254c l       .debug_loc     00000000 
0001256e l       .debug_loc     00000000 
00012594 l       .debug_loc     00000000 
000125ba l       .debug_loc     00000000 
000125dc l       .debug_loc     00000000 
000125f7 l       .debug_loc     00000000 
00012612 l       .debug_loc     00000000 
00012638 l       .debug_loc     00000000 
0001265e l       .debug_loc     00000000 
00012680 l       .debug_loc     00000000 
0001269b l       .debug_loc     00000000 
000126b6 l       .debug_loc     00000000 
000126d1 l       .debug_loc     00000000 
000126f7 l       .debug_loc     00000000 
0001271d l       .debug_loc     00000000 
0001273f l       .debug_loc     00000000 
0001275a l       .debug_loc     00000000 
00012775 l       .debug_loc     00000000 
00012790 l       .debug_loc     00000000 
000127b6 l       .debug_loc     00000000 
000127dc l       .debug_loc     00000000 
000127fe l       .debug_loc     00000000 
00012819 l       .debug_loc     00000000 
00012834 l       .debug_loc     00000000 
0001284f l       .debug_loc     00000000 
00012875 l       .debug_loc     00000000 
0001289b l       .debug_loc     00000000 
000128bd l       .debug_loc     00000000 
000128d8 l       .debug_loc     00000000 
000128f3 l       .debug_loc     00000000 
0001290e l       .debug_loc     00000000 
00012929 l       .debug_loc     00000000 
0001294a l       .debug_loc     00000000 
00012970 l       .debug_loc     00000000 
00012996 l       .debug_loc     00000000 
000129b8 l       .debug_loc     00000000 
000129d3 l       .debug_loc     00000000 
000129ee l       .debug_loc     00000000 
00012a09 l       .debug_loc     00000000 
00012a2a l       .debug_loc     00000000 
00012a4c l       .debug_loc     00000000 
00012a72 l       .debug_loc     00000000 
00012a98 l       .debug_loc     00000000 
00012aba l       .debug_loc     00000000 
00012ad5 l       .debug_loc     00000000 
00012af0 l       .debug_loc     00000000 
00012b16 l       .debug_loc     00000000 
00012b3c l       .debug_loc     00000000 
00012b5e l       .debug_loc     00000000 
00012b79 l       .debug_loc     00000000 
00012b94 l       .debug_loc     00000000 
00012baf l       .debug_loc     00000000 
00012bd5 l       .debug_loc     00000000 
00012bfb l       .debug_loc     00000000 
00012c1d l       .debug_loc     00000000 
00012c38 l       .debug_loc     00000000 
00012c53 l       .debug_loc     00000000 
00012c6e l       .debug_loc     00000000 
00012c94 l       .debug_loc     00000000 
00012cba l       .debug_loc     00000000 
00012cdc l       .debug_loc     00000000 
00012cf7 l       .debug_loc     00000000 
00012d12 l       .debug_loc     00000000 
00012d2d l       .debug_loc     00000000 
00012d53 l       .debug_loc     00000000 
00012d79 l       .debug_loc     00000000 
00012d9b l       .debug_loc     00000000 
00012db6 l       .debug_loc     00000000 
00012dd1 l       .debug_loc     00000000 
00012dec l       .debug_loc     00000000 
00012e07 l       .debug_loc     00000000 
00012e28 l       .debug_loc     00000000 
00012e4e l       .debug_loc     00000000 
00012e74 l       .debug_loc     00000000 
00012e96 l       .debug_loc     00000000 
00012eb1 l       .debug_loc     00000000 
00012ecc l       .debug_loc     00000000 
00012ee7 l       .debug_loc     00000000 
00012f08 l       .debug_loc     00000000 
00012f2a l       .debug_loc     00000000 
00012f50 l       .debug_loc     00000000 
00012f76 l       .debug_loc     00000000 
00012f98 l       .debug_loc     00000000 
00012fb3 l       .debug_loc     00000000 
00012fce l       .debug_loc     00000000 
00012ff4 l       .debug_loc     00000000 
0001301a l       .debug_loc     00000000 
0001303c l       .debug_loc     00000000 
00013057 l       .debug_loc     00000000 
00013072 l       .debug_loc     00000000 
0001308d l       .debug_loc     00000000 
000130b3 l       .debug_loc     00000000 
000130d9 l       .debug_loc     00000000 
000130fb l       .debug_loc     00000000 
00013116 l       .debug_loc     00000000 
00013131 l       .debug_loc     00000000 
0001314c l       .debug_loc     00000000 
00013172 l       .debug_loc     00000000 
00013198 l       .debug_loc     00000000 
000131ba l       .debug_loc     00000000 
000131d5 l       .debug_loc     00000000 
000131f0 l       .debug_loc     00000000 
0001320b l       .debug_loc     00000000 
00013231 l       .debug_loc     00000000 
00013257 l       .debug_loc     00000000 
00013279 l       .debug_loc     00000000 
00013294 l       .debug_loc     00000000 
000132af l       .debug_loc     00000000 
000132ca l       .debug_loc     00000000 
000132e5 l       .debug_loc     00000000 
00013306 l       .debug_loc     00000000 
0001332c l       .debug_loc     00000000 
00013352 l       .debug_loc     00000000 
00013374 l       .debug_loc     00000000 
0001338f l       .debug_loc     00000000 
000133aa l       .debug_loc     00000000 
000133c5 l       .debug_loc     00000000 
000133e6 l       .debug_loc     00000000 
00013408 l       .debug_loc     00000000 
0001342e l       .debug_loc     00000000 
00013454 l       .debug_loc     00000000 
00013476 l       .debug_loc     00000000 
00013491 l       .debug_loc     00000000 
000134ac l       .debug_loc     00000000 
000134d2 l       .debug_loc     00000000 
000134f8 l       .debug_loc     00000000 
0001351a l       .debug_loc     00000000 
00013535 l       .debug_loc     00000000 
00013550 l       .debug_loc     00000000 
0001356b l       .debug_loc     00000000 
00013591 l       .debug_loc     00000000 
000135b7 l       .debug_loc     00000000 
000135d9 l       .debug_loc     00000000 
000135f4 l       .debug_loc     00000000 
0001360f l       .debug_loc     00000000 
0001362a l       .debug_loc     00000000 
00013650 l       .debug_loc     00000000 
00013676 l       .debug_loc     00000000 
00013698 l       .debug_loc     00000000 
000136b3 l       .debug_loc     00000000 
000136ce l       .debug_loc     00000000 
000136e9 l       .debug_loc     00000000 
0001370f l       .debug_loc     00000000 
00013735 l       .debug_loc     00000000 
00013757 l       .debug_loc     00000000 
00013772 l       .debug_loc     00000000 
0001378d l       .debug_loc     00000000 
000137a8 l       .debug_loc     00000000 
000137c3 l       .debug_loc     00000000 
000137e4 l       .debug_loc     00000000 
0001380a l       .debug_loc     00000000 
00013830 l       .debug_loc     00000000 
00013852 l       .debug_loc     00000000 
0001386d l       .debug_loc     00000000 
00013888 l       .debug_loc     00000000 
000138a3 l       .debug_loc     00000000 
000138c4 l       .debug_loc     00000000 
000138e6 l       .debug_loc     00000000 
0001390c l       .debug_loc     00000000 
00013932 l       .debug_loc     00000000 
00013954 l       .debug_loc     00000000 
0001396f l       .debug_loc     00000000 
0001398a l       .debug_loc     00000000 
000139b0 l       .debug_loc     00000000 
000139d6 l       .debug_loc     00000000 
000139f8 l       .debug_loc     00000000 
00013a13 l       .debug_loc     00000000 
00013a2e l       .debug_loc     00000000 
00013a49 l       .debug_loc     00000000 
00013a6f l       .debug_loc     00000000 
00013a95 l       .debug_loc     00000000 
00013ab7 l       .debug_loc     00000000 
00013ad2 l       .debug_loc     00000000 
00013aed l       .debug_loc     00000000 
00013b08 l       .debug_loc     00000000 
00013b2e l       .debug_loc     00000000 
00013b54 l       .debug_loc     00000000 
00013b76 l       .debug_loc     00000000 
00013b91 l       .debug_loc     00000000 
00013bac l       .debug_loc     00000000 
00013bc7 l       .debug_loc     00000000 
00013bed l       .debug_loc     00000000 
00013c13 l       .debug_loc     00000000 
00013c35 l       .debug_loc     00000000 
00013c50 l       .debug_loc     00000000 
00013c6b l       .debug_loc     00000000 
00013c86 l       .debug_loc     00000000 
00013ca1 l       .debug_loc     00000000 
00013cc2 l       .debug_loc     00000000 
00013ce8 l       .debug_loc     00000000 
00013d0e l       .debug_loc     00000000 
00013d30 l       .debug_loc     00000000 
00013d4b l       .debug_loc     00000000 
00013d66 l       .debug_loc     00000000 
00013d81 l       .debug_loc     00000000 
00013da2 l       .debug_loc     00000000 
00013dc4 l       .debug_loc     00000000 
00013dea l       .debug_loc     00000000 
00013e10 l       .debug_loc     00000000 
00013e32 l       .debug_loc     00000000 
00013e4d l       .debug_loc     00000000 
00013e68 l       .debug_loc     00000000 
00013e8e l       .debug_loc     00000000 
00013eb4 l       .debug_loc     00000000 
00013ed6 l       .debug_loc     00000000 
00013ef1 l       .debug_loc     00000000 
00013f0c l       .debug_loc     00000000 
00013f27 l       .debug_loc     00000000 
00013f4d l       .debug_loc     00000000 
00013f73 l       .debug_loc     00000000 
00013f95 l       .debug_loc     00000000 
00013fb0 l       .debug_loc     00000000 
00013fcb l       .debug_loc     00000000 
00013fe6 l       .debug_loc     00000000 
0001400c l       .debug_loc     00000000 
00014032 l       .debug_loc     00000000 
00014054 l       .debug_loc     00000000 
0001406f l       .debug_loc     00000000 
0001408a l       .debug_loc     00000000 
000140a5 l       .debug_loc     00000000 
000140cb l       .debug_loc     00000000 
000140f1 l       .debug_loc     00000000 
00014113 l       .debug_loc     00000000 
0001412e l       .debug_loc     00000000 
00014149 l       .debug_loc     00000000 
00014164 l       .debug_loc     00000000 
0001417f l       .debug_loc     00000000 
000141a0 l       .debug_loc     00000000 
000141c6 l       .debug_loc     00000000 
000141ec l       .debug_loc     00000000 
0001420e l       .debug_loc     00000000 
00014229 l       .debug_loc     00000000 
00014244 l       .debug_loc     00000000 
0001425f l       .debug_loc     00000000 
00014280 l       .debug_loc     00000000 
000142a2 l       .debug_loc     00000000 
000142c8 l       .debug_loc     00000000 
000142ee l       .debug_loc     00000000 
00014310 l       .debug_loc     00000000 
0001432b l       .debug_loc     00000000 
00014346 l       .debug_loc     00000000 
0001436c l       .debug_loc     00000000 
00014392 l       .debug_loc     00000000 
000143b4 l       .debug_loc     00000000 
000143cf l       .debug_loc     00000000 
000143ea l       .debug_loc     00000000 
00014405 l       .debug_loc     00000000 
0001442b l       .debug_loc     00000000 
00014451 l       .debug_loc     00000000 
00014473 l       .debug_loc     00000000 
0001448e l       .debug_loc     00000000 
000144a9 l       .debug_loc     00000000 
000144c4 l       .debug_loc     00000000 
000144ea l       .debug_loc     00000000 
00014510 l       .debug_loc     00000000 
00014532 l       .debug_loc     00000000 
0001454d l       .debug_loc     00000000 
00014568 l       .debug_loc     00000000 
00014583 l       .debug_loc     00000000 
000145a9 l       .debug_loc     00000000 
000145cf l       .debug_loc     00000000 
000145f1 l       .debug_loc     00000000 
0001460c l       .debug_loc     00000000 
00014627 l       .debug_loc     00000000 
00014642 l       .debug_loc     00000000 
0001465d l       .debug_loc     00000000 
0001467e l       .debug_loc     00000000 
000146a4 l       .debug_loc     00000000 
000146ca l       .debug_loc     00000000 
000146ec l       .debug_loc     00000000 
00014707 l       .debug_loc     00000000 
00014722 l       .debug_loc     00000000 
0001473d l       .debug_loc     00000000 
0001475e l       .debug_loc     00000000 
00014780 l       .debug_loc     00000000 
000147a6 l       .debug_loc     00000000 
000147cc l       .debug_loc     00000000 
000147ee l       .debug_loc     00000000 
00014809 l       .debug_loc     00000000 
00014824 l       .debug_loc     00000000 
0001484a l       .debug_loc     00000000 
00014870 l       .debug_loc     00000000 
00014892 l       .debug_loc     00000000 
000148ad l       .debug_loc     00000000 
000148c8 l       .debug_loc     00000000 
000148e3 l       .debug_loc     00000000 
00014909 l       .debug_loc     00000000 
0001492f l       .debug_loc     00000000 
00014951 l       .debug_loc     00000000 
0001496c l       .debug_loc     00000000 
00014987 l       .debug_loc     00000000 
000149a2 l       .debug_loc     00000000 
000149c8 l       .debug_loc     00000000 
000149ee l       .debug_loc     00000000 
00014a10 l       .debug_loc     00000000 
00014a2b l       .debug_loc     00000000 
00014a46 l       .debug_loc     00000000 
00014a61 l       .debug_loc     00000000 
00014a87 l       .debug_loc     00000000 
00014aad l       .debug_loc     00000000 
00014acf l       .debug_loc     00000000 
00014aea l       .debug_loc     00000000 
00014b05 l       .debug_loc     00000000 
00014b20 l       .debug_loc     00000000 
00014b3b l       .debug_loc     00000000 
00014b5c l       .debug_loc     00000000 
00014b82 l       .debug_loc     00000000 
00014ba8 l       .debug_loc     00000000 
00014bca l       .debug_loc     00000000 
00014be5 l       .debug_loc     00000000 
00014c00 l       .debug_loc     00000000 
00014c1b l       .debug_loc     00000000 
00014c3c l       .debug_loc     00000000 
00014c5e l       .debug_loc     00000000 
00014c84 l       .debug_loc     00000000 
00014caa l       .debug_loc     00000000 
00014ccc l       .debug_loc     00000000 
00014ce7 l       .debug_loc     00000000 
00014d02 l       .debug_loc     00000000 
00014d28 l       .debug_loc     00000000 
00014d4e l       .debug_loc     00000000 
00014d70 l       .debug_loc     00000000 
00014d8b l       .debug_loc     00000000 
00014da6 l       .debug_loc     00000000 
00014dc1 l       .debug_loc     00000000 
00014de7 l       .debug_loc     00000000 
00014e0d l       .debug_loc     00000000 
00014e2f l       .debug_loc     00000000 
00014e4a l       .debug_loc     00000000 
00014e65 l       .debug_loc     00000000 
00014e80 l       .debug_loc     00000000 
00014ea6 l       .debug_loc     00000000 
00014ecc l       .debug_loc     00000000 
00014eee l       .debug_loc     00000000 
00014f09 l       .debug_loc     00000000 
00014f24 l       .debug_loc     00000000 
00014f3f l       .debug_loc     00000000 
00014f65 l       .debug_loc     00000000 
00014f8b l       .debug_loc     00000000 
00014fad l       .debug_loc     00000000 
00014fc8 l       .debug_loc     00000000 
00014fe3 l       .debug_loc     00000000 
00014ffe l       .debug_loc     00000000 
00015019 l       .debug_loc     00000000 
0001503a l       .debug_loc     00000000 
00015060 l       .debug_loc     00000000 
00015086 l       .debug_loc     00000000 
000150a8 l       .debug_loc     00000000 
000150c3 l       .debug_loc     00000000 
000150de l       .debug_loc     00000000 
000150f9 l       .debug_loc     00000000 
0001511a l       .debug_loc     00000000 
0001513c l       .debug_loc     00000000 
00015162 l       .debug_loc     00000000 
00015188 l       .debug_loc     00000000 
000151aa l       .debug_loc     00000000 
000151c5 l       .debug_loc     00000000 
000151e0 l       .debug_loc     00000000 
00015206 l       .debug_loc     00000000 
0001522c l       .debug_loc     00000000 
0001524e l       .debug_loc     00000000 
00015269 l       .debug_loc     00000000 
00015284 l       .debug_loc     00000000 
0001529f l       .debug_loc     00000000 
000152c5 l       .debug_loc     00000000 
000152eb l       .debug_loc     00000000 
0001530d l       .debug_loc     00000000 
00015328 l       .debug_loc     00000000 
00015343 l       .debug_loc     00000000 
0001535e l       .debug_loc     00000000 
00015384 l       .debug_loc     00000000 
000153aa l       .debug_loc     00000000 
000153cc l       .debug_loc     00000000 
000153e7 l       .debug_loc     00000000 
00015402 l       .debug_loc     00000000 
0001541d l       .debug_loc     00000000 
00015443 l       .debug_loc     00000000 
00015469 l       .debug_loc     00000000 
0001548b l       .debug_loc     00000000 
000154a6 l       .debug_loc     00000000 
000154c1 l       .debug_loc     00000000 
000154dc l       .debug_loc     00000000 
000154f7 l       .debug_loc     00000000 
00015518 l       .debug_loc     00000000 
0001553e l       .debug_loc     00000000 
00015564 l       .debug_loc     00000000 
00015586 l       .debug_loc     00000000 
000155a1 l       .debug_loc     00000000 
000155bc l       .debug_loc     00000000 
000155d7 l       .debug_loc     00000000 
000155f8 l       .debug_loc     00000000 
0001561a l       .debug_loc     00000000 
00015640 l       .debug_loc     00000000 
00015666 l       .debug_loc     00000000 
00015688 l       .debug_loc     00000000 
000156a3 l       .debug_loc     00000000 
000156be l       .debug_loc     00000000 
000156e4 l       .debug_loc     00000000 
0001570a l       .debug_loc     00000000 
0001572c l       .debug_loc     00000000 
00015747 l       .debug_loc     00000000 
00015762 l       .debug_loc     00000000 
0001577d l       .debug_loc     00000000 
000157a3 l       .debug_loc     00000000 
000157c9 l       .debug_loc     00000000 
000157eb l       .debug_loc     00000000 
00015806 l       .debug_loc     00000000 
00015821 l       .debug_loc     00000000 
0001583c l       .debug_loc     00000000 
00015862 l       .debug_loc     00000000 
00015888 l       .debug_loc     00000000 
000158aa l       .debug_loc     00000000 
000158c5 l       .debug_loc     00000000 
000158e0 l       .debug_loc     00000000 
000158fb l       .debug_loc     00000000 
00015921 l       .debug_loc     00000000 
00015947 l       .debug_loc     00000000 
00015969 l       .debug_loc     00000000 
00015984 l       .debug_loc     00000000 
0001599f l       .debug_loc     00000000 
000159ba l       .debug_loc     00000000 
000159d5 l       .debug_loc     00000000 
000159f6 l       .debug_loc     00000000 
00015a1c l       .debug_loc     00000000 
00015a42 l       .debug_loc     00000000 
00015a64 l       .debug_loc     00000000 
00015a7f l       .debug_loc     00000000 
00015a9a l       .debug_loc     00000000 
00015ab5 l       .debug_loc     00000000 
00015ad6 l       .debug_loc     00000000 
00015af8 l       .debug_loc     00000000 
00015b1e l       .debug_loc     00000000 
00015b44 l       .debug_loc     00000000 
00015b66 l       .debug_loc     00000000 
00015b81 l       .debug_loc     00000000 
00015b9c l       .debug_loc     00000000 
00015bc2 l       .debug_loc     00000000 
00015be8 l       .debug_loc     00000000 
00015c0a l       .debug_loc     00000000 
00015c25 l       .debug_loc     00000000 
00015c40 l       .debug_loc     00000000 
00015c5b l       .debug_loc     00000000 
00015c81 l       .debug_loc     00000000 
00015ca7 l       .debug_loc     00000000 
00015cc9 l       .debug_loc     00000000 
00015ce4 l       .debug_loc     00000000 
00015cff l       .debug_loc     00000000 
00015d1a l       .debug_loc     00000000 
00015d40 l       .debug_loc     00000000 
00015d66 l       .debug_loc     00000000 
00015d88 l       .debug_loc     00000000 
00015da3 l       .debug_loc     00000000 
00015dbe l       .debug_loc     00000000 
00015dd9 l       .debug_loc     00000000 
00015dff l       .debug_loc     00000000 
00015e25 l       .debug_loc     00000000 
00015e47 l       .debug_loc     00000000 
00015e62 l       .debug_loc     00000000 
00015e7d l       .debug_loc     00000000 
00015e98 l       .debug_loc     00000000 
00015eb3 l       .debug_loc     00000000 
00015ed4 l       .debug_loc     00000000 
00015efa l       .debug_loc     00000000 
00015f20 l       .debug_loc     00000000 
00015f42 l       .debug_loc     00000000 
00015f5d l       .debug_loc     00000000 
00015f78 l       .debug_loc     00000000 
00015f93 l       .debug_loc     00000000 
00015fb4 l       .debug_loc     00000000 
00015fd6 l       .debug_loc     00000000 
00015ffc l       .debug_loc     00000000 
00016022 l       .debug_loc     00000000 
00016044 l       .debug_loc     00000000 
0001605f l       .debug_loc     00000000 
0001607a l       .debug_loc     00000000 
000160a0 l       .debug_loc     00000000 
000160c6 l       .debug_loc     00000000 
000160e8 l       .debug_loc     00000000 
00016103 l       .debug_loc     00000000 
0001611e l       .debug_loc     00000000 
00016139 l       .debug_loc     00000000 
0001615f l       .debug_loc     00000000 
00016185 l       .debug_loc     00000000 
000161a7 l       .debug_loc     00000000 
000161c2 l       .debug_loc     00000000 
000161dd l       .debug_loc     00000000 
000161f8 l       .debug_loc     00000000 
0001621e l       .debug_loc     00000000 
00016244 l       .debug_loc     00000000 
00016266 l       .debug_loc     00000000 
00016281 l       .debug_loc     00000000 
0001629c l       .debug_loc     00000000 
000162b7 l       .debug_loc     00000000 
000162dd l       .debug_loc     00000000 
00016303 l       .debug_loc     00000000 
00016325 l       .debug_loc     00000000 
00016340 l       .debug_loc     00000000 
0001635b l       .debug_loc     00000000 
00016376 l       .debug_loc     00000000 
00016391 l       .debug_loc     00000000 
000163b2 l       .debug_loc     00000000 
000163d8 l       .debug_loc     00000000 
000163fe l       .debug_loc     00000000 
00016420 l       .debug_loc     00000000 
0001643b l       .debug_loc     00000000 
00016456 l       .debug_loc     00000000 
00016471 l       .debug_loc     00000000 
00016492 l       .debug_loc     00000000 
000164b4 l       .debug_loc     00000000 
000164da l       .debug_loc     00000000 
00016500 l       .debug_loc     00000000 
00016522 l       .debug_loc     00000000 
0001653d l       .debug_loc     00000000 
00016558 l       .debug_loc     00000000 
0001657e l       .debug_loc     00000000 
000165a4 l       .debug_loc     00000000 
000165c6 l       .debug_loc     00000000 
000165e1 l       .debug_loc     00000000 
000165fc l       .debug_loc     00000000 
00016617 l       .debug_loc     00000000 
0001663d l       .debug_loc     00000000 
00016663 l       .debug_loc     00000000 
00016685 l       .debug_loc     00000000 
000166a0 l       .debug_loc     00000000 
000166bb l       .debug_loc     00000000 
000166d6 l       .debug_loc     00000000 
000166fc l       .debug_loc     00000000 
00016722 l       .debug_loc     00000000 
00016744 l       .debug_loc     00000000 
0001675f l       .debug_loc     00000000 
0001677a l       .debug_loc     00000000 
00016795 l       .debug_loc     00000000 
000167bb l       .debug_loc     00000000 
000167e1 l       .debug_loc     00000000 
00016803 l       .debug_loc     00000000 
0001681e l       .debug_loc     00000000 
00016839 l       .debug_loc     00000000 
00016854 l       .debug_loc     00000000 
0001686f l       .debug_loc     00000000 
00016890 l       .debug_loc     00000000 
000168b6 l       .debug_loc     00000000 
000168dc l       .debug_loc     00000000 
000168fe l       .debug_loc     00000000 
00016919 l       .debug_loc     00000000 
00016934 l       .debug_loc     00000000 
0001694f l       .debug_loc     00000000 
00016970 l       .debug_loc     00000000 
00016992 l       .debug_loc     00000000 
000169b8 l       .debug_loc     00000000 
000169de l       .debug_loc     00000000 
00016a00 l       .debug_loc     00000000 
00016a1b l       .debug_loc     00000000 
00016a36 l       .debug_loc     00000000 
00016a5c l       .debug_loc     00000000 
00016a82 l       .debug_loc     00000000 
00016aa4 l       .debug_loc     00000000 
00016abf l       .debug_loc     00000000 
00016ada l       .debug_loc     00000000 
00016af5 l       .debug_loc     00000000 
00016b1b l       .debug_loc     00000000 
00016b41 l       .debug_loc     00000000 
00016b63 l       .debug_loc     00000000 
00016b7e l       .debug_loc     00000000 
00016b99 l       .debug_loc     00000000 
00016bb4 l       .debug_loc     00000000 
00016bda l       .debug_loc     00000000 
00016c00 l       .debug_loc     00000000 
00016c22 l       .debug_loc     00000000 
00016c3d l       .debug_loc     00000000 
00016c58 l       .debug_loc     00000000 
00016c73 l       .debug_loc     00000000 
00016c99 l       .debug_loc     00000000 
00016cbf l       .debug_loc     00000000 
00016ce1 l       .debug_loc     00000000 
00016cfc l       .debug_loc     00000000 
00016d17 l       .debug_loc     00000000 
00016d32 l       .debug_loc     00000000 
00016d4d l       .debug_loc     00000000 
00016d6e l       .debug_loc     00000000 
00016d94 l       .debug_loc     00000000 
00016dba l       .debug_loc     00000000 
00016ddc l       .debug_loc     00000000 
00016df7 l       .debug_loc     00000000 
00016e12 l       .debug_loc     00000000 
00016e2d l       .debug_loc     00000000 
00016e4e l       .debug_loc     00000000 
00016e70 l       .debug_loc     00000000 
00016e96 l       .debug_loc     00000000 
00016ebc l       .debug_loc     00000000 
00016ede l       .debug_loc     00000000 
00016ef9 l       .debug_loc     00000000 
00016f14 l       .debug_loc     00000000 
00016f3a l       .debug_loc     00000000 
00016f60 l       .debug_loc     00000000 
00016f82 l       .debug_loc     00000000 
00016f9d l       .debug_loc     00000000 
00016fb8 l       .debug_loc     00000000 
00016fd3 l       .debug_loc     00000000 
00016ff9 l       .debug_loc     00000000 
0001701f l       .debug_loc     00000000 
00017041 l       .debug_loc     00000000 
0001705c l       .debug_loc     00000000 
00017077 l       .debug_loc     00000000 
00017092 l       .debug_loc     00000000 
000170b8 l       .debug_loc     00000000 
000170de l       .debug_loc     00000000 
00017100 l       .debug_loc     00000000 
0001711b l       .debug_loc     00000000 
00017136 l       .debug_loc     00000000 
00017151 l       .debug_loc     00000000 
00017177 l       .debug_loc     00000000 
0001719d l       .debug_loc     00000000 
000171bf l       .debug_loc     00000000 
000171da l       .debug_loc     00000000 
000171f5 l       .debug_loc     00000000 
00017210 l       .debug_loc     00000000 
0001722b l       .debug_loc     00000000 
0001724c l       .debug_loc     00000000 
00017272 l       .debug_loc     00000000 
00017298 l       .debug_loc     00000000 
000172ba l       .debug_loc     00000000 
000172d5 l       .debug_loc     00000000 
000172f0 l       .debug_loc     00000000 
0001730b l       .debug_loc     00000000 
0001732c l       .debug_loc     00000000 
0001734e l       .debug_loc     00000000 
00017374 l       .debug_loc     00000000 
0001739a l       .debug_loc     00000000 
000173bc l       .debug_loc     00000000 
000173d7 l       .debug_loc     00000000 
000173f2 l       .debug_loc     00000000 
00017418 l       .debug_loc     00000000 
0001743e l       .debug_loc     00000000 
00017460 l       .debug_loc     00000000 
0001747b l       .debug_loc     00000000 
00017496 l       .debug_loc     00000000 
000174b1 l       .debug_loc     00000000 
000174d7 l       .debug_loc     00000000 
000174fd l       .debug_loc     00000000 
0001751f l       .debug_loc     00000000 
0001753a l       .debug_loc     00000000 
00017555 l       .debug_loc     00000000 
00017570 l       .debug_loc     00000000 
00017596 l       .debug_loc     00000000 
000175bc l       .debug_loc     00000000 
000175de l       .debug_loc     00000000 
000175f9 l       .debug_loc     00000000 
00017614 l       .debug_loc     00000000 
0001762f l       .debug_loc     00000000 
00017655 l       .debug_loc     00000000 
0001767b l       .debug_loc     00000000 
0001769d l       .debug_loc     00000000 
000176b8 l       .debug_loc     00000000 
000176d3 l       .debug_loc     00000000 
000176ee l       .debug_loc     00000000 
00017709 l       .debug_loc     00000000 
0001772a l       .debug_loc     00000000 
00017750 l       .debug_loc     00000000 
00017776 l       .debug_loc     00000000 
00017798 l       .debug_loc     00000000 
000177b3 l       .debug_loc     00000000 
000177ce l       .debug_loc     00000000 
000177e9 l       .debug_loc     00000000 
0001780a l       .debug_loc     00000000 
0001782c l       .debug_loc     00000000 
00017852 l       .debug_loc     00000000 
00017878 l       .debug_loc     00000000 
0001789a l       .debug_loc     00000000 
000178b5 l       .debug_loc     00000000 
000178d0 l       .debug_loc     00000000 
000178f6 l       .debug_loc     00000000 
0001791c l       .debug_loc     00000000 
0001793e l       .debug_loc     00000000 
00017959 l       .debug_loc     00000000 
00017974 l       .debug_loc     00000000 
0001798f l       .debug_loc     00000000 
000179b5 l       .debug_loc     00000000 
000179db l       .debug_loc     00000000 
000179fd l       .debug_loc     00000000 
00017a18 l       .debug_loc     00000000 
00017a33 l       .debug_loc     00000000 
00017a4e l       .debug_loc     00000000 
00017a74 l       .debug_loc     00000000 
00017a9a l       .debug_loc     00000000 
00017abc l       .debug_loc     00000000 
00017ad7 l       .debug_loc     00000000 
00017af2 l       .debug_loc     00000000 
00017b0d l       .debug_loc     00000000 
00017b33 l       .debug_loc     00000000 
00017b59 l       .debug_loc     00000000 
00017b7b l       .debug_loc     00000000 
00017b96 l       .debug_loc     00000000 
00017bb1 l       .debug_loc     00000000 
00017bcc l       .debug_loc     00000000 
00017be7 l       .debug_loc     00000000 
00017c08 l       .debug_loc     00000000 
00017c2e l       .debug_loc     00000000 
00017c54 l       .debug_loc     00000000 
00017c76 l       .debug_loc     00000000 
00017c91 l       .debug_loc     00000000 
00017cac l       .debug_loc     00000000 
00017cc7 l       .debug_loc     00000000 
00017ce8 l       .debug_loc     00000000 
00017d0a l       .debug_loc     00000000 
00017d30 l       .debug_loc     00000000 
00017d56 l       .debug_loc     00000000 
00017d78 l       .debug_loc     00000000 
00017d93 l       .debug_loc     00000000 
00017dae l       .debug_loc     00000000 
00017dd4 l       .debug_loc     00000000 
00017dfa l       .debug_loc     00000000 
00017e1c l       .debug_loc     00000000 
00017e37 l       .debug_loc     00000000 
00017e52 l       .debug_loc     00000000 
00017e6d l       .debug_loc     00000000 
00017e93 l       .debug_loc     00000000 
00017eb9 l       .debug_loc     00000000 
00017edb l       .debug_loc     00000000 
00017ef6 l       .debug_loc     00000000 
00017f11 l       .debug_loc     00000000 
00017f2c l       .debug_loc     00000000 
00017f52 l       .debug_loc     00000000 
00017f78 l       .debug_loc     00000000 
00017f9a l       .debug_loc     00000000 
00017fb5 l       .debug_loc     00000000 
00017fd0 l       .debug_loc     00000000 
00017feb l       .debug_loc     00000000 
00018011 l       .debug_loc     00000000 
00018037 l       .debug_loc     00000000 
00018059 l       .debug_loc     00000000 
00018074 l       .debug_loc     00000000 
0001808f l       .debug_loc     00000000 
000180aa l       .debug_loc     00000000 
000180c5 l       .debug_loc     00000000 
000180e6 l       .debug_loc     00000000 
0001810c l       .debug_loc     00000000 
00018132 l       .debug_loc     00000000 
00018154 l       .debug_loc     00000000 
0001816f l       .debug_loc     00000000 
0001818a l       .debug_loc     00000000 
000181a5 l       .debug_loc     00000000 
000181c6 l       .debug_loc     00000000 
000181e8 l       .debug_loc     00000000 
0001820e l       .debug_loc     00000000 
00018234 l       .debug_loc     00000000 
00018256 l       .debug_loc     00000000 
00018271 l       .debug_loc     00000000 
0001828c l       .debug_loc     00000000 
000182b2 l       .debug_loc     00000000 
000182d8 l       .debug_loc     00000000 
000182fa l       .debug_loc     00000000 
00018315 l       .debug_loc     00000000 
00018330 l       .debug_loc     00000000 
0001834b l       .debug_loc     00000000 
00018371 l       .debug_loc     00000000 
00018397 l       .debug_loc     00000000 
000183b9 l       .debug_loc     00000000 
000183d4 l       .debug_loc     00000000 
000183ef l       .debug_loc     00000000 
0001840a l       .debug_loc     00000000 
00018430 l       .debug_loc     00000000 
00018456 l       .debug_loc     00000000 
00018478 l       .debug_loc     00000000 
00018493 l       .debug_loc     00000000 
000184ae l       .debug_loc     00000000 
000184c9 l       .debug_loc     00000000 
000184ef l       .debug_loc     00000000 
00018515 l       .debug_loc     00000000 
00018537 l       .debug_loc     00000000 
00018552 l       .debug_loc     00000000 
0001856d l       .debug_loc     00000000 
00018588 l       .debug_loc     00000000 
000185a3 l       .debug_loc     00000000 
000185c4 l       .debug_loc     00000000 
000185ea l       .debug_loc     00000000 
00018610 l       .debug_loc     00000000 
00018632 l       .debug_loc     00000000 
0001864d l       .debug_loc     00000000 
00018668 l       .debug_loc     00000000 
00018683 l       .debug_loc     00000000 
000186a4 l       .debug_loc     00000000 
000186c6 l       .debug_loc     00000000 
000186ec l       .debug_loc     00000000 
00018712 l       .debug_loc     00000000 
00018734 l       .debug_loc     00000000 
0001874f l       .debug_loc     00000000 
0001876a l       .debug_loc     00000000 
00018790 l       .debug_loc     00000000 
000187b6 l       .debug_loc     00000000 
000187d8 l       .debug_loc     00000000 
000187f3 l       .debug_loc     00000000 
0001880e l       .debug_loc     00000000 
00018829 l       .debug_loc     00000000 
0001884f l       .debug_loc     00000000 
00018875 l       .debug_loc     00000000 
00018897 l       .debug_loc     00000000 
000188b2 l       .debug_loc     00000000 
000188cd l       .debug_loc     00000000 
000188e8 l       .debug_loc     00000000 
0001890e l       .debug_loc     00000000 
00018934 l       .debug_loc     00000000 
00018956 l       .debug_loc     00000000 
00018971 l       .debug_loc     00000000 
0001898c l       .debug_loc     00000000 
000189a7 l       .debug_loc     00000000 
000189cd l       .debug_loc     00000000 
000189f3 l       .debug_loc     00000000 
00018a15 l       .debug_loc     00000000 
00018a30 l       .debug_loc     00000000 
00018a4b l       .debug_loc     00000000 
00018a66 l       .debug_loc     00000000 
00018a81 l       .debug_loc     00000000 
00018aa2 l       .debug_loc     00000000 
00018ac8 l       .debug_loc     00000000 
00018aee l       .debug_loc     00000000 
00018b10 l       .debug_loc     00000000 
00018b2b l       .debug_loc     00000000 
00018b46 l       .debug_loc     00000000 
00018b61 l       .debug_loc     00000000 
00018b82 l       .debug_loc     00000000 
00018ba4 l       .debug_loc     00000000 
00018bca l       .debug_loc     00000000 
00018bf0 l       .debug_loc     00000000 
00018c12 l       .debug_loc     00000000 
00018c2d l       .debug_loc     00000000 
00018c48 l       .debug_loc     00000000 
00018c6e l       .debug_loc     00000000 
00018c94 l       .debug_loc     00000000 
00018cb6 l       .debug_loc     00000000 
00018cd1 l       .debug_loc     00000000 
00018cec l       .debug_loc     00000000 
00018d07 l       .debug_loc     00000000 
00018d2d l       .debug_loc     00000000 
00018d53 l       .debug_loc     00000000 
00018d75 l       .debug_loc     00000000 
00018d90 l       .debug_loc     00000000 
00018dab l       .debug_loc     00000000 
00018dc6 l       .debug_loc     00000000 
00018dec l       .debug_loc     00000000 
00018e12 l       .debug_loc     00000000 
00018e34 l       .debug_loc     00000000 
00018e4f l       .debug_loc     00000000 
00018e6a l       .debug_loc     00000000 
00018e85 l       .debug_loc     00000000 
00018eab l       .debug_loc     00000000 
00018ed1 l       .debug_loc     00000000 
00018ef3 l       .debug_loc     00000000 
00018f0e l       .debug_loc     00000000 
00018f29 l       .debug_loc     00000000 
00018f44 l       .debug_loc     00000000 
00018f5f l       .debug_loc     00000000 
00018f80 l       .debug_loc     00000000 
00018fa6 l       .debug_loc     00000000 
00018fcc l       .debug_loc     00000000 
00018fee l       .debug_loc     00000000 
00019009 l       .debug_loc     00000000 
00019024 l       .debug_loc     00000000 
0001903f l       .debug_loc     00000000 
00019060 l       .debug_loc     00000000 
00019082 l       .debug_loc     00000000 
000190a8 l       .debug_loc     00000000 
000190ce l       .debug_loc     00000000 
000190f0 l       .debug_loc     00000000 
0001910b l       .debug_loc     00000000 
00019126 l       .debug_loc     00000000 
0001914c l       .debug_loc     00000000 
00019172 l       .debug_loc     00000000 
00019194 l       .debug_loc     00000000 
000191af l       .debug_loc     00000000 
000191ca l       .debug_loc     00000000 
000191e5 l       .debug_loc     00000000 
0001920b l       .debug_loc     00000000 
00019231 l       .debug_loc     00000000 
00019253 l       .debug_loc     00000000 
0001926e l       .debug_loc     00000000 
00019289 l       .debug_loc     00000000 
000192a4 l       .debug_loc     00000000 
000192ca l       .debug_loc     00000000 
000192f0 l       .debug_loc     00000000 
00019312 l       .debug_loc     00000000 
0001932d l       .debug_loc     00000000 
00019348 l       .debug_loc     00000000 
00019363 l       .debug_loc     00000000 
00019389 l       .debug_loc     00000000 
000193af l       .debug_loc     00000000 
000193d1 l       .debug_loc     00000000 
000193ec l       .debug_loc     00000000 
00019407 l       .debug_loc     00000000 
00019422 l       .debug_loc     00000000 
0001943d l       .debug_loc     00000000 
0001945e l       .debug_loc     00000000 
00019484 l       .debug_loc     00000000 
000194aa l       .debug_loc     00000000 
000194cc l       .debug_loc     00000000 
000194e7 l       .debug_loc     00000000 
00019502 l       .debug_loc     00000000 
0001951d l       .debug_loc     00000000 
0001953e l       .debug_loc     00000000 
00019560 l       .debug_loc     00000000 
00019586 l       .debug_loc     00000000 
000195ac l       .debug_loc     00000000 
000195ce l       .debug_loc     00000000 
000195e9 l       .debug_loc     00000000 
00019604 l       .debug_loc     00000000 
0001962a l       .debug_loc     00000000 
00019650 l       .debug_loc     00000000 
00019672 l       .debug_loc     00000000 
0001968d l       .debug_loc     00000000 
000196a8 l       .debug_loc     00000000 
000196c3 l       .debug_loc     00000000 
000196e9 l       .debug_loc     00000000 
0001970f l       .debug_loc     00000000 
00019731 l       .debug_loc     00000000 
0001974c l       .debug_loc     00000000 
00019767 l       .debug_loc     00000000 
00019782 l       .debug_loc     00000000 
000197a8 l       .debug_loc     00000000 
000197ce l       .debug_loc     00000000 
000197f0 l       .debug_loc     00000000 
0001980b l       .debug_loc     00000000 
00019826 l       .debug_loc     00000000 
00019841 l       .debug_loc     00000000 
00019867 l       .debug_loc     00000000 
0001988d l       .debug_loc     00000000 
000198af l       .debug_loc     00000000 
000198ca l       .debug_loc     00000000 
000198e5 l       .debug_loc     00000000 
00019900 l       .debug_loc     00000000 
0001991b l       .debug_loc     00000000 
0001993c l       .debug_loc     00000000 
00019962 l       .debug_loc     00000000 
00019988 l       .debug_loc     00000000 
000199aa l       .debug_loc     00000000 
000199c5 l       .debug_loc     00000000 
000199e0 l       .debug_loc     00000000 
000199fb l       .debug_loc     00000000 
00019a1c l       .debug_loc     00000000 
00019a3e l       .debug_loc     00000000 
00019a64 l       .debug_loc     00000000 
00019a8a l       .debug_loc     00000000 
00019aac l       .debug_loc     00000000 
00019ac7 l       .debug_loc     00000000 
00019ae2 l       .debug_loc     00000000 
00019b08 l       .debug_loc     00000000 
00019b2e l       .debug_loc     00000000 
00019b50 l       .debug_loc     00000000 
00019b6b l       .debug_loc     00000000 
00019b86 l       .debug_loc     00000000 
00019ba1 l       .debug_loc     00000000 
00019bc7 l       .debug_loc     00000000 
00019bed l       .debug_loc     00000000 
00019c0f l       .debug_loc     00000000 
00019c2a l       .debug_loc     00000000 
00019c45 l       .debug_loc     00000000 
00019c60 l       .debug_loc     00000000 
00019c86 l       .debug_loc     00000000 
00019cac l       .debug_loc     00000000 
00019cce l       .debug_loc     00000000 
00019ce9 l       .debug_loc     00000000 
00019d04 l       .debug_loc     00000000 
00019d1f l       .debug_loc     00000000 
00019d45 l       .debug_loc     00000000 
00019d6b l       .debug_loc     00000000 
00019d8d l       .debug_loc     00000000 
00019da8 l       .debug_loc     00000000 
00019dc3 l       .debug_loc     00000000 
00019dde l       .debug_loc     00000000 
00019df9 l       .debug_loc     00000000 
00019e1a l       .debug_loc     00000000 
00019e40 l       .debug_loc     00000000 
00019e66 l       .debug_loc     00000000 
00019e88 l       .debug_loc     00000000 
00019ea3 l       .debug_loc     00000000 
00019ebe l       .debug_loc     00000000 
00019ed9 l       .debug_loc     00000000 
00019efa l       .debug_loc     00000000 
00019f1c l       .debug_loc     00000000 
00019f42 l       .debug_loc     00000000 
00019f68 l       .debug_loc     00000000 
00019f8a l       .debug_loc     00000000 
00019fa5 l       .debug_loc     00000000 
00019fc0 l       .debug_loc     00000000 
00019fe6 l       .debug_loc     00000000 
0001a00c l       .debug_loc     00000000 
0001a02e l       .debug_loc     00000000 
0001a049 l       .debug_loc     00000000 
0001a064 l       .debug_loc     00000000 
0001a07f l       .debug_loc     00000000 
0001a0a5 l       .debug_loc     00000000 
0001a0cb l       .debug_loc     00000000 
0001a0ed l       .debug_loc     00000000 
0001a108 l       .debug_loc     00000000 
0001a123 l       .debug_loc     00000000 
0001a13e l       .debug_loc     00000000 
0001a164 l       .debug_loc     00000000 
0001a18a l       .debug_loc     00000000 
0001a1ac l       .debug_loc     00000000 
0001a1c7 l       .debug_loc     00000000 
0001a1e2 l       .debug_loc     00000000 
0001a1fd l       .debug_loc     00000000 
0001a223 l       .debug_loc     00000000 
0001a249 l       .debug_loc     00000000 
0001a26b l       .debug_loc     00000000 
0001a286 l       .debug_loc     00000000 
0001a2a1 l       .debug_loc     00000000 
0001a2bc l       .debug_loc     00000000 
0001a2d7 l       .debug_loc     00000000 
0001a2f8 l       .debug_loc     00000000 
0001a31e l       .debug_loc     00000000 
0001a344 l       .debug_loc     00000000 
0001a366 l       .debug_loc     00000000 
0001a381 l       .debug_loc     00000000 
0001a39c l       .debug_loc     00000000 
0001a3b7 l       .debug_loc     00000000 
0001a3d8 l       .debug_loc     00000000 
0001a3fa l       .debug_loc     00000000 
0001a420 l       .debug_loc     00000000 
0001a446 l       .debug_loc     00000000 
0001a468 l       .debug_loc     00000000 
0001a483 l       .debug_loc     00000000 
0001a49e l       .debug_loc     00000000 
0001a4c4 l       .debug_loc     00000000 
0001a4ea l       .debug_loc     00000000 
0001a50c l       .debug_loc     00000000 
0001a527 l       .debug_loc     00000000 
0001a542 l       .debug_loc     00000000 
0001a55d l       .debug_loc     00000000 
0001a583 l       .debug_loc     00000000 
0001a5a9 l       .debug_loc     00000000 
0001a5cb l       .debug_loc     00000000 
0001a5e6 l       .debug_loc     00000000 
0001a601 l       .debug_loc     00000000 
0001a61c l       .debug_loc     00000000 
0001a642 l       .debug_loc     00000000 
0001a668 l       .debug_loc     00000000 
0001a68a l       .debug_loc     00000000 
0001a6a5 l       .debug_loc     00000000 
0001a6c0 l       .debug_loc     00000000 
0001a6db l       .debug_loc     00000000 
0001a701 l       .debug_loc     00000000 
0001a727 l       .debug_loc     00000000 
0001a749 l       .debug_loc     00000000 
0001a764 l       .debug_loc     00000000 
0001a77f l       .debug_loc     00000000 
0001a79a l       .debug_loc     00000000 
0001a7b5 l       .debug_loc     00000000 
0001a7d6 l       .debug_loc     00000000 
0001a7fc l       .debug_loc     00000000 
0001a822 l       .debug_loc     00000000 
0001a844 l       .debug_loc     00000000 
0001a85f l       .debug_loc     00000000 
0001a87a l       .debug_loc     00000000 
0001a895 l       .debug_loc     00000000 
0001a8b6 l       .debug_loc     00000000 
0001a8d8 l       .debug_loc     00000000 
0001a8fe l       .debug_loc     00000000 
0001a924 l       .debug_loc     00000000 
0001a946 l       .debug_loc     00000000 
0001a961 l       .debug_loc     00000000 
0001a97c l       .debug_loc     00000000 
0001a9a2 l       .debug_loc     00000000 
0001a9c8 l       .debug_loc     00000000 
0001a9ea l       .debug_loc     00000000 
0001aa05 l       .debug_loc     00000000 
0001aa20 l       .debug_loc     00000000 
0001aa3b l       .debug_loc     00000000 
0001aa61 l       .debug_loc     00000000 
0001aa87 l       .debug_loc     00000000 
0001aaa9 l       .debug_loc     00000000 
0001aac4 l       .debug_loc     00000000 
0001aadf l       .debug_loc     00000000 
0001aafa l       .debug_loc     00000000 
0001ab20 l       .debug_loc     00000000 
0001ab46 l       .debug_loc     00000000 
0001ab68 l       .debug_loc     00000000 
0001ab83 l       .debug_loc     00000000 
0001ab9e l       .debug_loc     00000000 
0001abb9 l       .debug_loc     00000000 
0001abdf l       .debug_loc     00000000 
0001ac05 l       .debug_loc     00000000 
0001ac27 l       .debug_loc     00000000 
0001ac42 l       .debug_loc     00000000 
0001ac5d l       .debug_loc     00000000 
0001ac78 l       .debug_loc     00000000 
0001ac93 l       .debug_loc     00000000 
0001acb4 l       .debug_loc     00000000 
0001acda l       .debug_loc     00000000 
0001ad00 l       .debug_loc     00000000 
0001ad22 l       .debug_loc     00000000 
0001ad3d l       .debug_loc     00000000 
0001ad58 l       .debug_loc     00000000 
0001ad73 l       .debug_loc     00000000 
0001ad94 l       .debug_loc     00000000 
0001adb6 l       .debug_loc     00000000 
0001addc l       .debug_loc     00000000 
0001ae02 l       .debug_loc     00000000 
0001ae24 l       .debug_loc     00000000 
0001ae3f l       .debug_loc     00000000 
0001ae5a l       .debug_loc     00000000 
0001ae80 l       .debug_loc     00000000 
0001aea6 l       .debug_loc     00000000 
0001aec8 l       .debug_loc     00000000 
0001aee3 l       .debug_loc     00000000 
0001aefe l       .debug_loc     00000000 
0001af19 l       .debug_loc     00000000 
0001af3f l       .debug_loc     00000000 
0001af65 l       .debug_loc     00000000 
0001af87 l       .debug_loc     00000000 
0001afa2 l       .debug_loc     00000000 
0001afbd l       .debug_loc     00000000 
0001afd8 l       .debug_loc     00000000 
0001affe l       .debug_loc     00000000 
0001b024 l       .debug_loc     00000000 
0001b046 l       .debug_loc     00000000 
0001b061 l       .debug_loc     00000000 
0001b07c l       .debug_loc     00000000 
0001b097 l       .debug_loc     00000000 
0001b0bd l       .debug_loc     00000000 
0001b0e3 l       .debug_loc     00000000 
0001b105 l       .debug_loc     00000000 
0001b120 l       .debug_loc     00000000 
0001b13b l       .debug_loc     00000000 
0001b156 l       .debug_loc     00000000 
0001b171 l       .debug_loc     00000000 
0001b192 l       .debug_loc     00000000 
0001b1b8 l       .debug_loc     00000000 
0001b1de l       .debug_loc     00000000 
0001b200 l       .debug_loc     00000000 
0001b21b l       .debug_loc     00000000 
0001b236 l       .debug_loc     00000000 
0001b251 l       .debug_loc     00000000 
0001b272 l       .debug_loc     00000000 
0001b294 l       .debug_loc     00000000 
0001b2ba l       .debug_loc     00000000 
0001b2e0 l       .debug_loc     00000000 
0001b302 l       .debug_loc     00000000 
0001b31d l       .debug_loc     00000000 
0001b338 l       .debug_loc     00000000 
0001b35e l       .debug_loc     00000000 
0001b384 l       .debug_loc     00000000 
0001b3a6 l       .debug_loc     00000000 
0001b3c1 l       .debug_loc     00000000 
0001b3dc l       .debug_loc     00000000 
0001b3f7 l       .debug_loc     00000000 
0001b41d l       .debug_loc     00000000 
0001b443 l       .debug_loc     00000000 
0001b465 l       .debug_loc     00000000 
0001b480 l       .debug_loc     00000000 
0001b49b l       .debug_loc     00000000 
0001b4b6 l       .debug_loc     00000000 
0001b4dc l       .debug_loc     00000000 
0001b502 l       .debug_loc     00000000 
0001b524 l       .debug_loc     00000000 
0001b53f l       .debug_loc     00000000 
0001b55a l       .debug_loc     00000000 
0001b575 l       .debug_loc     00000000 
0001b59b l       .debug_loc     00000000 
0001b5c1 l       .debug_loc     00000000 
0001b5e3 l       .debug_loc     00000000 
0001b5fe l       .debug_loc     00000000 
0001b619 l       .debug_loc     00000000 
0001b634 l       .debug_loc     00000000 
0001b64f l       .debug_loc     00000000 
0001b670 l       .debug_loc     00000000 
0001b696 l       .debug_loc     00000000 
0001b6bc l       .debug_loc     00000000 
0001b6de l       .debug_loc     00000000 
0001b6f9 l       .debug_loc     00000000 
0001b714 l       .debug_loc     00000000 
0001b72f l       .debug_loc     00000000 
0001b750 l       .debug_loc     00000000 
0001b772 l       .debug_loc     00000000 
0001b798 l       .debug_loc     00000000 
0001b7be l       .debug_loc     00000000 
0001b7e0 l       .debug_loc     00000000 
0001b7fb l       .debug_loc     00000000 
0001b816 l       .debug_loc     00000000 
0001b83c l       .debug_loc     00000000 
0001b862 l       .debug_loc     00000000 
0001b884 l       .debug_loc     00000000 
0001b89f l       .debug_loc     00000000 
0001b8ba l       .debug_loc     00000000 
0001b8d5 l       .debug_loc     00000000 
0001b8fb l       .debug_loc     00000000 
0001b921 l       .debug_loc     00000000 
0001b943 l       .debug_loc     00000000 
0001b95e l       .debug_loc     00000000 
0001b979 l       .debug_loc     00000000 
0001b994 l       .debug_loc     00000000 
0001b9ba l       .debug_loc     00000000 
0001b9e0 l       .debug_loc     00000000 
0001ba02 l       .debug_loc     00000000 
0001ba1d l       .debug_loc     00000000 
0001ba38 l       .debug_loc     00000000 
0001ba53 l       .debug_loc     00000000 
0001ba79 l       .debug_loc     00000000 
0001ba9f l       .debug_loc     00000000 
0001bac1 l       .debug_loc     00000000 
0001badc l       .debug_loc     00000000 
0001baf7 l       .debug_loc     00000000 
0001bb12 l       .debug_loc     00000000 
0001bb2d l       .debug_loc     00000000 
0001bb4e l       .debug_loc     00000000 
0001bb74 l       .debug_loc     00000000 
0001bb9a l       .debug_loc     00000000 
0001bbbc l       .debug_loc     00000000 
0001bbd7 l       .debug_loc     00000000 
0001bbf2 l       .debug_loc     00000000 
0001bc0d l       .debug_loc     00000000 
0001bc2e l       .debug_loc     00000000 
0001bc50 l       .debug_loc     00000000 
0001bc76 l       .debug_loc     00000000 
0001bc9c l       .debug_loc     00000000 
0001bcbe l       .debug_loc     00000000 
0001bcd9 l       .debug_loc     00000000 
0001bcf4 l       .debug_loc     00000000 
0001bd1a l       .debug_loc     00000000 
0001bd40 l       .debug_loc     00000000 
0001bd62 l       .debug_loc     00000000 
0001bd7d l       .debug_loc     00000000 
0001bd98 l       .debug_loc     00000000 
0001bdb3 l       .debug_loc     00000000 
0001bdd9 l       .debug_loc     00000000 
0001bdff l       .debug_loc     00000000 
0001be21 l       .debug_loc     00000000 
0001be3c l       .debug_loc     00000000 
0001be57 l       .debug_loc     00000000 
0001be72 l       .debug_loc     00000000 
0001be98 l       .debug_loc     00000000 
0001bebe l       .debug_loc     00000000 
0001bee0 l       .debug_loc     00000000 
0001befb l       .debug_loc     00000000 
0001bf16 l       .debug_loc     00000000 
0001bf31 l       .debug_loc     00000000 
0001bf57 l       .debug_loc     00000000 
0001bf7d l       .debug_loc     00000000 
0001bf9f l       .debug_loc     00000000 
0001bfba l       .debug_loc     00000000 
0001bfd5 l       .debug_loc     00000000 
0001bff0 l       .debug_loc     00000000 
0001c00b l       .debug_loc     00000000 
0001c02c l       .debug_loc     00000000 
0001c052 l       .debug_loc     00000000 
0001c078 l       .debug_loc     00000000 
0001c09a l       .debug_loc     00000000 
0001c0b5 l       .debug_loc     00000000 
0001c0d0 l       .debug_loc     00000000 
0001c0eb l       .debug_loc     00000000 
0001c10c l       .debug_loc     00000000 
0001c12e l       .debug_loc     00000000 
0001c154 l       .debug_loc     00000000 
0001c17a l       .debug_loc     00000000 
0001c19c l       .debug_loc     00000000 
0001c1b7 l       .debug_loc     00000000 
0001c1d2 l       .debug_loc     00000000 
0001c1f8 l       .debug_loc     00000000 
0001c21e l       .debug_loc     00000000 
0001c240 l       .debug_loc     00000000 
0001c25b l       .debug_loc     00000000 
0001c276 l       .debug_loc     00000000 
0001c291 l       .debug_loc     00000000 
0001c2b7 l       .debug_loc     00000000 
0001c2dd l       .debug_loc     00000000 
0001c2ff l       .debug_loc     00000000 
0001c31a l       .debug_loc     00000000 
0001c335 l       .debug_loc     00000000 
0001c350 l       .debug_loc     00000000 
0001c376 l       .debug_loc     00000000 
0001c39c l       .debug_loc     00000000 
0001c3be l       .debug_loc     00000000 
0001c3d9 l       .debug_loc     00000000 
0001c3f4 l       .debug_loc     00000000 
0001c40f l       .debug_loc     00000000 
0001c435 l       .debug_loc     00000000 
0001c45b l       .debug_loc     00000000 
0001c47d l       .debug_loc     00000000 
0001c498 l       .debug_loc     00000000 
0001c4b3 l       .debug_loc     00000000 
0001c4ce l       .debug_loc     00000000 
0001c4e9 l       .debug_loc     00000000 
0001c50a l       .debug_loc     00000000 
0001c530 l       .debug_loc     00000000 
0001c556 l       .debug_loc     00000000 
0001c578 l       .debug_loc     00000000 
0001c593 l       .debug_loc     00000000 
0001c5ae l       .debug_loc     00000000 
0001c5c9 l       .debug_loc     00000000 
0001c5ea l       .debug_loc     00000000 
0001c60c l       .debug_loc     00000000 
0001c632 l       .debug_loc     00000000 
0001c658 l       .debug_loc     00000000 
0001c67a l       .debug_loc     00000000 
0001c695 l       .debug_loc     00000000 
0001c6b0 l       .debug_loc     00000000 
0001c6d6 l       .debug_loc     00000000 
0001c6fc l       .debug_loc     00000000 
0001c71e l       .debug_loc     00000000 
0001c739 l       .debug_loc     00000000 
0001c754 l       .debug_loc     00000000 
0001c76f l       .debug_loc     00000000 
0001c795 l       .debug_loc     00000000 
0001c7bb l       .debug_loc     00000000 
0001c7dd l       .debug_loc     00000000 
0001c7f8 l       .debug_loc     00000000 
0001c813 l       .debug_loc     00000000 
0001c82e l       .debug_loc     00000000 
0001c854 l       .debug_loc     00000000 
0001c87a l       .debug_loc     00000000 
0001c89c l       .debug_loc     00000000 
0001c8b7 l       .debug_loc     00000000 
0001c8d2 l       .debug_loc     00000000 
0001c8ed l       .debug_loc     00000000 
0001c913 l       .debug_loc     00000000 
0001c939 l       .debug_loc     00000000 
0001c95b l       .debug_loc     00000000 
0001c976 l       .debug_loc     00000000 
0001c991 l       .debug_loc     00000000 
0001c9ac l       .debug_loc     00000000 
0001c9c7 l       .debug_loc     00000000 
0001c9e8 l       .debug_loc     00000000 
0001ca0e l       .debug_loc     00000000 
0001ca34 l       .debug_loc     00000000 
0001ca56 l       .debug_loc     00000000 
0001ca71 l       .debug_loc     00000000 
0001ca8c l       .debug_loc     00000000 
0001caa7 l       .debug_loc     00000000 
0001cac8 l       .debug_loc     00000000 
0001caea l       .debug_loc     00000000 
0001cb10 l       .debug_loc     00000000 
0001cb36 l       .debug_loc     00000000 
0001cb58 l       .debug_loc     00000000 
0001cb73 l       .debug_loc     00000000 
0001cb8e l       .debug_loc     00000000 
0001cbb4 l       .debug_loc     00000000 
0001cbda l       .debug_loc     00000000 
0001cbfc l       .debug_loc     00000000 
0001cc17 l       .debug_loc     00000000 
0001cc32 l       .debug_loc     00000000 
0001cc4d l       .debug_loc     00000000 
0001cc73 l       .debug_loc     00000000 
0001cc99 l       .debug_loc     00000000 
0001ccbb l       .debug_loc     00000000 
0001ccd6 l       .debug_loc     00000000 
0001ccf1 l       .debug_loc     00000000 
0001cd0c l       .debug_loc     00000000 
0001cd32 l       .debug_loc     00000000 
0001cd58 l       .debug_loc     00000000 
0001cd7a l       .debug_loc     00000000 
0001cd95 l       .debug_loc     00000000 
0001cdb0 l       .debug_loc     00000000 
0001cdcb l       .debug_loc     00000000 
0001cdf1 l       .debug_loc     00000000 
0001ce17 l       .debug_loc     00000000 
0001ce39 l       .debug_loc     00000000 
0001ce54 l       .debug_loc     00000000 
0001ce6f l       .debug_loc     00000000 
0001ce8a l       .debug_loc     00000000 
0001cea5 l       .debug_loc     00000000 
0001cec6 l       .debug_loc     00000000 
0001ceec l       .debug_loc     00000000 
0001cf12 l       .debug_loc     00000000 
0001cf34 l       .debug_loc     00000000 
0001cf4f l       .debug_loc     00000000 
0001cf6a l       .debug_loc     00000000 
0001cf85 l       .debug_loc     00000000 
0001cfa6 l       .debug_loc     00000000 
0001cfc8 l       .debug_loc     00000000 
0001cfee l       .debug_loc     00000000 
0001d014 l       .debug_loc     00000000 
0001d036 l       .debug_loc     00000000 
0001d051 l       .debug_loc     00000000 
0001d06c l       .debug_loc     00000000 
0001d092 l       .debug_loc     00000000 
0001d0b8 l       .debug_loc     00000000 
0001d0da l       .debug_loc     00000000 
0001d0f5 l       .debug_loc     00000000 
0001d110 l       .debug_loc     00000000 
0001d12b l       .debug_loc     00000000 
0001d151 l       .debug_loc     00000000 
0001d177 l       .debug_loc     00000000 
0001d199 l       .debug_loc     00000000 
0001d1b4 l       .debug_loc     00000000 
0001d1cf l       .debug_loc     00000000 
0001d1ea l       .debug_loc     00000000 
0001d210 l       .debug_loc     00000000 
0001d236 l       .debug_loc     00000000 
0001d258 l       .debug_loc     00000000 
0001d273 l       .debug_loc     00000000 
0001d28e l       .debug_loc     00000000 
0001d2a9 l       .debug_loc     00000000 
0001d2cf l       .debug_loc     00000000 
0001d2f5 l       .debug_loc     00000000 
0001d317 l       .debug_loc     00000000 
0001d332 l       .debug_loc     00000000 
0001d34d l       .debug_loc     00000000 
0001d368 l       .debug_loc     00000000 
0001d383 l       .debug_loc     00000000 
0001d3a4 l       .debug_loc     00000000 
0001d3ca l       .debug_loc     00000000 
0001d3f0 l       .debug_loc     00000000 
0001d412 l       .debug_loc     00000000 
0001d42d l       .debug_loc     00000000 
0001d448 l       .debug_loc     00000000 
0001d463 l       .debug_loc     00000000 
0001d484 l       .debug_loc     00000000 
0001d4a6 l       .debug_loc     00000000 
0001d4cc l       .debug_loc     00000000 
0001d4f2 l       .debug_loc     00000000 
0001d514 l       .debug_loc     00000000 
0001d52f l       .debug_loc     00000000 
0001d54a l       .debug_loc     00000000 
0001d570 l       .debug_loc     00000000 
0001d596 l       .debug_loc     00000000 
0001d5b8 l       .debug_loc     00000000 
0001d5d3 l       .debug_loc     00000000 
0001d5ee l       .debug_loc     00000000 
0001d609 l       .debug_loc     00000000 
0001d62f l       .debug_loc     00000000 
0001d655 l       .debug_loc     00000000 
0001d677 l       .debug_loc     00000000 
0001d692 l       .debug_loc     00000000 
0001d6ad l       .debug_loc     00000000 
0001d6c8 l       .debug_loc     00000000 
0001d6ee l       .debug_loc     00000000 
0001d714 l       .debug_loc     00000000 
0001d736 l       .debug_loc     00000000 
0001d751 l       .debug_loc     00000000 
0001d76c l       .debug_loc     00000000 
0001d787 l       .debug_loc     00000000 
0001d7ad l       .debug_loc     00000000 
0001d7d3 l       .debug_loc     00000000 
0001d7f5 l       .debug_loc     00000000 
0001d810 l       .debug_loc     00000000 
0001d82b l       .debug_loc     00000000 
0001d846 l       .debug_loc     00000000 
0001d861 l       .debug_loc     00000000 
0001d882 l       .debug_loc     00000000 
0001d8a8 l       .debug_loc     00000000 
0001d8ce l       .debug_loc     00000000 
0001d8f0 l       .debug_loc     00000000 
0001d90b l       .debug_loc     00000000 
0001d926 l       .debug_loc     00000000 
0001d941 l       .debug_loc     00000000 
0001d962 l       .debug_loc     00000000 
0001d984 l       .debug_loc     00000000 
0001d9aa l       .debug_loc     00000000 
0001d9d0 l       .debug_loc     00000000 
0001d9f2 l       .debug_loc     00000000 
0001da0d l       .debug_loc     00000000 
0001da28 l       .debug_loc     00000000 
0001da4e l       .debug_loc     00000000 
0001da74 l       .debug_loc     00000000 
0001da96 l       .debug_loc     00000000 
0001dab1 l       .debug_loc     00000000 
0001dacc l       .debug_loc     00000000 
0001dae7 l       .debug_loc     00000000 
0001db0d l       .debug_loc     00000000 
0001db33 l       .debug_loc     00000000 
0001db55 l       .debug_loc     00000000 
0001db70 l       .debug_loc     00000000 
0001db8b l       .debug_loc     00000000 
0001dba6 l       .debug_loc     00000000 
0001dbcc l       .debug_loc     00000000 
0001dbf2 l       .debug_loc     00000000 
0001dc14 l       .debug_loc     00000000 
0001dc2f l       .debug_loc     00000000 
0001dc4a l       .debug_loc     00000000 
0001dc65 l       .debug_loc     00000000 
0001dc8b l       .debug_loc     00000000 
0001dcb1 l       .debug_loc     00000000 
0001dcd3 l       .debug_loc     00000000 
0001dcee l       .debug_loc     00000000 
0001dd09 l       .debug_loc     00000000 
0001dd24 l       .debug_loc     00000000 
0001dd3f l       .debug_loc     00000000 
0001dd60 l       .debug_loc     00000000 
0001dd86 l       .debug_loc     00000000 
0001ddac l       .debug_loc     00000000 
0001ddce l       .debug_loc     00000000 
0001dde9 l       .debug_loc     00000000 
0001de04 l       .debug_loc     00000000 
0001de1f l       .debug_loc     00000000 
0001de40 l       .debug_loc     00000000 
0001de62 l       .debug_loc     00000000 
0001de88 l       .debug_loc     00000000 
0001deae l       .debug_loc     00000000 
0001ded0 l       .debug_loc     00000000 
0001deeb l       .debug_loc     00000000 
0001df06 l       .debug_loc     00000000 
0001df2c l       .debug_loc     00000000 
0001df52 l       .debug_loc     00000000 
0001df74 l       .debug_loc     00000000 
0001df8f l       .debug_loc     00000000 
0001dfaa l       .debug_loc     00000000 
0001dfc5 l       .debug_loc     00000000 
0001dfeb l       .debug_loc     00000000 
0001e011 l       .debug_loc     00000000 
0001e033 l       .debug_loc     00000000 
0001e04e l       .debug_loc     00000000 
0001e069 l       .debug_loc     00000000 
0001e084 l       .debug_loc     00000000 
0001e0aa l       .debug_loc     00000000 
0001e0d0 l       .debug_loc     00000000 
0001e0f2 l       .debug_loc     00000000 
0001e10d l       .debug_loc     00000000 
0001e128 l       .debug_loc     00000000 
0001e143 l       .debug_loc     00000000 
0001e169 l       .debug_loc     00000000 
0001e18f l       .debug_loc     00000000 
0001e1b1 l       .debug_loc     00000000 
0001e1cc l       .debug_loc     00000000 
0001e1e7 l       .debug_loc     00000000 
0001e202 l       .debug_loc     00000000 
0001e21d l       .debug_loc     00000000 
0001e23e l       .debug_loc     00000000 
0001e264 l       .debug_loc     00000000 
0001e28a l       .debug_loc     00000000 
0001e2ac l       .debug_loc     00000000 
0001e2c7 l       .debug_loc     00000000 
0001e2e2 l       .debug_loc     00000000 
0001e2fd l       .debug_loc     00000000 
0001e31e l       .debug_loc     00000000 
0001e340 l       .debug_loc     00000000 
0001e366 l       .debug_loc     00000000 
0001e38c l       .debug_loc     00000000 
0001e3ae l       .debug_loc     00000000 
0001e3c9 l       .debug_loc     00000000 
0001e3e4 l       .debug_loc     00000000 
0001e40a l       .debug_loc     00000000 
0001e430 l       .debug_loc     00000000 
0001e452 l       .debug_loc     00000000 
0001e46d l       .debug_loc     00000000 
0001e488 l       .debug_loc     00000000 
0001e4a3 l       .debug_loc     00000000 
0001e4c9 l       .debug_loc     00000000 
0001e4ef l       .debug_loc     00000000 
0001e511 l       .debug_loc     00000000 
0001e52c l       .debug_loc     00000000 
0001e547 l       .debug_loc     00000000 
0001e562 l       .debug_loc     00000000 
0001e588 l       .debug_loc     00000000 
0001e5ae l       .debug_loc     00000000 
0001e5d0 l       .debug_loc     00000000 
0001e5eb l       .debug_loc     00000000 
0001e606 l       .debug_loc     00000000 
0001e621 l       .debug_loc     00000000 
0001e647 l       .debug_loc     00000000 
0001e66d l       .debug_loc     00000000 
0001e68f l       .debug_loc     00000000 
0001e6aa l       .debug_loc     00000000 
0001e6c5 l       .debug_loc     00000000 
0001e6e0 l       .debug_loc     00000000 
0001e6fb l       .debug_loc     00000000 
0001e71c l       .debug_loc     00000000 
0001e742 l       .debug_loc     00000000 
0001e768 l       .debug_loc     00000000 
0001e78a l       .debug_loc     00000000 
0001e7a5 l       .debug_loc     00000000 
0001e7c0 l       .debug_loc     00000000 
0001e7db l       .debug_loc     00000000 
0001e7fc l       .debug_loc     00000000 
0001e81e l       .debug_loc     00000000 
0001e844 l       .debug_loc     00000000 
0001e86a l       .debug_loc     00000000 
0001e88c l       .debug_loc     00000000 
0001e8a7 l       .debug_loc     00000000 
0001e8c2 l       .debug_loc     00000000 
0001e8e8 l       .debug_loc     00000000 
0001e90e l       .debug_loc     00000000 
0001e930 l       .debug_loc     00000000 
0001e94b l       .debug_loc     00000000 
0001e966 l       .debug_loc     00000000 
0001e981 l       .debug_loc     00000000 
0001e9a7 l       .debug_loc     00000000 
0001e9cd l       .debug_loc     00000000 
0001e9ef l       .debug_loc     00000000 
0001ea0a l       .debug_loc     00000000 
0001ea25 l       .debug_loc     00000000 
0001ea40 l       .debug_loc     00000000 
0001ea66 l       .debug_loc     00000000 
0001ea8c l       .debug_loc     00000000 
0001eaae l       .debug_loc     00000000 
0001eac9 l       .debug_loc     00000000 
0001eae4 l       .debug_loc     00000000 
0001eaff l       .debug_loc     00000000 
0001eb25 l       .debug_loc     00000000 
0001eb4b l       .debug_loc     00000000 
0001eb6d l       .debug_loc     00000000 
0001eb88 l       .debug_loc     00000000 
0001eba3 l       .debug_loc     00000000 
0001ebbe l       .debug_loc     00000000 
0001ebd9 l       .debug_loc     00000000 
0001ebfa l       .debug_loc     00000000 
0001ec20 l       .debug_loc     00000000 
0001ec46 l       .debug_loc     00000000 
0001ec68 l       .debug_loc     00000000 
0001ec83 l       .debug_loc     00000000 
0001ec9e l       .debug_loc     00000000 
0001ecb9 l       .debug_loc     00000000 
0001ecda l       .debug_loc     00000000 
0001ecfc l       .debug_loc     00000000 
0001ed22 l       .debug_loc     00000000 
0001ed48 l       .debug_loc     00000000 
0001ed6a l       .debug_loc     00000000 
0001ed85 l       .debug_loc     00000000 
0001eda0 l       .debug_loc     00000000 
0001edc6 l       .debug_loc     00000000 
0001edec l       .debug_loc     00000000 
0001ee0e l       .debug_loc     00000000 
0001ee29 l       .debug_loc     00000000 
0001ee44 l       .debug_loc     00000000 
0001ee5f l       .debug_loc     00000000 
0001ee85 l       .debug_loc     00000000 
0001eeab l       .debug_loc     00000000 
0001eecd l       .debug_loc     00000000 
0001eee8 l       .debug_loc     00000000 
0001ef03 l       .debug_loc     00000000 
0001ef1e l       .debug_loc     00000000 
0001ef44 l       .debug_loc     00000000 
0001ef6a l       .debug_loc     00000000 
0001ef8c l       .debug_loc     00000000 
0001efa7 l       .debug_loc     00000000 
0001efc2 l       .debug_loc     00000000 
0001efdd l       .debug_loc     00000000 
0001f003 l       .debug_loc     00000000 
0001f029 l       .debug_loc     00000000 
0001f04b l       .debug_loc     00000000 
0001f066 l       .debug_loc     00000000 
0001f081 l       .debug_loc     00000000 
0001f09c l       .debug_loc     00000000 
0001f0b7 l       .debug_loc     00000000 
0001f0d8 l       .debug_loc     00000000 
0001f0fe l       .debug_loc     00000000 
0001f124 l       .debug_loc     00000000 
0001f146 l       .debug_loc     00000000 
0001f161 l       .debug_loc     00000000 
0001f17c l       .debug_loc     00000000 
0001f197 l       .debug_loc     00000000 
0001f1b8 l       .debug_loc     00000000 
0001f1da l       .debug_loc     00000000 
0001f200 l       .debug_loc     00000000 
0001f226 l       .debug_loc     00000000 
0001f248 l       .debug_loc     00000000 
0001f263 l       .debug_loc     00000000 
0001f27e l       .debug_loc     00000000 
0001f2a4 l       .debug_loc     00000000 
0001f2ca l       .debug_loc     00000000 
0001f2ec l       .debug_loc     00000000 
0001f307 l       .debug_loc     00000000 
0001f322 l       .debug_loc     00000000 
0001f33d l       .debug_loc     00000000 
0001f363 l       .debug_loc     00000000 
0001f389 l       .debug_loc     00000000 
0001f3ab l       .debug_loc     00000000 
0001f3c6 l       .debug_loc     00000000 
0001f3e1 l       .debug_loc     00000000 
0001f3fc l       .debug_loc     00000000 
0001f422 l       .debug_loc     00000000 
0001f448 l       .debug_loc     00000000 
0001f46a l       .debug_loc     00000000 
0001f485 l       .debug_loc     00000000 
0001f4a0 l       .debug_loc     00000000 
0001f4bb l       .debug_loc     00000000 
0001f4e1 l       .debug_loc     00000000 
0001f507 l       .debug_loc     00000000 
0001f529 l       .debug_loc     00000000 
0001f544 l       .debug_loc     00000000 
0001f55f l       .debug_loc     00000000 
0001f57a l       .debug_loc     00000000 
0001f595 l       .debug_loc     00000000 
0001f5b6 l       .debug_loc     00000000 
0001f5dc l       .debug_loc     00000000 
0001f602 l       .debug_loc     00000000 
0001f624 l       .debug_loc     00000000 
0001f63f l       .debug_loc     00000000 
0001f65a l       .debug_loc     00000000 
0001f675 l       .debug_loc     00000000 
0001f696 l       .debug_loc     00000000 
0001f6b8 l       .debug_loc     00000000 
0001f6de l       .debug_loc     00000000 
0001f704 l       .debug_loc     00000000 
0001f726 l       .debug_loc     00000000 
0001f741 l       .debug_loc     00000000 
0001f75c l       .debug_loc     00000000 
0001f782 l       .debug_loc     00000000 
0001f7a8 l       .debug_loc     00000000 
0001f7ca l       .debug_loc     00000000 
0001f7e5 l       .debug_loc     00000000 
0001f800 l       .debug_loc     00000000 
0001f81b l       .debug_loc     00000000 
0001f841 l       .debug_loc     00000000 
0001f867 l       .debug_loc     00000000 
0001f889 l       .debug_loc     00000000 
0001f8a4 l       .debug_loc     00000000 
0001f8bf l       .debug_loc     00000000 
0001f8da l       .debug_loc     00000000 
0001f900 l       .debug_loc     00000000 
0001f926 l       .debug_loc     00000000 
0001f948 l       .debug_loc     00000000 
0001f963 l       .debug_loc     00000000 
0001f97e l       .debug_loc     00000000 
0001f999 l       .debug_loc     00000000 
0001f9bf l       .debug_loc     00000000 
0001f9e5 l       .debug_loc     00000000 
0001fa07 l       .debug_loc     00000000 
0001fa22 l       .debug_loc     00000000 
0001fa3d l       .debug_loc     00000000 
0001fa58 l       .debug_loc     00000000 
0001fa73 l       .debug_loc     00000000 
0001fa94 l       .debug_loc     00000000 
0001faba l       .debug_loc     00000000 
0001fae0 l       .debug_loc     00000000 
0001fb02 l       .debug_loc     00000000 
0001fb1d l       .debug_loc     00000000 
0001fb38 l       .debug_loc     00000000 
0001fb53 l       .debug_loc     00000000 
0001fb74 l       .debug_loc     00000000 
0001fb96 l       .debug_loc     00000000 
0001fbbc l       .debug_loc     00000000 
0001fbe2 l       .debug_loc     00000000 
0001fc04 l       .debug_loc     00000000 
0001fc1f l       .debug_loc     00000000 
0001fc3a l       .debug_loc     00000000 
0001fc60 l       .debug_loc     00000000 
0001fc86 l       .debug_loc     00000000 
0001fca8 l       .debug_loc     00000000 
0001fcc3 l       .debug_loc     00000000 
0001fcde l       .debug_loc     00000000 
0001fcf9 l       .debug_loc     00000000 
0001fd1f l       .debug_loc     00000000 
0001fd45 l       .debug_loc     00000000 
0001fd67 l       .debug_loc     00000000 
0001fd82 l       .debug_loc     00000000 
0001fd9d l       .debug_loc     00000000 
0001fdb8 l       .debug_loc     00000000 
0001fdde l       .debug_loc     00000000 
0001fe04 l       .debug_loc     00000000 
0001fe26 l       .debug_loc     00000000 
0001fe41 l       .debug_loc     00000000 
0001fe5c l       .debug_loc     00000000 
0001fe77 l       .debug_loc     00000000 
0001fe9d l       .debug_loc     00000000 
0001fec3 l       .debug_loc     00000000 
0001fee5 l       .debug_loc     00000000 
0001ff00 l       .debug_loc     00000000 
0001ff1b l       .debug_loc     00000000 
0001ff36 l       .debug_loc     00000000 
0001ff51 l       .debug_loc     00000000 
0001ff72 l       .debug_loc     00000000 
0001ff98 l       .debug_loc     00000000 
0001ffbe l       .debug_loc     00000000 
0001ffe0 l       .debug_loc     00000000 
0001fffb l       .debug_loc     00000000 
00020016 l       .debug_loc     00000000 
00020031 l       .debug_loc     00000000 
00020052 l       .debug_loc     00000000 
00020074 l       .debug_loc     00000000 
0002009a l       .debug_loc     00000000 
000200c0 l       .debug_loc     00000000 
000200e2 l       .debug_loc     00000000 
000200fd l       .debug_loc     00000000 
00020118 l       .debug_loc     00000000 
0002013e l       .debug_loc     00000000 
00020164 l       .debug_loc     00000000 
00020186 l       .debug_loc     00000000 
000201a1 l       .debug_loc     00000000 
000201bc l       .debug_loc     00000000 
000201d7 l       .debug_loc     00000000 
000201fd l       .debug_loc     00000000 
00020223 l       .debug_loc     00000000 
00020245 l       .debug_loc     00000000 
00020260 l       .debug_loc     00000000 
0002027b l       .debug_loc     00000000 
00020296 l       .debug_loc     00000000 
000202bc l       .debug_loc     00000000 
000202e2 l       .debug_loc     00000000 
00020304 l       .debug_loc     00000000 
0002031f l       .debug_loc     00000000 
0002033a l       .debug_loc     00000000 
00020355 l       .debug_loc     00000000 
0002037b l       .debug_loc     00000000 
000203a1 l       .debug_loc     00000000 
000203c3 l       .debug_loc     00000000 
000203de l       .debug_loc     00000000 
000203f9 l       .debug_loc     00000000 
00020414 l       .debug_loc     00000000 
0002042f l       .debug_loc     00000000 
00020450 l       .debug_loc     00000000 
00020476 l       .debug_loc     00000000 
0002049c l       .debug_loc     00000000 
000204be l       .debug_loc     00000000 
000204d9 l       .debug_loc     00000000 
000204f4 l       .debug_loc     00000000 
0002050f l       .debug_loc     00000000 
00020530 l       .debug_loc     00000000 
00020552 l       .debug_loc     00000000 
00020578 l       .debug_loc     00000000 
0002059e l       .debug_loc     00000000 
000205c0 l       .debug_loc     00000000 
000205db l       .debug_loc     00000000 
000205f6 l       .debug_loc     00000000 
0002061c l       .debug_loc     00000000 
00020642 l       .debug_loc     00000000 
00020664 l       .debug_loc     00000000 
0002067f l       .debug_loc     00000000 
0002069a l       .debug_loc     00000000 
000206b5 l       .debug_loc     00000000 
000206db l       .debug_loc     00000000 
00020701 l       .debug_loc     00000000 
00020723 l       .debug_loc     00000000 
0002073e l       .debug_loc     00000000 
00020759 l       .debug_loc     00000000 
00020774 l       .debug_loc     00000000 
0002079a l       .debug_loc     00000000 
000207c0 l       .debug_loc     00000000 
000207e2 l       .debug_loc     00000000 
000207fd l       .debug_loc     00000000 
00020818 l       .debug_loc     00000000 
00020833 l       .debug_loc     00000000 
00020859 l       .debug_loc     00000000 
0002087f l       .debug_loc     00000000 
000208a1 l       .debug_loc     00000000 
000208bc l       .debug_loc     00000000 
000208d7 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
00006979 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00000b50 l       .debug_ranges  00000000 
000069c0 l       .debug_str     00000000 
000069ed l       .debug_str     00000000 
00006a28 l       .debug_str     00000000 
00006a64 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
00006aa5 l       .debug_str     00000000 
00006ad2 l       .debug_str     00000000 
00006b0d l       .debug_str     00000000 
00006b49 l       .debug_str     00000000 
00006b8a l       .debug_str     00000000 
00006bb7 l       .debug_str     00000000 
00006bf2 l       .debug_str     00000000 
00006c2e l       .debug_str     00000000 
00006c71 l       .debug_str     00000000 
00006cb1 l       .debug_str     00000000 
00006cde l       .debug_str     00000000 
00006d19 l       .debug_str     00000000 
00006d55 l       .debug_str     00000000 
00006d98 l       .debug_str     00000000 
00006dd8 l       .debug_str     00000000 
00006e05 l       .debug_str     00000000 
00006e44 l       .debug_str     00000000 
00006e80 l       .debug_str     00000000 
00006ec3 l       .debug_str     00000000 
00006f03 l       .debug_str     00000000 
00006f30 l       .debug_str     00000000 
00006f6c l       .debug_str     00000000 
00006faf l       .debug_str     00000000 
00006fef l       .debug_str     00000000 
0000702d l       .debug_str     00000000 
0000705a l       .debug_str     00000000 
00007096 l       .debug_str     00000000 
000070d9 l       .debug_str     00000000 
00007117 l       .debug_str     00000000 
00007155 l       .debug_str     00000000 
00007182 l       .debug_str     00000000 
000071be l       .debug_str     00000000 
00007201 l       .debug_str     00000000 
0000723f l       .debug_str     00000000 
0000727e l       .debug_str     00000000 
000072ab l       .debug_str     00000000 
000072e7 l       .debug_str     00000000 
00007323 l       .debug_str     00000000 
0000735c l       .debug_str     00000000 
0000739b l       .debug_str     00000000 
000073c8 l       .debug_str     00000000 
00007404 l       .debug_str     00000000 
00007440 l       .debug_str     00000000 
00007479 l       .debug_str     00000000 
000074b9 l       .debug_str     00000000 
000074e6 l       .debug_str     00000000 
00007523 l       .debug_str     00000000 
0000755c l       .debug_str     00000000 
00007595 l       .debug_str     00000000 
000075d5 l       .debug_str     00000000 
00007602 l       .debug_str     00000000 
0000763f l       .debug_str     00000000 
00007678 l       .debug_str     00000000 
000076b1 l       .debug_str     00000000 
000076f1 l       .debug_str     00000000 
0000771e l       .debug_str     00000000 
0000775b l       .debug_str     00000000 
00007797 l       .debug_str     00000000 
000077d0 l       .debug_str     00000000 
00007810 l       .debug_str     00000000 
0000783d l       .debug_str     00000000 
0000787a l       .debug_str     00000000 
000078b6 l       .debug_str     00000000 
000078ef l       .debug_str     00000000 
0000792d l       .debug_str     00000000 
0000795a l       .debug_str     00000000 
00007997 l       .debug_str     00000000 
000079d5 l       .debug_str     00000000 
00007a11 l       .debug_str     00000000 
00007a4e l       .debug_str     00000000 
00007a7b l       .debug_str     00000000 
00007ab6 l       .debug_str     00000000 
00007af3 l       .debug_str     00000000 
00007b2f l       .debug_str     00000000 
00007b6c l       .debug_str     00000000 
00007b99 l       .debug_str     00000000 
00007bd5 l       .debug_str     00000000 
00007c12 l       .debug_str     00000000 
00007c4e l       .debug_str     00000000 
00007c8b l       .debug_str     00000000 
00007cb8 l       .debug_str     00000000 
00007cf5 l       .debug_str     00000000 
00007d32 l       .debug_str     00000000 
00007d6e l       .debug_str     00000000 
00007dab l       .debug_str     00000000 
00007dd8 l       .debug_str     00000000 
00007e15 l       .debug_str     00000000 
00007e51 l       .debug_str     00000000 
00007e8e l       .debug_str     00000000 
00007eca l       .debug_str     00000000 
00007ef7 l       .debug_str     00000000 
00007f35 l       .debug_str     00000000 
00007f71 l       .debug_str     00000000 
00007fae l       .debug_str     00000000 
00007fea l       .debug_str     00000000 
00008017 l       .debug_str     00000000 
00008055 l       .debug_str     00000000 
00008091 l       .debug_str     00000000 
000080ce l       .debug_str     00000000 
0000810b l       .debug_str     00000000 
00008138 l       .debug_str     00000000 
00008178 l       .debug_str     00000000 
000081b4 l       .debug_str     00000000 
000081f1 l       .debug_str     00000000 
0000822e l       .debug_str     00000000 
0000825b l       .debug_str     00000000 
0000829b l       .debug_str     00000000 
000082d7 l       .debug_str     00000000 
00008314 l       .debug_str     00000000 
00008350 l       .debug_str     00000000 
0000837d l       .debug_str     00000000 
000083bd l       .debug_str     00000000 
000083fa l       .debug_str     00000000 
00008437 l       .debug_str     00000000 
00008473 l       .debug_str     00000000 
000084a0 l       .debug_str     00000000 
000084e0 l       .debug_str     00000000 
0000851c l       .debug_str     00000000 
00008559 l       .debug_str     00000000 
00008596 l       .debug_str     00000000 
000085c3 l       .debug_str     00000000 
00008603 l       .debug_str     00000000 
0000863f l       .debug_str     00000000 
0000867c l       .debug_str     00000000 
000086b9 l       .debug_str     00000000 
000086e6 l       .debug_str     00000000 
00008726 l       .debug_str     00000000 
00008762 l       .debug_str     00000000 
0000879f l       .debug_str     00000000 
000087dc l       .debug_str     00000000 
00008809 l       .debug_str     00000000 
00008849 l       .debug_str     00000000 
00008885 l       .debug_str     00000000 
000088c2 l       .debug_str     00000000 
000088ff l       .debug_str     00000000 
0000892c l       .debug_str     00000000 
0000896c l       .debug_str     00000000 
000089a8 l       .debug_str     00000000 
000089e5 l       .debug_str     00000000 
00008a21 l       .debug_str     00000000 
00008a4e l       .debug_str     00000000 
00008a89 l       .debug_str     00000000 
00008ac8 l       .debug_str     00000000 
00008b05 l       .debug_str     00000000 
00008b41 l       .debug_str     00000000 
00008b6e l       .debug_str     00000000 
00008baa l       .debug_str     00000000 
00008bea l       .debug_str     00000000 
00008c27 l       .debug_str     00000000 
00008c65 l       .debug_str     00000000 
00008c92 l       .debug_str     00000000 
00008cce l       .debug_str     00000000 
00008d0a l       .debug_str     00000000 
00008d4a l       .debug_str     00000000 
00008d87 l       .debug_str     00000000 
00008dc5 l       .debug_str     00000000 
00008df2 l       .debug_str     00000000 
00008e2e l       .debug_str     00000000 
00008e6a l       .debug_str     00000000 
00008eaa l       .debug_str     00000000 
00008ee9 l       .debug_str     00000000 
00008f16 l       .debug_str     00000000 
00008f52 l       .debug_str     00000000 
00008f92 l       .debug_str     00000000 
00008fd1 l       .debug_str     00000000 
00008ffe l       .debug_str     00000000 
0000903a l       .debug_str     00000000 
00009078 l       .debug_str     00000000 
000090b4 l       .debug_str     00000000 
000090f0 l       .debug_str     00000000 
0000911d l       .debug_str     00000000 
00009159 l       .debug_str     00000000 
00009197 l       .debug_str     00000000 
000091d3 l       .debug_str     00000000 
0000920f l       .debug_str     00000000 
0000923c l       .debug_str     00000000 
00009278 l       .debug_str     00000000 
000092b4 l       .debug_str     00000000 
000092f1 l       .debug_str     00000000 
0000932e l       .debug_str     00000000 
0000935b l       .debug_str     00000000 
00009397 l       .debug_str     00000000 
000093d3 l       .debug_str     00000000 
00009410 l       .debug_str     00000000 
0000944d l       .debug_str     00000000 
0000947a l       .debug_str     00000000 
000094b6 l       .debug_str     00000000 
000094f2 l       .debug_str     00000000 
0000952e l       .debug_str     00000000 
0000956b l       .debug_str     00000000 
00009598 l       .debug_str     00000000 
000095d4 l       .debug_str     00000000 
00009610 l       .debug_str     00000000 
0000964c l       .debug_str     00000000 
00009689 l       .debug_str     00000000 
000096b6 l       .debug_str     00000000 
000096f3 l       .debug_str     00000000 
0000972f l       .debug_str     00000000 
0000976b l       .debug_str     00000000 
000097a9 l       .debug_str     00000000 
000097d6 l       .debug_str     00000000 
00009813 l       .debug_str     00000000 
0000984f l       .debug_str     00000000 
0000988c l       .debug_str     00000000 
000098ca l       .debug_str     00000000 
000098f7 l       .debug_str     00000000 
00009934 l       .debug_str     00000000 
00009971 l       .debug_str     00000000 
000099ae l       .debug_str     00000000 
000099ed l       .debug_str     00000000 
00009a1a l       .debug_str     00000000 
00009a57 l       .debug_str     00000000 
00009a94 l       .debug_str     00000000 
00009ad0 l       .debug_str     00000000 
00009b0f l       .debug_str     00000000 
00009b3c l       .debug_str     00000000 
00009b79 l       .debug_str     00000000 
00009bb5 l       .debug_str     00000000 
00009bf1 l       .debug_str     00000000 
00009c2f l       .debug_str     00000000 
00009c5c l       .debug_str     00000000 
00009c99 l       .debug_str     00000000 
00009cd5 l       .debug_str     00000000 
00009d11 l       .debug_str     00000000 
00009d4f l       .debug_str     00000000 
00009d7c l       .debug_str     00000000 
00009db9 l       .debug_str     00000000 
00009df5 l       .debug_str     00000000 
00009e32 l       .debug_str     00000000 
00009e71 l       .debug_str     00000000 
00009e9e l       .debug_str     00000000 
00009edb l       .debug_str     00000000 
00009f18 l       .debug_str     00000000 
00009f55 l       .debug_str     00000000 
00009f94 l       .debug_str     00000000 
00009fc1 l       .debug_str     00000000 
00009ffe l       .debug_str     00000000 
0000a03a l       .debug_str     00000000 
0000a077 l       .debug_str     00000000 
0000a0b5 l       .debug_str     00000000 
0000a0e2 l       .debug_str     00000000 
0000a11f l       .debug_str     00000000 
0000a15b l       .debug_str     00000000 
0000a199 l       .debug_str     00000000 
0000a1d7 l       .debug_str     00000000 
0000a204 l       .debug_str     00000000 
0000a241 l       .debug_str     00000000 
0000a27e l       .debug_str     00000000 
0000a2bc l       .debug_str     00000000 
0000a2fb l       .debug_str     00000000 
0000a328 l       .debug_str     00000000 
0000a365 l       .debug_str     00000000 
0000a3a2 l       .debug_str     00000000 
0000a3e1 l       .debug_str     00000000 
0000a420 l       .debug_str     00000000 
0000a44d l       .debug_str     00000000 
0000a48a l       .debug_str     00000000 
0000a4c6 l       .debug_str     00000000 
0000a502 l       .debug_str     00000000 
0000a541 l       .debug_str     00000000 
0000a56e l       .debug_str     00000000 
0000a5a9 l       .debug_str     00000000 
0000a5e6 l       .debug_str     00000000 
0000a622 l       .debug_str     00000000 
0000a65e l       .debug_str     00000000 
0000a68b l       .debug_str     00000000 
0000a6c7 l       .debug_str     00000000 
0000a704 l       .debug_str     00000000 
0000a741 l       .debug_str     00000000 
0000a77e l       .debug_str     00000000 
0000a7ab l       .debug_str     00000000 
0000a7e8 l       .debug_str     00000000 
0000a825 l       .debug_str     00000000 
0000a862 l       .debug_str     00000000 
0000a89f l       .debug_str     00000000 
0000a8cc l       .debug_str     00000000 
0000a908 l       .debug_str     00000000 
0000a945 l       .debug_str     00000000 
0000a981 l       .debug_str     00000000 
0000a9ae l       .debug_str     00000000 
0000a9ea l       .debug_str     00000000 
0000aa27 l       .debug_str     00000000 
0000aa63 l       .debug_str     00000000 
0000aa90 l       .debug_str     00000000 
0000aacc l       .debug_str     00000000 
0000ab09 l       .debug_str     00000000 
0000ab46 l       .debug_str     00000000 
0000ab73 l       .debug_str     00000000 
0000abaf l       .debug_str     00000000 
0000abec l       .debug_str     00000000 
0000ac29 l       .debug_str     00000000 
0000ac56 l       .debug_str     00000000 
0000ac91 l       .debug_str     00000000 
0000accd l       .debug_str     00000000 
0000ad0a l       .debug_str     00000000 
0000ad47 l       .debug_str     00000000 
0000ad74 l       .debug_str     00000000 
0000adaf l       .debug_str     00000000 
0000adec l       .debug_str     00000000 
0000ae29 l       .debug_str     00000000 
0000ae66 l       .debug_str     00000000 
0000ae93 l       .debug_str     00000000 
0000aecf l       .debug_str     00000000 
0000af0c l       .debug_str     00000000 
0000af45 l       .debug_str     00000000 
0000af83 l       .debug_str     00000000 
0000afb0 l       .debug_str     00000000 
0000afec l       .debug_str     00000000 
0000b029 l       .debug_str     00000000 
0000b062 l       .debug_str     00000000 
0000b0a0 l       .debug_str     00000000 
0000b0cd l       .debug_str     00000000 
0000b109 l       .debug_str     00000000 
0000b146 l       .debug_str     00000000 
0000b17f l       .debug_str     00000000 
0000b1ac l       .debug_str     00000000 
0000b1e8 l       .debug_str     00000000 
0000b225 l       .debug_str     00000000 
0000b25e l       .debug_str     00000000 
0000b28b l       .debug_str     00000000 
0000b2c8 l       .debug_str     00000000 
0000b304 l       .debug_str     00000000 
0000b341 l       .debug_str     00000000 
0000b36e l       .debug_str     00000000 
0000b3ac l       .debug_str     00000000 
0000b3e7 l       .debug_str     00000000 
0000b424 l       .debug_str     00000000 
0000b451 l       .debug_str     00000000 
0000b48f l       .debug_str     00000000 
0000b4cc l       .debug_str     00000000 
0000b509 l       .debug_str     00000000 
0000b536 l       .debug_str     00000000 
0000b576 l       .debug_str     00000000 
0000b5b3 l       .debug_str     00000000 
0000b5f0 l       .debug_str     00000000 
0000b61d l       .debug_str     00000000 
0000b65d l       .debug_str     00000000 
0000b69a l       .debug_str     00000000 
0000b6d8 l       .debug_str     00000000 
0000b705 l       .debug_str     00000000 
0000b745 l       .debug_str     00000000 
0000b782 l       .debug_str     00000000 
0000b7c0 l       .debug_str     00000000 
0000b7ed l       .debug_str     00000000 
0000b82d l       .debug_str     00000000 
0000b868 l       .debug_str     00000000 
0000b8a5 l       .debug_str     00000000 
0000b8d2 l       .debug_str     00000000 
0000b912 l       .debug_str     00000000 
0000b94d l       .debug_str     00000000 
0000b98a l       .debug_str     00000000 
0000b9b7 l       .debug_str     00000000 
0000b9f7 l       .debug_str     00000000 
0000ba34 l       .debug_str     00000000 
0000ba6d l       .debug_str     00000000 
0000ba9a l       .debug_str     00000000 
0000bada l       .debug_str     00000000 
0000bb17 l       .debug_str     00000000 
0000bb50 l       .debug_str     00000000 
0000bb7d l       .debug_str     00000000 
0000bbbd l       .debug_str     00000000 
0000bbfa l       .debug_str     00000000 
0000bc33 l       .debug_str     00000000 
0000bc60 l       .debug_str     00000000 
0000bca1 l       .debug_str     00000000 
0000bcde l       .debug_str     00000000 
00000512 l       .debug_str     00000000 
00000544 l       .debug_str     00000000 
00000587 l       .debug_str     00000000 
000005b9 l       .debug_str     00000000 
000005fc l       .debug_str     00000000 
0000062e l       .debug_str     00000000 
00000671 l       .debug_str     00000000 
000006a3 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
0000129c l       .debug_str     00000000 
000010d4 l       .debug_str     00000000 
00003912 l       .debug_str     00000000 
0001bb6e l       .debug_str     00000000 
000012c4 l       .debug_str     00000000 
000012b3 l       .debug_str     00000000 
0001a4da l       .debug_str     00000000 
000020fd l       .debug_str     00000000 
00001817 l       .debug_str     00000000 
00006501 l       .debug_str     00000000 
0000182c l       .debug_str     00000000 
00001040 l       .debug_str     00000000 
0000bd17 l       .debug_str     00000000 
00006907 l       .debug_str     00000000 
0000334c l       .debug_str     00000000 
0000bd4c l       .debug_str     00000000 
0000bd81 l       .debug_str     00000000 
00002b63 l       .debug_str     00000000 
0000bdb1 l       .debug_str     00000000 
0000bde1 l       .debug_str     00000000 
0000be11 l       .debug_str     00000000 
0000be41 l       .debug_str     00000000 
0000be72 l       .debug_str     00000000 
0000bea3 l       .debug_str     00000000 
0000bed3 l       .debug_str     00000000 
0000bf03 l       .debug_str     00000000 
0000bf33 l       .debug_str     00000000 
0000bf63 l       .debug_str     00000000 
0001a4c3 l       .debug_str     00000000 
0001a4cb l       .debug_str     00000000 
0001a4d4 l       .debug_str     00000000 
0000bf8f l       .debug_str     00000000 
0000bfe9 l       .debug_str     00000000 
0000c01e l       .debug_str     00000000 
0000c053 l       .debug_str     00000000 
0000c083 l       .debug_str     00000000 
0000c0b3 l       .debug_str     00000000 
0000c0e3 l       .debug_str     00000000 
0000c113 l       .debug_str     00000000 
0000c144 l       .debug_str     00000000 
0000c175 l       .debug_str     00000000 
0000c1a5 l       .debug_str     00000000 
0000c1d5 l       .debug_str     00000000 
0000c205 l       .debug_str     00000000 
0000c235 l       .debug_str     00000000 
0000c261 l       .debug_str     00000000 
0000c2bb l       .debug_str     00000000 
0000c2f0 l       .debug_str     00000000 
0000c325 l       .debug_str     00000000 
0000c355 l       .debug_str     00000000 
0000c385 l       .debug_str     00000000 
0000c3b5 l       .debug_str     00000000 
0000c3e5 l       .debug_str     00000000 
0000c416 l       .debug_str     00000000 
0000c447 l       .debug_str     00000000 
0000c477 l       .debug_str     00000000 
0000c4a7 l       .debug_str     00000000 
0000c4d7 l       .debug_str     00000000 
0000c507 l       .debug_str     00000000 
0000c533 l       .debug_str     00000000 
0000c58d l       .debug_str     00000000 
0000c5c2 l       .debug_str     00000000 
0000c5f7 l       .debug_str     00000000 
0000c627 l       .debug_str     00000000 
0000c657 l       .debug_str     00000000 
0000c687 l       .debug_str     00000000 
0000c6b7 l       .debug_str     00000000 
0000c6e8 l       .debug_str     00000000 
0000c719 l       .debug_str     00000000 
0000c749 l       .debug_str     00000000 
0000c779 l       .debug_str     00000000 
0000c7a9 l       .debug_str     00000000 
0000c7d9 l       .debug_str     00000000 
0000c805 l       .debug_str     00000000 
0000c85f l       .debug_str     00000000 
0000c894 l       .debug_str     00000000 
0000c8c9 l       .debug_str     00000000 
0000c8f9 l       .debug_str     00000000 
0000c929 l       .debug_str     00000000 
0000c959 l       .debug_str     00000000 
0000c989 l       .debug_str     00000000 
0000c9ba l       .debug_str     00000000 
0000c9eb l       .debug_str     00000000 
0000ca1b l       .debug_str     00000000 
0000ca4b l       .debug_str     00000000 
0000ca7b l       .debug_str     00000000 
0000caab l       .debug_str     00000000 
0000cad7 l       .debug_str     00000000 
0000cb31 l       .debug_str     00000000 
0000cb66 l       .debug_str     00000000 
0000cb9b l       .debug_str     00000000 
0000cbcb l       .debug_str     00000000 
0000cbfb l       .debug_str     00000000 
0000cc2b l       .debug_str     00000000 
0000cc5b l       .debug_str     00000000 
0000cc8c l       .debug_str     00000000 
0000ccbd l       .debug_str     00000000 
0000cced l       .debug_str     00000000 
0000cd1d l       .debug_str     00000000 
0000cd4d l       .debug_str     00000000 
0000cd7d l       .debug_str     00000000 
0000cda9 l       .debug_str     00000000 
0000ce03 l       .debug_str     00000000 
0000ce38 l       .debug_str     00000000 
0000ce6d l       .debug_str     00000000 
0000ce9d l       .debug_str     00000000 
0000cecd l       .debug_str     00000000 
0000cefd l       .debug_str     00000000 
0000cf2d l       .debug_str     00000000 
0000cf5e l       .debug_str     00000000 
0000cf8f l       .debug_str     00000000 
0000cfbf l       .debug_str     00000000 
0000cfef l       .debug_str     00000000 
0000d01f l       .debug_str     00000000 
0000d04f l       .debug_str     00000000 
0000d07b l       .debug_str     00000000 
0000d0d5 l       .debug_str     00000000 
0000d10a l       .debug_str     00000000 
0000d13f l       .debug_str     00000000 
0000d16f l       .debug_str     00000000 
0000d19f l       .debug_str     00000000 
0000d1cf l       .debug_str     00000000 
0000d1ff l       .debug_str     00000000 
0000d230 l       .debug_str     00000000 
0000d261 l       .debug_str     00000000 
0000d291 l       .debug_str     00000000 
0000d2c1 l       .debug_str     00000000 
0000d2f1 l       .debug_str     00000000 
0000d321 l       .debug_str     00000000 
0000d34d l       .debug_str     00000000 
0000d3a7 l       .debug_str     00000000 
0000d3dc l       .debug_str     00000000 
0000d411 l       .debug_str     00000000 
0000d441 l       .debug_str     00000000 
0000d471 l       .debug_str     00000000 
0000d4a1 l       .debug_str     00000000 
0000d4d1 l       .debug_str     00000000 
0000d502 l       .debug_str     00000000 
0000d533 l       .debug_str     00000000 
0000d563 l       .debug_str     00000000 
0000d593 l       .debug_str     00000000 
0000d5c3 l       .debug_str     00000000 
0000d5f3 l       .debug_str     00000000 
0000d61f l       .debug_str     00000000 
0000d679 l       .debug_str     00000000 
0000d6ae l       .debug_str     00000000 
0000d6e3 l       .debug_str     00000000 
0000d713 l       .debug_str     00000000 
0000d743 l       .debug_str     00000000 
0000d773 l       .debug_str     00000000 
0000d7a3 l       .debug_str     00000000 
0000d7d4 l       .debug_str     00000000 
0000d805 l       .debug_str     00000000 
0000d835 l       .debug_str     00000000 
0000d865 l       .debug_str     00000000 
0000d895 l       .debug_str     00000000 
0000d8c5 l       .debug_str     00000000 
0000d8f1 l       .debug_str     00000000 
0000d94b l       .debug_str     00000000 
0000d980 l       .debug_str     00000000 
0000d9b5 l       .debug_str     00000000 
0000d9e5 l       .debug_str     00000000 
0000da15 l       .debug_str     00000000 
0000da45 l       .debug_str     00000000 
0000da75 l       .debug_str     00000000 
0000daa6 l       .debug_str     00000000 
0000dad7 l       .debug_str     00000000 
0000db07 l       .debug_str     00000000 
0000db37 l       .debug_str     00000000 
0000db67 l       .debug_str     00000000 
0000db97 l       .debug_str     00000000 
0000dbc3 l       .debug_str     00000000 
0000dc1d l       .debug_str     00000000 
0000dc52 l       .debug_str     00000000 
0000dc87 l       .debug_str     00000000 
0000dcb7 l       .debug_str     00000000 
0000dce7 l       .debug_str     00000000 
0000dd17 l       .debug_str     00000000 
0000dd47 l       .debug_str     00000000 
0000dd78 l       .debug_str     00000000 
0000dda9 l       .debug_str     00000000 
0000ddd9 l       .debug_str     00000000 
0000de09 l       .debug_str     00000000 
0000de39 l       .debug_str     00000000 
0000de69 l       .debug_str     00000000 
0000de95 l       .debug_str     00000000 
0000deef l       .debug_str     00000000 
0000df24 l       .debug_str     00000000 
0000df59 l       .debug_str     00000000 
0000df89 l       .debug_str     00000000 
0000dfb9 l       .debug_str     00000000 
0000dfe9 l       .debug_str     00000000 
0000e019 l       .debug_str     00000000 
0000e04a l       .debug_str     00000000 
0000e07b l       .debug_str     00000000 
0000e0ab l       .debug_str     00000000 
0000e0db l       .debug_str     00000000 
0000e10b l       .debug_str     00000000 
0000e13b l       .debug_str     00000000 
0000e167 l       .debug_str     00000000 
0000e1c1 l       .debug_str     00000000 
0000e1f6 l       .debug_str     00000000 
0000e22b l       .debug_str     00000000 
0000e25b l       .debug_str     00000000 
0000e28b l       .debug_str     00000000 
0000e2bb l       .debug_str     00000000 
0000e2eb l       .debug_str     00000000 
0000e31c l       .debug_str     00000000 
0000e34d l       .debug_str     00000000 
0000e37d l       .debug_str     00000000 
0000e3ad l       .debug_str     00000000 
0000e3dd l       .debug_str     00000000 
0000e40d l       .debug_str     00000000 
0000e439 l       .debug_str     00000000 
0000e493 l       .debug_str     00000000 
0000e4c8 l       .debug_str     00000000 
0000e4fd l       .debug_str     00000000 
0000e52d l       .debug_str     00000000 
0000e55d l       .debug_str     00000000 
0000e58d l       .debug_str     00000000 
0000e5bd l       .debug_str     00000000 
0000e5ee l       .debug_str     00000000 
0000e61f l       .debug_str     00000000 
0000e64f l       .debug_str     00000000 
0000e67f l       .debug_str     00000000 
0000e6af l       .debug_str     00000000 
0000e6df l       .debug_str     00000000 
0000e70b l       .debug_str     00000000 
0000e765 l       .debug_str     00000000 
0000e79a l       .debug_str     00000000 
0000e7cf l       .debug_str     00000000 
0000e7ff l       .debug_str     00000000 
0000e82f l       .debug_str     00000000 
0000e85f l       .debug_str     00000000 
0000e88f l       .debug_str     00000000 
0000e8c0 l       .debug_str     00000000 
0000e8f1 l       .debug_str     00000000 
0000e921 l       .debug_str     00000000 
0000e951 l       .debug_str     00000000 
0000e981 l       .debug_str     00000000 
0000e9b1 l       .debug_str     00000000 
0000e9dd l       .debug_str     00000000 
0000ea37 l       .debug_str     00000000 
0000ea6c l       .debug_str     00000000 
0000eaa1 l       .debug_str     00000000 
0000ead1 l       .debug_str     00000000 
0000eb01 l       .debug_str     00000000 
0000eb31 l       .debug_str     00000000 
0000eb61 l       .debug_str     00000000 
0000eb92 l       .debug_str     00000000 
0000ebc3 l       .debug_str     00000000 
0000ebf3 l       .debug_str     00000000 
0000ec23 l       .debug_str     00000000 
0000ec53 l       .debug_str     00000000 
0000ec83 l       .debug_str     00000000 
0000ecaf l       .debug_str     00000000 
0000ed09 l       .debug_str     00000000 
0000ed3e l       .debug_str     00000000 
0000ed73 l       .debug_str     00000000 
0000eda3 l       .debug_str     00000000 
0000edd3 l       .debug_str     00000000 
0000ee03 l       .debug_str     00000000 
0000ee33 l       .debug_str     00000000 
0000ee64 l       .debug_str     00000000 
0000ee95 l       .debug_str     00000000 
0000eec5 l       .debug_str     00000000 
0000eef5 l       .debug_str     00000000 
0000ef25 l       .debug_str     00000000 
0000ef55 l       .debug_str     00000000 
0000ef81 l       .debug_str     00000000 
0000efdb l       .debug_str     00000000 
0000f010 l       .debug_str     00000000 
0000f045 l       .debug_str     00000000 
0000f075 l       .debug_str     00000000 
0000f0a5 l       .debug_str     00000000 
0000f0d5 l       .debug_str     00000000 
0000f105 l       .debug_str     00000000 
0000f136 l       .debug_str     00000000 
0000f167 l       .debug_str     00000000 
0000f197 l       .debug_str     00000000 
0000f1c7 l       .debug_str     00000000 
0000f1f7 l       .debug_str     00000000 
0000f227 l       .debug_str     00000000 
0000f253 l       .debug_str     00000000 
0000f2ad l       .debug_str     00000000 
0000f2e2 l       .debug_str     00000000 
0000f317 l       .debug_str     00000000 
0000f347 l       .debug_str     00000000 
0000f377 l       .debug_str     00000000 
0000f3a7 l       .debug_str     00000000 
0000f3d7 l       .debug_str     00000000 
0000f408 l       .debug_str     00000000 
0000f439 l       .debug_str     00000000 
0000f469 l       .debug_str     00000000 
0000f499 l       .debug_str     00000000 
0000f4c9 l       .debug_str     00000000 
0000f4f9 l       .debug_str     00000000 
0000f525 l       .debug_str     00000000 
0000f57f l       .debug_str     00000000 
0000f5b4 l       .debug_str     00000000 
0000f5e9 l       .debug_str     00000000 
0000f619 l       .debug_str     00000000 
0000f649 l       .debug_str     00000000 
0000f679 l       .debug_str     00000000 
0000f6a9 l       .debug_str     00000000 
0000f6da l       .debug_str     00000000 
0000f70b l       .debug_str     00000000 
0000f73b l       .debug_str     00000000 
0000f76b l       .debug_str     00000000 
0000f79b l       .debug_str     00000000 
0000f7cb l       .debug_str     00000000 
0000f7f7 l       .debug_str     00000000 
0000f851 l       .debug_str     00000000 
0000f886 l       .debug_str     00000000 
0000f8bb l       .debug_str     00000000 
0000f8eb l       .debug_str     00000000 
0000f91b l       .debug_str     00000000 
0000f94b l       .debug_str     00000000 
0000f97b l       .debug_str     00000000 
0000f9ac l       .debug_str     00000000 
0000f9dd l       .debug_str     00000000 
0000fa0d l       .debug_str     00000000 
0000fa3d l       .debug_str     00000000 
0000fa6d l       .debug_str     00000000 
0000fa9d l       .debug_str     00000000 
0000fac9 l       .debug_str     00000000 
0000fb23 l       .debug_str     00000000 
0000fb58 l       .debug_str     00000000 
0000fb8d l       .debug_str     00000000 
0000fbbd l       .debug_str     00000000 
0000fbed l       .debug_str     00000000 
0000fc1d l       .debug_str     00000000 
0000fc4d l       .debug_str     00000000 
0000fc7e l       .debug_str     00000000 
0000fcaf l       .debug_str     00000000 
0000fcdf l       .debug_str     00000000 
0000fd0f l       .debug_str     00000000 
0000fd3f l       .debug_str     00000000 
0000fd6f l       .debug_str     00000000 
0000fd9b l       .debug_str     00000000 
0000fdf5 l       .debug_str     00000000 
0000fe2a l       .debug_str     00000000 
0000fe5f l       .debug_str     00000000 
0000fe8f l       .debug_str     00000000 
0000febf l       .debug_str     00000000 
0000feef l       .debug_str     00000000 
0000ff1f l       .debug_str     00000000 
0000ff50 l       .debug_str     00000000 
0000ff81 l       .debug_str     00000000 
0000ffb1 l       .debug_str     00000000 
0000ffe1 l       .debug_str     00000000 
00010011 l       .debug_str     00000000 
00010041 l       .debug_str     00000000 
0001006d l       .debug_str     00000000 
000100c7 l       .debug_str     00000000 
000100fc l       .debug_str     00000000 
00010131 l       .debug_str     00000000 
00010161 l       .debug_str     00000000 
00010191 l       .debug_str     00000000 
000101c1 l       .debug_str     00000000 
000101f1 l       .debug_str     00000000 
00010222 l       .debug_str     00000000 
00010253 l       .debug_str     00000000 
00010283 l       .debug_str     00000000 
000102b3 l       .debug_str     00000000 
000102e3 l       .debug_str     00000000 
00010313 l       .debug_str     00000000 
0001033f l       .debug_str     00000000 
00010399 l       .debug_str     00000000 
000103ce l       .debug_str     00000000 
00010403 l       .debug_str     00000000 
00010433 l       .debug_str     00000000 
00010463 l       .debug_str     00000000 
00010493 l       .debug_str     00000000 
000104c3 l       .debug_str     00000000 
000104f4 l       .debug_str     00000000 
00010525 l       .debug_str     00000000 
00010555 l       .debug_str     00000000 
00010585 l       .debug_str     00000000 
000105b5 l       .debug_str     00000000 
000105e5 l       .debug_str     00000000 
00010611 l       .debug_str     00000000 
0001066b l       .debug_str     00000000 
000106a0 l       .debug_str     00000000 
000106d5 l       .debug_str     00000000 
00010705 l       .debug_str     00000000 
00010735 l       .debug_str     00000000 
00010765 l       .debug_str     00000000 
00010795 l       .debug_str     00000000 
000107c6 l       .debug_str     00000000 
000107f7 l       .debug_str     00000000 
00010827 l       .debug_str     00000000 
00010857 l       .debug_str     00000000 
00010887 l       .debug_str     00000000 
000108b7 l       .debug_str     00000000 
000108e3 l       .debug_str     00000000 
0001093d l       .debug_str     00000000 
00010972 l       .debug_str     00000000 
000109a7 l       .debug_str     00000000 
000109d7 l       .debug_str     00000000 
00010a07 l       .debug_str     00000000 
00010a37 l       .debug_str     00000000 
00010a67 l       .debug_str     00000000 
00010a98 l       .debug_str     00000000 
00010ac9 l       .debug_str     00000000 
00010af9 l       .debug_str     00000000 
00010b29 l       .debug_str     00000000 
00010b59 l       .debug_str     00000000 
00010b89 l       .debug_str     00000000 
00010bb5 l       .debug_str     00000000 
00010c0f l       .debug_str     00000000 
00010c44 l       .debug_str     00000000 
00010c79 l       .debug_str     00000000 
00010ca9 l       .debug_str     00000000 
00010cd9 l       .debug_str     00000000 
00010d09 l       .debug_str     00000000 
00010d39 l       .debug_str     00000000 
00010d6a l       .debug_str     00000000 
00010d9b l       .debug_str     00000000 
00010dcb l       .debug_str     00000000 
00010dfb l       .debug_str     00000000 
00010e2b l       .debug_str     00000000 
00010e5b l       .debug_str     00000000 
00010e87 l       .debug_str     00000000 
00010ee1 l       .debug_str     00000000 
00010f16 l       .debug_str     00000000 
00010f4b l       .debug_str     00000000 
00010f7b l       .debug_str     00000000 
00010fab l       .debug_str     00000000 
00010fdb l       .debug_str     00000000 
0001100b l       .debug_str     00000000 
0001103c l       .debug_str     00000000 
0001106d l       .debug_str     00000000 
0001109d l       .debug_str     00000000 
000110cd l       .debug_str     00000000 
000110fd l       .debug_str     00000000 
0001112d l       .debug_str     00000000 
00011159 l       .debug_str     00000000 
000111b3 l       .debug_str     00000000 
000111e8 l       .debug_str     00000000 
0001121d l       .debug_str     00000000 
0001124d l       .debug_str     00000000 
0001127d l       .debug_str     00000000 
000112ad l       .debug_str     00000000 
000112dd l       .debug_str     00000000 
0001130e l       .debug_str     00000000 
0001133f l       .debug_str     00000000 
0001136f l       .debug_str     00000000 
0001139f l       .debug_str     00000000 
000113cf l       .debug_str     00000000 
000113ff l       .debug_str     00000000 
0001142b l       .debug_str     00000000 
00011485 l       .debug_str     00000000 
000114ba l       .debug_str     00000000 
000114ef l       .debug_str     00000000 
0001151f l       .debug_str     00000000 
0001154f l       .debug_str     00000000 
0001157f l       .debug_str     00000000 
000115af l       .debug_str     00000000 
000115e0 l       .debug_str     00000000 
00011611 l       .debug_str     00000000 
00011641 l       .debug_str     00000000 
00011671 l       .debug_str     00000000 
000116a1 l       .debug_str     00000000 
000116d1 l       .debug_str     00000000 
000116fd l       .debug_str     00000000 
00011757 l       .debug_str     00000000 
0001178c l       .debug_str     00000000 
000117c1 l       .debug_str     00000000 
000117f1 l       .debug_str     00000000 
00011821 l       .debug_str     00000000 
00011851 l       .debug_str     00000000 
00011881 l       .debug_str     00000000 
000118b2 l       .debug_str     00000000 
000118e3 l       .debug_str     00000000 
00011913 l       .debug_str     00000000 
00011943 l       .debug_str     00000000 
00011973 l       .debug_str     00000000 
000119a3 l       .debug_str     00000000 
000119cf l       .debug_str     00000000 
00011a29 l       .debug_str     00000000 
00011a5e l       .debug_str     00000000 
00011a93 l       .debug_str     00000000 
00011ac3 l       .debug_str     00000000 
00011af3 l       .debug_str     00000000 
00011b23 l       .debug_str     00000000 
00011b53 l       .debug_str     00000000 
00011b84 l       .debug_str     00000000 
00011bb5 l       .debug_str     00000000 
00011be5 l       .debug_str     00000000 
00011c15 l       .debug_str     00000000 
00011c45 l       .debug_str     00000000 
00011c75 l       .debug_str     00000000 
00011ca1 l       .debug_str     00000000 
00011cfb l       .debug_str     00000000 
00011d30 l       .debug_str     00000000 
00011d65 l       .debug_str     00000000 
00011d95 l       .debug_str     00000000 
00011dc5 l       .debug_str     00000000 
00011df5 l       .debug_str     00000000 
00011e25 l       .debug_str     00000000 
00011e56 l       .debug_str     00000000 
00011e87 l       .debug_str     00000000 
00011eb7 l       .debug_str     00000000 
00011ee7 l       .debug_str     00000000 
00011f17 l       .debug_str     00000000 
00011f47 l       .debug_str     00000000 
00011f73 l       .debug_str     00000000 
00011fcd l       .debug_str     00000000 
00012002 l       .debug_str     00000000 
00012037 l       .debug_str     00000000 
00012067 l       .debug_str     00000000 
00012097 l       .debug_str     00000000 
000120c7 l       .debug_str     00000000 
000120f7 l       .debug_str     00000000 
00012128 l       .debug_str     00000000 
00012159 l       .debug_str     00000000 
00012189 l       .debug_str     00000000 
000121b9 l       .debug_str     00000000 
000121e9 l       .debug_str     00000000 
00012219 l       .debug_str     00000000 
00012245 l       .debug_str     00000000 
0001229f l       .debug_str     00000000 
000122d4 l       .debug_str     00000000 
00012309 l       .debug_str     00000000 
00012339 l       .debug_str     00000000 
00012369 l       .debug_str     00000000 
00012399 l       .debug_str     00000000 
000123c9 l       .debug_str     00000000 
000123fa l       .debug_str     00000000 
0001242b l       .debug_str     00000000 
0001245b l       .debug_str     00000000 
0001248b l       .debug_str     00000000 
000124bb l       .debug_str     00000000 
000124eb l       .debug_str     00000000 
00012517 l       .debug_str     00000000 
00012571 l       .debug_str     00000000 
000125a6 l       .debug_str     00000000 
000125db l       .debug_str     00000000 
0001260b l       .debug_str     00000000 
0001263b l       .debug_str     00000000 
0001266b l       .debug_str     00000000 
0001269b l       .debug_str     00000000 
000126cc l       .debug_str     00000000 
000126fd l       .debug_str     00000000 
0001272d l       .debug_str     00000000 
0001275d l       .debug_str     00000000 
0001278d l       .debug_str     00000000 
000127bd l       .debug_str     00000000 
000127e9 l       .debug_str     00000000 
00012843 l       .debug_str     00000000 
00012878 l       .debug_str     00000000 
000128ad l       .debug_str     00000000 
000128dd l       .debug_str     00000000 
0001290d l       .debug_str     00000000 
0001293d l       .debug_str     00000000 
0001296d l       .debug_str     00000000 
0001299e l       .debug_str     00000000 
000129cf l       .debug_str     00000000 
000129ff l       .debug_str     00000000 
00012a2f l       .debug_str     00000000 
00012a5f l       .debug_str     00000000 
00012a8f l       .debug_str     00000000 
00012abb l       .debug_str     00000000 
00012b15 l       .debug_str     00000000 
00012b4a l       .debug_str     00000000 
00012b7f l       .debug_str     00000000 
00012baf l       .debug_str     00000000 
00012bdf l       .debug_str     00000000 
00012c0f l       .debug_str     00000000 
00012c3f l       .debug_str     00000000 
00012c70 l       .debug_str     00000000 
00012ca1 l       .debug_str     00000000 
00012cd1 l       .debug_str     00000000 
00012d01 l       .debug_str     00000000 
00012d31 l       .debug_str     00000000 
00012d61 l       .debug_str     00000000 
00012d8d l       .debug_str     00000000 
00012de7 l       .debug_str     00000000 
00012e1c l       .debug_str     00000000 
00012e51 l       .debug_str     00000000 
00012e81 l       .debug_str     00000000 
00012eb1 l       .debug_str     00000000 
00012ee1 l       .debug_str     00000000 
00012f11 l       .debug_str     00000000 
00012f42 l       .debug_str     00000000 
00012f73 l       .debug_str     00000000 
00012fa3 l       .debug_str     00000000 
00012fd3 l       .debug_str     00000000 
00013003 l       .debug_str     00000000 
00013033 l       .debug_str     00000000 
0001305f l       .debug_str     00000000 
000130b9 l       .debug_str     00000000 
000130ee l       .debug_str     00000000 
00013123 l       .debug_str     00000000 
00013153 l       .debug_str     00000000 
00013183 l       .debug_str     00000000 
000131b3 l       .debug_str     00000000 
000131e3 l       .debug_str     00000000 
00013214 l       .debug_str     00000000 
00013245 l       .debug_str     00000000 
00013275 l       .debug_str     00000000 
000132a5 l       .debug_str     00000000 
000132d5 l       .debug_str     00000000 
00013305 l       .debug_str     00000000 
00013331 l       .debug_str     00000000 
0001338b l       .debug_str     00000000 
000133c0 l       .debug_str     00000000 
000133f5 l       .debug_str     00000000 
00013425 l       .debug_str     00000000 
00013455 l       .debug_str     00000000 
00013485 l       .debug_str     00000000 
000134b5 l       .debug_str     00000000 
000134e6 l       .debug_str     00000000 
00013517 l       .debug_str     00000000 
00013547 l       .debug_str     00000000 
00013577 l       .debug_str     00000000 
000135a7 l       .debug_str     00000000 
000135d7 l       .debug_str     00000000 
00013603 l       .debug_str     00000000 
0001365d l       .debug_str     00000000 
00013692 l       .debug_str     00000000 
000136c7 l       .debug_str     00000000 
000136f7 l       .debug_str     00000000 
00013727 l       .debug_str     00000000 
00013757 l       .debug_str     00000000 
00013787 l       .debug_str     00000000 
000137b8 l       .debug_str     00000000 
000137e9 l       .debug_str     00000000 
00013819 l       .debug_str     00000000 
00013849 l       .debug_str     00000000 
00013879 l       .debug_str     00000000 
000138a9 l       .debug_str     00000000 
000138d5 l       .debug_str     00000000 
0001392f l       .debug_str     00000000 
00013964 l       .debug_str     00000000 
00013999 l       .debug_str     00000000 
000139c9 l       .debug_str     00000000 
000139f9 l       .debug_str     00000000 
00013a29 l       .debug_str     00000000 
00013a59 l       .debug_str     00000000 
00013a8a l       .debug_str     00000000 
00013abb l       .debug_str     00000000 
00013aeb l       .debug_str     00000000 
00013b1b l       .debug_str     00000000 
00013b4b l       .debug_str     00000000 
00013b7b l       .debug_str     00000000 
00013ba7 l       .debug_str     00000000 
00013c01 l       .debug_str     00000000 
00013c36 l       .debug_str     00000000 
00013c6b l       .debug_str     00000000 
00013c9b l       .debug_str     00000000 
00013ccb l       .debug_str     00000000 
00013cfb l       .debug_str     00000000 
00013d2b l       .debug_str     00000000 
00013d5c l       .debug_str     00000000 
00013d8d l       .debug_str     00000000 
00013dbd l       .debug_str     00000000 
00013ded l       .debug_str     00000000 
00013e1d l       .debug_str     00000000 
00013e4d l       .debug_str     00000000 
00013e79 l       .debug_str     00000000 
00013ed3 l       .debug_str     00000000 
00013f08 l       .debug_str     00000000 
00013f3d l       .debug_str     00000000 
00013f6d l       .debug_str     00000000 
00013f9d l       .debug_str     00000000 
00013fcd l       .debug_str     00000000 
00013ffd l       .debug_str     00000000 
0001402e l       .debug_str     00000000 
0001405f l       .debug_str     00000000 
0001408f l       .debug_str     00000000 
000140bf l       .debug_str     00000000 
000140ef l       .debug_str     00000000 
0001411f l       .debug_str     00000000 
0001414b l       .debug_str     00000000 
000141a5 l       .debug_str     00000000 
000141da l       .debug_str     00000000 
0001420f l       .debug_str     00000000 
0001423f l       .debug_str     00000000 
0001426f l       .debug_str     00000000 
0001429f l       .debug_str     00000000 
000142cf l       .debug_str     00000000 
00014300 l       .debug_str     00000000 
00014331 l       .debug_str     00000000 
00014361 l       .debug_str     00000000 
00014391 l       .debug_str     00000000 
000143c1 l       .debug_str     00000000 
000143f1 l       .debug_str     00000000 
0001441d l       .debug_str     00000000 
00014477 l       .debug_str     00000000 
000144ac l       .debug_str     00000000 
000144e1 l       .debug_str     00000000 
00014511 l       .debug_str     00000000 
00014541 l       .debug_str     00000000 
00014571 l       .debug_str     00000000 
000145a1 l       .debug_str     00000000 
000145d2 l       .debug_str     00000000 
00014603 l       .debug_str     00000000 
00014633 l       .debug_str     00000000 
00014663 l       .debug_str     00000000 
00014693 l       .debug_str     00000000 
000146c3 l       .debug_str     00000000 
000146ef l       .debug_str     00000000 
00014749 l       .debug_str     00000000 
0001477e l       .debug_str     00000000 
000147b3 l       .debug_str     00000000 
000147e3 l       .debug_str     00000000 
00014813 l       .debug_str     00000000 
00014843 l       .debug_str     00000000 
00014873 l       .debug_str     00000000 
000148a4 l       .debug_str     00000000 
000148d5 l       .debug_str     00000000 
00014905 l       .debug_str     00000000 
00014935 l       .debug_str     00000000 
00014965 l       .debug_str     00000000 
00014995 l       .debug_str     00000000 
000149c1 l       .debug_str     00000000 
00014a1b l       .debug_str     00000000 
00014a50 l       .debug_str     00000000 
00014a85 l       .debug_str     00000000 
00014ab5 l       .debug_str     00000000 
00014ae5 l       .debug_str     00000000 
00014b15 l       .debug_str     00000000 
00014b45 l       .debug_str     00000000 
00014b76 l       .debug_str     00000000 
00014ba7 l       .debug_str     00000000 
00014bd7 l       .debug_str     00000000 
00014c07 l       .debug_str     00000000 
00014c37 l       .debug_str     00000000 
00014c67 l       .debug_str     00000000 
00014c93 l       .debug_str     00000000 
00014ced l       .debug_str     00000000 
00014d22 l       .debug_str     00000000 
00014d57 l       .debug_str     00000000 
00014d87 l       .debug_str     00000000 
00014db7 l       .debug_str     00000000 
00014de7 l       .debug_str     00000000 
00014e17 l       .debug_str     00000000 
00014e48 l       .debug_str     00000000 
00014e79 l       .debug_str     00000000 
00014ea9 l       .debug_str     00000000 
00014ed9 l       .debug_str     00000000 
00014f09 l       .debug_str     00000000 
00014f39 l       .debug_str     00000000 
00014f65 l       .debug_str     00000000 
00014fbf l       .debug_str     00000000 
00014ff4 l       .debug_str     00000000 
00015029 l       .debug_str     00000000 
00015059 l       .debug_str     00000000 
00015089 l       .debug_str     00000000 
000150b9 l       .debug_str     00000000 
000150e9 l       .debug_str     00000000 
0001511a l       .debug_str     00000000 
0001514b l       .debug_str     00000000 
0001517b l       .debug_str     00000000 
000151ab l       .debug_str     00000000 
000151db l       .debug_str     00000000 
0001520b l       .debug_str     00000000 
00015237 l       .debug_str     00000000 
00015291 l       .debug_str     00000000 
000152c6 l       .debug_str     00000000 
000152fb l       .debug_str     00000000 
0001532b l       .debug_str     00000000 
0001535b l       .debug_str     00000000 
0001538b l       .debug_str     00000000 
000153bb l       .debug_str     00000000 
000153ec l       .debug_str     00000000 
0001541d l       .debug_str     00000000 
0001544d l       .debug_str     00000000 
0001547d l       .debug_str     00000000 
000154ad l       .debug_str     00000000 
000154dd l       .debug_str     00000000 
00015509 l       .debug_str     00000000 
00015563 l       .debug_str     00000000 
00015598 l       .debug_str     00000000 
000155cd l       .debug_str     00000000 
000155fd l       .debug_str     00000000 
0001562d l       .debug_str     00000000 
0001565d l       .debug_str     00000000 
0001568d l       .debug_str     00000000 
000156be l       .debug_str     00000000 
000156ef l       .debug_str     00000000 
0001571f l       .debug_str     00000000 
0001574f l       .debug_str     00000000 
0001577f l       .debug_str     00000000 
000157af l       .debug_str     00000000 
000157db l       .debug_str     00000000 
00015835 l       .debug_str     00000000 
0001586a l       .debug_str     00000000 
0001589f l       .debug_str     00000000 
000158cf l       .debug_str     00000000 
000158ff l       .debug_str     00000000 
0001592f l       .debug_str     00000000 
0001595f l       .debug_str     00000000 
00015990 l       .debug_str     00000000 
000159c1 l       .debug_str     00000000 
000159f1 l       .debug_str     00000000 
00015a21 l       .debug_str     00000000 
00015a51 l       .debug_str     00000000 
00015a81 l       .debug_str     00000000 
00015aad l       .debug_str     00000000 
00015b07 l       .debug_str     00000000 
00015b3c l       .debug_str     00000000 
00015b71 l       .debug_str     00000000 
00015ba1 l       .debug_str     00000000 
00015bd1 l       .debug_str     00000000 
00015c01 l       .debug_str     00000000 
00015c31 l       .debug_str     00000000 
00015c62 l       .debug_str     00000000 
00015c93 l       .debug_str     00000000 
00015cc3 l       .debug_str     00000000 
00015cf3 l       .debug_str     00000000 
00015d23 l       .debug_str     00000000 
00015d53 l       .debug_str     00000000 
00015d7f l       .debug_str     00000000 
00015dd9 l       .debug_str     00000000 
00015e0e l       .debug_str     00000000 
00015e43 l       .debug_str     00000000 
00015e73 l       .debug_str     00000000 
00015ea3 l       .debug_str     00000000 
00015ed3 l       .debug_str     00000000 
00015f03 l       .debug_str     00000000 
00015f34 l       .debug_str     00000000 
00015f65 l       .debug_str     00000000 
00015f95 l       .debug_str     00000000 
00015fc5 l       .debug_str     00000000 
00015ff5 l       .debug_str     00000000 
00016025 l       .debug_str     00000000 
00016051 l       .debug_str     00000000 
000160ab l       .debug_str     00000000 
000160e0 l       .debug_str     00000000 
00016115 l       .debug_str     00000000 
00016145 l       .debug_str     00000000 
00016175 l       .debug_str     00000000 
000161a5 l       .debug_str     00000000 
000161d5 l       .debug_str     00000000 
00016206 l       .debug_str     00000000 
00016237 l       .debug_str     00000000 
00016267 l       .debug_str     00000000 
00016297 l       .debug_str     00000000 
000162c7 l       .debug_str     00000000 
000162f7 l       .debug_str     00000000 
00016323 l       .debug_str     00000000 
0001637d l       .debug_str     00000000 
000163b2 l       .debug_str     00000000 
000163e7 l       .debug_str     00000000 
00016417 l       .debug_str     00000000 
00016447 l       .debug_str     00000000 
00016477 l       .debug_str     00000000 
000164a7 l       .debug_str     00000000 
000164d8 l       .debug_str     00000000 
00016509 l       .debug_str     00000000 
00016539 l       .debug_str     00000000 
00016569 l       .debug_str     00000000 
00016599 l       .debug_str     00000000 
000165c9 l       .debug_str     00000000 
000165f5 l       .debug_str     00000000 
0001664f l       .debug_str     00000000 
00016684 l       .debug_str     00000000 
000166b9 l       .debug_str     00000000 
000166e9 l       .debug_str     00000000 
00016719 l       .debug_str     00000000 
00016749 l       .debug_str     00000000 
00016779 l       .debug_str     00000000 
000167aa l       .debug_str     00000000 
000167db l       .debug_str     00000000 
0001680b l       .debug_str     00000000 
0001683b l       .debug_str     00000000 
0001686b l       .debug_str     00000000 
0001689b l       .debug_str     00000000 
000168c7 l       .debug_str     00000000 
00016921 l       .debug_str     00000000 
00016956 l       .debug_str     00000000 
0001698b l       .debug_str     00000000 
000169bb l       .debug_str     00000000 
000169eb l       .debug_str     00000000 
00016a1b l       .debug_str     00000000 
00016a4b l       .debug_str     00000000 
00016a7c l       .debug_str     00000000 
00016aad l       .debug_str     00000000 
00016add l       .debug_str     00000000 
00016b0d l       .debug_str     00000000 
00016b3d l       .debug_str     00000000 
00016b6d l       .debug_str     00000000 
00016b99 l       .debug_str     00000000 
00016bf3 l       .debug_str     00000000 
00016c28 l       .debug_str     00000000 
00016c5d l       .debug_str     00000000 
00016c8d l       .debug_str     00000000 
00016cbd l       .debug_str     00000000 
00016ced l       .debug_str     00000000 
00016d1d l       .debug_str     00000000 
00016d4e l       .debug_str     00000000 
00016d7f l       .debug_str     00000000 
00016daf l       .debug_str     00000000 
00016ddf l       .debug_str     00000000 
00016e0f l       .debug_str     00000000 
00016e3f l       .debug_str     00000000 
00016e6b l       .debug_str     00000000 
00016ec5 l       .debug_str     00000000 
00016efa l       .debug_str     00000000 
00016f2f l       .debug_str     00000000 
00016f5f l       .debug_str     00000000 
00016f8f l       .debug_str     00000000 
00016fbf l       .debug_str     00000000 
00016fef l       .debug_str     00000000 
00017020 l       .debug_str     00000000 
00017051 l       .debug_str     00000000 
00017081 l       .debug_str     00000000 
000170b1 l       .debug_str     00000000 
000170e1 l       .debug_str     00000000 
00017111 l       .debug_str     00000000 
0001713d l       .debug_str     00000000 
00017197 l       .debug_str     00000000 
000171cc l       .debug_str     00000000 
00017201 l       .debug_str     00000000 
00017231 l       .debug_str     00000000 
00017261 l       .debug_str     00000000 
00017291 l       .debug_str     00000000 
000172c1 l       .debug_str     00000000 
000172f2 l       .debug_str     00000000 
00017323 l       .debug_str     00000000 
00017353 l       .debug_str     00000000 
00017383 l       .debug_str     00000000 
000173b3 l       .debug_str     00000000 
000173e3 l       .debug_str     00000000 
0001740f l       .debug_str     00000000 
00017469 l       .debug_str     00000000 
0001749e l       .debug_str     00000000 
000174d3 l       .debug_str     00000000 
00017503 l       .debug_str     00000000 
00017533 l       .debug_str     00000000 
00017563 l       .debug_str     00000000 
00017593 l       .debug_str     00000000 
000175c4 l       .debug_str     00000000 
000175f5 l       .debug_str     00000000 
00017625 l       .debug_str     00000000 
00017655 l       .debug_str     00000000 
00017685 l       .debug_str     00000000 
000176b5 l       .debug_str     00000000 
000176e1 l       .debug_str     00000000 
0001773b l       .debug_str     00000000 
00017770 l       .debug_str     00000000 
000177a5 l       .debug_str     00000000 
000177d5 l       .debug_str     00000000 
00017805 l       .debug_str     00000000 
00017835 l       .debug_str     00000000 
00017865 l       .debug_str     00000000 
00017896 l       .debug_str     00000000 
000178c7 l       .debug_str     00000000 
000178f7 l       .debug_str     00000000 
00017927 l       .debug_str     00000000 
00017957 l       .debug_str     00000000 
00017987 l       .debug_str     00000000 
000179b3 l       .debug_str     00000000 
00017a0d l       .debug_str     00000000 
00017a42 l       .debug_str     00000000 
00017a77 l       .debug_str     00000000 
00017aa7 l       .debug_str     00000000 
00017ad7 l       .debug_str     00000000 
00017b07 l       .debug_str     00000000 
00017b37 l       .debug_str     00000000 
00017b68 l       .debug_str     00000000 
00017b99 l       .debug_str     00000000 
00017bc9 l       .debug_str     00000000 
00017bf9 l       .debug_str     00000000 
00017c29 l       .debug_str     00000000 
00017c59 l       .debug_str     00000000 
00017c85 l       .debug_str     00000000 
00017cdf l       .debug_str     00000000 
00017d14 l       .debug_str     00000000 
00017d49 l       .debug_str     00000000 
00017d79 l       .debug_str     00000000 
00017da9 l       .debug_str     00000000 
00017dd9 l       .debug_str     00000000 
00017e09 l       .debug_str     00000000 
00017e3a l       .debug_str     00000000 
00017e6b l       .debug_str     00000000 
00017e9b l       .debug_str     00000000 
00017ecb l       .debug_str     00000000 
00017efb l       .debug_str     00000000 
00017f2b l       .debug_str     00000000 
00017f57 l       .debug_str     00000000 
00017fb1 l       .debug_str     00000000 
00017fe6 l       .debug_str     00000000 
0001801b l       .debug_str     00000000 
0001804b l       .debug_str     00000000 
0001807b l       .debug_str     00000000 
000180ab l       .debug_str     00000000 
000180db l       .debug_str     00000000 
0001810c l       .debug_str     00000000 
0001813d l       .debug_str     00000000 
0001816d l       .debug_str     00000000 
0001819d l       .debug_str     00000000 
000181cd l       .debug_str     00000000 
000181fd l       .debug_str     00000000 
00018229 l       .debug_str     00000000 
00018283 l       .debug_str     00000000 
000182b8 l       .debug_str     00000000 
000182ed l       .debug_str     00000000 
0001831d l       .debug_str     00000000 
0001834d l       .debug_str     00000000 
0001837d l       .debug_str     00000000 
000183ad l       .debug_str     00000000 
000183de l       .debug_str     00000000 
0001840f l       .debug_str     00000000 
0001843f l       .debug_str     00000000 
0001846f l       .debug_str     00000000 
0001849f l       .debug_str     00000000 
000184cf l       .debug_str     00000000 
000184fb l       .debug_str     00000000 
00018555 l       .debug_str     00000000 
0001858a l       .debug_str     00000000 
000185bf l       .debug_str     00000000 
000185ef l       .debug_str     00000000 
0001861f l       .debug_str     00000000 
0001864f l       .debug_str     00000000 
0001867f l       .debug_str     00000000 
000186b0 l       .debug_str     00000000 
000186e1 l       .debug_str     00000000 
00018711 l       .debug_str     00000000 
00018741 l       .debug_str     00000000 
00018771 l       .debug_str     00000000 
000187a1 l       .debug_str     00000000 
000187cd l       .debug_str     00000000 
00018827 l       .debug_str     00000000 
0001885c l       .debug_str     00000000 
00018891 l       .debug_str     00000000 
000188c1 l       .debug_str     00000000 
000188f1 l       .debug_str     00000000 
00018921 l       .debug_str     00000000 
00018951 l       .debug_str     00000000 
00018982 l       .debug_str     00000000 
000189b3 l       .debug_str     00000000 
000189e3 l       .debug_str     00000000 
00018a13 l       .debug_str     00000000 
00018a43 l       .debug_str     00000000 
00018a73 l       .debug_str     00000000 
00018a9f l       .debug_str     00000000 
00018af9 l       .debug_str     00000000 
00018b2e l       .debug_str     00000000 
00018b63 l       .debug_str     00000000 
00018b93 l       .debug_str     00000000 
00018bc3 l       .debug_str     00000000 
00018bf3 l       .debug_str     00000000 
00018c23 l       .debug_str     00000000 
00018c54 l       .debug_str     00000000 
00018c85 l       .debug_str     00000000 
00018cb5 l       .debug_str     00000000 
00018ce5 l       .debug_str     00000000 
00018d15 l       .debug_str     00000000 
00018d45 l       .debug_str     00000000 
00018d71 l       .debug_str     00000000 
00018dcb l       .debug_str     00000000 
00018e00 l       .debug_str     00000000 
00018e35 l       .debug_str     00000000 
00018e65 l       .debug_str     00000000 
00018e95 l       .debug_str     00000000 
00018ec5 l       .debug_str     00000000 
00018ef5 l       .debug_str     00000000 
00018f26 l       .debug_str     00000000 
00018f57 l       .debug_str     00000000 
00018f87 l       .debug_str     00000000 
00018fb7 l       .debug_str     00000000 
00018fe7 l       .debug_str     00000000 
00019017 l       .debug_str     00000000 
00019043 l       .debug_str     00000000 
0001909d l       .debug_str     00000000 
000190d2 l       .debug_str     00000000 
00019107 l       .debug_str     00000000 
00019137 l       .debug_str     00000000 
00019167 l       .debug_str     00000000 
00019197 l       .debug_str     00000000 
000191c7 l       .debug_str     00000000 
000191f8 l       .debug_str     00000000 
00019229 l       .debug_str     00000000 
00019259 l       .debug_str     00000000 
00019289 l       .debug_str     00000000 
000192b9 l       .debug_str     00000000 
000192e9 l       .debug_str     00000000 
00019315 l       .debug_str     00000000 
0001936f l       .debug_str     00000000 
000193a4 l       .debug_str     00000000 
000193d9 l       .debug_str     00000000 
00019409 l       .debug_str     00000000 
00019439 l       .debug_str     00000000 
00019469 l       .debug_str     00000000 
00019499 l       .debug_str     00000000 
000194ca l       .debug_str     00000000 
000194fb l       .debug_str     00000000 
0001952b l       .debug_str     00000000 
0001955b l       .debug_str     00000000 
0001958b l       .debug_str     00000000 
000195bb l       .debug_str     00000000 
000195e7 l       .debug_str     00000000 
00019641 l       .debug_str     00000000 
00019676 l       .debug_str     00000000 
000196ab l       .debug_str     00000000 
000196db l       .debug_str     00000000 
0001970b l       .debug_str     00000000 
0001973b l       .debug_str     00000000 
0001976b l       .debug_str     00000000 
0001979c l       .debug_str     00000000 
000197cd l       .debug_str     00000000 
000197fd l       .debug_str     00000000 
0001982d l       .debug_str     00000000 
0001985d l       .debug_str     00000000 
0001988d l       .debug_str     00000000 
000198b9 l       .debug_str     00000000 
00019913 l       .debug_str     00000000 
0001994d l       .debug_str     00000000 
00019987 l       .debug_str     00000000 
000199bc l       .debug_str     00000000 
000199f1 l       .debug_str     00000000 
00019a26 l       .debug_str     00000000 
00019a5b l       .debug_str     00000000 
00019a91 l       .debug_str     00000000 
00019ac7 l       .debug_str     00000000 
00019afc l       .debug_str     00000000 
00019b31 l       .debug_str     00000000 
00019b66 l       .debug_str     00000000 
000010dd l       .debug_str     00000000 
00019b9b l       .debug_str     00000000 
00019bff l       .debug_str     00000000 
00019c39 l       .debug_str     00000000 
00019c73 l       .debug_str     00000000 
00019ca8 l       .debug_str     00000000 
00019cdd l       .debug_str     00000000 
00019d12 l       .debug_str     00000000 
00019d47 l       .debug_str     00000000 
00019d7d l       .debug_str     00000000 
00019db3 l       .debug_str     00000000 
00019de8 l       .debug_str     00000000 
00019e1d l       .debug_str     00000000 
00019e52 l       .debug_str     00000000 
0000110e l       .debug_str     00000000 
00019e87 l       .debug_str     00000000 
00019eeb l       .debug_str     00000000 
00019f25 l       .debug_str     00000000 
00019f5f l       .debug_str     00000000 
00019f94 l       .debug_str     00000000 
00019fc9 l       .debug_str     00000000 
00019ffe l       .debug_str     00000000 
0001a033 l       .debug_str     00000000 
0001a069 l       .debug_str     00000000 
0001a09f l       .debug_str     00000000 
0001a0d4 l       .debug_str     00000000 
0001a109 l       .debug_str     00000000 
0001a13e l       .debug_str     00000000 
0000113f l       .debug_str     00000000 
0001a173 l       .debug_str     00000000 
0001a1d7 l       .debug_str     00000000 
0001a211 l       .debug_str     00000000 
0001a24b l       .debug_str     00000000 
0001a280 l       .debug_str     00000000 
0001a2b5 l       .debug_str     00000000 
0001a2ea l       .debug_str     00000000 
0001a31f l       .debug_str     00000000 
0001a355 l       .debug_str     00000000 
0001a38b l       .debug_str     00000000 
0001a3c0 l       .debug_str     00000000 
0001a3f5 l       .debug_str     00000000 
0001a42a l       .debug_str     00000000 
00001170 l       .debug_str     00000000 
0001a45f l       .debug_str     00000000 
000001ce l       .debug_str     00000000 
000001c0 l       .debug_str     00000000 
0000bfbb l       .debug_str     00000000 
0000c28d l       .debug_str     00000000 
0000c55f l       .debug_str     00000000 
0000c831 l       .debug_str     00000000 
0000cb03 l       .debug_str     00000000 
0000cdd5 l       .debug_str     00000000 
0000d0a7 l       .debug_str     00000000 
0000d379 l       .debug_str     00000000 
0000d64b l       .debug_str     00000000 
0000d91d l       .debug_str     00000000 
0000dbef l       .debug_str     00000000 
0000dec1 l       .debug_str     00000000 
0000e193 l       .debug_str     00000000 
0000e465 l       .debug_str     00000000 
0000e737 l       .debug_str     00000000 
0000ea09 l       .debug_str     00000000 
0000ecdb l       .debug_str     00000000 
0000efad l       .debug_str     00000000 
0000f27f l       .debug_str     00000000 
0000f551 l       .debug_str     00000000 
0000f823 l       .debug_str     00000000 
0000faf5 l       .debug_str     00000000 
0000fdc7 l       .debug_str     00000000 
00010099 l       .debug_str     00000000 
0001036b l       .debug_str     00000000 
0001063d l       .debug_str     00000000 
0001090f l       .debug_str     00000000 
00010be1 l       .debug_str     00000000 
00010eb3 l       .debug_str     00000000 
00011185 l       .debug_str     00000000 
00011457 l       .debug_str     00000000 
00011729 l       .debug_str     00000000 
000119fb l       .debug_str     00000000 
00011ccd l       .debug_str     00000000 
00011f9f l       .debug_str     00000000 
00012271 l       .debug_str     00000000 
00012543 l       .debug_str     00000000 
00012815 l       .debug_str     00000000 
00012ae7 l       .debug_str     00000000 
00012db9 l       .debug_str     00000000 
0001308b l       .debug_str     00000000 
0001335d l       .debug_str     00000000 
0001362f l       .debug_str     00000000 
00013901 l       .debug_str     00000000 
00013bd3 l       .debug_str     00000000 
00013ea5 l       .debug_str     00000000 
00014177 l       .debug_str     00000000 
00014449 l       .debug_str     00000000 
0001471b l       .debug_str     00000000 
000149ed l       .debug_str     00000000 
00014cbf l       .debug_str     00000000 
00014f91 l       .debug_str     00000000 
00015263 l       .debug_str     00000000 
00015535 l       .debug_str     00000000 
00015807 l       .debug_str     00000000 
00015ad9 l       .debug_str     00000000 
00015dab l       .debug_str     00000000 
0001607d l       .debug_str     00000000 
0001634f l       .debug_str     00000000 
00016621 l       .debug_str     00000000 
000168f3 l       .debug_str     00000000 
00016bc5 l       .debug_str     00000000 
00016e97 l       .debug_str     00000000 
00017169 l       .debug_str     00000000 
0001743b l       .debug_str     00000000 
0001770d l       .debug_str     00000000 
000179df l       .debug_str     00000000 
00017cb1 l       .debug_str     00000000 
00017f83 l       .debug_str     00000000 
00018255 l       .debug_str     00000000 
00018527 l       .debug_str     00000000 
000187f9 l       .debug_str     00000000 
00018acb l       .debug_str     00000000 
00018d9d l       .debug_str     00000000 
0001906f l       .debug_str     00000000 
00019341 l       .debug_str     00000000 
00019613 l       .debug_str     00000000 
000198e5 l       .debug_str     00000000 
00019bcc l       .debug_str     00000000 
00019eb8 l       .debug_str     00000000 
0001a1a4 l       .debug_str     00000000 
0001a490 l       .debug_str     00000000 
00000bb8 l       .debug_frame   00000000 
d000c182 l       .text  00000000 
d000c18e l       .text  00000000 
d000c19a l       .text  00000000 
d000c1a6 l       .text  00000000 
00000000 l    df *ABS*  00000000 status.c
d000c1a6 l       .text  00000000 
d000c1a6 l       .text  00000000 
d000c1a6 l       .text  00000000 
d000c1a8 l       .text  00000000 
d000c1aa l       .text  00000000 
d000c1b0 l       .text  00000000 
d000c1b4 l       .text  00000000 
d000c1b8 l       .text  00000000 
d000c1bc l       .text  00000000 
d000c1bc l       .text  00000000 
d000c1c6 l       .text  00000000 
d000c1c8 l       .text  00000000 
d000c1c8 l       .text  00000000 
d000c1ca l       .text  00000000 
d000c1ca l       .text  00000000 
d000c1d0 l       .text  00000000 
d000c1d0 l       .text  00000000 
d000c1da l       .text  00000000 
d000c1dc l       .text  00000000 
d000c1dc l       .text  00000000 
d000c1f0 l       .text  00000000 
d000c1f0 l       .text  00000000 
d000c1f2 l       .text  00000000 
d000c1f2 l       .text  00000000 
d000c1fc l       .text  00000000 
d000c1fe l       .text  00000000 
d000c1fe l       .text  00000000 
d000c212 l       .text  00000000 
d000c212 l       .text  00000000 
d000c214 l       .text  00000000 
00000078 l     O .logs.fields   00000014 test_status_set.kLogFields.2
d000c214 l       .text  00000000 
d000c21c l       .text  00000000 
d000c21c l       .text  00000000 
d000c226 l       .text  00000000 
d000c228 l       .text  00000000 
d000c228 l       .text  00000000 
00000064 l     O .logs.fields   00000014 test_status_set.kLogFields
d000c230 l       .text  00000000 
d000c238 l       .text  00000000 
d000c238 l       .text  00000000 
d000c242 l       .text  00000000 
d000c244 l       .text  00000000 
d000c244 l       .text  00000000 
d000c24c l       .text  00000000 
d000c24c l       .text  00000000 
d000c24c l       .text  00000000 
000208f2 l       .debug_loc     00000000 
00020910 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
0001a63b l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00001090 l       .debug_str     00000000 
000001e2 l       .debug_str     00000000 
000003a6 l       .debug_str     00000000 
00000266 l       .debug_str     00000000 
00000271 l       .debug_str     00000000 
00000237 l       .debug_str     00000000 
0000024f l       .debug_str     00000000 
0001a893 l       .debug_str     00000000 
00000259 l       .debug_str     00000000 
0000025f l       .debug_str     00000000 
00000240 l       .debug_str     00000000 
00000233 l       .debug_str     00000000 
000001ed l       .debug_str     00000000 
000001fe l       .debug_str     00000000 
0000020f l       .debug_str     00000000 
00000221 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000001c9 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
00000331 l       .debug_str     00000000 
00000346 l       .debug_str     00000000 
0000035f l       .debug_str     00000000 
00000371 l       .debug_str     00000000 
00000382 l       .debug_str     00000000 
00000394 l       .debug_str     00000000 
0001a669 l       .debug_str     00000000 
0001a690 l       .debug_str     00000000 
0001a682 l       .debug_str     00000000 
00000299 l       .debug_str     00000000 
0000028d l       .debug_str     00000000 
00000288 l       .debug_str     00000000 
000064bf l       .debug_str     00000000 
0001bb62 l       .debug_str     00000000 
0001bb6e l       .debug_str     00000000 
000064d3 l       .debug_str     00000000 
00000175 l       .debug_str     00000000 
00001079 l       .debug_str     00000000 
00001064 l       .debug_str     00000000 
0001a6a8 l       .debug_str     00000000 
0000538c l       .debug_frame   00000000 
d000c24c l       .text  00000000 
00000000 l    df *ABS*  00000000 hart.c
d000c24c l       .text  00000000 
d000c24c l       .text  00000000 
d000c24c l       .text  00000000 
d000c24c l       .text  00000000 
d000c250 l       .text  00000000 
d000c250 l       .text  00000000 
d000c252 l       .text  00000000 
d000c252 l       .text  00000000 
00020923 l       .debug_loc     00000000 
0002093e l       .debug_loc     00000000 
00020965 l       .debug_loc     00000000 
0002098c l       .debug_loc     00000000 
000209a8 l       .debug_loc     00000000 
000209d5 l       .debug_loc     00000000 
000209fc l       .debug_loc     00000000 
00020a23 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
0001a6ae l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00002f38 l       .debug_ranges  00000000 
00000179 l       .debug_str     00000000 
00000162 l       .debug_str     00000000 
0001a6cb l       .debug_str     00000000 
0001a6dc l       .debug_str     00000000 
0001a6e6 l       .debug_str     00000000 
0001a6f1 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
0001a70c l       .debug_str     00000000 
0001a71d l       .debug_str     00000000 
0001b320 l       .debug_str     00000000 
0000313e l       .debug_str     00000000 
0001a6fe l       .debug_str     00000000 
0000614e l       .debug_str     00000000 
0001a6a8 l       .debug_str     00000000 
000037ee l       .debug_str     00000000 
000053b8 l       .debug_frame   00000000 
d000c252 l       .text  00000000 
00000000 l    df *ABS*  00000000 log.c
d000c252 l       .text  00000000 
d000c252 l       .text  00000000 
d000c252 l       .text  00000000 
d000c254 l       .text  00000000 
d000c25a l       .text  00000000 
d000c25c l       .text  00000000 
d000c26a l       .text  00000000 
d000c274 l       .text  00000000 
d000c27a l       .text  00000000 
d000c27a l       .text  00000000 
d000c27c l       .text  00000000 
d000c280 l       .text  00000000 
d000c280 l       .text  00000000 
d000c28a l       .text  00000000 
d000c28a l       .text  00000000 
d000c28c l       .text  00000000 
d000c290 l       .text  00000000 
d000c290 l       .text  00000000 
d000c292 l       .text  00000000 
d000c292 l       .text  00000000 
d000c294 l       .text  00000000 
d000c294 l       .text  00000000 
d000c298 l       .text  00000000 
d000c298 l       .text  00000000 
d000c29e l       .text  00000000 
d000c2ac l       .text  00000000 
d000c2ac l       .text  00000000 
e0002050 l     O .bss   00000002 base_log_internal_core.global_log_counter
d000c2b4 l       .text  00000000 
d000c2c0 l       .text  00000000 
d000c2c2 l       .text  00000000 
d000c2cc l       .text  00000000 
d000c2cc l       .text  00000000 
d000c2d8 l       .text  00000000 
d000c2d8 l       .text  00000000 
d000c2da l       .text  00000000 
d000c2dc l       .text  00000000 
d000c2e0 l       .text  00000000 
d000c2e0 l       .text  00000000 
d000c2ea l       .text  00000000 
d000c2ea l       .text  00000000 
d000c2f4 l       .text  00000000 
d000c2f4 l       .text  00000000 
d000c2f4 l       .text  00000000 
d000c2f4 l       .text  00000000 
d000c2f4 l       .text  00000000 
d000c2f6 l       .text  00000000 
d000c2fc l       .text  00000000 
d000c2fc l       .text  00000000 
d000c306 l       .text  00000000 
d000c306 l       .text  00000000 
d000c30c l       .text  00000000 
d000c30c l       .text  00000000 
d000c310 l       .text  00000000 
d000c310 l       .text  00000000 
d000c312 l       .text  00000000 
d000c312 l       .text  00000000 
d000c314 l       .text  00000000 
d000c314 l       .text  00000000 
d000c316 l       .text  00000000 
d000c31a l       .text  00000000 
d000c31e l       .text  00000000 
d000c320 l       .text  00000000 
d000c320 l       .text  00000000 
d000c322 l       .text  00000000 
d000c322 l       .text  00000000 
d000c324 l       .text  00000000 
d000c324 l       .text  00000000 
d000c328 l       .text  00000000 
d000c328 l       .text  00000000 
00020a3f l       .debug_loc     00000000 
00020a67 l       .debug_loc     00000000 
00020a82 l       .debug_loc     00000000 
00020abe l       .debug_loc     00000000 
00020ada l       .debug_loc     00000000 
00020af5 l       .debug_loc     00000000 
00020b10 l       .debug_loc     00000000 
00020b2b l       .debug_loc     00000000 
00020b69 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
0001a722 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00002f60 l       .debug_ranges  00000000 
00001079 l       .debug_str     00000000 
0001a73e l       .debug_str     00000000 
0001a78c l       .debug_str     00000000 
0001a790 l       .debug_str     00000000 
0001a79e l       .debug_str     00000000 
0000025a l       .debug_str     00000000 
00002b40 l       .debug_str     00000000 
00001312 l       .debug_str     00000000 
00000233 l       .debug_str     00000000 
000001ed l       .debug_str     00000000 
000001fe l       .debug_str     00000000 
0000020f l       .debug_str     00000000 
00000221 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000001c9 l       .debug_str     00000000 
00000fc6 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
0001a751 l       .debug_str     00000000 
00000237 l       .debug_str     00000000 
00000240 l       .debug_str     00000000 
0001a764 l       .debug_str     00000000 
00000175 l       .debug_str     00000000 
0001a76b l       .debug_str     00000000 
0001a773 l       .debug_str     00000000 
00003401 l       .debug_str     00000000 
0001a77f l       .debug_str     00000000 
000064bf l       .debug_str     00000000 
00000288 l       .debug_str     00000000 
0001bb62 l       .debug_str     00000000 
0001bb6e l       .debug_str     00000000 
00000299 l       .debug_str     00000000 
0000028d l       .debug_str     00000000 
000064d3 l       .debug_str     00000000 
00001064 l       .debug_str     00000000 
00000259 l       .debug_str     00000000 
0001a7ba l       .debug_str     00000000 
0001b267 l       .debug_str     00000000 
00000271 l       .debug_str     00000000 
00000266 l       .debug_str     00000000 
0000024f l       .debug_str     00000000 
0001a893 l       .debug_str     00000000 
0000025f l       .debug_str     00000000 
0001a7b2 l       .debug_str     00000000 
0001a7a8 l       .debug_str     00000000 
00005418 l       .debug_frame   00000000 
d000c2f4 l       .text  00000000 
d000c328 l       .text  00000000 
00000000 l    df *ABS*  00000000 print.c
d000c328 l     F .text  00000004 base_dev_null
e0002054 l     O .bss   00000008 base_stdout
d000c328 l       .text  00000000 
d000c328 l       .text  00000000 
d000c328 l       .text  00000000 
d000c32a l       .text  00000000 
d000c32a l       .text  00000000 
d000c32c l       .text  00000000 
d000c32c l       .text  00000000 
d000c32c l       .text  00000000 
d000c32c l       .text  00000000 
d000c32c l       .text  00000000 
d000c32e l       .text  00000000 
d000c330 l       .text  00000000 
d000c33e l       .text  00000000 
d000c346 l       .text  00000000 
d000c346 l       .text  00000000 
d000c34c l       .text  00000000 
d000c34c l       .text  00000000 
d000c34e l       .text  00000000 
d000c34e l       .text  00000000 
d000c350 l       .text  00000000 
d000c350 l       .text  00000000 
d000c354 l       .text  00000000 
d000c356 l       .text  00000000 
d000c358 l       .text  00000000 
d000c358 l       .text  00000000 
d000c35e l       .text  00000000 
d000c35e l       .text  00000000 
d000c35e l       .text  00000000 
d000c35e l       .text  00000000 
d000c35e l       .text  00000000 
d000c366 l       .text  00000000 
d000c36c l       .text  00000000 
d000c36c l       .text  00000000 
d000c36e l       .text  00000000 
d000c36e l       .text  00000000 
d000c374 l       .text  00000000 
d000c376 l       .text  00000000 
d000c378 l       .text  00000000 
d000c378 l       .text  00000000 
d000c378 l       .text  00000000 
d000c378 l       .text  00000000 
d000c378 l       .text  00000000 
d000c378 l       .text  00000000 
d000c37a l       .text  00000000 
d000c394 l       .text  00000000 
d000c396 l       .text  00000000 
d000c398 l       .text  00000000 
d000c39a l       .text  00000000 
d000c39c l       .text  00000000 
d000c39e l       .text  00000000 
d000c3a0 l       .text  00000000 
d000c3a8 l       .text  00000000 
d000c3a8 l       .text  00000000 
d000c3aa l       .text  00000000 
d000c3aa l       .text  00000000 
d000c3ae l       .text  00000000 
d000c3b2 l       .text  00000000 
d000c3c6 l       .text  00000000 
d000c3c6 l       .text  00000000 
d000c3d0 l       .text  00000000 
d000c3d4 l       .text  00000000 
d000c3d8 l       .text  00000000 
d000c3da l       .text  00000000 
d000c3dc l       .text  00000000 
d000c3dc l       .text  00000000 
d000c3de l       .text  00000000 
d000c3e0 l       .text  00000000 
d000c3e6 l       .text  00000000 
d000c3e6 l       .text  00000000 
d000c3e8 l       .text  00000000 
d000c3e8 l       .text  00000000 
d000c3ec l       .text  00000000 
d000c3ec l       .text  00000000 
d000c3f8 l       .text  00000000 
d000c3fc l       .text  00000000 
d000c3fc l       .text  00000000 
d000c408 l       .text  00000000 
d000c408 l       .text  00000000 
d000c410 l       .text  00000000 
d000c410 l       .text  00000000 
d000c414 l       .text  00000000 
d000c414 l       .text  00000000 
d000c422 l       .text  00000000 
d000c422 l       .text  00000000 
d000c426 l       .text  00000000 
d000c42e l       .text  00000000 
d000c432 l       .text  00000000 
d000c432 l       .text  00000000 
d000c436 l       .text  00000000 
d000c43c l       .text  00000000 
d000c440 l       .text  00000000 
d000c442 l       .text  00000000 
d000c446 l       .text  00000000 
d000c446 l       .text  00000000 
d000c44a l       .text  00000000 
d000c450 l       .text  00000000 
d000c450 l       .text  00000000 
d000c454 l       .text  00000000 
d000c468 l       .text  00000000 
d000c468 l       .text  00000000 
d000c46a l       .text  00000000 
d000c470 l       .text  00000000 
d000c474 l       .text  00000000 
d000c478 l       .text  00000000 
d000c478 l       .text  00000000 
d000c480 l       .text  00000000 
d000c482 l       .text  00000000 
d000c490 l       .text  00000000 
d000c490 l       .text  00000000 
d000c494 l       .text  00000000 
d000c4a0 l       .text  00000000 
d000c4a0 l       .text  00000000 
d000c4a4 l       .text  00000000 
d000c4a4 l       .text  00000000 
d000c4b2 l       .text  00000000 
d000c4b2 l       .text  00000000 
d000c4b4 l       .text  00000000 
d000c4b8 l       .text  00000000 
d000c4b8 l       .text  00000000 
d000c4bc l       .text  00000000 
d000e968 l     O .rodata        00000010 kDigitsLow
d000c4ce l       .text  00000000 
d000c4ce l       .text  00000000 
d000c4d6 l       .text  00000000 
d000c4de l       .text  00000000 
d000c4de l       .text  00000000 
d000c4e8 l       .text  00000000 
d000c4e8 l       .text  00000000 
d000c4ec l       .text  00000000 
d000c4ec l       .text  00000000 
d000c4f6 l       .text  00000000 
d000c4f6 l       .text  00000000 
d000c4fe l       .text  00000000 
d000c4fe l       .text  00000000 
d000c502 l       .text  00000000 
d000e995 l     O .rodata        00000010 kDigitsHigh
d000c50c l       .text  00000000 
d000c50c l       .text  00000000 
d000c516 l       .text  00000000 
d000c516 l       .text  00000000 
d000c51a l       .text  00000000 
d000c524 l       .text  00000000 
d000c524 l       .text  00000000 
d000c528 l       .text  00000000 
d000c532 l       .text  00000000 
d000c532 l       .text  00000000 
d000c53a l       .text  00000000 
d000c53a l       .text  00000000 
d000c53e l       .text  00000000 
d000c548 l       .text  00000000 
d000c548 l       .text  00000000 
d000c552 l       .text  00000000 
d000c556 l       .text  00000000 
d000c55a l       .text  00000000 
d000c55a l       .text  00000000 
d000c566 l       .text  00000000 
d000c566 l       .text  00000000 
d000c56a l       .text  00000000 
d000c574 l       .text  00000000 
d000c578 l       .text  00000000 
d000c578 l       .text  00000000 
d000c57a l       .text  00000000 
d000c57a l       .text  00000000 
d000c57e l       .text  00000000 
d000c57e l       .text  00000000 
d000c582 l       .text  00000000 
d000c58c l       .text  00000000 
d000c58c l       .text  00000000 
d000c590 l       .text  00000000 
d000c59c l       .text  00000000 
d000c59c l       .text  00000000 
d000c5a0 l       .text  00000000 
d000c5a0 l       .text  00000000 
d000c5ae l       .text  00000000 
d000c5ae l       .text  00000000 
d000c5b8 l       .text  00000000 
d000c5b8 l       .text  00000000 
d000c5bc l       .text  00000000 
d000c5bc l       .text  00000000 
d000c8ec l     F .text  0000007e write_digits
d000c5d2 l       .text  00000000 
d000c5d2 l       .text  00000000 
d000c5d8 l       .text  00000000 
d000c5d8 l       .text  00000000 
d000c5e2 l       .text  00000000 
d000c5e2 l       .text  00000000 
d000c5e4 l       .text  00000000 
d000c5ee l       .text  00000000 
d000c5ee l       .text  00000000 
d000c5f8 l       .text  00000000 
d000c5f8 l       .text  00000000 
d000c5fa l       .text  00000000 
d000c5fa l       .text  00000000 
d000c5fc l       .text  00000000 
d000c5fc l       .text  00000000 
d000c600 l       .text  00000000 
d000c600 l       .text  00000000 
d000c604 l       .text  00000000 
d000c606 l       .text  00000000 
d000c60a l       .text  00000000 
d000c60a l       .text  00000000 
d000c60e l       .text  00000000 
d000c60e l       .text  00000000 
d000c61a l       .text  00000000 
d000c61a l       .text  00000000 
d000c61c l       .text  00000000 
d000c61c l       .text  00000000 
d000c61e l       .text  00000000 
d000c61e l       .text  00000000 
d000c626 l       .text  00000000 
d000c626 l       .text  00000000 
d000c62a l       .text  00000000 
d000c62a l       .text  00000000 
d000c638 l       .text  00000000 
d000c638 l       .text  00000000 
d000c63a l       .text  00000000 
d000c648 l       .text  00000000 
d000c648 l       .text  00000000 
d000c64c l       .text  00000000 
d000c64c l       .text  00000000 
d000c650 l       .text  00000000 
d000c650 l       .text  00000000 
d000c65e l       .text  00000000 
d000c65e l       .text  00000000 
d000c662 l       .text  00000000 
d000c662 l       .text  00000000 
d000c66a l       .text  00000000 
d000c66a l       .text  00000000 
d000c66c l       .text  00000000 
d000c66c l       .text  00000000 
d000c66e l       .text  00000000 
d000c66e l       .text  00000000 
d000c682 l       .text  00000000 
d000c682 l       .text  00000000 
d000c684 l       .text  00000000 
d000c692 l       .text  00000000 
d000c692 l       .text  00000000 
d000c694 l       .text  00000000 
d000c694 l       .text  00000000 
d000c696 l       .text  00000000 
d000c69e l       .text  00000000 
d000c6a2 l       .text  00000000 
d000c6a4 l       .text  00000000 
d000c6ae l       .text  00000000 
d000c6ae l       .text  00000000 
d000c6b2 l       .text  00000000 
d000c6bc l       .text  00000000 
d000c6bc l       .text  00000000 
d000c6c0 l       .text  00000000 
d000c6cc l       .text  00000000 
d000c6cc l       .text  00000000 
d000c6d0 l       .text  00000000 
d000c6d0 l       .text  00000000 
d000c6da l       .text  00000000 
d000c6da l       .text  00000000 
d000c6e2 l       .text  00000000 
d000c6e2 l       .text  00000000 
d000c6e6 l       .text  00000000 
d000c6ee l       .text  00000000 
d000c6ee l       .text  00000000 
d000c6f8 l       .text  00000000 
d000c6f8 l       .text  00000000 
d000c702 l       .text  00000000 
d000c702 l       .text  00000000 
d000c706 l       .text  00000000 
d000c70e l       .text  00000000 
d000c70e l       .text  00000000 
d000c718 l       .text  00000000 
d000c71a l       .text  00000000 
d000c71a l       .text  00000000 
d000c71e l       .text  00000000 
d000c728 l       .text  00000000 
d000c728 l       .text  00000000 
d000c730 l       .text  00000000 
d000c730 l       .text  00000000 
d000c734 l       .text  00000000 
d000c73c l       .text  00000000 
d000c73c l       .text  00000000 
d000c806 l     F .text  000000e6 hex_dump
d000c746 l       .text  00000000 
d000c748 l       .text  00000000 
d000e9a5 l     O .rodata        0000000f kUnknownSpec
d000c748 l       .text  00000000 
d000c752 l       .text  00000000 
d000c752 l       .text  00000000 
d000c756 l       .text  00000000 
d000c758 l       .text  00000000 
d000c758 l       .text  00000000 
d000c75c l       .text  00000000 
d000c762 l       .text  00000000 
d000c762 l       .text  00000000 
d000c766 l       .text  00000000 
d000c772 l       .text  00000000 
d000c772 l       .text  00000000 
d000c774 l       .text  00000000 
d000c774 l       .text  00000000 
d000c788 l       .text  00000000 
d000c788 l       .text  00000000 
d000c78c l       .text  00000000 
d000c79a l       .text  00000000 
d000c79a l       .text  00000000 
d000c79e l       .text  00000000 
d000c79e l       .text  00000000 
d000c7a4 l       .text  00000000 
d000c7a4 l       .text  00000000 
d000c7a6 l       .text  00000000 
d000c7a6 l       .text  00000000 
d000c7a8 l       .text  00000000 
d000c7a8 l       .text  00000000 
d000c7b0 l       .text  00000000 
d000c7b2 l       .text  00000000 
d000c7b4 l       .text  00000000 
d000c7ba l       .text  00000000 
d000c7ba l       .text  00000000 
d000c7c6 l       .text  00000000 
d000e978 l     O .rodata        00000011 kErrorNul
d000c7c6 l       .text  00000000 
d000c7d0 l       .text  00000000 
d000c7d0 l       .text  00000000 
d000c7d4 l       .text  00000000 
d000c7d8 l       .text  00000000 
d000c7da l       .text  00000000 
d000c7da l       .text  00000000 
d000c7ea l       .text  00000000 
d000c7ee l       .text  00000000 
d000c7fa l       .text  00000000 
d000e989 l     O .rodata        0000000c kErrorTooWide
d000c7fa l       .text  00000000 
d000c806 l       .text  00000000 
d000c806 l       .text  00000000 
d000c806 l       .text  00000000 
d000c806 l       .text  00000000 
d000c806 l       .text  00000000 
d000c806 l       .text  00000000 
d000c808 l       .text  00000000 
d000c820 l       .text  00000000 
d000c822 l       .text  00000000 
d000c824 l       .text  00000000 
d000c826 l       .text  00000000 
d000c828 l       .text  00000000 
d000c82c l       .text  00000000 
d000c82c l       .text  00000000 
d000c830 l       .text  00000000 
d000c834 l       .text  00000000 
d000c834 l       .text  00000000 
d000c840 l       .text  00000000 
d000c840 l       .text  00000000 
d000c842 l       .text  00000000 
d000c844 l       .text  00000000 
d000c84a l       .text  00000000 
d000c84a l       .text  00000000 
d000c84e l       .text  00000000 
d000c852 l       .text  00000000 
d000c852 l       .text  00000000 
d000c85a l       .text  00000000 
d000c85a l       .text  00000000 
d000c85c l       .text  00000000 
d000c85e l       .text  00000000 
d000c85e l       .text  00000000 
d000c860 l       .text  00000000 
d000c860 l       .text  00000000 
d000c866 l       .text  00000000 
d000c866 l       .text  00000000 
d000c868 l       .text  00000000 
d000c868 l       .text  00000000 
d000c86c l       .text  00000000 
d000c870 l       .text  00000000 
d000c876 l       .text  00000000 
d000c876 l       .text  00000000 
d000c87c l       .text  00000000 
d000c884 l       .text  00000000 
d000c884 l       .text  00000000 
d000c886 l       .text  00000000 
d000c88a l       .text  00000000 
d000c88e l       .text  00000000 
d000c894 l       .text  00000000 
d000c898 l       .text  00000000 
d000c89c l       .text  00000000 
d000c89e l       .text  00000000 
d000c8a4 l       .text  00000000 
d000c8a6 l       .text  00000000 
d000c8ae l       .text  00000000 
d000c8b4 l       .text  00000000 
d000c8b8 l       .text  00000000 
d000c8b8 l       .text  00000000 
d000c8ba l       .text  00000000 
d000c8bc l       .text  00000000 
d000c8bc l       .text  00000000 
d000c8be l       .text  00000000 
d000c8c0 l       .text  00000000 
d000c8c4 l       .text  00000000 
d000c8c4 l       .text  00000000 
d000c8c6 l       .text  00000000 
d000c8cc l       .text  00000000 
d000c8cc l       .text  00000000 
d000c8ce l       .text  00000000 
d000c8d6 l       .text  00000000 
d000c8d8 l       .text  00000000 
d000c8dc l       .text  00000000 
d000c8de l       .text  00000000 
d000c8e0 l       .text  00000000 
d000c8e2 l       .text  00000000 
d000c8ec l       .text  00000000 
d000c8ec l       .text  00000000 
d000c8ec l       .text  00000000 
d000c8ec l       .text  00000000 
d000c8ec l       .text  00000000 
d000c8ee l       .text  00000000 
d000c8f0 l       .text  00000000 
d000c8f2 l       .text  00000000 
d000c8f2 l       .text  00000000 
d000c8f4 l       .text  00000000 
d000c8f6 l       .text  00000000 
d000c8fa l       .text  00000000 
d000c8fa l       .text  00000000 
d000c8fc l       .text  00000000 
d000c8fc l       .text  00000000 
d000c908 l       .text  00000000 
d000c908 l       .text  00000000 
d000c90a l       .text  00000000 
d000c90e l       .text  00000000 
d000c916 l       .text  00000000 
d000c916 l       .text  00000000 
d000c918 l       .text  00000000 
d000c91c l       .text  00000000 
d000c920 l       .text  00000000 
d000c920 l       .text  00000000 
d000c922 l       .text  00000000 
d000c922 l       .text  00000000 
d000c926 l       .text  00000000 
d000c92c l       .text  00000000 
d000c92c l       .text  00000000 
d000c92e l       .text  00000000 
d000c930 l       .text  00000000 
d000c932 l       .text  00000000 
d000c936 l       .text  00000000 
d000c93a l       .text  00000000 
d000c93e l       .text  00000000 
d000c93e l       .text  00000000 
d000c948 l       .text  00000000 
d000c94c l       .text  00000000 
d000c94e l       .text  00000000 
d000c952 l       .text  00000000 
d000c956 l       .text  00000000 
d000c958 l       .text  00000000 
d000c95a l       .text  00000000 
d000c95c l       .text  00000000 
d000c95c l       .text  00000000 
d000c962 l       .text  00000000 
d000c964 l       .text  00000000 
d000c964 l       .text  00000000 
d000c96a l       .text  00000000 
d000c96a l       .text  00000000 
00020b86 l       .debug_loc     00000000 
00020bb2 l       .debug_loc     00000000 
00020bcd l       .debug_loc     00000000 
00020bf3 l       .debug_loc     00000000 
00020c1f l       .debug_loc     00000000 
00020c50 l       .debug_loc     00000000 
00020c81 l       .debug_loc     00000000 
00020cbd l       .debug_loc     00000000 
00020cee l       .debug_loc     00000000 
00020d15 l       .debug_loc     00000000 
00020d46 l       .debug_loc     00000000 
00020d61 l       .debug_loc     00000000 
00020d7d l       .debug_loc     00000000 
00020d98 l       .debug_loc     00000000 
00020dbe l       .debug_loc     00000000 
00020de4 l       .debug_loc     00000000 
00020e20 l       .debug_loc     00000000 
00020f2b l       .debug_loc     00000000 
00021085 l       .debug_loc     00000000 
00021185 l       .debug_loc     00000000 
00021290 l       .debug_loc     00000000 
000212b0 l       .debug_loc     00000000 
000212d6 l       .debug_loc     00000000 
00021306 l       .debug_loc     00000000 
0002153e l       .debug_loc     00000000 
0002155a l       .debug_loc     00000000 
00021575 l       .debug_loc     00000000 
000216ea l       .debug_loc     00000000 
0002183a l       .debug_loc     00000000 
0002194e l       .debug_loc     00000000 
00021974 l       .debug_loc     00000000 
0002198f l       .debug_loc     00000000 
000219aa l       .debug_loc     00000000 
000219c5 l       .debug_loc     00000000 
000219e0 l       .debug_loc     00000000 
000219fb l       .debug_loc     00000000 
00021a17 l       .debug_loc     00000000 
00021a32 l       .debug_loc     00000000 
00021a4d l       .debug_loc     00000000 
00021a68 l       .debug_loc     00000000 
00021a83 l       .debug_loc     00000000 
00021ab5 l       .debug_loc     00000000 
00021ae8 l       .debug_loc     00000000 
00021b03 l       .debug_loc     00000000 
00021b56 l       .debug_loc     00000000 
00021b89 l       .debug_loc     00000000 
00021ba4 l       .debug_loc     00000000 
00021bbf l       .debug_loc     00000000 
00021bda l       .debug_loc     00000000 
00021bf5 l       .debug_loc     00000000 
00021c10 l       .debug_loc     00000000 
00021c2b l       .debug_loc     00000000 
00021c46 l       .debug_loc     00000000 
00021c61 l       .debug_loc     00000000 
00021c7c l       .debug_loc     00000000 
00021c97 l       .debug_loc     00000000 
00021cb2 l       .debug_loc     00000000 
00021cce l       .debug_loc     00000000 
00021ced l       .debug_loc     00000000 
00021d08 l       .debug_loc     00000000 
00021d39 l       .debug_loc     00000000 
00021d5f l       .debug_loc     00000000 
00021d90 l       .debug_loc     00000000 
00021dc1 l       .debug_loc     00000000 
00021ddc l       .debug_loc     00000000 
00021df7 l       .debug_loc     00000000 
00021e12 l       .debug_loc     00000000 
00021e43 l       .debug_loc     00000000 
00021e5e l       .debug_loc     00000000 
00021e79 l       .debug_loc     00000000 
00021e95 l       .debug_loc     00000000 
00021ebb l       .debug_loc     00000000 
00021eec l       .debug_loc     00000000 
00021f07 l       .debug_loc     00000000 
00021f22 l       .debug_loc     00000000 
00021f48 l       .debug_loc     00000000 
00021f6e l       .debug_loc     00000000 
00021f89 l       .debug_loc     00000000 
00021fa4 l       .debug_loc     00000000 
00021fbf l       .debug_loc     00000000 
00021fda l       .debug_loc     00000000 
00021ff9 l       .debug_loc     00000000 
00022014 l       .debug_loc     00000000 
0002202f l       .debug_loc     00000000 
0002204b l       .debug_loc     00000000 
00022066 l       .debug_loc     00000000 
00022081 l       .debug_loc     00000000 
000220a0 l       .debug_loc     00000000 
000220c6 l       .debug_loc     00000000 
000220f7 l       .debug_loc     00000000 
0002214f l       .debug_loc     00000000 
00022199 l       .debug_loc     00000000 
000221eb l       .debug_loc     00000000 
00022228 l       .debug_loc     00000000 
00022264 l       .debug_loc     00000000 
000222ce l       .debug_loc     00000000 
00022317 l       .debug_loc     00000000 
00022381 l       .debug_loc     00000000 
000223a7 l       .debug_loc     00000000 
000223c2 l       .debug_loc     00000000 
000223dd l       .debug_loc     00000000 
00022404 l       .debug_loc     00000000 
0002244c l       .debug_loc     00000000 
00022472 l       .debug_loc     00000000 
00022498 l       .debug_loc     00000000 
000224be l       .debug_loc     00000000 
000224d9 l       .debug_loc     00000000 
00022509 l       .debug_loc     00000000 
0002252f l       .debug_loc     00000000 
00022561 l       .debug_loc     00000000 
0002259f l       .debug_loc     00000000 
000225ce l       .debug_loc     00000000 
000225e9 l       .debug_loc     00000000 
0002261c l       .debug_loc     00000000 
00022637 l       .debug_loc     00000000 
00022673 l       .debug_loc     00000000 
00022699 l       .debug_loc     00000000 
000226b4 l       .debug_loc     00000000 
000226cf l       .debug_loc     00000000 
000226ea l       .debug_loc     00000000 
00022740 l       .debug_loc     00000000 
0002276f l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
0001a7c5 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
000030b0 l       .debug_ranges  00000000 
0001a7e3 l       .debug_str     00000000 
000001c9 l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
0001a802 l       .debug_str     00000000 
0001a81a l       .debug_str     00000000 
0001a80e l       .debug_str     00000000 
00001937 l       .debug_str     00000000 
0001ab0c l       .debug_str     00000000 
00003401 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
0001a828 l       .debug_str     00000000 
0001a832 l       .debug_str     00000000 
0001ab64 l       .debug_str     00000000 
0001a840 l       .debug_str     00000000 
00005435 l       .debug_str     00000000 
0001bb6e l       .debug_str     00000000 
000004c9 l       .debug_str     00000000 
000001b8 l       .debug_str     00000000 
00000288 l       .debug_str     00000000 
0001abe6 l       .debug_str     00000000 
000014fd l       .debug_str     00000000 
0001aa41 l       .debug_str     00000000 
0001abf6 l       .debug_str     00000000 
00000175 l       .debug_str     00000000 
0001a84a l       .debug_str     00000000 
0001a856 l       .debug_str     00000000 
0001a863 l       .debug_str     00000000 
0001a8b2 l       .debug_str     00000000 
0001a8a1 l       .debug_str     00000000 
0001a87a l       .debug_str     00000000 
0001a889 l       .debug_str     00000000 
0001a898 l       .debug_str     00000000 
0001a8c5 l       .debug_str     00000000 
00000326 l       .debug_str     00000000 
000002c3 l       .debug_str     00000000 
000002ca l       .debug_str     00000000 
000002d4 l       .debug_str     00000000 
000002df l       .debug_str     00000000 
000002ea l       .debug_str     00000000 
000002fa l       .debug_str     00000000 
00000309 l       .debug_str     00000000 
00000318 l       .debug_str     00000000 
0001a8d0 l       .debug_str     00000000 
0001a8d9 l       .debug_str     00000000 
0001a8e4 l       .debug_str     00000000 
0001a8ec l       .debug_str     00000000 
0001a8f8 l       .debug_str     00000000 
0001a904 l       .debug_str     00000000 
0001a911 l       .debug_str     00000000 
0001a921 l       .debug_str     00000000 
0001a932 l       .debug_str     00000000 
0001a93f l       .debug_str     00000000 
0001a948 l       .debug_str     00000000 
0001a952 l       .debug_str     00000000 
0001a95c l       .debug_str     00000000 
0001a967 l       .debug_str     00000000 
0001a971 l       .debug_str     00000000 
0001a97c l       .debug_str     00000000 
000033ff l       .debug_str     00000000 
000001ce l       .debug_str     00000000 
000001c0 l       .debug_str     00000000 
0001a993 l       .debug_str     00000000 
0001a98a l       .debug_str     00000000 
0000027e l       .debug_str     00000000 
00000299 l       .debug_str     00000000 
0000028d l       .debug_str     00000000 
0001a9a9 l       .debug_str     00000000 
0000122b l       .debug_str     00000000 
0001a99e l       .debug_str     00000000 
000000b5 l       .debug_str     00000000 
0001aaba l       .debug_str     00000000 
0001a9bd l       .debug_str     00000000 
0001aac8 l       .debug_str     00000000 
0001a98e l       .debug_str     00000000 
0001aad9 l       .debug_str     00000000 
0001b267 l       .debug_str     00000000 
0001a9cd l       .debug_str     00000000 
0001a77f l       .debug_str     00000000 
0000025f l       .debug_str     00000000 
0000025a l       .debug_str     00000000 
0001a7b2 l       .debug_str     00000000 
0001a7a8 l       .debug_str     00000000 
0001a773 l       .debug_str     00000000 
00002f78 l       .debug_ranges  00000000 
0001aae7 l       .debug_str     00000000 
0001ab71 l       .debug_str     00000000 
0001abac l       .debug_str     00000000 
00003058 l       .debug_ranges  00000000 
0001aa5b l       .debug_str     00000000 
00002f90 l       .debug_ranges  00000000 
00002fb8 l       .debug_ranges  00000000 
00002fd8 l       .debug_ranges  00000000 
00002ff0 l       .debug_ranges  00000000 
00003028 l       .debug_ranges  00000000 
00003010 l       .debug_ranges  00000000 
00003040 l       .debug_ranges  00000000 
0001a9e7 l       .debug_str     00000000 
0001a9fd l       .debug_str     00000000 
000033e7 l       .debug_str     00000000 
00001040 l       .debug_str     00000000 
0001aa06 l       .debug_str     00000000 
0001aa3c l       .debug_str     00000000 
0001aa29 l       .debug_str     00000000 
0001aa0e l       .debug_str     00000000 
0001bd0c l       .debug_str     00000000 
0001aa1f l       .debug_str     00000000 
0001aa45 l       .debug_str     00000000 
0001aa57 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
00000fc6 l       .debug_str     00000000 
00003704 l       .debug_str     00000000 
00003710 l       .debug_str     00000000 
0001aa60 l       .debug_str     00000000 
0001aa6d l       .debug_str     00000000 
0001aa75 l       .debug_str     00000000 
0001b320 l       .debug_str     00000000 
0001aa79 l       .debug_str     00000000 
0001b330 l       .debug_str     00000000 
0001ad8a l       .debug_str     00000000 
0001aa7d l       .debug_str     00000000 
0001ab5b l       .debug_str     00000000 
0001bbd7 l       .debug_str     00000000 
0001abdb l       .debug_str     00000000 
0001abd2 l       .debug_str     00000000 
0001abed l       .debug_str     00000000 
00006676 l       .debug_str     00000000 
0001aaf5 l       .debug_str     00000000 
0001ab03 l       .debug_str     00000000 
0001ab7b l       .debug_str     00000000 
00001774 l       .debug_str     00000000 
0001ab11 l       .debug_str     00000000 
0001aa8c l       .debug_str     00000000 
0001a8ae l       .debug_str     00000000 
0001ab1e l       .debug_str     00000000 
0001ab48 l       .debug_str     00000000 
0001ab98 l       .debug_str     00000000 
0001a893 l       .debug_str     00000000 
00003098 l       .debug_ranges  00000000 
0001ab8b l       .debug_str     00000000 
0001aba7 l       .debug_str     00000000 
0001abba l       .debug_str     00000000 
00001ab1 l       .debug_str     00000000 
00003078 l       .debug_ranges  00000000 
0001ab84 l       .debug_str     00000000 
0001abc9 l       .debug_str     00000000 
00006841 l       .debug_str     00000000 
0001aa9e l       .debug_str     00000000 
0001aab2 l       .debug_str     00000000 
0001ab2b l       .debug_str     00000000 
0001ab3a l       .debug_str     00000000 
0000609b l       .debug_str     00000000 
0000545c l       .debug_frame   00000000 
d000c32c l       .text  00000000 
d000c35e l       .text  00000000 
d000c378 l       .text  00000000 
d000c806 l       .text  00000000 
d000c8ec l       .text  00000000 
d000c96a l       .text  00000000 
00000000 l    df *ABS*  00000000 status.c
d000c96a l       .text  00000000 
d000c96a l       .text  00000000 
d000c96a l       .text  00000000 
d000c96a l       .text  00000000 
d000c96e l       .text  00000000 
d000c976 l       .text  00000000 
d000c976 l       .text  00000000 
d000c97a l       .text  00000000 
d000c97a l       .text  00000000 
d000c986 l       .text  00000000 
d000c988 l       .text  00000000 
d000c988 l       .text  00000000 
d000c98c l       .text  00000000 
d000c998 l       .text  00000000 
d000c99a l       .text  00000000 
d000c99e l       .text  00000000 
d000c9a0 l       .text  00000000 
d000c9a0 l       .text  00000000 
d000c9a4 l       .text  00000000 
d000c9a4 l       .text  00000000 
d000c9a8 l       .text  00000000 
d000c9a8 l       .text  00000000 
d000c9aa l       .text  00000000 
d000c9aa l       .text  00000000 
d000c9ae l       .text  00000000 
d000c9ae l       .text  00000000 
d000c9b0 l       .text  00000000 
d000c9b4 l       .text  00000000 
d000c9b4 l       .text  00000000 
d000c9b8 l       .text  00000000 
d000c9bc l       .text  00000000 
d000c9c2 l       .text  00000000 
d000c9c2 l       .text  00000000 
d000c9c6 l       .text  00000000 
d000c9c8 l       .text  00000000 
d000c9c8 l       .text  00000000 
d000c9ce l       .text  00000000 
d000c9ce l       .text  00000000 
d000c9d4 l       .text  00000000 
d000c9d4 l       .text  00000000 
d000c9d6 l       .text  00000000 
d000c9d6 l       .text  00000000 
d000c9dc l       .text  00000000 
d000c9dc l       .text  00000000 
0002278a l       .debug_loc     00000000 
000227a5 l       .debug_loc     00000000 
000227d6 l       .debug_loc     00000000 
000227fc l       .debug_loc     00000000 
00022822 l       .debug_loc     00000000 
0002283d l       .debug_loc     00000000 
0002285f l       .debug_loc     00000000 
00022886 l       .debug_loc     00000000 
000228ad l       .debug_loc     00000000 
000228d1 l       .debug_loc     00000000 
00022902 l       .debug_loc     00000000 
0002291d l       .debug_loc     00000000 
0002294e l       .debug_loc     00000000 
000229a8 l       .debug_loc     00000000 
000229e4 l       .debug_loc     00000000 
00022a08 l       .debug_loc     00000000 
00022a2d l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
0001abfc l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00003160 l       .debug_ranges  00000000 
0001ac18 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
0001ac28 l       .debug_str     00000000 
000001c9 l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
0001ad56 l       .debug_str     00000000 
0001ac35 l       .debug_str     00000000 
0001ac39 l       .debug_str     00000000 
0001ac44 l       .debug_str     00000000 
0001ac4d l       .debug_str     00000000 
0001ac5e l       .debug_str     00000000 
0001ac70 l       .debug_str     00000000 
0001ac7a l       .debug_str     00000000 
0001ac89 l       .debug_str     00000000 
0001ac9b l       .debug_str     00000000 
0001acae l       .debug_str     00000000 
0001acc2 l       .debug_str     00000000 
0001accb l       .debug_str     00000000 
0001acd7 l       .debug_str     00000000 
0001ace6 l       .debug_str     00000000 
0001acf0 l       .debug_str     00000000 
0001acfd l       .debug_str     00000000 
0001ad07 l       .debug_str     00000000 
0001ad18 l       .debug_str     00000000 
000000b5 l       .debug_str     00000000 
00000175 l       .debug_str     00000000 
00003401 l       .debug_str     00000000 
000033ff l       .debug_str     00000000 
0001ad67 l       .debug_str     00000000 
0001ad75 l       .debug_str     00000000 
0001ad7e l       .debug_str     00000000 
0001ae81 l       .debug_str     00000000 
0000129c l       .debug_str     00000000 
000010d4 l       .debug_str     00000000 
00003912 l       .debug_str     00000000 
0001bb6e l       .debug_str     00000000 
000012c4 l       .debug_str     00000000 
000012b3 l       .debug_str     00000000 
0001a4da l       .debug_str     00000000 
000020fd l       .debug_str     00000000 
0001ad8e l       .debug_str     00000000 
00002af7 l       .debug_str     00000000 
0001ad9c l       .debug_str     00000000 
0001aa79 l       .debug_str     00000000 
00003148 l       .debug_ranges  00000000 
0001ad83 l       .debug_str     00000000 
00004e34 l       .debug_str     00000000 
00003704 l       .debug_str     00000000 
00003710 l       .debug_str     00000000 
00002b63 l       .debug_str     00000000 
0001aa7d l       .debug_str     00000000 
0001ada6 l       .debug_str     00000000 
0001ad8a l       .debug_str     00000000 
00001040 l       .debug_str     00000000 
00005650 l       .debug_frame   00000000 
d000c9dc l       .text  00000000 
00000000 l    df *ABS*  00000000 rom_epmp.c
d000c9dc l       .text  00000000 
d000c9dc l       .text  00000000 
d000c9dc l       .text  00000000 
d000c9de l       .text  00000000 
d000c9de l       .text  00000000 
d000c9e4 l       .text  00000000 
d000c9e4 l       .text  00000000 
d000c9e4 l       .text  00000000 
d000c9e6 l       .text  00000000 
d000c9e6 l       .text  00000000 
d000c9ee l       .text  00000000 
d000c9ee l       .text  00000000 
d000c9f2 l       .text  00000000 
d000c9f2 l       .text  00000000 
d000c9f6 l       .text  00000000 
d000c9fa l       .text  00000000 
d000ca02 l       .text  00000000 
d000ca06 l       .text  00000000 
d000ca14 l       .text  00000000 
d000ca1c l       .text  00000000 
d000ca20 l       .text  00000000 
d000ca2e l       .text  00000000 
d000ca36 l       .text  00000000 
d000ca44 l       .text  00000000 
d000ca4c l       .text  00000000 
d000ca50 l       .text  00000000 
d000ca5c l       .text  00000000 
d000ca5e l       .text  00000000 
d000ca64 l       .text  00000000 
d000ca6c l       .text  00000000 
d000ca70 l       .text  00000000 
d000ca7c l       .text  00000000 
d000ca7e l       .text  00000000 
d000ca82 l       .text  00000000 
d000ca8a l       .text  00000000 
d000ca96 l       .text  00000000 
d000ca96 l       .text  00000000 
d000ca9e l       .text  00000000 
d000caa0 l       .text  00000000 
d000caa2 l       .text  00000000 
d000caaa l       .text  00000000 
d000caac l       .text  00000000 
d000caae l       .text  00000000 
d000caae l       .text  00000000 
d000cab0 l       .text  00000000 
d000cab6 l       .text  00000000 
d000cab6 l       .text  00000000 
d000cac0 l       .text  00000000 
d000cac0 l       .text  00000000 
d000cac2 l       .text  00000000 
d000caca l       .text  00000000 
d000cacc l       .text  00000000 
d000cacc l       .text  00000000 
d000cad4 l       .text  00000000 
d000cad4 l       .text  00000000 
d000cada l       .text  00000000 
d000cada l       .text  00000000 
d000cae0 l       .text  00000000 
d000cae0 l       .text  00000000 
d000cae6 l       .text  00000000 
d000cae6 l       .text  00000000 
d000caec l       .text  00000000 
d000caec l       .text  00000000 
d000caf0 l       .text  00000000 
d000caf0 l       .text  00000000 
d000caf4 l       .text  00000000 
d000caf8 l       .text  00000000 
d000caf8 l       .text  00000000 
d000cafa l       .text  00000000 
d000cafa l       .text  00000000 
d000cafe l       .text  00000000 
d000cafe l       .text  00000000 
d000cb06 l       .text  00000000 
d000cb08 l       .text  00000000 
d000cb10 l       .text  00000000 
d000cb10 l       .text  00000000 
d000cb16 l       .text  00000000 
d000cb16 l       .text  00000000 
d000cb18 l       .text  00000000 
d000cb18 l       .text  00000000 
d000cb1a l       .text  00000000 
d000cb1a l       .text  00000000 
d000cb1e l       .text  00000000 
d000cb28 l       .text  00000000 
d000cb28 l       .text  00000000 
d000cb30 l       .text  00000000 
d000cb30 l       .text  00000000 
d000cb30 l       .text  00000000 
d000cb30 l       .text  00000000 
d000cb30 l       .text  00000000 
d000cb30 l       .text  00000000 
d000cb32 l       .text  00000000 
d000cb32 l       .text  00000000 
d000cb3a l       .text  00000000 
d000cb3c l       .text  00000000 
d000cb3c l       .text  00000000 
d000cb3e l       .text  00000000 
d000cb3e l       .text  00000000 
d000cb44 l       .text  00000000 
d000cb44 l       .text  00000000 
d000cb48 l       .text  00000000 
d000cb48 l       .text  00000000 
d000cb4c l       .text  00000000 
d000cb54 l       .text  00000000 
d000cb58 l       .text  00000000 
d000cb5c l       .text  00000000 
d000cb5e l       .text  00000000 
d000cb5e l       .text  00000000 
d000cb5e l       .text  00000000 
d000cb5e l       .text  00000000 
d000cb5e l       .text  00000000 
d000cb5e l       .text  00000000 
d000cb64 l       .text  00000000 
d000cb64 l       .text  00000000 
d000cb66 l       .text  00000000 
d000cb66 l       .text  00000000 
d000cb68 l       .text  00000000 
d000cb68 l       .text  00000000 
d000cb6a l       .text  00000000 
d000cb6a l       .text  00000000 
d000cb72 l       .text  00000000 
d000cb78 l       .text  00000000 
d000cb78 l       .text  00000000 
d000cb7c l       .text  00000000 
d000cb7c l       .text  00000000 
d000cb84 l       .text  00000000 
d000cb8c l       .text  00000000 
d000cb90 l       .text  00000000 
d000cb92 l       .text  00000000 
d000cb92 l       .text  00000000 
d000cb92 l       .text  00000000 
d000cb92 l       .text  00000000 
d000cb92 l       .text  00000000 
d000cb96 l       .text  00000000 
d000cba0 l       .text  00000000 
d000cba4 l       .text  00000000 
d000cba4 l       .text  00000000 
d000cba6 l       .text  00000000 
d000cba6 l       .text  00000000 
d000cbae l       .text  00000000 
d000cbae l       .text  00000000 
d000cbb2 l       .text  00000000 
d000cbb2 l       .text  00000000 
d000cbb6 l       .text  00000000 
d000cbba l       .text  00000000 
d000cbc2 l       .text  00000000 
d000cbc6 l       .text  00000000 
d000cbd4 l       .text  00000000 
d000cbdc l       .text  00000000 
d000cbe0 l       .text  00000000 
d000cbee l       .text  00000000 
d000cbf6 l       .text  00000000 
d000cc04 l       .text  00000000 
d000cc0c l       .text  00000000 
d000cc10 l       .text  00000000 
d000cc1c l       .text  00000000 
d000cc1e l       .text  00000000 
d000cc22 l       .text  00000000 
d000cc24 l       .text  00000000 
d000cc2c l       .text  00000000 
d000cc30 l       .text  00000000 
d000cc3c l       .text  00000000 
d000cc3e l       .text  00000000 
d000cc42 l       .text  00000000 
d000cc42 l       .text  00000000 
d000cc46 l       .text  00000000 
d000cc48 l       .text  00000000 
d000cc48 l       .text  00000000 
d000cc50 l       .text  00000000 
d000cc50 l       .text  00000000 
00022a4f l       .debug_loc     00000000 
00022a80 l       .debug_loc     00000000 
00022aa6 l       .debug_loc     00000000 
00022b02 l       .debug_loc     00000000 
00022b5e l       .debug_loc     00000000 
00022bac l       .debug_loc     00000000 
00022be4 l       .debug_loc     00000000 
00022c40 l       .debug_loc     00000000 
00022c6c l       .debug_loc     00000000 
00022c98 l       .debug_loc     00000000 
00022cbc l       .debug_loc     00000000 
00022cf2 l       .debug_loc     00000000 
00022d16 l       .debug_loc     00000000 
00022d3a l       .debug_loc     00000000 
00022d70 l       .debug_loc     00000000 
00022d94 l       .debug_loc     00000000 
00022dd4 l       .debug_loc     00000000 
00022df8 l       .debug_loc     00000000 
00022e16 l       .debug_loc     00000000 
00022e32 l       .debug_loc     00000000 
00022e56 l       .debug_loc     00000000 
00022e7a l       .debug_loc     00000000 
00022ea3 l       .debug_loc     00000000 
00022ec7 l       .debug_loc     00000000 
00022ee4 l       .debug_loc     00000000 
00022f1a l       .debug_loc     00000000 
00022f3e l       .debug_loc     00000000 
00022f62 l       .debug_loc     00000000 
00022f82 l       .debug_loc     00000000 
00022fae l       .debug_loc     00000000 
00022fd2 l       .debug_loc     00000000 
00022fff l       .debug_loc     00000000 
0002302c l       .debug_loc     00000000 
00023047 l       .debug_loc     00000000 
0002306b l       .debug_loc     00000000 
0002309c l       .debug_loc     00000000 
000230c2 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
0001adad l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
000031a8 l       .debug_ranges  00000000 
0000011c l       .debug_str     00000000 
000000da l       .debug_str     00000000 
000000e7 l       .debug_str     00000000 
000000f3 l       .debug_str     00000000 
00000100 l       .debug_str     00000000 
00000110 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
0001ae6c l       .debug_str     00000000 
0001add6 l       .debug_str     00000000 
0001ade8 l       .debug_str     00000000 
0001ae00 l       .debug_str     00000000 
0001ae18 l       .debug_str     00000000 
0001ae31 l       .debug_str     00000000 
0001ae4c l       .debug_str     00000000 
0001aeac l       .debug_str     00000000 
0001ae76 l       .debug_str     00000000 
0001ae83 l       .debug_str     00000000 
0001ae90 l       .debug_str     00000000 
0001ae9d l       .debug_str     00000000 
000012d7 l       .debug_str     00000000 
000037aa l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
0001aeb6 l       .debug_str     00000000 
000020ec l       .debug_str     00000000 
00000292 l       .debug_str     00000000 
0001ae71 l       .debug_str     00000000 
00003912 l       .debug_str     00000000 
000017b5 l       .debug_str     00000000 
000017a9 l       .debug_str     00000000 
0001b320 l       .debug_str     00000000 
0001b330 l       .debug_str     00000000 
00000fc6 l       .debug_str     00000000 
0001aecf l       .debug_str     00000000 
000012c4 l       .debug_str     00000000 
000012b3 l       .debug_str     00000000 
0001a4da l       .debug_str     00000000 
000020fd l       .debug_str     00000000 
0001aedb l       .debug_str     00000000 
0001aa41 l       .debug_str     00000000 
0000129c l       .debug_str     00000000 
000010d4 l       .debug_str     00000000 
0001bb6e l       .debug_str     00000000 
0001aef6 l       .debug_str     00000000 
00001391 l       .debug_str     00000000 
000000d1 l       .debug_str     00000000 
00001361 l       .debug_str     00000000 
0001af0f l       .debug_str     00000000 
0001af16 l       .debug_str     00000000 
0000135b l       .debug_str     00000000 
000023eb l       .debug_str     00000000 
0001af1b l       .debug_str     00000000 
0001af2c l       .debug_str     00000000 
0001af35 l       .debug_str     00000000 
00003178 l       .debug_ranges  00000000 
00003190 l       .debug_ranges  00000000 
0000609b l       .debug_str     00000000 
00000175 l       .debug_str     00000000 
000018c8 l       .debug_str     00000000 
0001af41 l       .debug_str     00000000 
000018ae l       .debug_str     00000000 
0000134b l       .debug_str     00000000 
0001a59e l       .debug_str     00000000 
0001a597 l       .debug_str     00000000 
0000012c l       .debug_str     00000000 
00005684 l       .debug_frame   00000000 
d000cb30 l       .text  00000000 
d000cb5e l       .text  00000000 
d000cb92 l       .text  00000000 
d000cc50 l       .text  00000000 
00000000 l    df *ABS*  00000000 sigverify.c
d000cc50 l       .text  00000000 
d000cc50 l       .text  00000000 
d000cc50 l       .text  00000000 
d000cc52 l       .text  00000000 
d000cc6e l       .text  00000000 
d000cc70 l       .text  00000000 
d000cc72 l       .text  00000000 
d000cc76 l       .text  00000000 
d000cc76 l       .text  00000000 
d000cc78 l       .text  00000000 
d000cc78 l       .text  00000000 
d000cc82 l       .text  00000000 
d000cc84 l       .text  00000000 
d000cc86 l       .text  00000000 
d000cc86 l       .text  00000000 
d000cc8a l       .text  00000000 
d000cc8a l       .text  00000000 
d000cc8e l       .text  00000000 
d000cc92 l       .text  00000000 
d000cc9a l       .text  00000000 
d000cc9e l       .text  00000000 
d000ccac l       .text  00000000 
d000ccb4 l       .text  00000000 
d000ccb8 l       .text  00000000 
d000ccc6 l       .text  00000000 
d000ccce l       .text  00000000 
d000ccdc l       .text  00000000 
d000cce4 l       .text  00000000 
d000cce8 l       .text  00000000 
d000ccf4 l       .text  00000000 
d000ccfc l       .text  00000000 
d000cd00 l       .text  00000000 
d000cd00 l       .text  00000000 
d000cd04 l       .text  00000000 
d000cd08 l       .text  00000000 
d000cd0c l       .text  00000000 
d000cd0c l       .text  00000000 
d000cd10 l       .text  00000000 
d000cd14 l       .text  00000000 
d000cd14 l       .text  00000000 
d000cd1a l       .text  00000000 
d000cd22 l       .text  00000000 
d000cd22 l       .text  00000000 
d000cd26 l       .text  00000000 
d000cd32 l       .text  00000000 
d000cd32 l       .text  00000000 
d000cd3a l       .text  00000000 
d000cd3a l       .text  00000000 
d000cd3e l       .text  00000000 
d000cd42 l       .text  00000000 
d000cd42 l       .text  00000000 
d000cd44 l       .text  00000000 
d000cd44 l       .text  00000000 
d000cd48 l       .text  00000000 
d000cd48 l       .text  00000000 
d000cd4c l       .text  00000000 
d000cd4c l       .text  00000000 
d000cd50 l       .text  00000000 
d000f03c l     O .rodata        00000180 kSigverifyShares
d000cd5a l       .text  00000000 
d000cd5a l       .text  00000000 
d000cd5c l       .text  00000000 
d000cd5e l       .text  00000000 
d000cd60 l       .text  00000000 
d000cd62 l       .text  00000000 
d000cd64 l       .text  00000000 
d000cd66 l       .text  00000000 
d000cd68 l       .text  00000000 
d000cd68 l       .text  00000000 
d000cd6a l       .text  00000000 
d000cd6a l       .text  00000000 
d000cd74 l       .text  00000000 
d000cd74 l       .text  00000000 
d000cd76 l       .text  00000000 
d000cd76 l       .text  00000000 
d000cd78 l       .text  00000000 
d000cd78 l       .text  00000000 
d000cd7c l       .text  00000000 
d000cd84 l       .text  00000000 
d000f1bc l     O .rodata        00000014 sigverify_encoded_message_check.kEncodedSha256
d000cd90 l       .text  00000000 
d000cd9a l       .text  00000000 
d000cd9a l       .text  00000000 
d000cd9c l       .text  00000000 
d000cd9e l       .text  00000000 
d000cda0 l       .text  00000000 
d000cda2 l       .text  00000000 
d000cda6 l       .text  00000000 
d000cda6 l       .text  00000000 
d000cda8 l       .text  00000000 
d000cda8 l       .text  00000000 
d000cdaa l       .text  00000000 
d000cdb4 l       .text  00000000 
d000cdb4 l       .text  00000000 
d000cdba l       .text  00000000 
d000cdba l       .text  00000000 
d000cdbe l       .text  00000000 
d000cdc6 l       .text  00000000 
d000cdc6 l       .text  00000000 
d000cdca l       .text  00000000 
d000cdd2 l       .text  00000000 
d000cde2 l       .text  00000000 
d000cde2 l       .text  00000000 
d000cde4 l       .text  00000000 
d000cdee l       .text  00000000 
d000cdee l       .text  00000000 
d000cdf0 l       .text  00000000 
d000cdf0 l       .text  00000000 
d000cdf2 l       .text  00000000 
d000cdfa l       .text  00000000 
d000cdfa l       .text  00000000 
d000ce0a l       .text  00000000 
d000ce0c l       .text  00000000 
d000ce0e l       .text  00000000 
d000ce0e l       .text  00000000 
d000ce10 l       .text  00000000 
d000ce10 l       .text  00000000 
d000ce20 l       .text  00000000 
d000ce2c l       .text  00000000 
d000ce30 l       .text  00000000 
d000ce30 l       .text  00000000 
d000ce30 l       .text  00000000 
d000ce30 l       .text  00000000 
d000ce32 l       .text  00000000 
d000ce32 l       .text  00000000 
d000ce36 l       .text  00000000 
d000ce36 l       .text  00000000 
d000ce3e l       .text  00000000 
d000ce3e l       .text  00000000 
d000ce40 l       .text  00000000 
d000ce42 l       .text  00000000 
d000ce44 l       .text  00000000 
d000ce46 l       .text  00000000 
d000ce4a l       .text  00000000 
d000ce4e l       .text  00000000 
d000ce50 l       .text  00000000 
d000ce54 l       .text  00000000 
d000ce56 l       .text  00000000 
d000ce58 l       .text  00000000 
d000ce5a l       .text  00000000 
d000ce5c l       .text  00000000 
d000ce60 l       .text  00000000 
d000ce60 l       .text  00000000 
d000ce62 l       .text  00000000 
d000ce62 l       .text  00000000 
d000ce6a l       .text  00000000 
d000ce6a l       .text  00000000 
d000ce6e l       .text  00000000 
d000ce7a l       .text  00000000 
d000ce7e l       .text  00000000 
d000ce82 l       .text  00000000 
d000ce86 l       .text  00000000 
d000ce88 l       .text  00000000 
d000ce8e l       .text  00000000 
d000ce8e l       .text  00000000 
d000ce90 l       .text  00000000 
d000ce90 l       .text  00000000 
d000ce94 l       .text  00000000 
d000ce94 l       .text  00000000 
d000ce98 l       .text  00000000 
d000ce98 l       .text  00000000 
d000cea6 l       .text  00000000 
d000cea6 l       .text  00000000 
d000ceae l       .text  00000000 
d000ceb2 l       .text  00000000 
d000ceba l       .text  00000000 
d000cebe l       .text  00000000 
d000cece l       .text  00000000 
d000cece l       .text  00000000 
d000ced6 l       .text  00000000 
d000ced6 l       .text  00000000 
d000cede l       .text  00000000 
d000cede l       .text  00000000 
d000cede l       .text  00000000 
d000cede l       .text  00000000 
d000cede l       .text  00000000 
d000cede l       .text  00000000 
d000cee0 l       .text  00000000 
d000cee8 l       .text  00000000 
d000ceea l       .text  00000000 
d000ceec l       .text  00000000 
d000ceec l       .text  00000000 
d000ceee l       .text  00000000 
d000cef2 l       .text  00000000 
d000cef8 l       .text  00000000 
d000cef8 l       .text  00000000 
d000cf00 l       .text  00000000 
d000cf00 l       .text  00000000 
d000cf04 l       .text  00000000 
d000cf0c l       .text  00000000 
d000cf0c l       .text  00000000 
d000cf10 l       .text  00000000 
d000cf14 l       .text  00000000 
d000cf14 l       .text  00000000 
d000cf16 l       .text  00000000 
d000cf24 l       .text  00000000 
d000cf24 l       .text  00000000 
d000cf2a l       .text  00000000 
d000cf2a l       .text  00000000 
d000cf2c l       .text  00000000 
d000cf2e l       .text  00000000 
d000cf30 l       .text  00000000 
d000cf32 l       .text  00000000 
d000cf36 l       .text  00000000 
d000cf36 l       .text  00000000 
d000cf3a l       .text  00000000 
d000cf3a l       .text  00000000 
d000cf3c l       .text  00000000 
d000cf44 l       .text  00000000 
d000cf48 l       .text  00000000 
d000cf48 l       .text  00000000 
d000cf4c l       .text  00000000 
d000cf4c l       .text  00000000 
d000cf4e l       .text  00000000 
d000cf56 l       .text  00000000 
d000cf5a l       .text  00000000 
d000cf5a l       .text  00000000 
d000cf5e l       .text  00000000 
d000cf5e l       .text  00000000 
d000cf60 l       .text  00000000 
d000cf68 l       .text  00000000 
d000cf6c l       .text  00000000 
d000cf6e l       .text  00000000 
d000cf70 l       .text  00000000 
d000cf78 l       .text  00000000 
d000cf78 l       .text  00000000 
000230ec l       .debug_loc     00000000 
00023149 l       .debug_loc     00000000 
000231a6 l       .debug_loc     00000000 
000231d7 l       .debug_loc     00000000 
00023208 l       .debug_loc     00000000 
00023265 l       .debug_loc     00000000 
0002328b l       .debug_loc     00000000 
000232bc l       .debug_loc     00000000 
000232e2 l       .debug_loc     00000000 
000232fd l       .debug_loc     00000000 
00023318 l       .debug_loc     00000000 
0002335f l       .debug_loc     00000000 
0002337a l       .debug_loc     00000000 
000233c1 l       .debug_loc     00000000 
00023408 l       .debug_loc     00000000 
000234a3 l       .debug_loc     00000000 
000234ca l       .debug_loc     00000000 
00023507 l       .debug_loc     00000000 
00023546 l       .debug_loc     00000000 
0002358b l       .debug_loc     00000000 
000235c4 l       .debug_loc     00000000 
00023603 l       .debug_loc     00000000 
00023640 l       .debug_loc     00000000 
00023667 l       .debug_loc     00000000 
0002368d l       .debug_loc     00000000 
000236a8 l       .debug_loc     00000000 
000236ce l       .debug_loc     00000000 
000236f4 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
0001afc7 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00003258 l       .debug_ranges  00000000 
0001affb l       .debug_str     00000000 
0001b00a l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
00003401 l       .debug_str     00000000 
0001b011 l       .debug_str     00000000 
00000bca l       .debug_str     00000000 
000007b6 l       .debug_str     00000000 
000007bf l       .debug_str     00000000 
000007cd l       .debug_str     00000000 
000007ee l       .debug_str     00000000 
00000804 l       .debug_str     00000000 
00000820 l       .debug_str     00000000 
00000835 l       .debug_str     00000000 
00000851 l       .debug_str     00000000 
0000086d l       .debug_str     00000000 
00000881 l       .debug_str     00000000 
00000895 l       .debug_str     00000000 
000008aa l       .debug_str     00000000 
000008c3 l       .debug_str     00000000 
000008d7 l       .debug_str     00000000 
000008eb l       .debug_str     00000000 
000008fb l       .debug_str     00000000 
0000090e l       .debug_str     00000000 
00000928 l       .debug_str     00000000 
0000093f l       .debug_str     00000000 
00000959 l       .debug_str     00000000 
00000975 l       .debug_str     00000000 
00000991 l       .debug_str     00000000 
000009a8 l       .debug_str     00000000 
000009be l       .debug_str     00000000 
000009d6 l       .debug_str     00000000 
000009ee l       .debug_str     00000000 
00000a07 l       .debug_str     00000000 
00000a20 l       .debug_str     00000000 
00000a39 l       .debug_str     00000000 
00000a52 l       .debug_str     00000000 
00000a71 l       .debug_str     00000000 
00000a8f l       .debug_str     00000000 
00000aa9 l       .debug_str     00000000 
00000ac2 l       .debug_str     00000000 
00000ade l       .debug_str     00000000 
00000afc l       .debug_str     00000000 
00000b18 l       .debug_str     00000000 
00000b34 l       .debug_str     00000000 
00000b50 l       .debug_str     00000000 
00000b67 l       .debug_str     00000000 
00000b80 l       .debug_str     00000000 
00000b96 l       .debug_str     00000000 
00000bb5 l       .debug_str     00000000 
0000011c l       .debug_str     00000000 
000000da l       .debug_str     00000000 
000000e7 l       .debug_str     00000000 
000000f3 l       .debug_str     00000000 
00000100 l       .debug_str     00000000 
00000110 l       .debug_str     00000000 
00000bf9 l       .debug_str     00000000 
00000bd4 l       .debug_str     00000000 
00000be6 l       .debug_str     00000000 
0001b022 l       .debug_str     00000000 
0001b03d l       .debug_str     00000000 
0001b05f l       .debug_str     00000000 
0001b080 l       .debug_str     00000000 
0001b0a6 l       .debug_str     00000000 
0001b0ca l       .debug_str     00000000 
00001ed0 l       .debug_str     00000000 
0001b0ed l       .debug_str     00000000 
0001b102 l       .debug_str     00000000 
0001b118 l       .debug_str     00000000 
000012d7 l       .debug_str     00000000 
000037aa l       .debug_str     00000000 
0001b12e l       .debug_str     00000000 
000000d1 l       .debug_str     00000000 
00001a24 l       .debug_str     00000000 
0000012c l       .debug_str     00000000 
0001b14a l       .debug_str     00000000 
0001b16a l       .debug_str     00000000 
00001a7e l       .debug_str     00000000 
00001a59 l       .debug_str     00000000 
0001b172 l       .debug_str     00000000 
0001b267 l       .debug_str     00000000 
0001b17e l       .debug_str     00000000 
0000032a l       .debug_str     00000000 
000019ed l       .debug_str     00000000 
00001257 l       .debug_str     00000000 
00001504 l       .debug_str     00000000 
000014ef l       .debug_str     00000000 
00001937 l       .debug_str     00000000 
00000154 l       .debug_str     00000000 
00000148 l       .debug_str     00000000 
0000014d l       .debug_str     00000000 
0000177b l       .debug_str     00000000 
000014e5 l       .debug_str     00000000 
0000171a l       .debug_str     00000000 
0001b1c9 l       .debug_str     00000000 
000031d0 l       .debug_ranges  00000000 
00001b2c l       .debug_str     00000000 
000031f0 l       .debug_ranges  00000000 
00003208 l       .debug_ranges  00000000 
00003220 l       .debug_ranges  00000000 
00003238 l       .debug_ranges  00000000 
0000132c l       .debug_str     00000000 
0001b183 l       .debug_str     00000000 
0000170c l       .debug_str     00000000 
0000420b l       .debug_str     00000000 
00001705 l       .debug_str     00000000 
0001b19a l       .debug_str     00000000 
000025c4 l       .debug_str     00000000 
000010d4 l       .debug_str     00000000 
00006501 l       .debug_str     00000000 
00001040 l       .debug_str     00000000 
0000182c l       .debug_str     00000000 
00001742 l       .debug_str     00000000 
0000151b l       .debug_str     00000000 
00001593 l       .debug_str     00000000 
0001b1b1 l       .debug_str     00000000 
00001529 l       .debug_str     00000000 
00001533 l       .debug_str     00000000 
00001337 l       .debug_str     00000000 
00001670 l       .debug_str     00000000 
0001b215 l       .debug_str     00000000 
00001a89 l       .debug_str     00000000 
000015a5 l       .debug_str     00000000 
0000158a l       .debug_str     00000000 
00001553 l       .debug_str     00000000 
00001567 l       .debug_str     00000000 
00001579 l       .debug_str     00000000 
0000153d l       .debug_str     00000000 
000056e4 l       .debug_frame   00000000 
d000cede l       .text  00000000 
d000cf78 l       .text  00000000 
00000000 l    df *ABS*  00000000 mod_exp_ibex.c
d000cf78 l       .text  00000000 
d000cf78 l       .text  00000000 
d000cf78 l       .text  00000000 
d000cf7a l       .text  00000000 
d000cf96 l       .text  00000000 
d000cf98 l       .text  00000000 
d000cf9a l       .text  00000000 
d000cf9c l       .text  00000000 
d000cfb0 l       .text  00000000 
d000cfb0 l       .text  00000000 
d000cfb6 l       .text  00000000 
d000cfbc l       .text  00000000 
d000cfbc l       .text  00000000 
d000cfc0 l       .text  00000000 
d000cfc2 l       .text  00000000 
d000cfc2 l       .text  00000000 
d000cfca l       .text  00000000 
d000cfca l       .text  00000000 
d000cfce l       .text  00000000 
d000cfda l       .text  00000000 
d000cfda l       .text  00000000 
d000cfea l       .text  00000000 
d000cfea l       .text  00000000 
d000cfee l       .text  00000000 
d000cfee l       .text  00000000 
d000cff4 l       .text  00000000 
d000cffa l       .text  00000000 
d000cffe l       .text  00000000 
d000cffe l       .text  00000000 
d000d002 l       .text  00000000 
d000d002 l       .text  00000000 
d000d006 l       .text  00000000 
d000d008 l       .text  00000000 
d000d008 l       .text  00000000 
d000d00c l       .text  00000000 
d000d00c l       .text  00000000 
d000d00e l       .text  00000000 
d000d00e l       .text  00000000 
d000d010 l       .text  00000000 
d000d010 l       .text  00000000 
d000d014 l       .text  00000000 
d000d014 l       .text  00000000 
d000d028 l       .text  00000000 
d000d028 l       .text  00000000 
d000d02c l       .text  00000000 
d000d02c l       .text  00000000 
d000d030 l       .text  00000000 
d000d030 l       .text  00000000 
d000d034 l       .text  00000000 
d000d038 l       .text  00000000 
d000d040 l       .text  00000000 
d000d042 l       .text  00000000 
d000d042 l       .text  00000000 
d000d046 l       .text  00000000 
d000d046 l       .text  00000000 
d000d048 l       .text  00000000 
d000d04c l       .text  00000000 
d000d04c l       .text  00000000 
d000d04e l       .text  00000000 
d000d052 l       .text  00000000 
d000d052 l       .text  00000000 
d000d056 l       .text  00000000 
d000d056 l       .text  00000000 
d000d05a l       .text  00000000 
d000d05a l       .text  00000000 
d000d062 l       .text  00000000 
d000d062 l       .text  00000000 
d000d068 l       .text  00000000 
d000d06e l       .text  00000000 
d000d06e l       .text  00000000 
d000d072 l       .text  00000000 
d000d074 l       .text  00000000 
d000d074 l       .text  00000000 
d000d07c l       .text  00000000 
d000d07c l       .text  00000000 
d000d080 l       .text  00000000 
d000d084 l       .text  00000000 
d000d084 l       .text  00000000 
d000d08a l       .text  00000000 
d000d090 l       .text  00000000 
d000d094 l       .text  00000000 
d000d094 l       .text  00000000 
d000d098 l       .text  00000000 
d000d09c l       .text  00000000 
d000d09c l       .text  00000000 
d000d09e l       .text  00000000 
d000d09e l       .text  00000000 
d000d0a2 l       .text  00000000 
d000d0a2 l       .text  00000000 
d000d0a4 l       .text  00000000 
d000d0a4 l       .text  00000000 
d000d0a6 l       .text  00000000 
d000d0a6 l       .text  00000000 
d000d0aa l       .text  00000000 
d000d0aa l       .text  00000000 
d000d0ae l       .text  00000000 
d000d0b4 l       .text  00000000 
d000d0b4 l       .text  00000000 
d000d0b6 l       .text  00000000 
d000d0ba l       .text  00000000 
d000d0ba l       .text  00000000 
d000d194 l     F .text  00000132 mont_mul
d000d0c4 l       .text  00000000 
d000d0c4 l       .text  00000000 
d000d0ce l       .text  00000000 
d000d0ce l       .text  00000000 
d000d0d8 l       .text  00000000 
d000d0d8 l       .text  00000000 
d000d0e2 l       .text  00000000 
d000d0e2 l       .text  00000000 
d000d0ec l       .text  00000000 
d000d0ec l       .text  00000000 
d000d0f6 l       .text  00000000 
d000d0f6 l       .text  00000000 
d000d0f8 l       .text  00000000 
d000d0f8 l       .text  00000000 
d000d102 l       .text  00000000 
d000d102 l       .text  00000000 
d000d10c l       .text  00000000 
d000d10c l       .text  00000000 
d000d10e l       .text  00000000 
d000d10e l       .text  00000000 
d000d110 l       .text  00000000 
d000d110 l       .text  00000000 
d000d11a l       .text  00000000 
d000d11a l       .text  00000000 
d000d12a l       .text  00000000 
d000d12a l       .text  00000000 
d000d12c l       .text  00000000 
d000d12e l       .text  00000000 
d000d12e l       .text  00000000 
d000d132 l       .text  00000000 
d000d134 l       .text  00000000 
d000d134 l       .text  00000000 
d000d13e l       .text  00000000 
d000d13e l       .text  00000000 
d000d142 l       .text  00000000 
d000d14a l       .text  00000000 
d000d14a l       .text  00000000 
d000d150 l       .text  00000000 
d000d156 l       .text  00000000 
d000d15a l       .text  00000000 
d000d15a l       .text  00000000 
d000d15e l       .text  00000000 
d000d15e l       .text  00000000 
d000d162 l       .text  00000000 
d000d164 l       .text  00000000 
d000d164 l       .text  00000000 
d000d168 l       .text  00000000 
d000d168 l       .text  00000000 
d000d16a l       .text  00000000 
d000d16a l       .text  00000000 
d000d16c l       .text  00000000 
d000d16c l       .text  00000000 
d000d170 l       .text  00000000 
d000d170 l       .text  00000000 
d000d174 l       .text  00000000 
d000d178 l       .text  00000000 
d000d17c l       .text  00000000 
d000d184 l       .text  00000000 
d000d194 l       .text  00000000 
d000d194 l       .text  00000000 
d000d194 l       .text  00000000 
d000d194 l       .text  00000000 
d000d194 l       .text  00000000 
d000d196 l       .text  00000000 
d000d1a8 l       .text  00000000 
d000d1aa l       .text  00000000 
d000d1ac l       .text  00000000 
d000d1ae l       .text  00000000 
d000d1b0 l       .text  00000000 
d000d1b2 l       .text  00000000 
d000d1c2 l       .text  00000000 
d000d1c2 l       .text  00000000 
d000d1c4 l       .text  00000000 
d000d1c4 l       .text  00000000 
d000d1d4 l       .text  00000000 
d000d1d4 l       .text  00000000 
d000d1e0 l       .text  00000000 
d000d1e4 l       .text  00000000 
d000d1ea l       .text  00000000 
d000d1f2 l       .text  00000000 
d000d1f4 l       .text  00000000 
d000d1f4 l       .text  00000000 
d000d1f8 l       .text  00000000 
d000d1fc l       .text  00000000 
d000d202 l       .text  00000000 
d000d202 l       .text  00000000 
d000d206 l       .text  00000000 
d000d206 l       .text  00000000 
d000d20a l       .text  00000000 
d000d20e l       .text  00000000 
d000d20e l       .text  00000000 
d000d210 l       .text  00000000 
d000d214 l       .text  00000000 
d000d218 l       .text  00000000 
d000d218 l       .text  00000000 
d000d21a l       .text  00000000 
d000d21a l       .text  00000000 
d000d220 l       .text  00000000 
d000d226 l       .text  00000000 
d000d22e l       .text  00000000 
d000d236 l       .text  00000000 
d000d236 l       .text  00000000 
d000d238 l       .text  00000000 
d000d23e l       .text  00000000 
d000d240 l       .text  00000000 
d000d246 l       .text  00000000 
d000d246 l       .text  00000000 
d000d24e l       .text  00000000 
d000d252 l       .text  00000000 
d000d252 l       .text  00000000 
d000d25c l       .text  00000000 
d000d25e l       .text  00000000 
d000d266 l       .text  00000000 
d000d268 l       .text  00000000 
d000d268 l       .text  00000000 
d000d26c l       .text  00000000 
d000d270 l       .text  00000000 
d000d270 l       .text  00000000 
d000d272 l       .text  00000000 
d000d272 l       .text  00000000 
d000d274 l       .text  00000000 
d000d274 l       .text  00000000 
d000d278 l       .text  00000000 
d000d278 l       .text  00000000 
d000d27c l       .text  00000000 
d000d280 l       .text  00000000 
d000d282 l       .text  00000000 
d000d284 l       .text  00000000 
d000d284 l       .text  00000000 
d000d28a l       .text  00000000 
d000d290 l       .text  00000000 
d000d294 l       .text  00000000 
d000d294 l       .text  00000000 
d000d298 l       .text  00000000 
d000d298 l       .text  00000000 
d000d29c l       .text  00000000 
d000d29e l       .text  00000000 
d000d29e l       .text  00000000 
d000d2a2 l       .text  00000000 
d000d2a2 l       .text  00000000 
d000d2a4 l       .text  00000000 
d000d2a4 l       .text  00000000 
d000d2a6 l       .text  00000000 
d000d2a6 l       .text  00000000 
d000d2aa l       .text  00000000 
d000d2aa l       .text  00000000 
d000d2ac l       .text  00000000 
d000d2b0 l       .text  00000000 
d000d2b0 l       .text  00000000 
d000d2b2 l       .text  00000000 
d000d2b4 l       .text  00000000 
d000d2ba l       .text  00000000 
d000d2bc l       .text  00000000 
d000d2c6 l       .text  00000000 
d000d2c6 l       .text  00000000 
0002370f l       .debug_loc     00000000 
00023735 l       .debug_loc     00000000 
0002375b l       .debug_loc     00000000 
00023781 l       .debug_loc     00000000 
000237a7 l       .debug_loc     00000000 
000237da l       .debug_loc     00000000 
00023800 l       .debug_loc     00000000 
0002381b l       .debug_loc     00000000 
00023859 l       .debug_loc     00000000 
00023883 l       .debug_loc     00000000 
0002389e l       .debug_loc     00000000 
000238c4 l       .debug_loc     00000000 
000238ea l       .debug_loc     00000000 
0002391d l       .debug_loc     00000000 
00023938 l       .debug_loc     00000000 
00023971 l       .debug_loc     00000000 
000239a4 l       .debug_loc     00000000 
000239ca l       .debug_loc     00000000 
000239fd l       .debug_loc     00000000 
00023a18 l       .debug_loc     00000000 
00023a3e l       .debug_loc     00000000 
00023a64 l       .debug_loc     00000000 
00023a8a l       .debug_loc     00000000 
00023ab0 l       .debug_loc     00000000 
00023ad7 l       .debug_loc     00000000 
00023b4c l       .debug_loc     00000000 
00023b67 l       .debug_loc     00000000 
00023bd1 l       .debug_loc     00000000 
00023c07 l       .debug_loc     00000000 
00023c2d l       .debug_loc     00000000 
00023c60 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
0001b1d0 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
000032d8 l       .debug_ranges  00000000 
00000bca l       .debug_str     00000000 
000007b6 l       .debug_str     00000000 
000007bf l       .debug_str     00000000 
000007cd l       .debug_str     00000000 
000007ee l       .debug_str     00000000 
00000804 l       .debug_str     00000000 
00000820 l       .debug_str     00000000 
00000835 l       .debug_str     00000000 
00000851 l       .debug_str     00000000 
0000086d l       .debug_str     00000000 
00000881 l       .debug_str     00000000 
00000895 l       .debug_str     00000000 
000008aa l       .debug_str     00000000 
000008c3 l       .debug_str     00000000 
000008d7 l       .debug_str     00000000 
000008eb l       .debug_str     00000000 
000008fb l       .debug_str     00000000 
0000090e l       .debug_str     00000000 
00000928 l       .debug_str     00000000 
0000093f l       .debug_str     00000000 
00000959 l       .debug_str     00000000 
00000975 l       .debug_str     00000000 
00000991 l       .debug_str     00000000 
000009a8 l       .debug_str     00000000 
000009be l       .debug_str     00000000 
000009d6 l       .debug_str     00000000 
000009ee l       .debug_str     00000000 
00000a07 l       .debug_str     00000000 
00000a20 l       .debug_str     00000000 
00000a39 l       .debug_str     00000000 
00000a52 l       .debug_str     00000000 
00000a71 l       .debug_str     00000000 
00000a8f l       .debug_str     00000000 
00000aa9 l       .debug_str     00000000 
00000ac2 l       .debug_str     00000000 
00000ade l       .debug_str     00000000 
00000afc l       .debug_str     00000000 
00000b18 l       .debug_str     00000000 
00000b34 l       .debug_str     00000000 
00000b50 l       .debug_str     00000000 
00000b67 l       .debug_str     00000000 
00000b80 l       .debug_str     00000000 
00000b96 l       .debug_str     00000000 
00000bb5 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
00000179 l       .debug_str     00000000 
00000162 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
0001b207 l       .debug_str     00000000 
0000171a l       .debug_str     00000000 
00001b23 l       .debug_str     00000000 
0001b267 l       .debug_str     00000000 
00001040 l       .debug_str     00000000 
00001a89 l       .debug_str     00000000 
0000170c l       .debug_str     00000000 
0000420b l       .debug_str     00000000 
00001705 l       .debug_str     00000000 
00001504 l       .debug_str     00000000 
000014ef l       .debug_str     00000000 
00001937 l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
00003401 l       .debug_str     00000000 
0001b21d l       .debug_str     00000000 
0000032a l       .debug_str     00000000 
0000122b l       .debug_str     00000000 
00002896 l       .debug_str     00000000 
0001b22b l       .debug_str     00000000 
0001b23c l       .debug_str     00000000 
0001b243 l       .debug_str     00000000 
0001b248 l       .debug_str     00000000 
0001b183 l       .debug_str     00000000 
0001b25c l       .debug_str     00000000 
00003278 l       .debug_ranges  00000000 
00003290 l       .debug_ranges  00000000 
000032a8 l       .debug_ranges  00000000 
0000609b l       .debug_str     00000000 
00000175 l       .debug_str     00000000 
0001b253 l       .debug_str     00000000 
00004083 l       .debug_str     00000000 
000032ae l       .debug_str     00000000 
0001b260 l       .debug_str     00000000 
0001b265 l       .debug_str     00000000 
0001b269 l       .debug_str     00000000 
000019ed l       .debug_str     00000000 
000032c0 l       .debug_ranges  00000000 
00001257 l       .debug_str     00000000 
00005748 l       .debug_frame   00000000 
d000d194 l       .text  00000000 
d000d2c6 l       .text  00000000 
00000000 l    df *ABS*  00000000 mod_exp_otbn.c
d000d2c6 l       .text  00000000 
d000d2c6 l       .text  00000000 
d000d2c6 l       .text  00000000 
d000d2c8 l       .text  00000000 
d000d2d4 l       .text  00000000 
d000d2d6 l       .text  00000000 
d000d2d8 l       .text  00000000 
d000d2da l       .text  00000000 
d000d2da l       .text  00000000 
d000d2de l       .text  00000000 
d000f1d0 l     O .rodata        00000010 kOtbnAppRsa
d000d2de l       .text  00000000 
d000d2e6 l       .text  00000000 
d000d2e6 l       .text  00000000 
d000d2fc l       .text  00000000 
d000d2fc l       .text  00000000 
d000d2fe l       .text  00000000 
d000d2fe l       .text  00000000 
d000d302 l       .text  00000000 
d000d302 l       .text  00000000 
d000d306 l       .text  00000000 
d000d312 l       .text  00000000 
d000d312 l       .text  00000000 
d000d316 l       .text  00000000 
d000d320 l       .text  00000000 
d000d320 l       .text  00000000 
d000d322 l       .text  00000000 
d000d322 l       .text  00000000 
d000d326 l       .text  00000000 
d000d326 l       .text  00000000 
d000d32a l       .text  00000000 
d000d336 l       .text  00000000 
d000d336 l       .text  00000000 
d000d33a l       .text  00000000 
d000d344 l       .text  00000000 
d000d344 l       .text  00000000 
d000d346 l       .text  00000000 
d000d346 l       .text  00000000 
d000d34a l       .text  00000000 
d000d356 l       .text  00000000 
d000d356 l       .text  00000000 
d000d35a l       .text  00000000 
d000d364 l       .text  00000000 
d000d364 l       .text  00000000 
d000d366 l       .text  00000000 
d000d366 l       .text  00000000 
d000d36a l       .text  00000000 
d000d36a l       .text  00000000 
d000d36e l       .text  00000000 
d000d37a l       .text  00000000 
d000d37a l       .text  00000000 
d000d37c l       .text  00000000 
d000d37e l       .text  00000000 
d000d37e l       .text  00000000 
d000d380 l       .text  00000000 
d000d380 l       .text  00000000 
d000d384 l       .text  00000000 
d000d390 l       .text  00000000 
d000d390 l       .text  00000000 
d000d392 l       .text  00000000 
d000d394 l       .text  00000000 
d000d394 l       .text  00000000 
d000d396 l       .text  00000000 
d000d396 l       .text  00000000 
d000d3a6 l       .text  00000000 
d000d3a6 l       .text  00000000 
d000d3aa l       .text  00000000 
d000d3aa l       .text  00000000 
d000d3ac l       .text  00000000 
d000d3ac l       .text  00000000 
d000d3b4 l       .text  00000000 
d000d3b4 l       .text  00000000 
d000d3b8 l       .text  00000000 
d000d3b8 l       .text  00000000 
d000d3c0 l       .text  00000000 
d000d3cc l       .text  00000000 
d000d3d8 l       .text  00000000 
d000d3d8 l       .text  00000000 
d000d3dc l       .text  00000000 
d000d3e6 l       .text  00000000 
d000d3e6 l       .text  00000000 
d000d3e8 l       .text  00000000 
d000d3ec l       .text  00000000 
d000d3ee l       .text  00000000 
d000d3f6 l       .text  00000000 
d000d3f6 l       .text  00000000 
d000d3f6 l       .text  00000000 
d000d3f6 l       .text  00000000 
d000d3f6 l       .text  00000000 
d000d3f8 l       .text  00000000 
d000d400 l       .text  00000000 
d000d402 l       .text  00000000 
d000d404 l       .text  00000000 
d000d406 l       .text  00000000 
d000d406 l       .text  00000000 
d000d40e l       .text  00000000 
d000d40e l       .text  00000000 
d000d412 l       .text  00000000 
d000d41a l       .text  00000000 
d000d41c l       .text  00000000 
d000d41e l       .text  00000000 
d000d424 l       .text  00000000 
d000d424 l       .text  00000000 
d000d42c l       .text  00000000 
d000d42e l       .text  00000000 
d000d430 l       .text  00000000 
d000d432 l       .text  00000000 
d000d438 l       .text  00000000 
d000d438 l       .text  00000000 
00023c7b l       .debug_loc     00000000 
00023cd8 l       .debug_loc     00000000 
00023d35 l       .debug_loc     00000000 
00023d92 l       .debug_loc     00000000 
00023db8 l       .debug_loc     00000000 
00023dd3 l       .debug_loc     00000000 
00023dee l       .debug_loc     00000000 
00023e14 l       .debug_loc     00000000 
00023e2f l       .debug_loc     00000000 
00023e4a l       .debug_loc     00000000 
00023e70 l       .debug_loc     00000000 
00023e8b l       .debug_loc     00000000 
00023eb1 l       .debug_loc     00000000 
00023ecc l       .debug_loc     00000000 
00023ef2 l       .debug_loc     00000000 
00023f0d l       .debug_loc     00000000 
00023f33 l       .debug_loc     00000000 
00023f4e l       .debug_loc     00000000 
00023f74 l       .debug_loc     00000000 
00023f8f l       .debug_loc     00000000 
00023fc0 l       .debug_loc     00000000 
00023ff1 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
0001b26e l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
000032f0 l       .debug_ranges  00000000 
0001b2a5 l       .debug_str     00000000 
0001b2b6 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
0001b2c2 l       .debug_str     00000000 
0001b2d3 l       .debug_str     00000000 
0001b2e4 l       .debug_str     00000000 
0001b2f6 l       .debug_str     00000000 
0001b33d l       .debug_str     00000000 
0001b334 l       .debug_str     00000000 
0001b302 l       .debug_str     00000000 
0001b30d l       .debug_str     00000000 
0001b316 l       .debug_str     00000000 
0001b326 l       .debug_str     00000000 
00000bca l       .debug_str     00000000 
000007b6 l       .debug_str     00000000 
000007bf l       .debug_str     00000000 
000007cd l       .debug_str     00000000 
000007ee l       .debug_str     00000000 
00000804 l       .debug_str     00000000 
00000820 l       .debug_str     00000000 
00000835 l       .debug_str     00000000 
00000851 l       .debug_str     00000000 
0000086d l       .debug_str     00000000 
00000881 l       .debug_str     00000000 
00000895 l       .debug_str     00000000 
000008aa l       .debug_str     00000000 
000008c3 l       .debug_str     00000000 
000008d7 l       .debug_str     00000000 
000008eb l       .debug_str     00000000 
000008fb l       .debug_str     00000000 
0000090e l       .debug_str     00000000 
00000928 l       .debug_str     00000000 
0000093f l       .debug_str     00000000 
00000959 l       .debug_str     00000000 
00000975 l       .debug_str     00000000 
00000991 l       .debug_str     00000000 
000009a8 l       .debug_str     00000000 
000009be l       .debug_str     00000000 
000009d6 l       .debug_str     00000000 
000009ee l       .debug_str     00000000 
00000a07 l       .debug_str     00000000 
00000a20 l       .debug_str     00000000 
00000a39 l       .debug_str     00000000 
00000a52 l       .debug_str     00000000 
00000a71 l       .debug_str     00000000 
00000a8f l       .debug_str     00000000 
00000aa9 l       .debug_str     00000000 
00000ac2 l       .debug_str     00000000 
00000ade l       .debug_str     00000000 
00000afc l       .debug_str     00000000 
00000b18 l       .debug_str     00000000 
00000b34 l       .debug_str     00000000 
00000b50 l       .debug_str     00000000 
00000b67 l       .debug_str     00000000 
00000b80 l       .debug_str     00000000 
00000b96 l       .debug_str     00000000 
00000bb5 l       .debug_str     00000000 
00000bf9 l       .debug_str     00000000 
00000bd4 l       .debug_str     00000000 
00000be6 l       .debug_str     00000000 
0001b348 l       .debug_str     00000000 
0001b35d l       .debug_str     00000000 
0001b373 l       .debug_str     00000000 
0001b38b l       .debug_str     00000000 
0001b0ed l       .debug_str     00000000 
0001b102 l       .debug_str     00000000 
0001b118 l       .debug_str     00000000 
000012d7 l       .debug_str     00000000 
000037aa l       .debug_str     00000000 
0001b3a3 l       .debug_str     00000000 
0001b469 l       .debug_str     00000000 
00002b9a l       .debug_str     00000000 
00006968 l       .debug_str     00000000 
00001257 l       .debug_str     00000000 
0001b3d7 l       .debug_str     00000000 
0001b40e l       .debug_str     00000000 
0001b3be l       .debug_str     00000000 
0001b3cc l       .debug_str     00000000 
00001a24 l       .debug_str     00000000 
00001504 l       .debug_str     00000000 
000014ef l       .debug_str     00000000 
00001937 l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
0001b3de l       .debug_str     00000000 
0001b476 l       .debug_str     00000000 
0001b48f l       .debug_str     00000000 
000014e5 l       .debug_str     00000000 
0001b49a l       .debug_str     00000000 
00002879 l       .debug_str     00000000 
00001b32 l       .debug_str     00000000 
0001b3fa l       .debug_str     00000000 
0001b404 l       .debug_str     00000000 
0001b412 l       .debug_str     00000000 
0001b429 l       .debug_str     00000000 
0001b43a l       .debug_str     00000000 
0001b455 l       .debug_str     00000000 
0001b19a l       .debug_str     00000000 
0000171a l       .debug_str     00000000 
0001b25c l       .debug_str     00000000 
0000032a l       .debug_str     00000000 
0001b46e l       .debug_str     00000000 
00000175 l       .debug_str     00000000 
00001a89 l       .debug_str     00000000 
0000170c l       .debug_str     00000000 
0000420b l       .debug_str     00000000 
00001705 l       .debug_str     00000000 
000057a8 l       .debug_frame   00000000 
d000d3f6 l       .text  00000000 
d000d438 l       .text  00000000 
00000000 l    df *ABS*  00000000 otbn_util.c
d000d438 l       .text  00000000 
d000d438 l       .text  00000000 
d000d438 l       .text  00000000 
d000d438 l       .text  00000000 
d000d452 l       .text  00000000 
d000d454 l       .text  00000000 
d000d454 l       .text  00000000 
d000d454 l       .text  00000000 
d000d454 l       .text  00000000 
d000d454 l       .text  00000000 
d000d456 l       .text  00000000 
d000d468 l       .text  00000000 
d000d46a l       .text  00000000 
d000d46a l       .text  00000000 
d000d46c l       .text  00000000 
d000d470 l       .text  00000000 
d000d470 l       .text  00000000 
d000d478 l       .text  00000000 
d000d47c l       .text  00000000 
d000d47e l       .text  00000000 
d000d480 l       .text  00000000 
d000d480 l       .text  00000000 
d000d484 l       .text  00000000 
d000d484 l       .text  00000000 
d000d486 l       .text  00000000 
d000d488 l       .text  00000000 
d000d488 l       .text  00000000 
d000d488 l       .text  00000000 
d000d488 l       .text  00000000 
d000d48c l       .text  00000000 
d000d48c l       .text  00000000 
d000d490 l       .text  00000000 
d000d49c l       .text  00000000 
d000d49c l       .text  00000000 
d000d4a0 l       .text  00000000 
d000d4a4 l       .text  00000000 
d000d4a4 l       .text  00000000 
d000d4a8 l       .text  00000000 
d000d4ac l       .text  00000000 
d000d4b0 l       .text  00000000 
d000d4b4 l       .text  00000000 
d000d4b4 l       .text  00000000 
d000d4b6 l       .text  00000000 
d000d4b8 l       .text  00000000 
d000d4b8 l       .text  00000000 
d000d4b8 l       .text  00000000 
d000d4b8 l       .text  00000000 
d000d4bc l       .text  00000000 
d000d4bc l       .text  00000000 
d000d4c0 l       .text  00000000 
d000d4cc l       .text  00000000 
d000d4cc l       .text  00000000 
d000d4ce l       .text  00000000 
d000d4ce l       .text  00000000 
d000d4d2 l       .text  00000000 
d000d4d6 l       .text  00000000 
d000d4d6 l       .text  00000000 
d000d4da l       .text  00000000 
d000d4dc l       .text  00000000 
d000d4dc l       .text  00000000 
d000d4dc l       .text  00000000 
d000d4dc l       .text  00000000 
d000d4e0 l       .text  00000000 
d000d4ec l       .text  00000000 
d000d4ec l       .text  00000000 
d000d4ee l       .text  00000000 
d000d4ee l       .text  00000000 
d000d4f0 l       .text  00000000 
d000d4f0 l       .text  00000000 
d000d4f4 l       .text  00000000 
d000d4f4 l       .text  00000000 
d000d4fc l       .text  00000000 
d000d508 l       .text  00000000 
d000d508 l       .text  00000000 
d000d50a l       .text  00000000 
d000d50a l       .text  00000000 
d000d50e l       .text  00000000 
d000d512 l       .text  00000000 
d000d512 l       .text  00000000 
d000d514 l       .text  00000000 
d000d514 l       .text  00000000 
d000d518 l       .text  00000000 
d000d518 l       .text  00000000 
d000d51c l       .text  00000000 
d000d528 l       .text  00000000 
d000d528 l       .text  00000000 
d000d540 l       .text  00000000 
d000d546 l       .text  00000000 
d000d548 l       .text  00000000 
d000d556 l       .text  00000000 
d000d55a l       .text  00000000 
d000d560 l       .text  00000000 
d000d560 l       .text  00000000 
d000d560 l       .text  00000000 
d000d560 l       .text  00000000 
d000d560 l       .text  00000000 
d000d562 l       .text  00000000 
d000d562 l       .text  00000000 
d000d564 l       .text  00000000 
d000d566 l       .text  00000000 
d000d566 l       .text  00000000 
d000d566 l       .text  00000000 
d000d56a l       .text  00000000 
d000d56a l       .text  00000000 
d000d56e l       .text  00000000 
d000d570 l       .text  00000000 
d000d57c l       .text  00000000 
d000d57e l       .text  00000000 
d000d57e l       .text  00000000 
d000d586 l       .text  00000000 
d000d588 l       .text  00000000 
d000d58e l       .text  00000000 
d000d58e l       .text  00000000 
d000d592 l       .text  00000000 
d000d596 l       .text  00000000 
d000d59c l       .text  00000000 
d000d59c l       .text  00000000 
d000d59c l       .text  00000000 
d000d59c l       .text  00000000 
d000d59c l       .text  00000000 
d000d59e l       .text  00000000 
d000d5a0 l       .text  00000000 
d000d5a0 l       .text  00000000 
d000d5a2 l       .text  00000000 
d000d5a4 l       .text  00000000 
d000d5a6 l       .text  00000000 
d000d5a6 l       .text  00000000 
d000d5a6 l       .text  00000000 
d000d5a6 l       .text  00000000 
d000d5a6 l       .text  00000000 
d000d5a6 l       .text  00000000 
d000d5a8 l       .text  00000000 
d000d5aa l       .text  00000000 
d000d5aa l       .text  00000000 
d000d5ac l       .text  00000000 
d000d5ae l       .text  00000000 
d000d5ae l       .text  00000000 
d000d5ae l       .text  00000000 
00024022 l       .debug_loc     00000000 
00024048 l       .debug_loc     00000000 
00024070 l       .debug_loc     00000000 
00024096 l       .debug_loc     00000000 
000240b1 l       .debug_loc     00000000 
000240ed l       .debug_loc     00000000 
00024108 l       .debug_loc     00000000 
0002412e l       .debug_loc     00000000 
00024149 l       .debug_loc     00000000 
0002416f l       .debug_loc     00000000 
0002418a l       .debug_loc     00000000 
000241b0 l       .debug_loc     00000000 
000241cb l       .debug_loc     00000000 
000241f1 l       .debug_loc     00000000 
0002420c l       .debug_loc     00000000 
00024232 l       .debug_loc     00000000 
0002424d l       .debug_loc     00000000 
00024268 l       .debug_loc     00000000 
00024299 l       .debug_loc     00000000 
000242bf l       .debug_loc     00000000 
000242e5 l       .debug_loc     00000000 
00024300 l       .debug_loc     00000000 
00024326 l       .debug_loc     00000000 
0002434c l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
0001b4ac l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00003320 l       .debug_ranges  00000000 
00000bf9 l       .debug_str     00000000 
00000bd4 l       .debug_str     00000000 
00000be6 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
0001b657 l       .debug_str     00000000 
0001b4d6 l       .debug_str     00000000 
0001b4ea l       .debug_str     00000000 
0001b502 l       .debug_str     00000000 
0001b51a l       .debug_str     00000000 
0001b530 l       .debug_str     00000000 
0001b548 l       .debug_str     00000000 
0001b559 l       .debug_str     00000000 
0001b577 l       .debug_str     00000000 
0001b595 l       .debug_str     00000000 
0001b5b2 l       .debug_str     00000000 
0001b5cf l       .debug_str     00000000 
0001b5ef l       .debug_str     00000000 
0001b60c l       .debug_str     00000000 
0001b62c l       .debug_str     00000000 
0001b646 l       .debug_str     00000000 
00000bca l       .debug_str     00000000 
000007b6 l       .debug_str     00000000 
000007bf l       .debug_str     00000000 
000007cd l       .debug_str     00000000 
000007ee l       .debug_str     00000000 
00000804 l       .debug_str     00000000 
00000820 l       .debug_str     00000000 
00000835 l       .debug_str     00000000 
00000851 l       .debug_str     00000000 
0000086d l       .debug_str     00000000 
00000881 l       .debug_str     00000000 
00000895 l       .debug_str     00000000 
000008aa l       .debug_str     00000000 
000008c3 l       .debug_str     00000000 
000008d7 l       .debug_str     00000000 
000008eb l       .debug_str     00000000 
000008fb l       .debug_str     00000000 
0000090e l       .debug_str     00000000 
00000928 l       .debug_str     00000000 
0000093f l       .debug_str     00000000 
00000959 l       .debug_str     00000000 
00000975 l       .debug_str     00000000 
00000991 l       .debug_str     00000000 
000009a8 l       .debug_str     00000000 
000009be l       .debug_str     00000000 
000009d6 l       .debug_str     00000000 
000009ee l       .debug_str     00000000 
00000a07 l       .debug_str     00000000 
00000a20 l       .debug_str     00000000 
00000a39 l       .debug_str     00000000 
00000a52 l       .debug_str     00000000 
00000a71 l       .debug_str     00000000 
00000a8f l       .debug_str     00000000 
00000aa9 l       .debug_str     00000000 
00000ac2 l       .debug_str     00000000 
00000ade l       .debug_str     00000000 
00000afc l       .debug_str     00000000 
00000b18 l       .debug_str     00000000 
00000b34 l       .debug_str     00000000 
00000b50 l       .debug_str     00000000 
00000b67 l       .debug_str     00000000 
00000b80 l       .debug_str     00000000 
00000b96 l       .debug_str     00000000 
00000bb5 l       .debug_str     00000000 
0001b665 l       .debug_str     00000000 
0001b679 l       .debug_str     00000000 
0001b3fa l       .debug_str     00000000 
0001a602 l       .debug_str     00000000 
0001b698 l       .debug_str     00000000 
0001b40e l       .debug_str     00000000 
00001040 l       .debug_str     00000000 
0001b33d l       .debug_str     00000000 
0001b334 l       .debug_str     00000000 
0001b302 l       .debug_str     00000000 
0001b30d l       .debug_str     00000000 
0001b316 l       .debug_str     00000000 
0001b326 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
000012d7 l       .debug_str     00000000 
000037aa l       .debug_str     00000000 
0001b404 l       .debug_str     00000000 
0001b72b l       .debug_str     00000000 
0001b73a l       .debug_str     00000000 
00001b32 l       .debug_str     00000000 
00003308 l       .debug_ranges  00000000 
0001b6b1 l       .debug_str     00000000 
0001b6c9 l       .debug_str     00000000 
0001b6dc l       .debug_str     00000000 
0001b6ec l       .debug_str     00000000 
0001b6ff l       .debug_str     00000000 
0001b429 l       .debug_str     00000000 
0001ad8a l       .debug_str     00000000 
0001b70f l       .debug_str     00000000 
0001b412 l       .debug_str     00000000 
0001aa41 l       .debug_str     00000000 
00002b9a l       .debug_str     00000000 
00002b95 l       .debug_str     00000000 
0001b455 l       .debug_str     00000000 
0001b749 l       .debug_str     00000000 
0001b71c l       .debug_str     00000000 
00001257 l       .debug_str     00000000 
0001b3d7 l       .debug_str     00000000 
0001b469 l       .debug_str     00000000 
0001b3be l       .debug_str     00000000 
0001b3cc l       .debug_str     00000000 
00001a24 l       .debug_str     00000000 
00003401 l       .debug_str     00000000 
0001b2b6 l       .debug_str     00000000 
000057f8 l       .debug_frame   00000000 
d000d454 l       .text  00000000 
d000d560 l       .text  00000000 
d000d59c l       .text  00000000 
d000d5a6 l       .text  00000000 
d000d5ae l       .text  00000000 
00000000 l    df *ABS*  00000000 otbn.c
d000d5ae l       .text  00000000 
d000d5ae l       .text  00000000 
d000d5ae l       .text  00000000 
d000d5b0 l       .text  00000000 
d000d5b0 l       .text  00000000 
d000d5b0 l       .text  00000000 
d000d5b0 l       .text  00000000 
d000d5b4 l       .text  00000000 
d000d5b4 l       .text  00000000 
d000d5b4 l       .text  00000000 
d000d5b4 l       .text  00000000 
d000d5bc l       .text  00000000 
d000d5bc l       .text  00000000 
d000d5be l       .text  00000000 
d000d5be l       .text  00000000 
d000d5c0 l       .text  00000000 
d000d5c0 l       .text  00000000 
d000d5c2 l       .text  00000000 
d000d5c2 l       .text  00000000 
d000d5c4 l       .text  00000000 
d000d5c4 l       .text  00000000 
d000d5c8 l       .text  00000000 
d000d5c8 l       .text  00000000 
d000d5ca l       .text  00000000 
d000d5ce l       .text  00000000 
d000d5ce l       .text  00000000 
d000d5d0 l       .text  00000000 
d000d5d0 l       .text  00000000 
d000d5d4 l       .text  00000000 
d000d5d4 l       .text  00000000 
d000d5d8 l       .text  00000000 
d000d5d8 l       .text  00000000 
d000d5e8 l       .text  00000000 
d000d5e8 l       .text  00000000 
d000d5ea l       .text  00000000 
d000d5ea l       .text  00000000 
d000d5f4 l       .text  00000000 
d000d5f6 l       .text  00000000 
d000d5fa l       .text  00000000 
d000d5fe l       .text  00000000 
d000d600 l       .text  00000000 
d000d600 l       .text  00000000 
d000d600 l       .text  00000000 
d000d600 l       .text  00000000 
d000d600 l       .text  00000000 
d000d602 l       .text  00000000 
d000d602 l       .text  00000000 
d000d602 l       .text  00000000 
d000d604 l       .text  00000000 
d000d60a l       .text  00000000 
d000d610 l       .text  00000000 
d000d610 l       .text  00000000 
d000d618 l       .text  00000000 
d000d618 l       .text  00000000 
d000d622 l     F .text  00000076 otbn_cmd_run
d000d622 l       .text  00000000 
d000d622 l       .text  00000000 
d000d622 l       .text  00000000 
d000d622 l       .text  00000000 
d000d622 l       .text  00000000 
d000d622 l       .text  00000000 
d000d624 l       .text  00000000 
d000d624 l       .text  00000000 
d000d62c l       .text  00000000 
d000d62c l       .text  00000000 
d000d62e l       .text  00000000 
d000d62e l       .text  00000000 
d000d630 l       .text  00000000 
d000d630 l       .text  00000000 
d000d630 l       .text  00000000 
d000d630 l       .text  00000000 
d000d634 l       .text  00000000 
d000d634 l       .text  00000000 
d000d638 l       .text  00000000 
d000d638 l       .text  00000000 
d000d644 l       .text  00000000 
d000d644 l       .text  00000000 
d000d646 l       .text  00000000 
d000d646 l       .text  00000000 
d000d64a l       .text  00000000 
d000d64a l       .text  00000000 
d000d64c l       .text  00000000 
d000d64c l       .text  00000000 
d000d64e l       .text  00000000 
d000d652 l       .text  00000000 
d000d652 l       .text  00000000 
d000d65e l       .text  00000000 
d000d65e l       .text  00000000 
d000d660 l       .text  00000000 
d000d660 l       .text  00000000 
d000d662 l       .text  00000000 
d000d662 l       .text  00000000 
d000d664 l       .text  00000000 
d000d664 l       .text  00000000 
d000d666 l       .text  00000000 
d000d666 l       .text  00000000 
d000d668 l       .text  00000000 
d000d668 l       .text  00000000 
d000d668 l       .text  00000000 
d000d66c l       .text  00000000 
d000d66c l       .text  00000000 
d000d670 l       .text  00000000 
d000d670 l       .text  00000000 
d000d670 l       .text  00000000 
d000d670 l       .text  00000000 
d000d672 l       .text  00000000 
d000d676 l       .text  00000000 
d000d686 l       .text  00000000 
d000d686 l       .text  00000000 
d000d688 l       .text  00000000 
d000d688 l       .text  00000000 
d000d694 l       .text  00000000 
d000d694 l       .text  00000000 
d000d696 l       .text  00000000 
d000d698 l       .text  00000000 
d000d698 l       .text  00000000 
d000d698 l       .text  00000000 
d000d698 l       .text  00000000 
d000d698 l       .text  00000000 
d000d69c l       .text  00000000 
d000d69c l       .text  00000000 
d000d69e l       .text  00000000 
d000d69e l       .text  00000000 
d000d6a0 l       .text  00000000 
d000d6a0 l       .text  00000000 
d000d6a0 l       .text  00000000 
d000d6a0 l       .text  00000000 
d000d6a0 l       .text  00000000 
d000d6a8 l       .text  00000000 
d000d6ac l       .text  00000000 
d000d6ac l       .text  00000000 
d000d6ac l       .text  00000000 
d000d6ac l       .text  00000000 
d000d6ac l       .text  00000000 
d000d6ac l       .text  00000000 
d000d6ae l       .text  00000000 
d000d6ae l       .text  00000000 
d000d6ae l       .text  00000000 
d000d6b0 l       .text  00000000 
d000d6b4 l       .text  00000000 
d000d6c2 l       .text  00000000 
d000d6ca l       .text  00000000 
d000d6ca l       .text  00000000 
d000d6d8 l       .text  00000000 
d000d6d8 l       .text  00000000 
d000d6da l       .text  00000000 
d000d6da l       .text  00000000 
d000d6de l       .text  00000000 
d000d6de l       .text  00000000 
d000d6e2 l       .text  00000000 
d000d6f2 l       .text  00000000 
d000d6f2 l       .text  00000000 
d000d6f4 l       .text  00000000 
d000d702 l     F .text  00000068 otbn_write
d000d6f4 l       .text  00000000 
d000d6f6 l       .text  00000000 
d000d6f6 l       .text  00000000 
d000d6fa l       .text  00000000 
d000d702 l       .text  00000000 
d000d702 l       .text  00000000 
d000d702 l       .text  00000000 
d000d702 l       .text  00000000 
d000d702 l       .text  00000000 
d000d704 l       .text  00000000 
d000d70c l       .text  00000000 
d000d70e l       .text  00000000 
d000d710 l       .text  00000000 
d000d712 l       .text  00000000 
d000d712 l       .text  00000000 
d000d714 l       .text  00000000 
d000d714 l       .text  00000000 
d000d716 l       .text  00000000 
d000d716 l       .text  00000000 
d000d718 l       .text  00000000 
d000d718 l       .text  00000000 
d000d71c l       .text  00000000 
d000d71c l       .text  00000000 
d000d71e l       .text  00000000 
d000d722 l       .text  00000000 
d000d722 l       .text  00000000 
d000d726 l       .text  00000000 
d000d72c l       .text  00000000 
d000d72e l       .text  00000000 
d000d730 l       .text  00000000 
d000d730 l       .text  00000000 
d000d732 l       .text  00000000 
d000d732 l       .text  00000000 
d000d734 l       .text  00000000 
d000d734 l       .text  00000000 
d000d736 l       .text  00000000 
d000d736 l       .text  00000000 
d000d73a l       .text  00000000 
d000d73a l       .text  00000000 
d000d73c l       .text  00000000 
d000d73e l       .text  00000000 
d000d740 l       .text  00000000 
d000d74c l       .text  00000000 
d000d74c l       .text  00000000 
d000d74e l       .text  00000000 
d000d74e l       .text  00000000 
d000d752 l       .text  00000000 
d000d752 l       .text  00000000 
d000d75e l       .text  00000000 
d000d760 l       .text  00000000 
d000d762 l       .text  00000000 
d000d764 l       .text  00000000 
d000d76a l       .text  00000000 
d000d76a l       .text  00000000 
d000d76a l       .text  00000000 
d000d76a l       .text  00000000 
d000d76a l       .text  00000000 
d000d772 l       .text  00000000 
d000d778 l       .text  00000000 
d000d778 l       .text  00000000 
d000d778 l       .text  00000000 
d000d778 l       .text  00000000 
d000d778 l       .text  00000000 
d000d778 l       .text  00000000 
d000d77a l       .text  00000000 
d000d77a l       .text  00000000 
d000d77a l       .text  00000000 
d000d77c l       .text  00000000 
d000d780 l       .text  00000000 
d000d792 l       .text  00000000 
d000d79a l       .text  00000000 
d000d79a l       .text  00000000 
d000d7a8 l       .text  00000000 
d000d7a8 l       .text  00000000 
d000d7aa l       .text  00000000 
d000d7aa l       .text  00000000 
d000d7ae l       .text  00000000 
d000d7ae l       .text  00000000 
d000d7b2 l       .text  00000000 
d000d7c2 l       .text  00000000 
d000d7c2 l       .text  00000000 
d000d7c4 l       .text  00000000 
d000d7c4 l       .text  00000000 
d000d7c6 l       .text  00000000 
d000d7c6 l       .text  00000000 
d000d7ca l       .text  00000000 
d000d7d2 l       .text  00000000 
d000d7d2 l       .text  00000000 
d000d7d2 l       .text  00000000 
d000d7d2 l       .text  00000000 
d000d7d2 l       .text  00000000 
d000d7d2 l       .text  00000000 
d000d7d6 l       .text  00000000 
d000d7e8 l       .text  00000000 
d000d7f0 l       .text  00000000 
d000d7f0 l       .text  00000000 
d000d7fe l       .text  00000000 
d000d7fe l       .text  00000000 
d000d800 l       .text  00000000 
d000d800 l       .text  00000000 
d000d804 l       .text  00000000 
d000d804 l       .text  00000000 
d000d80a l       .text  00000000 
d000d80a l       .text  00000000 
d000d816 l       .text  00000000 
d000d816 l       .text  00000000 
d000d816 l       .text  00000000 
d000d816 l       .text  00000000 
d000d818 l       .text  00000000 
d000d818 l       .text  00000000 
d000d81c l       .text  00000000 
d000d81c l       .text  00000000 
d000d822 l       .text  00000000 
d000d824 l       .text  00000000 
d000d824 l       .text  00000000 
d000d826 l       .text  00000000 
d000d826 l       .text  00000000 
d000d828 l       .text  00000000 
d000d82a l       .text  00000000 
d000d82a l       .text  00000000 
d000d82c l       .text  00000000 
d000d82c l       .text  00000000 
d000d834 l       .text  00000000 
d000d834 l       .text  00000000 
d000d842 l       .text  00000000 
d000d842 l       .text  00000000 
d000d844 l       .text  00000000 
d000d844 l       .text  00000000 
d000d848 l       .text  00000000 
d000d848 l       .text  00000000 
00024372 l       .debug_loc     00000000 
0002439a l       .debug_loc     00000000 
000243c0 l       .debug_loc     00000000 
000243e6 l       .debug_loc     00000000 
0002440c l       .debug_loc     00000000 
00024432 l       .debug_loc     00000000 
00024458 l       .debug_loc     00000000 
00024498 l       .debug_loc     00000000 
000244b3 l       .debug_loc     00000000 
000244d9 l       .debug_loc     00000000 
00024500 l       .debug_loc     00000000 
00024527 l       .debug_loc     00000000 
00024563 l       .debug_loc     00000000 
0002457e l       .debug_loc     00000000 
000245a4 l       .debug_loc     00000000 
000245bf l       .debug_loc     00000000 
000245da l       .debug_loc     00000000 
000245f5 l       .debug_loc     00000000 
00024610 l       .debug_loc     00000000 
0002462b l       .debug_loc     00000000 
00024651 l       .debug_loc     00000000 
00024677 l       .debug_loc     00000000 
0002469d l       .debug_loc     00000000 
000246c3 l       .debug_loc     00000000 
000246ea l       .debug_loc     00000000 
00024726 l       .debug_loc     00000000 
00024757 l       .debug_loc     00000000 
0002477d l       .debug_loc     00000000 
00024798 l       .debug_loc     00000000 
000247b3 l       .debug_loc     00000000 
000247ce l       .debug_loc     00000000 
000247e9 l       .debug_loc     00000000 
0002480f l       .debug_loc     00000000 
00024835 l       .debug_loc     00000000 
0002485b l       .debug_loc     00000000 
00024876 l       .debug_loc     00000000 
0002489c l       .debug_loc     00000000 
000248d9 l       .debug_loc     00000000 
00024900 l       .debug_loc     00000000 
0002493d l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
0001b753 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
000033d8 l       .debug_ranges  00000000 
0001b780 l       .debug_str     00000000 
00003401 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
0001b793 l       .debug_str     00000000 
00000bca l       .debug_str     00000000 
000007b6 l       .debug_str     00000000 
000007bf l       .debug_str     00000000 
000007cd l       .debug_str     00000000 
000007ee l       .debug_str     00000000 
00000804 l       .debug_str     00000000 
00000820 l       .debug_str     00000000 
00000835 l       .debug_str     00000000 
00000851 l       .debug_str     00000000 
0000086d l       .debug_str     00000000 
00000881 l       .debug_str     00000000 
00000895 l       .debug_str     00000000 
000008aa l       .debug_str     00000000 
000008c3 l       .debug_str     00000000 
000008d7 l       .debug_str     00000000 
000008eb l       .debug_str     00000000 
000008fb l       .debug_str     00000000 
0000090e l       .debug_str     00000000 
00000928 l       .debug_str     00000000 
0000093f l       .debug_str     00000000 
00000959 l       .debug_str     00000000 
00000975 l       .debug_str     00000000 
00000991 l       .debug_str     00000000 
000009a8 l       .debug_str     00000000 
000009be l       .debug_str     00000000 
000009d6 l       .debug_str     00000000 
000009ee l       .debug_str     00000000 
00000a07 l       .debug_str     00000000 
00000a20 l       .debug_str     00000000 
00000a39 l       .debug_str     00000000 
00000a52 l       .debug_str     00000000 
00000a71 l       .debug_str     00000000 
00000a8f l       .debug_str     00000000 
00000aa9 l       .debug_str     00000000 
00000ac2 l       .debug_str     00000000 
00000ade l       .debug_str     00000000 
00000afc l       .debug_str     00000000 
00000b18 l       .debug_str     00000000 
00000b34 l       .debug_str     00000000 
00000b50 l       .debug_str     00000000 
00000b67 l       .debug_str     00000000 
00000b80 l       .debug_str     00000000 
00000b96 l       .debug_str     00000000 
00000bb5 l       .debug_str     00000000 
0000291c l       .debug_str     00000000 
0001b82f l       .debug_str     00000000 
0001b7a6 l       .debug_str     00000000 
0001b7b6 l       .debug_str     00000000 
0001b7cd l       .debug_str     00000000 
0001b7e8 l       .debug_str     00000000 
0001b803 l       .debug_str     00000000 
0001b81d l       .debug_str     00000000 
0001b873 l       .debug_str     00000000 
0001b83b l       .debug_str     00000000 
0001b84b l       .debug_str     00000000 
0001b85f l       .debug_str     00000000 
0001b657 l       .debug_str     00000000 
0001b4d6 l       .debug_str     00000000 
0001b4ea l       .debug_str     00000000 
0001b502 l       .debug_str     00000000 
0001b51a l       .debug_str     00000000 
0001b530 l       .debug_str     00000000 
0001b548 l       .debug_str     00000000 
0001b559 l       .debug_str     00000000 
0001b577 l       .debug_str     00000000 
0001b595 l       .debug_str     00000000 
0001b5b2 l       .debug_str     00000000 
0001b5cf l       .debug_str     00000000 
0001b5ef l       .debug_str     00000000 
0001b60c l       .debug_str     00000000 
0001b62c l       .debug_str     00000000 
0001b646 l       .debug_str     00000000 
0001b911 l       .debug_str     00000000 
0001b87c l       .debug_str     00000000 
0001b88b l       .debug_str     00000000 
000025af l       .debug_str     00000000 
000031bd l       .debug_str     00000000 
0000334c l       .debug_str     00000000 
00001e23 l       .debug_str     00000000 
0001b65c l       .debug_str     00000000 
00003710 l       .debug_str     00000000 
00003350 l       .debug_ranges  00000000 
0001b91e l       .debug_str     00000000 
0001b897 l       .debug_str     00000000 
0001b943 l       .debug_str     00000000 
00002b9a l       .debug_str     00000000 
0001b73f l       .debug_str     00000000 
00002dc1 l       .debug_str     00000000 
0001b267 l       .debug_str     00000000 
00003370 l       .debug_ranges  00000000 
000000b4 l       .debug_str     00000000 
00000179 l       .debug_str     00000000 
00000162 l       .debug_str     00000000 
000012d7 l       .debug_str     00000000 
000037aa l       .debug_str     00000000 
0000253c l       .debug_str     00000000 
0001a6a3 l       .debug_str     00000000 
0001b6b1 l       .debug_str     00000000 
0001b89d l       .debug_str     00000000 
00003397 l       .debug_str     00000000 
0001b8bf l       .debug_str     00000000 
00001040 l       .debug_str     00000000 
0001b70f l       .debug_str     00000000 
0000353d l       .debug_str     00000000 
00002ac2 l       .debug_str     00000000 
0001bb6e l       .debug_str     00000000 
0001b8c8 l       .debug_str     00000000 
0001b8da l       .debug_str     00000000 
0001b43a l       .debug_str     00000000 
0001b6c9 l       .debug_str     00000000 
0001b8ea l       .debug_str     00000000 
0001b8fb l       .debug_str     00000000 
0001b908 l       .debug_str     00000000 
00001257 l       .debug_str     00000000 
0001b6dc l       .debug_str     00000000 
00001b32 l       .debug_str     00000000 
00001321 l       .debug_str     00000000 
0001b6ec l       .debug_str     00000000 
0001b6ff l       .debug_str     00000000 
0001b71c l       .debug_str     00000000 
00002b95 l       .debug_str     00000000 
00003388 l       .debug_ranges  00000000 
000033a0 l       .debug_ranges  00000000 
0001b929 l       .debug_str     00000000 
000033c0 l       .debug_ranges  00000000 
0001b938 l       .debug_str     00000000 
0000587c l       .debug_frame   00000000 
d000d600 l       .text  00000000 
d000d622 l       .text  00000000 
d000d698 l       .text  00000000 
d000d6a0 l       .text  00000000 
d000d6ac l       .text  00000000 
d000d702 l       .text  00000000 
d000d76a l       .text  00000000 
d000d778 l       .text  00000000 
d000d7d2 l       .text  00000000 
d000d848 l       .text  00000000 
00000000 l    df *ABS*  00000000 rnd.c
d000d848 l       .text  00000000 
d000d848 l       .text  00000000 
d000d848 l       .text  00000000 
d000d84a l       .text  00000000 
d000d84a l       .text  00000000 
d000d84c l       .text  00000000 
d000d852 l       .text  00000000 
d000d852 l       .text  00000000 
d000d856 l       .text  00000000 
d000d85a l       .text  00000000 
d000d85e l       .text  00000000 
d000d85e l       .text  00000000 
d000d860 l       .text  00000000 
d000d860 l       .text  00000000 
d000d862 l       .text  00000000 
d000d866 l       .text  00000000 
d000d866 l       .text  00000000 
d000d86a l       .text  00000000 
d000d86a l       .text  00000000 
d000d86c l       .text  00000000 
d000d86c l       .text  00000000 
d000d86e l       .text  00000000 
d000d86e l       .text  00000000 
d000d874 l       .text  00000000 
d000d874 l       .text  00000000 
00024964 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
0001b94d l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00000bf9 l       .debug_str     00000000 
00000bd4 l       .debug_str     00000000 
00000be6 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
0000291c l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
0000253c l       .debug_str     00000000 
0001a6a3 l       .debug_str     00000000 
00001321 l       .debug_str     00000000 
000031d1 l       .debug_str     00000000 
0000132c l       .debug_str     00000000 
00005984 l       .debug_frame   00000000 
d000d874 l       .text  00000000 
00000000 l    df *ABS*  00000000 epmp_state.c
d000d874 l       .text  00000000 
d000d874 l       .text  00000000 
d000d874 l       .text  00000000 
d000d874 l       .text  00000000 
d000d878 l       .text  00000000 
d000d878 l       .text  00000000 
d000d880 l       .text  00000000 
d000d884 l       .text  00000000 
d000d888 l       .text  00000000 
d000d888 l       .text  00000000 
d000d88c l       .text  00000000 
d000d88c l       .text  00000000 
d000d890 l       .text  00000000 
d000d890 l       .text  00000000 
d000d894 l       .text  00000000 
d000d894 l       .text  00000000 
d000d896 l       .text  00000000 
d000d89a l       .text  00000000 
d000d89c l       .text  00000000 
d000d8a0 l       .text  00000000 
d000d8a2 l       .text  00000000 
d000d8a4 l       .text  00000000 
d000d8a4 l       .text  00000000 
d000d8a8 l       .text  00000000 
d000d8a8 l       .text  00000000 
d000d8aa l       .text  00000000 
d000d8ae l       .text  00000000 
d000d8b0 l       .text  00000000 
d000d8b4 l       .text  00000000 
d000d8b6 l       .text  00000000 
d000d8b8 l       .text  00000000 
d000d8b8 l       .text  00000000 
d000d8bc l       .text  00000000 
d000d8bc l       .text  00000000 
d000d8be l       .text  00000000 
d000d8c2 l       .text  00000000 
d000d8c4 l       .text  00000000 
d000d8c8 l       .text  00000000 
d000d8ca l       .text  00000000 
d000d8cc l       .text  00000000 
d000d8cc l       .text  00000000 
d000d8d0 l       .text  00000000 
d000d8d0 l       .text  00000000 
d000d8d2 l       .text  00000000 
d000d8d6 l       .text  00000000 
d000d8d8 l       .text  00000000 
d000d8dc l       .text  00000000 
d000d8de l       .text  00000000 
d000d8e0 l       .text  00000000 
d000d8e0 l       .text  00000000 
d000d8e4 l       .text  00000000 
d000d8e4 l       .text  00000000 
d000d8e6 l       .text  00000000 
d000d8ea l       .text  00000000 
d000d8ec l       .text  00000000 
d000d8f0 l       .text  00000000 
d000d8f2 l       .text  00000000 
d000d8f4 l       .text  00000000 
d000d8f4 l       .text  00000000 
d000d8f8 l       .text  00000000 
d000d8f8 l       .text  00000000 
d000d8fa l       .text  00000000 
d000d8fe l       .text  00000000 
d000d900 l       .text  00000000 
d000d904 l       .text  00000000 
d000d906 l       .text  00000000 
d000d908 l       .text  00000000 
d000d908 l       .text  00000000 
d000d90c l       .text  00000000 
d000d90c l       .text  00000000 
d000d90e l       .text  00000000 
d000d912 l       .text  00000000 
d000d914 l       .text  00000000 
d000d918 l       .text  00000000 
d000d91a l       .text  00000000 
d000d91c l       .text  00000000 
d000d91c l       .text  00000000 
d000d920 l       .text  00000000 
d000d920 l       .text  00000000 
d000d922 l       .text  00000000 
d000d926 l       .text  00000000 
d000d928 l       .text  00000000 
d000d92c l       .text  00000000 
d000d92e l       .text  00000000 
d000d930 l       .text  00000000 
d000d930 l       .text  00000000 
d000d934 l       .text  00000000 
d000d934 l       .text  00000000 
d000d936 l       .text  00000000 
d000d93a l       .text  00000000 
d000d93c l       .text  00000000 
d000d940 l       .text  00000000 
d000d942 l       .text  00000000 
d000d944 l       .text  00000000 
d000d944 l       .text  00000000 
d000d948 l       .text  00000000 
d000d948 l       .text  00000000 
d000d94a l       .text  00000000 
d000d94e l       .text  00000000 
d000d950 l       .text  00000000 
d000d954 l       .text  00000000 
d000d956 l       .text  00000000 
d000d958 l       .text  00000000 
d000d958 l       .text  00000000 
d000d95c l       .text  00000000 
d000d95c l       .text  00000000 
d000d95e l       .text  00000000 
d000d962 l       .text  00000000 
d000d964 l       .text  00000000 
d000d968 l       .text  00000000 
d000d96a l       .text  00000000 
d000d96c l       .text  00000000 
d000d96c l       .text  00000000 
d000d970 l       .text  00000000 
d000d970 l       .text  00000000 
d000d972 l       .text  00000000 
d000d976 l       .text  00000000 
d000d978 l       .text  00000000 
d000d97c l       .text  00000000 
d000d97e l       .text  00000000 
d000d980 l       .text  00000000 
d000d980 l       .text  00000000 
d000d984 l       .text  00000000 
d000d984 l       .text  00000000 
d000d986 l       .text  00000000 
d000d98a l       .text  00000000 
d000d98c l       .text  00000000 
d000d990 l       .text  00000000 
d000d992 l       .text  00000000 
d000d994 l       .text  00000000 
d000d994 l       .text  00000000 
d000d998 l       .text  00000000 
d000d998 l       .text  00000000 
d000d99a l       .text  00000000 
d000d99e l       .text  00000000 
d000d9a0 l       .text  00000000 
d000d9a4 l       .text  00000000 
d000d9a6 l       .text  00000000 
d000d9a8 l       .text  00000000 
d000d9a8 l       .text  00000000 
d000d9ac l       .text  00000000 
d000d9ac l       .text  00000000 
d000d9ae l       .text  00000000 
d000d9b2 l       .text  00000000 
d000d9b4 l       .text  00000000 
d000d9b8 l       .text  00000000 
d000d9ba l       .text  00000000 
d000d9bc l       .text  00000000 
d000d9bc l       .text  00000000 
d000d9c0 l       .text  00000000 
d000d9c0 l       .text  00000000 
d000d9c2 l       .text  00000000 
d000d9c6 l       .text  00000000 
d000d9c8 l       .text  00000000 
d000d9cc l       .text  00000000 
d000d9ce l       .text  00000000 
d000d9d0 l       .text  00000000 
d000d9d0 l       .text  00000000 
d000d9d4 l       .text  00000000 
d000d9d4 l       .text  00000000 
d000d9d6 l       .text  00000000 
d000d9da l       .text  00000000 
d000d9dc l       .text  00000000 
d000d9e0 l       .text  00000000 
d000d9e2 l       .text  00000000 
d000d9e4 l       .text  00000000 
d000d9e4 l       .text  00000000 
d000d9e8 l       .text  00000000 
d000d9e8 l       .text  00000000 
d000d9ea l       .text  00000000 
d000d9ee l       .text  00000000 
d000d9f0 l       .text  00000000 
d000d9f4 l       .text  00000000 
d000d9f6 l       .text  00000000 
d000d9f8 l       .text  00000000 
d000d9f8 l       .text  00000000 
d000d9fc l       .text  00000000 
d000d9fc l       .text  00000000 
d000d9fe l       .text  00000000 
d000da02 l       .text  00000000 
d000da04 l       .text  00000000 
d000da08 l       .text  00000000 
d000da0a l       .text  00000000 
d000da0c l       .text  00000000 
d000da0c l       .text  00000000 
d000da10 l       .text  00000000 
d000da10 l       .text  00000000 
d000da12 l       .text  00000000 
d000da16 l       .text  00000000 
d000da18 l       .text  00000000 
d000da1e l       .text  00000000 
d000da1e l       .text  00000000 
d000da20 l       .text  00000000 
d000da20 l       .text  00000000 
d000da24 l       .text  00000000 
d000da24 l       .text  00000000 
d000da26 l       .text  00000000 
d000da28 l       .text  00000000 
d000da2a l       .text  00000000 
d000da2e l       .text  00000000 
d000da30 l       .text  00000000 
d000da30 l       .text  00000000 
d000da32 l       .text  00000000 
d000da32 l       .text  00000000 
d000da34 l       .text  00000000 
d000da34 l       .text  00000000 
d000da38 l       .text  00000000 
d000da38 l       .text  00000000 
d000da44 l       .text  00000000 
d000da48 l       .text  00000000 
d000da48 l       .text  00000000 
d000da4c l       .text  00000000 
d000da58 l       .text  00000000 
d000da5a l       .text  00000000 
d000da5a l       .text  00000000 
d000da5e l       .text  00000000 
d000da60 l       .text  00000000 
d000da62 l       .text  00000000 
d000da62 l       .text  00000000 
00024977 l       .debug_loc     00000000 
0002499d l       .debug_loc     00000000 
000249c3 l       .debug_loc     00000000 
000249ef l       .debug_loc     00000000 
00024a0f l       .debug_loc     00000000 
00024a2e l       .debug_loc     00000000 
00024a4e l       .debug_loc     00000000 
00024a74 l       .debug_loc     00000000 
00024a8f l       .debug_loc     00000000 
00024aaa l       .debug_loc     00000000 
00024ac7 l       .debug_loc     00000000 
00024ae7 l       .debug_loc     00000000 
00024b06 l       .debug_loc     00000000 
00024b26 l       .debug_loc     00000000 
00024b4c l       .debug_loc     00000000 
00024b67 l       .debug_loc     00000000 
00024b82 l       .debug_loc     00000000 
00024baf l       .debug_loc     00000000 
00024bca l       .debug_loc     00000000 
00024bea l       .debug_loc     00000000 
00024c09 l       .debug_loc     00000000 
00024c29 l       .debug_loc     00000000 
00024c4f l       .debug_loc     00000000 
00024c8d l       .debug_loc     00000000 
00024ca8 l       .debug_loc     00000000 
00024cc3 l       .debug_loc     00000000 
00024cde l       .debug_loc     00000000 
00024cf9 l       .debug_loc     00000000 
00024d14 l       .debug_loc     00000000 
00024d2f l       .debug_loc     00000000 
00024d4a l       .debug_loc     00000000 
00024d65 l       .debug_loc     00000000 
00024d80 l       .debug_loc     00000000 
00024d9b l       .debug_loc     00000000 
00024db6 l       .debug_loc     00000000 
00024dd1 l       .debug_loc     00000000 
00024dec l       .debug_loc     00000000 
00024e07 l       .debug_loc     00000000 
00024e22 l       .debug_loc     00000000 
00024e3d l       .debug_loc     00000000 
00024e58 l       .debug_loc     00000000 
00024e73 l       .debug_loc     00000000 
00024e8e l       .debug_loc     00000000 
00024ea9 l       .debug_loc     00000000 
00024ec4 l       .debug_loc     00000000 
00024eea l       .debug_loc     00000000 
00024f21 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
0001b979 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00003448 l       .debug_ranges  00000000 
0001a58c l       .debug_str     00000000 
0001a5ae l       .debug_str     00000000 
0001a597 l       .debug_str     00000000 
0001a59e l       .debug_str     00000000 
0001a5a6 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
00000bca l       .debug_str     00000000 
000007b6 l       .debug_str     00000000 
000007bf l       .debug_str     00000000 
000007cd l       .debug_str     00000000 
000007ee l       .debug_str     00000000 
00000804 l       .debug_str     00000000 
00000820 l       .debug_str     00000000 
00000835 l       .debug_str     00000000 
00000851 l       .debug_str     00000000 
0000086d l       .debug_str     00000000 
00000881 l       .debug_str     00000000 
00000895 l       .debug_str     00000000 
000008aa l       .debug_str     00000000 
000008c3 l       .debug_str     00000000 
000008d7 l       .debug_str     00000000 
000008eb l       .debug_str     00000000 
000008fb l       .debug_str     00000000 
0000090e l       .debug_str     00000000 
00000928 l       .debug_str     00000000 
0000093f l       .debug_str     00000000 
00000959 l       .debug_str     00000000 
00000975 l       .debug_str     00000000 
00000991 l       .debug_str     00000000 
000009a8 l       .debug_str     00000000 
000009be l       .debug_str     00000000 
000009d6 l       .debug_str     00000000 
000009ee l       .debug_str     00000000 
00000a07 l       .debug_str     00000000 
00000a20 l       .debug_str     00000000 
00000a39 l       .debug_str     00000000 
00000a52 l       .debug_str     00000000 
00000a71 l       .debug_str     00000000 
00000a8f l       .debug_str     00000000 
00000aa9 l       .debug_str     00000000 
00000ac2 l       .debug_str     00000000 
00000ade l       .debug_str     00000000 
00000afc l       .debug_str     00000000 
00000b18 l       .debug_str     00000000 
00000b34 l       .debug_str     00000000 
00000b50 l       .debug_str     00000000 
00000b67 l       .debug_str     00000000 
00000b80 l       .debug_str     00000000 
00000b96 l       .debug_str     00000000 
00000bb5 l       .debug_str     00000000 
0000189d l       .debug_str     00000000 
0001b9a4 l       .debug_str     00000000 
0001b9b1 l       .debug_str     00000000 
000031bd l       .debug_str     00000000 
0001b9b8 l       .debug_str     00000000 
00004e34 l       .debug_str     00000000 
0000127f l       .debug_str     00000000 
0001ae6c l       .debug_str     00000000 
0001add6 l       .debug_str     00000000 
0001ade8 l       .debug_str     00000000 
0001ae00 l       .debug_str     00000000 
0001ae18 l       .debug_str     00000000 
0001ae31 l       .debug_str     00000000 
0001ae4c l       .debug_str     00000000 
0001aeac l       .debug_str     00000000 
0001ae76 l       .debug_str     00000000 
0001ae83 l       .debug_str     00000000 
0001ae90 l       .debug_str     00000000 
0001ae9d l       .debug_str     00000000 
00000175 l       .debug_str     00000000 
0000129c l       .debug_str     00000000 
000010d4 l       .debug_str     00000000 
00003912 l       .debug_str     00000000 
0001bb6e l       .debug_str     00000000 
000012c4 l       .debug_str     00000000 
000012b3 l       .debug_str     00000000 
0001a4da l       .debug_str     00000000 
000020fd l       .debug_str     00000000 
0001aeb6 l       .debug_str     00000000 
000020ec l       .debug_str     00000000 
00000292 l       .debug_str     00000000 
0001ae71 l       .debug_str     00000000 
0001aef6 l       .debug_str     00000000 
0001aedb l       .debug_str     00000000 
0001aa41 l       .debug_str     00000000 
000012d7 l       .debug_str     00000000 
000037aa l       .debug_str     00000000 
00001257 l       .debug_str     00000000 
0001aecf l       .debug_str     00000000 
000017b5 l       .debug_str     00000000 
000017a9 l       .debug_str     00000000 
0001b320 l       .debug_str     00000000 
0001b330 l       .debug_str     00000000 
00000fc6 l       .debug_str     00000000 
000059b0 l       .debug_frame   00000000 
d000da62 l       .text  00000000 
00000000 l    df *ABS*  00000000 hmac.c
d000da62 l       .text  00000000 
d000da62 l       .text  00000000 
d000da62 l       .text  00000000 
d000da66 l       .text  00000000 
d000da66 l       .text  00000000 
d000da6a l       .text  00000000 
d000da6a l       .text  00000000 
d000da70 l       .text  00000000 
d000da70 l       .text  00000000 
d000da74 l       .text  00000000 
d000da74 l       .text  00000000 
d000da78 l       .text  00000000 
d000da78 l       .text  00000000 
d000da7a l       .text  00000000 
d000da7a l       .text  00000000 
d000da7c l       .text  00000000 
d000da7c l       .text  00000000 
d000da7c l       .text  00000000 
d000da7c l       .text  00000000 
d000da7c l       .text  00000000 
d000da7c l       .text  00000000 
d000da80 l       .text  00000000 
d000da8a l       .text  00000000 
d000da94 l       .text  00000000 
d000da94 l       .text  00000000 
d000da98 l       .text  00000000 
d000da9c l       .text  00000000 
d000da9c l       .text  00000000 
d000daa0 l       .text  00000000 
d000daa0 l       .text  00000000 
d000daa2 l       .text  00000000 
d000daa6 l       .text  00000000 
d000dab0 l       .text  00000000 
d000dab8 l       .text  00000000 
d000dab8 l       .text  00000000 
d000daba l       .text  00000000 
d000dabc l       .text  00000000 
d000dac0 l       .text  00000000 
d000dac6 l       .text  00000000 
d000dac6 l       .text  00000000 
d000dac8 l       .text  00000000 
d000dac8 l       .text  00000000 
d000dacc l       .text  00000000 
d000dacc l       .text  00000000 
d000dace l       .text  00000000 
d000dace l       .text  00000000 
d000dad0 l       .text  00000000 
d000dad0 l       .text  00000000 
d000dad4 l       .text  00000000 
d000dad4 l       .text  00000000 
d000dada l       .text  00000000 
d000dade l       .text  00000000 
d000dae0 l       .text  00000000 
d000dae2 l       .text  00000000 
d000dae2 l       .text  00000000 
d000dae8 l       .text  00000000 
d000dae8 l       .text  00000000 
d000daea l       .text  00000000 
d000daea l       .text  00000000 
d000daea l       .text  00000000 
d000daea l       .text  00000000 
d000daea l       .text  00000000 
d000daf4 l       .text  00000000 
d000daf4 l       .text  00000000 
d000daf6 l       .text  00000000 
d000daf6 l       .text  00000000 
d000daf8 l       .text  00000000 
d000daf8 l       .text  00000000 
d000dafc l       .text  00000000 
d000dafc l       .text  00000000 
d000dafe l       .text  00000000 
d000db04 l       .text  00000000 
d000db04 l       .text  00000000 
d000db0a l       .text  00000000 
d000db0a l       .text  00000000 
d000db0e l       .text  00000000 
d000db0e l       .text  00000000 
d000db10 l       .text  00000000 
d000db10 l       .text  00000000 
d000db16 l       .text  00000000 
d000db16 l       .text  00000000 
d000db18 l       .text  00000000 
d000db1a l       .text  00000000 
d000db1e l       .text  00000000 
d000db1e l       .text  00000000 
d000db20 l       .text  00000000 
d000db20 l       .text  00000000 
00024f47 l       .debug_loc     00000000 
00024f6f l       .debug_loc     00000000 
00024f95 l       .debug_loc     00000000 
00024fd1 l       .debug_loc     00000000 
00024fec l       .debug_loc     00000000 
00025013 l       .debug_loc     00000000 
0002502e l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
0001b9bd l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00003488 l       .debug_ranges  00000000 
000001ce l       .debug_str     00000000 
000001c0 l       .debug_str     00000000 
00000fc6 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
00002ac2 l       .debug_str     00000000 
0001a6a3 l       .debug_str     00000000 
0001bb6e l       .debug_str     00000000 
0000171e l       .debug_str     00000000 
0000334c l       .debug_str     00000000 
0001b9ea l       .debug_str     00000000 
0000219f l       .debug_str     00000000 
0001b17a l       .debug_str     00000000 
000037aa l       .debug_str     00000000 
0000172f l       .debug_str     00000000 
00001937 l       .debug_str     00000000 
0001aa41 l       .debug_str     00000000 
0001b9fa l       .debug_str     00000000 
00003470 l       .debug_ranges  00000000 
0001ba04 l       .debug_str     00000000 
0000253c l       .debug_str     00000000 
000025c4 l       .debug_str     00000000 
000010d4 l       .debug_str     00000000 
00006501 l       .debug_str     00000000 
00001040 l       .debug_str     00000000 
0000182c l       .debug_str     00000000 
00001762 l       .debug_str     00000000 
0000014d l       .debug_str     00000000 
0001b267 l       .debug_str     00000000 
00003401 l       .debug_str     00000000 
00000154 l       .debug_str     00000000 
00000148 l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
00005a04 l       .debug_frame   00000000 
d000da7c l       .text  00000000 
d000daea l       .text  00000000 
d000db20 l       .text  00000000 
00000000 l    df *ABS*  00000000 lifecycle.c
d000db20 l       .text  00000000 
d000db20 l       .text  00000000 
d000db20 l       .text  00000000 
d000db22 l       .text  00000000 
d000db24 l       .text  00000000 
d000db2c l       .text  00000000 
d000db2c l       .text  00000000 
d000db2e l       .text  00000000 
d000db2e l       .text  00000000 
d000db34 l       .text  00000000 
d000db34 l       .text  00000000 
d000db36 l       .text  00000000 
d000db36 l       .text  00000000 
d000db38 l       .text  00000000 
d000db38 l       .text  00000000 
d000db40 l       .text  00000000 
d000db40 l       .text  00000000 
d000db44 l       .text  00000000 
d000db44 l       .text  00000000 
d000db4c l       .text  00000000 
d000db50 l       .text  00000000 
d000db58 l       .text  00000000 
d000db5c l       .text  00000000 
d000db64 l       .text  00000000 
d000db68 l       .text  00000000 
d000db76 l       .text  00000000 
d000db7e l       .text  00000000 
d000db82 l       .text  00000000 
d000db8a l       .text  00000000 
d000db8e l       .text  00000000 
d000db96 l       .text  00000000 
d000db9a l       .text  00000000 
d000dba8 l       .text  00000000 
d000dbac l       .text  00000000 
d000dbb0 l       .text  00000000 
d000dbb8 l       .text  00000000 
d000dbbc l       .text  00000000 
d000dbca l       .text  00000000 
d000dbce l       .text  00000000 
d000dbd2 l       .text  00000000 
d000dbda l       .text  00000000 
d000dbde l       .text  00000000 
d000dbee l       .text  00000000 
d000dbee l       .text  00000000 
d000dbf4 l       .text  00000000 
d000dbf4 l       .text  00000000 
d000dc02 l       .text  00000000 
d000dc10 l       .text  00000000 
d000dc18 l       .text  00000000 
d000dc26 l       .text  00000000 
d000dc2e l       .text  00000000 
d000dc3e l       .text  00000000 
d000dc3e l       .text  00000000 
d000dc44 l       .text  00000000 
d000dc4c l       .text  00000000 
d000dc50 l       .text  00000000 
d000dc5e l       .text  00000000 
d000dc66 l       .text  00000000 
d000dc6a l       .text  00000000 
d000dc7a l       .text  00000000 
d000dc7a l       .text  00000000 
d000dc80 l       .text  00000000 
d000dc88 l       .text  00000000 
d000dc8c l       .text  00000000 
d000dc98 l       .text  00000000 
d000dc9c l       .text  00000000 
d000dca0 l       .text  00000000 
d000dca6 l       .text  00000000 
d000dca6 l       .text  00000000 
d000dcae l       .text  00000000 
d000dcb2 l       .text  00000000 
d000dcc2 l       .text  00000000 
d000dcc2 l       .text  00000000 
d000dcc8 l       .text  00000000 
d000dcc8 l       .text  00000000 
d000dcd0 l       .text  00000000 
d000dcd0 l       .text  00000000 
d000dcd0 l       .text  00000000 
d000dcd0 l       .text  00000000 
d000dcd0 l       .text  00000000 
d000dcd2 l       .text  00000000 
d000dcdc l       .text  00000000 
d000dcde l       .text  00000000 
d000dcec l       .text  00000000 
d000dcec l       .text  00000000 
d000dcf2 l       .text  00000000 
d000dcf2 l       .text  00000000 
d000dcf6 l       .text  00000000 
d000dcf8 l       .text  00000000 
d000dcf8 l       .text  00000000 
d000dcfa l       .text  00000000 
d000dcfa l       .text  00000000 
d000dcfe l       .text  00000000 
d000dcfe l       .text  00000000 
d000dd02 l       .text  00000000 
d000dd0c l       .text  00000000 
d000dd0c l       .text  00000000 
d000dd0c l       .text  00000000 
d000dd0c l       .text  00000000 
d000dd0c l       .text  00000000 
d000dd0e l       .text  00000000 
d000dd12 l       .text  00000000 
d000dd14 l       .text  00000000 
d000dd1c l       .text  00000000 
d000dd1e l       .text  00000000 
d000dd1e l       .text  00000000 
d000dd22 l       .text  00000000 
d000dd22 l       .text  00000000 
d000dd2a l       .text  00000000 
d000dd2c l       .text  00000000 
d000dd32 l       .text  00000000 
d000dd32 l       .text  00000000 
00025061 l       .debug_loc     00000000 
00025088 l       .debug_loc     00000000 
000250ae l       .debug_loc     00000000 
00025100 l       .debug_loc     00000000 
00025127 l       .debug_loc     00000000 
00025142 l       .debug_loc     00000000 
00025168 l       .debug_loc     00000000 
0002519b l       .debug_loc     00000000 
000251c1 l       .debug_loc     00000000 
000251e6 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
0001ba11 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
000034a8 l       .debug_ranges  00000000 
0000011c l       .debug_str     00000000 
000000da l       .debug_str     00000000 
000000e7 l       .debug_str     00000000 
000000f3 l       .debug_str     00000000 
00000100 l       .debug_str     00000000 
00000110 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
0000291c l       .debug_str     00000000 
0001b022 l       .debug_str     00000000 
0001ba43 l       .debug_str     00000000 
0001bb6e l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
00002b63 l       .debug_str     00000000 
000010d4 l       .debug_str     00000000 
00003912 l       .debug_str     00000000 
000012c4 l       .debug_str     00000000 
000012b3 l       .debug_str     00000000 
0001a4da l       .debug_str     00000000 
000020fd l       .debug_str     00000000 
000012d7 l       .debug_str     00000000 
000037aa l       .debug_str     00000000 
00001337 l       .debug_str     00000000 
00003194 l       .debug_str     00000000 
0000352d l       .debug_str     00000000 
0001b1b1 l       .debug_str     00000000 
00001533 l       .debug_str     00000000 
0001b267 l       .debug_str     00000000 
00002b22 l       .debug_str     00000000 
00002b5c l       .debug_str     00000000 
0000334c l       .debug_str     00000000 
0000012c l       .debug_str     00000000 
0000153d l       .debug_str     00000000 
00001529 l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
00003401 l       .debug_str     00000000 
00002b82 l       .debug_str     00000000 
00002b52 l       .debug_str     00000000 
00002b37 l       .debug_str     00000000 
00002b49 l       .debug_str     00000000 
00002b40 l       .debug_str     00000000 
00001312 l       .debug_str     00000000 
00005a48 l       .debug_frame   00000000 
d000dcd0 l       .text  00000000 
d000dd0c l       .text  00000000 
d000dd32 l       .text  00000000 
00000000 l    df *ABS*  00000000 otp.c
d000dd32 l       .text  00000000 
d000dd32 l       .text  00000000 
d000dd32 l       .text  00000000 
d000dd36 l       .text  00000000 
d000dd38 l       .text  00000000 
d000dd38 l       .text  00000000 
d000dd3a l       .text  00000000 
d000dd3a l       .text  00000000 
d000dd3a l       .text  00000000 
00025201 l       .debug_loc     00000000 
0002521c l       .debug_loc     00000000 
00025237 l       .debug_loc     00000000 
00025255 l       .debug_loc     00000000 
00025291 l       .debug_loc     00000000 
000252ac l       .debug_loc     00000000 
000252d2 l       .debug_loc     00000000 
000252f8 l       .debug_loc     00000000 
00025316 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
0001ba5b l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
000034d0 l       .debug_ranges  00000000 
0000291c l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
0000132c l       .debug_str     00000000 
00006907 l       .debug_str     00000000 
0000352d l       .debug_str     00000000 
0001ba87 l       .debug_str     00000000 
00002ae9 l       .debug_str     00000000 
0001bb6e l       .debug_str     00000000 
0001ba92 l       .debug_str     00000000 
00001937 l       .debug_str     00000000 
0001b73f l       .debug_str     00000000 
0001b267 l       .debug_str     00000000 
0001ba9b l       .debug_str     00000000 
0000353d l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
00000179 l       .debug_str     00000000 
00000162 l       .debug_str     00000000 
00003401 l       .debug_str     00000000 
00005ac4 l       .debug_frame   00000000 
d000dd3a l       .text  00000000 
00000000 l    df *ABS*  00000000 sec_mmio.c
d000dd3a l       .text  00000000 
d000dd3a l       .text  00000000 
d000dd3a l       .text  00000000 
d000dd3a l       .text  00000000 
d000dd3c l       .text  00000000 
d000dd3c l       .text  00000000 
d000dd3e l       .text  00000000 
d000dd3e l       .text  00000000 
d000dd40 l       .text  00000000 
d000dd40 l       .text  00000000 
d000dd42 l       .text  00000000 
d000dd42 l       .text  00000000 
d000dd42 l       .text  00000000 
d000dd42 l       .text  00000000 
d000dd4a l       .text  00000000 
d000dd4c l       .text  00000000 
d000dd4c l       .text  00000000 
d000dd4c l       .text  00000000 
d000dd4c l       .text  00000000 
d000dd4e l       .text  00000000 
d000dd4e l       .text  00000000 
d000dd4e l       .text  00000000 
d000dd4e l       .text  00000000 
d000dd50 l       .text  00000000 
d000dd50 l       .text  00000000 
d000dd50 l       .text  00000000 
d000dd50 l       .text  00000000 
d000dd58 l       .text  00000000 
d000dd58 l       .text  00000000 
d000dd60 l       .text  00000000 
d000dd62 l       .text  00000000 
d000dd62 l       .text  00000000 
d000dd64 l       .text  00000000 
d000dd66 l       .text  00000000 
d000dd68 l       .text  00000000 
d000dd68 l       .text  00000000 
d000dd70 l       .text  00000000 
d000dd72 l       .text  00000000 
d000dd72 l       .text  00000000 
d000dd74 l       .text  00000000 
d000dd74 l       .text  00000000 
d000dd76 l       .text  00000000 
d000dd78 l       .text  00000000 
d000dd86 l       .text  00000000 
d000dd86 l       .text  00000000 
d000dd92 l       .text  00000000 
d000dd94 l       .text  00000000 
d000dd94 l       .text  00000000 
d000dd94 l       .text  00000000 
d000dd94 l       .text  00000000 
d000dd94 l       .text  00000000 
d000dd96 l       .text  00000000 
d000dda0 l       .text  00000000 
d000dda2 l       .text  00000000 
d000dda2 l       .text  00000000 
d000dda6 l       .text  00000000 
d000dda6 l       .text  00000000 
d000ddae l       .text  00000000 
d000ddae l       .text  00000000 
d000ddb2 l       .text  00000000 
d000ddb2 l       .text  00000000 
d000ddb2 l       .text  00000000 
d000ddb2 l       .text  00000000 
d000ddda l     F .text  0000006e upsert_register
d000ddb8 l       .text  00000000 
d000ddb8 l       .text  00000000 
d000ddba l       .text  00000000 
d000ddba l       .text  00000000 
d000ddca l       .text  00000000 
d000ddd0 l       .text  00000000 
d000ddd2 l       .text  00000000 
d000ddd4 l       .text  00000000 
d000ddda l       .text  00000000 
d000ddda l       .text  00000000 
d000ddda l       .text  00000000 
d000ddda l       .text  00000000 
d000ddda l       .text  00000000 
d000ddda l       .text  00000000 
d000dde6 l       .text  00000000 
d000dde6 l       .text  00000000 
d000dde8 l       .text  00000000 
d000dde8 l       .text  00000000 
d000ddea l       .text  00000000 
d000ddea l       .text  00000000 
d000ddee l       .text  00000000 
d000ddee l       .text  00000000 
d000ddf2 l       .text  00000000 
d000ddf2 l       .text  00000000 
d000ddfa l       .text  00000000 
d000ddfe l       .text  00000000 
d000de00 l       .text  00000000 
d000de00 l       .text  00000000 
d000de02 l       .text  00000000 
d000de02 l       .text  00000000 
d000de0a l       .text  00000000 
d000de0a l       .text  00000000 
d000de0c l       .text  00000000 
d000de0c l       .text  00000000 
d000de0e l       .text  00000000 
d000de0e l       .text  00000000 
d000de12 l       .text  00000000 
d000de12 l       .text  00000000 
d000de14 l       .text  00000000 
d000de14 l       .text  00000000 
d000de18 l       .text  00000000 
d000de18 l       .text  00000000 
d000de1c l       .text  00000000 
d000de1c l       .text  00000000 
d000de26 l       .text  00000000 
d000de2a l       .text  00000000 
d000de2c l       .text  00000000 
d000de30 l       .text  00000000 
d000de36 l       .text  00000000 
d000de3a l       .text  00000000 
d000de46 l       .text  00000000 
d000de48 l       .text  00000000 
d000de48 l       .text  00000000 
d000de48 l       .text  00000000 
d000de48 l       .text  00000000 
d000de48 l       .text  00000000 
d000de4a l       .text  00000000 
d000de52 l       .text  00000000 
d000de54 l       .text  00000000 
d000de54 l       .text  00000000 
d000de5e l       .text  00000000 
d000de5e l       .text  00000000 
d000de62 l       .text  00000000 
d000de62 l       .text  00000000 
d000de62 l       .text  00000000 
d000de62 l       .text  00000000 
d000de66 l       .text  00000000 
d000de68 l       .text  00000000 
d000de68 l       .text  00000000 
d000de6a l       .text  00000000 
d000de6a l       .text  00000000 
d000de7a l       .text  00000000 
d000de7a l       .text  00000000 
d000de82 l       .text  00000000 
d000de88 l       .text  00000000 
d000de94 l       .text  00000000 
d000de94 l       .text  00000000 
d000de94 l       .text  00000000 
d000de94 l       .text  00000000 
d000de94 l       .text  00000000 
d000de96 l       .text  00000000 
d000de9e l       .text  00000000 
d000dea0 l       .text  00000000 
d000dea0 l       .text  00000000 
d000dea2 l       .text  00000000 
d000dea2 l       .text  00000000 
d000deac l       .text  00000000 
d000deac l       .text  00000000 
d000deb0 l       .text  00000000 
d000deb0 l       .text  00000000 
d000deb0 l       .text  00000000 
d000deb0 l       .text  00000000 
d000deb4 l       .text  00000000 
d000deb6 l       .text  00000000 
d000deb6 l       .text  00000000 
d000deb8 l       .text  00000000 
d000deb8 l       .text  00000000 
d000dec8 l       .text  00000000 
d000dec8 l       .text  00000000 
d000ded0 l       .text  00000000 
d000ded6 l       .text  00000000 
d000dee2 l       .text  00000000 
d000dee2 l       .text  00000000 
d000dee2 l       .text  00000000 
d000dee2 l       .text  00000000 
d000dee2 l       .text  00000000 
d000dee2 l       .text  00000000 
d000deee l       .text  00000000 
d000deee l       .text  00000000 
d000def0 l       .text  00000000 
d000def0 l       .text  00000000 
d000def2 l       .text  00000000 
d000def2 l       .text  00000000 
d000def6 l       .text  00000000 
d000def6 l       .text  00000000 
d000def8 l       .text  00000000 
d000defc l       .text  00000000 
d000defc l       .text  00000000 
d000df00 l       .text  00000000 
d000df04 l       .text  00000000 
d000df04 l       .text  00000000 
d000df12 l       .text  00000000 
d000df12 l       .text  00000000 
d000df14 l       .text  00000000 
d000df14 l       .text  00000000 
d000df1c l       .text  00000000 
d000df1c l       .text  00000000 
d000df1e l       .text  00000000 
d000df2a l       .text  00000000 
d000df2e l       .text  00000000 
d000df2e l       .text  00000000 
d000df30 l       .text  00000000 
d000df32 l       .text  00000000 
d000df32 l       .text  00000000 
d000df34 l       .text  00000000 
d000df34 l       .text  00000000 
d000df36 l       .text  00000000 
d000df36 l       .text  00000000 
d000df3a l       .text  00000000 
d000df3a l       .text  00000000 
d000df46 l       .text  00000000 
d000df50 l       .text  00000000 
d000df52 l       .text  00000000 
d000df52 l       .text  00000000 
d000df52 l       .text  00000000 
d000df52 l       .text  00000000 
d000df52 l       .text  00000000 
d000df5a l       .text  00000000 
d000df5a l       .text  00000000 
d000df5c l       .text  00000000 
d000df5c l       .text  00000000 
d000df64 l       .text  00000000 
d000df66 l       .text  00000000 
d000df68 l       .text  00000000 
d000df6a l       .text  00000000 
d000df6a l       .text  00000000 
d000df6c l       .text  00000000 
d000df78 l       .text  00000000 
d000df7a l       .text  00000000 
d000df7a l       .text  00000000 
d000df7c l       .text  00000000 
d000df7e l       .text  00000000 
d000df7e l       .text  00000000 
d000df7e l       .text  00000000 
d000df7e l       .text  00000000 
d000df96 l       .text  00000000 
d000df9c l       .text  00000000 
d000df9e l       .text  00000000 
d000df9e l       .text  00000000 
00025332 l       .debug_loc     00000000 
00025359 l       .debug_loc     00000000 
00025380 l       .debug_loc     00000000 
000253a7 l       .debug_loc     00000000 
000253e2 l       .debug_loc     00000000 
00025411 l       .debug_loc     00000000 
0002542c l       .debug_loc     00000000 
00025452 l       .debug_loc     00000000 
0002546d l       .debug_loc     00000000 
00025488 l       .debug_loc     00000000 
000254a3 l       .debug_loc     00000000 
000254e0 l       .debug_loc     00000000 
00025507 l       .debug_loc     00000000 
00025522 l       .debug_loc     00000000 
00025548 l       .debug_loc     00000000 
0002556e l       .debug_loc     00000000 
00025594 l       .debug_loc     00000000 
000255af l       .debug_loc     00000000 
000255ca l       .debug_loc     00000000 
000255f0 l       .debug_loc     00000000 
0002560b l       .debug_loc     00000000 
00025626 l       .debug_loc     00000000 
00025641 l       .debug_loc     00000000 
0002567e l       .debug_loc     00000000 
000256a5 l       .debug_loc     00000000 
000256c0 l       .debug_loc     00000000 
000256db l       .debug_loc     00000000 
000256f6 l       .debug_loc     00000000 
00025711 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
0001bab7 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
000035b8 l       .debug_ranges  00000000 
0001a5f9 l       .debug_str     00000000 
0001a62c l       .debug_str     00000000 
0001a606 l       .debug_str     00000000 
0001a61a l       .debug_str     00000000 
0001a611 l       .debug_str     00000000 
0001bb7d l       .debug_str     00000000 
00001454 l       .debug_str     00000000 
0001a626 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
0001bae5 l       .debug_str     00000000 
0001baf5 l       .debug_str     00000000 
0001bb05 l       .debug_str     00000000 
00001445 l       .debug_str     00000000 
0001b897 l       .debug_str     00000000 
0001bb5e l       .debug_str     00000000 
0001b267 l       .debug_str     00000000 
0001bb62 l       .debug_str     00000000 
00003588 l       .debug_ranges  00000000 
000035a0 l       .debug_ranges  00000000 
0001bb69 l       .debug_str     00000000 
0001bb14 l       .debug_str     00000000 
00000179 l       .debug_str     00000000 
00000162 l       .debug_str     00000000 
000012d7 l       .debug_str     00000000 
000037aa l       .debug_str     00000000 
000012e1 l       .debug_str     00000000 
00001900 l       .debug_str     00000000 
000034f8 l       .debug_ranges  00000000 
00003510 l       .debug_ranges  00000000 
00003528 l       .debug_ranges  00000000 
00003540 l       .debug_ranges  00000000 
0001bb28 l       .debug_str     00000000 
00003558 l       .debug_ranges  00000000 
0000253c l       .debug_str     00000000 
0001a6a3 l       .debug_str     00000000 
00001244 l       .debug_str     00000000 
0000352d l       .debug_str     00000000 
0001bb6e l       .debug_str     00000000 
0001bb51 l       .debug_str     00000000 
0001bb41 l       .debug_str     00000000 
00003570 l       .debug_ranges  00000000 
00002ac2 l       .debug_str     00000000 
0000353d l       .debug_str     00000000 
00003558 l       .debug_str     00000000 
0000145b l       .debug_str     00000000 
0001bb74 l       .debug_str     00000000 
0000032a l       .debug_str     00000000 
00003401 l       .debug_str     00000000 
00005b30 l       .debug_frame   00000000 
d000dd94 l       .text  00000000 
d000ddda l       .text  00000000 
d000de48 l       .text  00000000 
d000de94 l       .text  00000000 
d000dee2 l       .text  00000000 
d000df52 l       .text  00000000 
d000df9e l       .text  00000000 
00000000 l    df *ABS*  00000000 memory.c
d000df9e l       .text  00000000 
d000df9e l       .text  00000000 
d000df9e l       .text  00000000 
d000df9e l       .text  00000000 
d000dfa6 l       .text  00000000 
d000dfaa l       .text  00000000 
d000dfaa l       .text  00000000 
d000dfae l       .text  00000000 
d000dfae l       .text  00000000 
d000dfb2 l       .text  00000000 
d000dfb2 l       .text  00000000 
d000dfbe l       .text  00000000 
d000dfc0 l       .text  00000000 
d000dfc0 l       .text  00000000 
d000dfc6 l       .text  00000000 
d000dfc6 l       .text  00000000 
d000dfca l       .text  00000000 
d000dfcc l       .text  00000000 
d000dfd0 l       .text  00000000 
d000dfd0 l       .text  00000000 
d000dfd2 l       .text  00000000 
d000dfd2 l       .text  00000000 
d000dfd4 l       .text  00000000 
d000dfd4 l       .text  00000000 
d000dfdc l       .text  00000000 
d000dfe0 l       .text  00000000 
d000dfe2 l       .text  00000000 
d000dfe6 l       .text  00000000 
d000dfea l       .text  00000000 
d000dfea l       .text  00000000 
d000dfee l       .text  00000000 
d000dfee l       .text  00000000 
d000dff2 l       .text  00000000 
d000dff4 l       .text  00000000 
d000dff4 l       .text  00000000 
d000dff8 l       .text  00000000 
d000dff8 l       .text  00000000 
d000dffa l       .text  00000000 
d000dffa l       .text  00000000 
d000dffc l       .text  00000000 
d000dffc l       .text  00000000 
d000e000 l       .text  00000000 
d000e000 l       .text  00000000 
d000e004 l       .text  00000000 
d000e006 l       .text  00000000 
d000e00c l       .text  00000000 
d000e00c l       .text  00000000 
d000e010 l       .text  00000000 
d000e014 l       .text  00000000 
d000e01c l       .text  00000000 
d000e01c l       .text  00000000 
d000e01e l       .text  00000000 
d000e01e l       .text  00000000 
d000e020 l       .text  00000000 
d000e020 l       .text  00000000 
d000e026 l       .text  00000000 
d000e026 l       .text  00000000 
d000e026 l       .text  00000000 
d000e026 l       .text  00000000 
d000e026 l       .text  00000000 
d000e02a l       .text  00000000 
d000e02a l       .text  00000000 
d000e02e l       .text  00000000 
d000e02e l       .text  00000000 
d000e036 l       .text  00000000 
d000e036 l       .text  00000000 
d000e03a l       .text  00000000 
d000e03e l       .text  00000000 
d000e03e l       .text  00000000 
d000e040 l       .text  00000000 
d000e040 l       .text  00000000 
d000e044 l       .text  00000000 
d000e044 l       .text  00000000 
d000e048 l       .text  00000000 
d000e048 l       .text  00000000 
d000e04a l       .text  00000000 
d000e04c l       .text  00000000 
d000e04e l       .text  00000000 
d000e04e l       .text  00000000 
d000e052 l       .text  00000000 
d000e056 l       .text  00000000 
d000e066 l       .text  00000000 
d000e066 l       .text  00000000 
d000e06a l       .text  00000000 
d000e06a l       .text  00000000 
d000e06c l       .text  00000000 
d000e06c l       .text  00000000 
d000e06e l       .text  00000000 
d000e06e l       .text  00000000 
d000e072 l       .text  00000000 
d000e072 l       .text  00000000 
d000e078 l       .text  00000000 
d000e07c l       .text  00000000 
d000e07c l       .text  00000000 
d000e080 l       .text  00000000 
d000e084 l       .text  00000000 
d000e086 l       .text  00000000 
d000e088 l       .text  00000000 
d000e088 l       .text  00000000 
d000e088 l       .text  00000000 
d000e088 l       .text  00000000 
d000e088 l       .text  00000000 
d000e08c l       .text  00000000 
d000e08c l       .text  00000000 
d000e090 l       .text  00000000 
d000e090 l       .text  00000000 
d000e09e l       .text  00000000 
d000e0a2 l       .text  00000000 
d000e0a2 l       .text  00000000 
d000e0ae l       .text  00000000 
d000e0ae l       .text  00000000 
d000e0b2 l       .text  00000000 
d000e0b4 l       .text  00000000 
d000e0b8 l       .text  00000000 
d000e0b8 l       .text  00000000 
d000e0ba l       .text  00000000 
d000e0ba l       .text  00000000 
d000e0be l       .text  00000000 
d000e0be l       .text  00000000 
d000e0c0 l       .text  00000000 
d000e0c8 l       .text  00000000 
d000e0c8 l       .text  00000000 
d000e0cc l       .text  00000000 
d000e0cc l       .text  00000000 
d000e0d4 l       .text  00000000 
d000e0dc l       .text  00000000 
d000e0e0 l       .text  00000000 
d000e0e2 l       .text  00000000 
d000e0e2 l       .text  00000000 
d000e0e8 l       .text  00000000 
d000e0e8 l       .text  00000000 
d000e0ea l       .text  00000000 
d000e0ec l       .text  00000000 
d000e0ec l       .text  00000000 
d000e0f0 l       .text  00000000 
d000e0f0 l       .text  00000000 
d000e0f4 l       .text  00000000 
d000e0f6 l       .text  00000000 
d000e0f6 l       .text  00000000 
d000e0fa l       .text  00000000 
d000e0fc l       .text  00000000 
d000e0fc l       .text  00000000 
d000e100 l       .text  00000000 
d000e100 l       .text  00000000 
d000e102 l       .text  00000000 
d000e102 l       .text  00000000 
d000e106 l       .text  00000000 
d000e10a l       .text  00000000 
d000e10c l       .text  00000000 
d000e10c l       .text  00000000 
d000e114 l       .text  00000000 
d000e11c l       .text  00000000 
d000e120 l       .text  00000000 
d000e122 l       .text  00000000 
d000e122 l       .text  00000000 
d000e126 l       .text  00000000 
d000e126 l       .text  00000000 
d000e128 l       .text  00000000 
d000e12a l       .text  00000000 
d000e12c l       .text  00000000 
d000e12c l       .text  00000000 
d000e130 l       .text  00000000 
d000e132 l       .text  00000000 
d000e132 l       .text  00000000 
d000e132 l       .text  00000000 
d000e132 l       .text  00000000 
d000e132 l       .text  00000000 
d000e136 l       .text  00000000 
d000e136 l       .text  00000000 
d000e13a l       .text  00000000 
d000e13a l       .text  00000000 
d000e142 l       .text  00000000 
d000e146 l       .text  00000000 
d000e14a l       .text  00000000 
d000e14c l       .text  00000000 
d000e14e l       .text  00000000 
d000e14e l       .text  00000000 
d000e152 l       .text  00000000 
d000e156 l       .text  00000000 
d000e156 l       .text  00000000 
d000e158 l       .text  00000000 
d000e15a l       .text  00000000 
d000e15c l       .text  00000000 
d000e162 l       .text  00000000 
d000e162 l       .text  00000000 
d000e164 l       .text  00000000 
d000e168 l       .text  00000000 
d000e174 l       .text  00000000 
d000e182 l       .text  00000000 
d000e182 l       .text  00000000 
d000e186 l       .text  00000000 
d000e188 l       .text  00000000 
d000e188 l       .text  00000000 
d000e18c l       .text  00000000 
d000e190 l       .text  00000000 
d000e190 l       .text  00000000 
d000e194 l       .text  00000000 
d000e198 l       .text  00000000 
d000e19c l       .text  00000000 
d000e1a0 l       .text  00000000 
d000e1a4 l       .text  00000000 
d000e1a4 l       .text  00000000 
d000e1a8 l       .text  00000000 
d000e1ac l       .text  00000000 
d000e1ae l       .text  00000000 
d000e1ae l       .text  00000000 
d000e1b0 l       .text  00000000 
d000e1b4 l       .text  00000000 
d000e1b4 l       .text  00000000 
d000e1bc l       .text  00000000 
d000e1c0 l       .text  00000000 
d000e1c0 l       .text  00000000 
d000e1c4 l       .text  00000000 
d000e1c8 l       .text  00000000 
d000e1cc l       .text  00000000 
d000e1ce l       .text  00000000 
d000e1d2 l       .text  00000000 
d000e1d2 l       .text  00000000 
d000e1d6 l       .text  00000000 
d000e1d6 l       .text  00000000 
d000e1da l       .text  00000000 
d000e1dc l       .text  00000000 
d000e1dc l       .text  00000000 
d000e1e0 l       .text  00000000 
d000e1e0 l       .text  00000000 
d000e1e0 l       .text  00000000 
d000e1e0 l       .text  00000000 
d000e1e0 l       .text  00000000 
d000e1e4 l       .text  00000000 
d000e1e4 l       .text  00000000 
d000e1e8 l       .text  00000000 
d000e1e8 l       .text  00000000 
d000e1f0 l       .text  00000000 
d000e1f0 l       .text  00000000 
d000e1f4 l       .text  00000000 
d000e1f6 l       .text  00000000 
d000e1fa l       .text  00000000 
d000e1fa l       .text  00000000 
d000e1fc l       .text  00000000 
d000e1fc l       .text  00000000 
d000e200 l       .text  00000000 
d000e200 l       .text  00000000 
d000e206 l       .text  00000000 
d000e206 l       .text  00000000 
d000e20a l       .text  00000000 
d000e20a l       .text  00000000 
d000e212 l       .text  00000000 
d000e216 l       .text  00000000 
d000e216 l       .text  00000000 
d000e218 l       .text  00000000 
d000e21c l       .text  00000000 
d000e21c l       .text  00000000 
d000e21e l       .text  00000000 
d000e220 l       .text  00000000 
d000e220 l       .text  00000000 
d000e228 l       .text  00000000 
d000e228 l       .text  00000000 
d000e22c l       .text  00000000 
d000e22c l       .text  00000000 
d000e236 l       .text  00000000 
d000e23a l       .text  00000000 
d000e23a l       .text  00000000 
d000e23e l       .text  00000000 
d000e23e l       .text  00000000 
d000e242 l       .text  00000000 
d000e246 l       .text  00000000 
d000e246 l       .text  00000000 
d000e24a l       .text  00000000 
d000e24e l       .text  00000000 
d000e24e l       .text  00000000 
d000e250 l       .text  00000000 
d000e254 l       .text  00000000 
d000e254 l       .text  00000000 
d000e258 l       .text  00000000 
d000e25c l       .text  00000000 
d000e260 l       .text  00000000 
d000e264 l       .text  00000000 
d000e268 l       .text  00000000 
d000e26a l       .text  00000000 
d000e26a l       .text  00000000 
d000e26e l       .text  00000000 
d000e26e l       .text  00000000 
d000e270 l       .text  00000000 
d000e272 l       .text  00000000 
d000e272 l       .text  00000000 
d000e27a l       .text  00000000 
d000e27e l       .text  00000000 
d000e27e l       .text  00000000 
d000e280 l       .text  00000000 
d000e284 l       .text  00000000 
d000e284 l       .text  00000000 
d000e286 l       .text  00000000 
d000e288 l       .text  00000000 
d000e288 l       .text  00000000 
d000e28a l       .text  00000000 
d000e28a l       .text  00000000 
d000e28e l       .text  00000000 
d000e28e l       .text  00000000 
d000e290 l       .text  00000000 
d000e290 l       .text  00000000 
d000e294 l       .text  00000000 
d000e294 l       .text  00000000 
d000e296 l       .text  00000000 
d000e296 l       .text  00000000 
d000e29a l       .text  00000000 
d000e29a l       .text  00000000 
d000e29c l       .text  00000000 
d000e29c l       .text  00000000 
d000e29e l       .text  00000000 
d000e29e l       .text  00000000 
d000e2a0 l       .text  00000000 
d000e2a0 l       .text  00000000 
00025737 l       .debug_loc     00000000 
0002575d l       .debug_loc     00000000 
00025783 l       .debug_loc     00000000 
000257a9 l       .debug_loc     00000000 
000257cf l       .debug_loc     00000000 
000257ee l       .debug_loc     00000000 
0002580d l       .debug_loc     00000000 
00025833 l       .debug_loc     00000000 
0002584e l       .debug_loc     00000000 
00025897 l       .debug_loc     00000000 
000258bd l       .debug_loc     00000000 
000258df l       .debug_loc     00000000 
000258fa l       .debug_loc     00000000 
00025915 l       .debug_loc     00000000 
00025930 l       .debug_loc     00000000 
0002594b l       .debug_loc     00000000 
00025966 l       .debug_loc     00000000 
00025981 l       .debug_loc     00000000 
000259d1 l       .debug_loc     00000000 
000259ec l       .debug_loc     00000000 
00025a07 l       .debug_loc     00000000 
00025a29 l       .debug_loc     00000000 
00025a44 l       .debug_loc     00000000 
00025a5f l       .debug_loc     00000000 
00025a7a l       .debug_loc     00000000 
00025a95 l       .debug_loc     00000000 
00025ab0 l       .debug_loc     00000000 
00025acf l       .debug_loc     00000000 
00025aee l       .debug_loc     00000000 
00025b14 l       .debug_loc     00000000 
00025b2f l       .debug_loc     00000000 
00025b78 l       .debug_loc     00000000 
00025b9e l       .debug_loc     00000000 
00025bb9 l       .debug_loc     00000000 
00025bd4 l       .debug_loc     00000000 
00025bef l       .debug_loc     00000000 
00025c0a l       .debug_loc     00000000 
00025c25 l       .debug_loc     00000000 
00025c40 l       .debug_loc     00000000 
00025c5b l       .debug_loc     00000000 
00025c7a l       .debug_loc     00000000 
00025c99 l       .debug_loc     00000000 
00025cb4 l       .debug_loc     00000000 
00025cfb l       .debug_loc     00000000 
00025d16 l       .debug_loc     00000000 
00025d31 l       .debug_loc     00000000 
00025d57 l       .debug_loc     00000000 
00025d72 l       .debug_loc     00000000 
00025d8d l       .debug_loc     00000000 
00025da8 l       .debug_loc     00000000 
00025dc3 l       .debug_loc     00000000 
00025dde l       .debug_loc     00000000 
00025e04 l       .debug_loc     00000000 
00025e1f l       .debug_loc     00000000 
00025e45 l       .debug_loc     00000000 
00025e6b l       .debug_loc     00000000 
00025e88 l       .debug_loc     00000000 
00025ee3 l       .debug_loc     00000000 
00025efe l       .debug_loc     00000000 
00025f24 l       .debug_loc     00000000 
00025f4a l       .debug_loc     00000000 
00025f65 l       .debug_loc     00000000 
00025f8b l       .debug_loc     00000000 
00025fe8 l       .debug_loc     00000000 
00026003 l       .debug_loc     00000000 
0002601e l       .debug_loc     00000000 
0002607b l       .debug_loc     00000000 
00026098 l       .debug_loc     00000000 
000260b3 l       .debug_loc     00000000 
000260fa l       .debug_loc     00000000 
00026115 l       .debug_loc     00000000 
00026130 l       .debug_loc     00000000 
0002614b l       .debug_loc     00000000 
00026166 l       .debug_loc     00000000 
00026181 l       .debug_loc     00000000 
000261a7 l       .debug_loc     00000000 
000261c2 l       .debug_loc     00000000 
000261dd l       .debug_loc     00000000 
000261f8 l       .debug_loc     00000000 
00026213 l       .debug_loc     00000000 
00026240 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
0001bb89 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
00003688 l       .debug_ranges  00000000 
0001bba5 l       .debug_str     00000000 
0001bbaf l       .debug_str     00000000 
0001bbb9 l       .debug_str     00000000 
00000175 l       .debug_str     00000000 
000001c0 l       .debug_str     00000000 
000001ce l       .debug_str     00000000 
00000fc6 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
0001bbc3 l       .debug_str     00000000 
0001bc6a l       .debug_str     00000000 
0001bc74 l       .debug_str     00000000 
0001aa41 l       .debug_str     00000000 
0001bbdd l       .debug_str     00000000 
0001bbe8 l       .debug_str     00000000 
00003401 l       .debug_str     00000000 
000033ff l       .debug_str     00000000 
0001bbf4 l       .debug_str     00000000 
0001bc06 l       .debug_str     00000000 
0001bc16 l       .debug_str     00000000 
0001bbcb l       .debug_str     00000000 
0001b73f l       .debug_str     00000000 
0000219f l       .debug_str     00000000 
0001b17a l       .debug_str     00000000 
000037aa l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
00002b79 l       .debug_str     00000000 
0001bb6e l       .debug_str     00000000 
00001774 l       .debug_str     00000000 
00002b95 l       .debug_str     00000000 
00002b9a l       .debug_str     00000000 
0001bc39 l       .debug_str     00000000 
0001bc3f l       .debug_str     00000000 
0001bc0a l       .debug_str     00000000 
0001b267 l       .debug_str     00000000 
0001bc1a l       .debug_str     00000000 
00003618 l       .debug_ranges  00000000 
00001ab1 l       .debug_str     00000000 
00003600 l       .debug_ranges  00000000 
0000609b l       .debug_str     00000000 
0001bc44 l       .debug_str     00000000 
0001bc4b l       .debug_str     00000000 
00003630 l       .debug_ranges  00000000 
0000225a l       .debug_str     00000000 
0001bc53 l       .debug_str     00000000 
0001bc57 l       .debug_str     00000000 
0001bc5b l       .debug_str     00000000 
0001bc60 l       .debug_str     00000000 
0001bc65 l       .debug_str     00000000 
0001bc6f l       .debug_str     00000000 
0001b46e l       .debug_str     00000000 
0001b330 l       .debug_str     00000000 
0001a764 l       .debug_str     00000000 
0001bc7a l       .debug_str     00000000 
00003648 l       .debug_ranges  00000000 
0001bc7f l       .debug_str     00000000 
0001bc26 l       .debug_str     00000000 
00006841 l       .debug_str     00000000 
0001a76b l       .debug_str     00000000 
00003660 l       .debug_ranges  00000000 
000067c9 l       .debug_str     00000000 
0001a6a3 l       .debug_str     00000000 
0000685a l       .debug_str     00000000 
00006862 l       .debug_str     00000000 
000064d3 l       .debug_str     00000000 
00000179 l       .debug_str     00000000 
00000162 l       .debug_str     00000000 
00005bec l       .debug_frame   00000000 
d000e026 l       .text  00000000 
d000e088 l       .text  00000000 
d000e132 l       .text  00000000 
d000e1e0 l       .text  00000000 
d000e2a0 l       .text  00000000 
00000000 l    df *ABS*  00000000 device_sim_verilator.c
d000e2a0 l       .text  00000000 
d000e2a0 l       .text  00000000 
d000e2a0 l       .text  00000000 
d000e2a0 l       .text  00000000 
d000e2a2 l       .text  00000000 
d000e2a2 l       .text  00000000 
00026260 l       .debug_loc     00000000 
00000000 l       .debug_str     00000000 
0001bc87 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
000036e8 l       .debug_ranges  00000000 
0001bcb1 l       .debug_str     00000000 
0001bd11 l       .debug_str     00000000 
0001bd05 l       .debug_str     00000000 
0001bcbd l       .debug_str     00000000 
0001bcca l       .debug_str     00000000 
0001bcde l       .debug_str     00000000 
0001bcef l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
0001bd1f l       .debug_str     00000000 
00000179 l       .debug_str     00000000 
00000162 l       .debug_str     00000000 
0001bd2f l       .debug_str     00000000 
0001bd4d l       .debug_str     00000000 
0001bd64 l       .debug_str     00000000 
0001bd74 l       .debug_str     00000000 
0001bd84 l       .debug_str     00000000 
0001bd92 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
0001bda0 l       .debug_str     00000000 
0001bdb5 l       .debug_str     00000000 
0001bdcc l       .debug_str     00000000 
00000fc6 l       .debug_str     00000000 
0001bde5 l       .debug_str     00000000 
0001be01 l       .debug_str     00000000 
00001040 l       .debug_str     00000000 
0001a6fe l       .debug_str     00000000 
0001a71d l       .debug_str     00000000 
0000142b l       .debug_str     00000000 
00005cb0 l       .debug_frame   00000000 
d000e2a2 l       .text  00000000 
00000000 l    df *ABS*  00000000 sigverify_rsa_keys_fake.c
00000000 l       .debug_str     00000000 
0001af48 l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
0001af8a l       .debug_str     00000000 
00003401 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
0001af9f l       .debug_str     00000000 
0001afb5 l       .debug_str     00000000 
00002ddc l       .debug_str     00000000 
00002dca l       .debug_str     00000000 
0000171a l       .debug_str     00000000 
00002c97 l       .debug_str     00000000 
00001a89 l       .debug_str     00000000 
0000170c l       .debug_str     00000000 
0000420b l       .debug_str     00000000 
00001705 l       .debug_str     00000000 
00001504 l       .debug_str     00000000 
000014ef l       .debug_str     00000000 
00001937 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
00002d1c l       .debug_str     00000000 
00002c8d l       .debug_str     00000000 
00002c4c l       .debug_str     00000000 
00002c62 l       .debug_str     00000000 
00002c78 l       .debug_str     00000000 
00000000 l    df *ABS*  00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp_sw/otbn/crypto/run_rsa_verify_3072_rr_modexp.s
d000f1e0 l       .rodata        00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp_run_rsa_verify_3072
00000000 l    df *ABS*  00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp_sw/vendor/veri-titan/gen/otbn_modexp.s
d000f2b4 l       .rodata        00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp_label_0
d000f2d8 l       .rodata        00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp_label_1
d000f314 l       .rodata        00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp_mont_loop
d000f3e0 l       .rodata        00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp_mul256_w30xw2
d000f424 l       .rodata        00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp_mul256_w30xw25
d000f3d4 l       .rodata        00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp_label_2
00000000 l    df *ABS*  00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp_sw/otbn/crypto/rsa_verify_3072_rr.s
d000f468 l       .rodata        00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp_subtract_modulus_var
d000f498 l       .rodata        00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp_double_mod_var
d000f4ec l       .rodata        00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp_sel_aa
00000000 l    df *ABS*  00000000 static_critical_boot_measurements.c
00000000 l       .debug_str     00000000 
0001a4df l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
0001a526 l       .debug_str     00000000 
0001a538 l       .debug_str     00000000 
00000197 l       .debug_str     00000000 
00000faf l       .debug_str     00000000 
00000f9a l       .debug_str     00000000 
00001937 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
00000000 l    df *ABS*  00000000 static_critical_epmp_state.c
00000000 l       .debug_str     00000000 
0001a54c l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
0001a58c l       .debug_str     00000000 
0001a5ae l       .debug_str     00000000 
0001a597 l       .debug_str     00000000 
0001a59e l       .debug_str     00000000 
0001a5a6 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
00000000 l    df *ABS*  00000000 static_critical_sec_mmio.c
00000000 l       .debug_str     00000000 
0001a5bb l       .debug_str     00000000 
00000098 l       .debug_str     00000000 
0001a5f9 l       .debug_str     00000000 
0001a62c l       .debug_str     00000000 
0001a606 l       .debug_str     00000000 
0001a61a l       .debug_str     00000000 
0001a611 l       .debug_str     00000000 
0001bb7d l       .debug_str     00000000 
00001454 l       .debug_str     00000000 
0001a626 l       .debug_str     00000000 
000000b4 l       .debug_str     00000000 
0000016c l       .debug_str     00000000 
000000bd l       .debug_str     00000000 
d000dd94 g     F .text  00000046 sec_mmio_read32
d000bf34 g     F .text  0000001c dif_spi_host_output_set_enabled
e00024b8 g     O .bss   00000044 rstmgr_alert_info
d000cc50 g     F .text  0000028e sigverify_rsa_verify
e0002048 g     O .bss   00000004 lc_state
00008000 g       *ABS*  00000000 _rom_ext_virtual_size
d0008100 g     F .vectors       00000080 _rom_interrupt_vector_c
d000b39a g     F .text  00000044 flash_ctrl_data_erase
d000d848 g     F .text  0000002c rnd_uint32
e0002848 g       .bss   00000000 __global_pointer$
000003a0 g       *ABS*  00000000 _otbn_remote_app_run_rsa_verify_3072_rr_modexp__imem_end
e0000000 g     O .static_critical       00000020 boot_measurements
d000d3f6 g     F .text  00000042 sigverify_mod_exp_otbn
d000e1e0 g     F .text  000000c0 memrchr
d000eb48 g     O .rodata        00000004 kSigverifyRsaKeysCnt
d000aebe g     F .text  00000046 flash_ctrl_data_default_cfg_set
d000d6ac g     F .text  00000056 otbn_imem_write
d000e53c g       .shutdown      00000000 _text_end
d000dcd0 g     F .text  0000003c lifecycle_device_id_get
d0009ffc g     F .text  000000fa spi_device_init
d000f1e0 g       .rodata        00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp__imem_start
d00094bc g     F .text  00000024 boot_policy_manifests_get
34002000 g       *ABS*  00000000 _epmp_text_tor_lo
d000b9fe g     F .text  00000024 keymgr_creator_max_ver_set
00000000 g       *ABS*  00000000 _otbn_remote_app_run_rsa_verify_3072_rr_modexp__dmem_data_start
38007000 g       *ABS*  00000000 _epmp_stack_guard_na4
d0010000 g       .vectors       00000000 _chip_info_end
d000cb92 g     F .text  000000be rom_epmp_config_debug_rom
d000f580 g       .rodata        00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp__imem_end
d000ad18 g     F .text  00000008 crc32_finish
000000fc g       *ABS*  00000000 _otbn_remote_app_run_rsa_verify_3072_rr_modexp_montmul
d000f214 g       .rodata        00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp_modexp_var_3072_f4
d000a542 g     F .text  000002ea shutdown_init
d000a9aa g     F .text  00000120 alert_class_configure
d000df9e g     F .text  00000088 memcpy
d000a82c g     F .text  000000c0 alert_configure
d000eb50 g     O .rodata        000004ec kSigverifyRsaKeys
d0009c0e g     F .text  00000392 bootstrap
d000839c g     F .crt   0000001e rom_interrupt_handler
00000000 g       *ABS*  00000000 __abi_shutdown$
d000abde g     F .text  000000f2 alert_config_check
e0002048 g       .bss   00000000 _bss_start
d0008180 g     F .crt   0000021a _rom_start_boot
d000df52 g     F .text  0000004c sec_mmio_check_counters
00000000 g       *ABS*  00000000 __DYNAMIC
d000b49c g     F .text  00000042 flash_ctrl_data_default_perms_set
d000b8cc g     F .text  00000066 ibex_addr_remap_0_set
d000acd6 g     F .text  00000042 crc32_add32
d000da7c g     F .text  0000006e hmac_sha256_update
d000d698 g     F .text  00000008 otbn_instruction_count_get
d000acd0 g     F .text  00000006 crc32_init
d000839c g     F .crt   0000001e rom_exception_handler
d0008000 g       .vectors       00000000 _text_start
00000320 g       *ABS*  00000000 _otbn_remote_app_run_rsa_verify_3072_rr_modexp_in_buf
d000dee2 g     F .text  00000070 sec_mmio_check_values
d000c2f4 g     F .text  00000034 base_log_internal_dv
d000b3de g     F .text  000000ae flash_ctrl_data_erase_verify
d000c24c g     F .text  00000006 abort
e0000020 g     O .static_critical       00000054 epmp_state
d0009b0e g     F .text  000000aa boot_data_check
d000ad20 g     F .text  0000011e ast_check
d000de48 g     F .text  0000004c sec_mmio_write32
d000c182 g     F .text  0000000c alsaqr_periph_padframe_periphs_ot_spi_01_mux_set
d000d778 g     F .text  0000005a otbn_dmem_write
d000ae3e g     F .text  00000080 flash_ctrl_init
d000bac8 g     F .text  00000008 rstmgr_reason_clear
d000b990 g     F .text  0000006e keymgr_sw_binding_set
d000bc9c g     F .text  000000be dif_spi_host_fifo_write
d000f4f0 g       .rodata        00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp_compute_rr
e00024fc g       .bss   00000000 _bss_end
d000ba84 g     F .text  00000006 retention_sram_get
d000b48c g     F .text  00000010 flash_ctrl_exec_set
00000000 g       *ABS*  00000000 _otbn_remote_app_run_rsa_verify_3072_rr_modexp__dmem_bss_offset
d000ba94 g     F .text  00000034 rstmgr_reason_get
d000d2c6 g     F .text  00000130 run_otbn_rsa_3072_modexp
d000d560 g     F .text  0000003c otbn_execute_app
e000205c g     O .bss   00000400 _rom_shadow_stack
d000dd32 g     F .text  00000008 otp_read32
e0001fc4 g     O .data  00000084 status_codes
00001fc4 g       *ABS*  00000000 _static_critical_size
d000f588 g     O .rodata        00000004 kAstCheckPollCpuCycles
d000a18c g     F .text  0000002e uart_set_cfg
e0002478 g     O .bss   00000040 boot_data
d000dd0c g     F .text  00000026 lifecycle_hw_rev_get
d00083f8 g     F .crt   0000003a crt_section_copy
d000a17a g     F .text  0000000a spi_device_flash_status_clear
d000d600 g     F .text  00000022 otbn_execute
d000bae0 g     F .text  0000002e uart_init
d000d5a6 g     F .text  00000008 otbn_copy_data_from_otbn
d000dd3a g     F .text  0000005a sec_mmio_init
d000e132 g     F .text  000000ae memchr
d000cede g     F .text  0000009a sigverify_usage_constraints_get
000001a0 g       *ABS*  00000000 _otbn_remote_app_run_rsa_verify_3072_rr_modexp_rr
d000c18e g     F .text  0000000c alsaqr_periph_padframe_periphs_ot_spi_02_mux_set
d000aaca g     F .text  00000114 alert_config_crc32
d000bf88 g     F .text  000001ee dif_spi_host_transaction
d000ba22 g     F .text  00000002 keymgr_state_check
d000a0f6 g     F .text  00000084 spi_device_cmd_get
d0008000 g       .vectors       00000000 _rom_boot_address
d000bd5a g     F .text  00000158 dif_spi_host_fifo_read
d000af04 g     F .text  00000046 flash_ctrl_info_cfg_set
000004a0 g       *ABS*  00000000 _otbn_remote_app_run_rsa_verify_3072_rr_modexp_out_buf
d000a8ec g     F .text  000000be alert_local_configure
d000de94 g     F .text  0000004e sec_mmio_write32_shadowed
d000c19a g     F .text  0000000c alsaqr_periph_padframe_periphs_ot_spi_03_mux_set
d000f584 g     O .rodata        00000004 kUartTxFifoCpuCycles
d0009bb8 g     F .text  00000056 bootstrap_requested
00004000 g       *ABS*  00000000 _stack_size
d000d438 g     F .text  0000001c otbn_init
d000c378 g     F .text  0000048e base_vfprintf
d000eb4c g     O .rodata        00000004 kSigverifyRsaKeysStep
d000d59c g     F .text  0000000a otbn_copy_data_to_otbn
d000c35e g     F .text  0000001a base_vprintf
d000da62 g     F .text  0000001a hmac_sha256_init
00000000 g       *ABS*  00000000 _otbn_remote_app_run_rsa_verify_3072_rr_modexp_in_mod
d000bc9c  w    F .text  000000be spi_host_fifo_write_alias
e0000074 g     O .static_critical       00001f50 sec_mmio_ctx
d000e026 g     F .text  00000062 memset
d000b888 g     F .text  00000044 flash_ctrl_bank_erase_perms_set
d00088be g     F .text  0000025c spi_flash_load_data
d000d454 g     F .text  0000010c otbn_load_app
e0020000 g       .vectors       00000000 _stack_end
d000959a g     F .text  000001da boot_data_read
d000f580 g     O .rodata        00000004 kUartNCOValue
d000cb30 g     F .text  0000002e rom_epmp_unlock_rom_ext_rx
d000afc6 g     F .text  00000072 flash_ctrl_info_read
d000e2a0 g     F .text  00000002 device_fpga_version_print
e001c000 g       *ABS*  00000000 _stack_start
d000daea g     F .text  00000036 hmac_sha256_final
d000ba8a g     F .text  0000000a retention_sram_init
d00083d4 g     F .crt   00000024 crt_section_clear
d000d874 g     F .text  000001ee epmp_state_check
d000d7d2 g     F .text  00000076 otbn_dmem_read
00000000 g       *ABS*  00000000 _dv_log_offset
d000ff80 g       *ABS*  00000000 _chip_info_start
d000bd5a  w    F .text  00000158 spi_host_fifo_read_alias
d000d6a0 g     F .text  0000000c otbn_imem_sec_wipe
d000bbee g     F .text  00000094 watchdog_configure
d000f580 g       .rodata        00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp__dmem_data_start
00000000 g       *ABS*  00000000 _otbn_remote_app_run_rsa_verify_3072_rr_modexp__dmem_bss_start
d000e770 g     O .rodata        0000006c kSpiDeviceSfdpTable
e000245c g     O .bss   00000018 rom_counters
d000beb2 g     F .text  00000082 dif_spi_host_configure
d000a184 g     F .text  00000008 spi_device_flash_status_get
d000f58c g     O .rodata        00000004 kDeviceTestStatusAddress
00000800 g       *ABS*  00000000 _epmp_reset_rx_size
d00083bc g     F .crt   00000018 _asm_exception_handler
d000d5ae g     F .text  00000052 otbn_busy_wait_for_done
d0008000 g     F .vectors       00000084 _rom_interrupt_vector_asm
d000c9dc g     F .text  00000154 rom_epmp_state_init
d000c32c g     F .text  00000032 base_printf
00000620 g       *ABS*  00000000 _otbn_remote_app_run_rsa_verify_3072_rr_modexp__dmem_bss_end
d0008b1a g     F .text  00000262 rom_main
d000f590 g     O .rodata        00000004 kDeviceLogBypassUartAddress
d000f2dc g       .rodata        00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp_montmul
00000180 g       *ABS*  00000000 _otbn_remote_app_run_rsa_verify_3072_rr_modexp_m0inv
00000080 g       *ABS*  00000000 _chip_info_size
d000bc82 g     F .text  0000000c watchdog_disable
d00094e0 g     F .text  000000ba boot_policy_manifest_check
00000310 g       *ABS*  00000000 _otbn_remote_app_run_rsa_verify_3072_rr_modexp_compute_rr
00000000 g       *ABS*  00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp__dmem_bss_offset
d000f580 g       .rodata        00000000 _otbn_local_app_run_rsa_verify_3072_rr_modexp__dmem_data_end
d000cf78 g     F .text  0000021c sigverify_mod_exp_ibex
d0008434 g     F .crt   0000008c rom_epmp_init
00000034 g       *ABS*  00000000 _otbn_remote_app_run_rsa_verify_3072_rr_modexp_modexp_var_3072_f4
d000e088 g     F .text  000000aa memrcmp
d000b4de g     F .text  00000044 flash_ctrl_info_perms_set
d000c96a g     F .text  00000072 status_extract
d000bc8e g     F .text  0000000e dif_spi_host_init
d000c176 g     F .text  0000000c alsaqr_periph_padframe_periphs_ot_spi_00_mux_set
d000d76a g     F .text  0000000e otbn_dmem_sec_wipe
d000e2a4 g     F .shutdown      00000298 shutdown_finalize
d0008800 g     F .text  000000be init_spi_host
d000bad0 g     F .text  00000010 rstmgr_reset
d000cb5e g     F .text  00000034 rom_epmp_unlock_rom_ext_r
90000000 g       .vectors       00000000 _rom_ext_virtual_start_address
d000bb0e g     F .text  000000e0 watchdog_init
d000b2dc g     F .text  00000010 flash_ctrl_data_write
00000000 g       *ABS*  00000000 _otbn_remote_app_run_rsa_verify_3072_rr_modexp__dmem_data_end
d000c1a6 g     F .text  000000a6 test_status_set
d000ba24 g     F .text  00000060 pinmux_init
00000000 g       *ABS*  00000000 _otbn_remote_app_run_rsa_verify_3072_rr_modexp__imem_start
d000a1ba g     F .text  0000012e sigverify_rsa_key_get
d000db20 g     F .text  000001b0 lifecycle_state_get
d000c252 g     F .text  000000a2 base_log_internal_core
d000839c g     F .crt   0000001e rom_nmi_handler
3400394f g       *ABS*  00000000 _epmp_text_tor_hi



Disassembly of section .vectors:

d0008000 <_rom_interrupt_vector_asm>:
_rom_interrupt_vector_asm():
d0008000:       3bc0006f                j       d00083bc <_asm_exception_handler>
d0008004:       3b80006f                j       d00083bc <_asm_exception_handler>
d0008008:       3b40006f                j       d00083bc <_asm_exception_handler>
d000800c:       3b00006f                j       d00083bc <_asm_exception_handler>
d0008010:       3ac0006f                j       d00083bc <_asm_exception_handler>
d0008014:       3a80006f                j       d00083bc <_asm_exception_handler>
d0008018:       3a40006f                j       d00083bc <_asm_exception_handler>
d000801c:       3a00006f                j       d00083bc <_asm_exception_handler>
d0008020:       39c0006f                j       d00083bc <_asm_exception_handler>
d0008024:       3980006f                j       d00083bc <_asm_exception_handler>
d0008028:       3940006f                j       d00083bc <_asm_exception_handler>
d000802c:       3900006f                j       d00083bc <_asm_exception_handler>
d0008030:       38c0006f                j       d00083bc <_asm_exception_handler>
d0008034:       3880006f                j       d00083bc <_asm_exception_handler>
d0008038:       3840006f                j       d00083bc <_asm_exception_handler>
d000803c:       3800006f                j       d00083bc <_asm_exception_handler>
d0008040:       37c0006f                j       d00083bc <_asm_exception_handler>
d0008044:       3780006f                j       d00083bc <_asm_exception_handler>
d0008048:       3740006f                j       d00083bc <_asm_exception_handler>
d000804c:       3700006f                j       d00083bc <_asm_exception_handler>
d0008050:       36c0006f                j       d00083bc <_asm_exception_handler>
d0008054:       3680006f                j       d00083bc <_asm_exception_handler>
d0008058:       3640006f                j       d00083bc <_asm_exception_handler>
d000805c:       3600006f                j       d00083bc <_asm_exception_handler>
d0008060:       35c0006f                j       d00083bc <_asm_exception_handler>
d0008064:       3580006f                j       d00083bc <_asm_exception_handler>
d0008068:       3540006f                j       d00083bc <_asm_exception_handler>
d000806c:       3500006f                j       d00083bc <_asm_exception_handler>
d0008070:       34c0006f                j       d00083bc <_asm_exception_handler>
d0008074:       3480006f                j       d00083bc <_asm_exception_handler>
d0008078:       3440006f                j       d00083bc <_asm_exception_handler>
d000807c:       3400006f                j       d00083bc <_asm_exception_handler>
d0008080:       1000006f                j       d0008180 <_rom_start_boot>
d0008084:       c0001073                unimp
d0008088:       c0001073                unimp
d000808c:       c0001073                unimp
d0008090:       c0001073                unimp
d0008094:       c0001073                unimp
d0008098:       c0001073                unimp
d000809c:       c0001073                unimp
d00080a0:       c0001073                unimp
d00080a4:       c0001073                unimp
d00080a8:       c0001073                unimp
d00080ac:       c0001073                unimp
d00080b0:       c0001073                unimp
d00080b4:       c0001073                unimp
d00080b8:       c0001073                unimp
d00080bc:       c0001073                unimp
d00080c0:       c0001073                unimp
d00080c4:       c0001073                unimp
d00080c8:       c0001073                unimp
d00080cc:       c0001073                unimp
d00080d0:       c0001073                unimp
d00080d4:       c0001073                unimp
d00080d8:       c0001073                unimp
d00080dc:       c0001073                unimp
d00080e0:       c0001073                unimp
d00080e4:       c0001073                unimp
d00080e8:       c0001073                unimp
d00080ec:       c0001073                unimp
d00080f0:       c0001073                unimp
d00080f4:       c0001073                unimp
d00080f8:       c0001073                unimp
d00080fc:       c0001073                unimp

d0008100 <_rom_interrupt_vector_c>:
_rom_interrupt_vector_c():
d0008100:       29c0006f                j       d000839c <rom_exception_handler>
d0008104:       2980006f                j       d000839c <rom_exception_handler>
d0008108:       2940006f                j       d000839c <rom_exception_handler>
d000810c:       2900006f                j       d000839c <rom_exception_handler>
d0008110:       28c0006f                j       d000839c <rom_exception_handler>
d0008114:       2880006f                j       d000839c <rom_exception_handler>
d0008118:       2840006f                j       d000839c <rom_exception_handler>
d000811c:       2800006f                j       d000839c <rom_exception_handler>
d0008120:       27c0006f                j       d000839c <rom_exception_handler>
d0008124:       2780006f                j       d000839c <rom_exception_handler>
d0008128:       2740006f                j       d000839c <rom_exception_handler>
d000812c:       2700006f                j       d000839c <rom_exception_handler>
d0008130:       26c0006f                j       d000839c <rom_exception_handler>
d0008134:       2680006f                j       d000839c <rom_exception_handler>
d0008138:       2640006f                j       d000839c <rom_exception_handler>
d000813c:       2600006f                j       d000839c <rom_exception_handler>
d0008140:       25c0006f                j       d000839c <rom_exception_handler>
d0008144:       2580006f                j       d000839c <rom_exception_handler>
d0008148:       2540006f                j       d000839c <rom_exception_handler>
d000814c:       2500006f                j       d000839c <rom_exception_handler>
d0008150:       24c0006f                j       d000839c <rom_exception_handler>
d0008154:       2480006f                j       d000839c <rom_exception_handler>
d0008158:       2440006f                j       d000839c <rom_exception_handler>
d000815c:       2400006f                j       d000839c <rom_exception_handler>
d0008160:       23c0006f                j       d000839c <rom_exception_handler>
d0008164:       2380006f                j       d000839c <rom_exception_handler>
d0008168:       2340006f                j       d000839c <rom_exception_handler>
d000816c:       2300006f                j       d000839c <rom_exception_handler>
d0008170:       22c0006f                j       d000839c <rom_exception_handler>
d0008174:       2280006f                j       d000839c <rom_exception_handler>
d0008178:       2240006f                j       d000839c <rom_exception_handler>
d000817c:       2200006f                j       d000839c <rom_exception_handler>

Disassembly of section .crt:

d0008180 <_rom_start_boot>:
_rom_start_boot():
d0008180:       ff000537                lui     a0,0xff000
d0008184:       01452283                lw      t0,20(a0) # ff000014 <_stack_end+0x1efe0014>
d0008188:       00029863                bnez    t0,d0008198 <.SECURE_BOOT>
d000818c:       ff000537                lui     a0,0xff000
d0008190:       01852283                lw      t0,24(a0) # ff000018 <_stack_end+0x1efe0018>
d0008194:       00028c63                beqz    t0,d00081ac <kRomStartBootMaybeHalt+0xc>

d0008198 <.SECURE_BOOT>:
d0008198:       0fffa197                auipc   gp,0xfffa
d000819c:       6b018193                addi    gp,gp,1712 # e0002848 <__global_pointer$>

d00081a0 <kRomStartBootMaybeHalt>:
d00081a0:           c0131537            lui     a0,0xc0131
d00081a4:           10852283            lw      t0,264(a0) # c0131108 <_stack_end+0xe0111108>
d00081a8:           00029563            bnez    t0,d00081b2 <kRomStartBootExecEn>
d00081ac:       /-> 10500073            wfi
d00081b0:       \-- bff5                        j       d00081ac <kRomStartBootMaybeHalt+0xc>

d00081b2 <kRomStartBootExecEn>:
d00081b2:       c11f02b7                lui     t0,0xc11f0
d00081b6:       4309                    li      t1,2
d00081b8:       0462a623                sw      t1,76(t0) # c11f004c <_stack_end+0xe11d004c>
d00081bc:       c04002b7                lui     t0,0xc0400
d00081c0:       537d                    li      t1,-1
d00081c2:       0262a623                sw      t1,44(t0) # c040002c <_stack_end+0xe03e002c>
d00081c6:       4305                    li      t1,1
d00081c8:       0062ac23                sw      t1,24(t0)
d00081cc:       c04702b7                lui     t0,0xc0470
d00081d0:       00037337                lui     t1,0x37
d00081d4:       ee830313                addi    t1,t1,-280 # 36ee8 <WDOG_BARK_THOLD>
d00081d8:       0062ac23                sw      t1,24(t0) # c0470018 <_stack_end+0xe0450018>
d00081dc:       00031337                lui     t1,0x31
d00081e0:       d4030313                addi    t1,t1,-704 # 30d40 <WDOG_BITE_THOLD>

d00081e4 <kRomStartStoreT1ToBiteThold>:
d00081e4:       0062ae23                sw      t1,28(t0)
d00081e8:       4305                    li      t1,1
d00081ea:       0062aa23                sw      t1,20(t0)

d00081ee <kRomStartWatchdogEnabled>:
d00081ee:              72c5                     lui     t0,0xffff1
d00081f0:              88828293                 addi    t0,t0,-1912 # ffff0888 <_stack_end+0x1ffd0888>
d00081f4:              3042b073                 csrc    mie,t0
d00081f8:              c0131537                 lui     a0,0xc0131
d00081fc:              0dc52283                 lw      t0,220(a0) # c01310dc <_stack_end+0xe01110dc>
d0008200:              4319                     li      t1,6
d0008202:          /-- 02629563                 bne     t0,t1,d000822c <kRomStartWatchdogEnabled+0x3e>
d0008206:          |   c0480537                 lui     a0,0xc0480
d000820a:          |   c04805b7                 lui     a1,0xc0480
d000820e:          |   09c58593                 addi    a1,a1,156 # c048009c <_stack_end+0xe046009c>
d0008212:          |   c0131637                 lui     a2,0xc0131
d0008216:          |   04060613                 addi    a2,a2,64 # c0131040 <_stack_end+0xe0111040>
d000821a:          |   2af9                     jal     d00083f8 <crt_section_copy>
d000821c:          |   c0131537                 lui     a0,0xc0131
d0008220:          |   0fc52283                 lw      t0,252(a0) # c01310fc <_stack_end+0xe01110fc>
d0008224:          |   c0420537                 lui     a0,0xc0420
d0008228:          |   00552a23                 sw      t0,20(a0) # c0420014 <_stack_end+0xe0400014>
d000822c:          \-> c0131537                 lui     a0,0xc0131
d0008230:              11c52283                 lw      t0,284(a0) # c013111c <_stack_end+0xe011111c>
d0008234:              73900f93                 li      t6,1849
d0008238:       /----- 0bf29f63                 bne     t0,t6,d00082f6 <kRomStartWatchdogEnabled+0x108>
d000823c:       |      c01315b7                 lui     a1,0xc0131
d0008240:       |      11c5a303                 lw      t1,284(a1) # c013111c <_stack_end+0xe011111c>
d0008244:       |  /-- 01f30663                 beq     t1,t6,d0008250 <kRomStartWatchdogEnabled+0x62>
d0008248:       |  |   0000                     unimp
d000824a:       |  |   0000                     unimp
d000824c:       |  |   0000                     unimp
d000824e:       |  |   0000                     unimp
d0008250:       |  \-> c0460537                 lui     a0,0xc0460
d0008254:       |      40050513                 addi    a0,a0,1024 # c0460400 <_stack_end+0xe0440400>
d0008258:       |      42b1                     li      t0,12
d000825a:       |      04552c23                 sw      t0,88(a0)
d000825e:       |      4291                     li      t0,4
d0008260:       |      04552e23                 sw      t0,92(a0)
d0008264:       |      06552023                 sw      t0,96(a0)
d0008268:       |      c0460537                 lui     a0,0xc0460
d000826c:       |      0e850513                 addi    a0,a0,232 # c04600e8 <_stack_end+0xe04400e8>
d0008270:       |      42e1                     li      t0,24
d0008272:       |      04552c23                 sw      t0,88(a0)
d0008276:       |      42e5                     li      t0,25
d0008278:       |      04552e23                 sw      t0,92(a0)
d000827c:       |      42e9                     li      t0,26
d000827e:       |      06552023                 sw      t0,96(a0)
d0008282:       |      c0040537                 lui     a0,0xc0040
d0008286:       |      01052283                 lw      t0,16(a0) # c0040010 <_stack_end+0xe0020010>
d000828a:       |      01c00f37                 lui     t5,0x1c00
d000828e:       |      01e2f2b3                 and     t0,t0,t5
d0008292:       |      01800eb7                 lui     t4,0x1800
d0008296:       |      739e8e93                 addi    t4,t4,1849 # 1800739 <WDOG_BARK_THOLD+0x17c9851>
d000829a:       |      01d2c2b3                 xor     t0,t0,t4
d000829e:       +----- 05f29c63                 bne     t0,t6,d00082f6 <kRomStartWatchdogEnabled+0x108>
d00082a2:       |      73900f93                 li      t6,1849
d00082a6:       |      c00405b7                 lui     a1,0xc0040
d00082aa:       |      0105a303                 lw      t1,16(a1) # c0040010 <_stack_end+0xe0020010>
d00082ae:       |      01e37333                 and     t1,t1,t5
d00082b2:       |      01d34333                 xor     t1,t1,t4
d00082b6:       |  /-- 01f30663                 beq     t1,t6,d00082c2 <kRomStartWatchdogEnabled+0xd4>
d00082ba:       |  |   0000                     unimp
d00082bc:       |  |   0000                     unimp
d00082be:       |  |   0000                     unimp
d00082c0:       |  |   0000                     unimp
d00082c2:       |  \-> b0001073                 csrw    mcycle,zero
d00082c6:       |      c0470537                 lui     a0,0xc0470
d00082ca:       |      00052a23                 sw      zero,20(a0) # c0470014 <_stack_end+0xe0450014>
d00082ce:       |  /-> c0131537                 lui     a0,0xc0131
d00082d2:       |  |   12052283                 lw      t0,288(a0) # c0131120 <_stack_end+0xe0111120>
d00082d6:       |  |   b0002373                 csrr    t1,mcycle
d00082da:       |  \-- fe536ae3                 bltu    t1,t0,d00082ce <kRomStartWatchdogEnabled+0xe0>
d00082de:       |  /-> c0140537                 lui     a0,0xc0140
d00082e2:       |  |   00452283                 lw      t0,4(a0) # c0140004 <_stack_end+0xe0120004>
d00082e6:       |  |   0022f293                 andi    t0,t0,2
d00082ea:       |  \-- fe028ae3                 beqz    t0,d00082de <kRomStartWatchdogEnabled+0xf0>
d00082ee:       |      0000                     unimp
d00082f0:       |      0000                     unimp
d00082f2:       |      0000                     unimp
d00082f4:       |      0000                     unimp
d00082f6:       \----> c1160537                 lui     a0,0xc1160
d00082fa:              009092b7                 lui     t0,0x909
d00082fe:              09928293                 addi    t0,t0,153 # 909099 <WDOG_BARK_THOLD+0x8d21b1>
d0008302:              02552223                 sw      t0,36(a0) # c1160024 <_stack_end+0xe1140024>
d0008306:              4299                     li      t0,6
d0008308:              02552023                 sw      t0,32(a0)
d000830c:              c1150537                 lui     a0,0xc1150
d0008310:              66600293                 li      t0,1638
d0008314:              00552a23                 sw      t0,20(a0) # c1150014 <_stack_end+0xe1130014>
d0008318:              c1170537                 lui     a0,0xc1170
d000831c:              62a9                     lui     t0,0xa
d000831e:              96628293                 addi    t0,t0,-1690 # 9966 <_rom_ext_virtual_size+0x1966>
d0008322:              00552a23                 sw      t0,20(a0) # c1170014 <_stack_end+0xe1150014>
d0008326:              c11c0537                 lui     a0,0xc11c0
d000832a:              458d                     li      a1,3
d000832c:              c94c                     sw      a1,20(a0)
d000832e:              4081                     li      ra,0
d0008330:              4101                     li      sp,0
d0008332:              4201                     li      tp,0
d0008334:              4281                     li      t0,0
d0008336:              4301                     li      t1,0
d0008338:              4381                     li      t2,0
d000833a:              4401                     li      s0,0
d000833c:              4481                     li      s1,0
d000833e:              4501                     li      a0,0
d0008340:              4581                     li      a1,0
d0008342:              4601                     li      a2,0
d0008344:              4681                     li      a3,0
d0008346:              4701                     li      a4,0
d0008348:              4781                     li      a5,0
d000834a:              4801                     li      a6,0
d000834c:              4881                     li      a7,0
d000834e:              4901                     li      s2,0
d0008350:              4981                     li      s3,0
d0008352:              4a01                     li      s4,0
d0008354:              4a81                     li      s5,0
d0008356:              4b01                     li      s6,0
d0008358:              4b81                     li      s7,0
d000835a:              4c01                     li      s8,0
d000835c:              4c81                     li      s9,0
d000835e:              4d01                     li      s10,0
d0008360:              4d81                     li      s11,0
d0008362:              4e01                     li      t3,0
d0008364:              4e81                     li      t4,0
d0008366:              4f01                     li      t5,0
d0008368:              4f81                     li      t6,0
d000836a:              20e9                     jal     d0008434 <rom_epmp_init>
d000836c:              0fffa517                 auipc   a0,0xfffa
d0008370:              cdc50513                 addi    a0,a0,-804 # e0002048 <lc_state>
d0008374:              cb418593                 addi    a1,gp,-844 # e00024fc <_bss_end>
d0008378:              28b1                     jal     d00083d4 <crt_section_clear>
d000837a:              10018117                 auipc   sp,0x10018
d000837e:              c7610113                 addi    sp,sp,-906 # e001fff0 <_stack_start+0x3ff0>
d0008382:              0fffa917                 auipc   s2,0xfffa
d0008386:              cda90913                 addi    s2,s2,-806 # e000205c <_rom_shadow_stack>
d000838a:              00000297                 auipc   t0,0x0
d000838e:              d7728293                 addi    t0,t0,-649 # d0008101 <_rom_interrupt_vector_c+0x1>
d0008392:              30529073                 csrw    mtvec,t0
d0008396:              7840006f                 j       d0008b1a <rom_main>
d000839a:              0000                     unimp

d000839c <rom_exception_handler>:
rom_irq_error():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:100

boot_data_t boot_data = {0};
OT_ALWAYS_INLINE
static rom_error_t rom_irq_error(void) {
  uint32_t mcause;
  CSR_READ(CSR_REG_MCAUSE, &mcause);
d000839c:       34202573                csrr    a0,mcause
d00083a0:       800005b7                lui     a1,0x80000
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:111
  //
  // Preserve the MSB and shift the 7 LSBs into the upper byte.
  // (we preserve 7 instead of 5 because the verilog hardcodes the unused bits
  // as zero and those would be the next bits used should the number of
  // interrupt causes increase).
  mcause = (mcause & 0x80000000) | ((mcause & 0x7f) << 24);
d00083a4:       8de9                    and     a1,a1,a0
d00083a6:       0566                    slli    a0,a0,0x19
d00083a8:       8105                    srli    a0,a0,0x1
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:112
  return kErrorInterrupt + mcause;
d00083aa:       8d4d                    or      a0,a0,a1
d00083ac:       004955b7                lui     a1,0x495
d00083b0:       20258593                addi    a1,a1,514 # 495202 <WDOG_BARK_THOLD+0x45e31a>
d00083b4:       8d4d                    or      a0,a0,a1
rom_interrupt_handler():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:580
  shutdown_finalize(rom_try_boot());
}

void rom_interrupt_handler(void) {
  register rom_error_t error asm("a0") = rom_irq_error();
  asm volatile("tail shutdown_finalize;" ::"r"(error));
d00083b6:       6ef0506f                j       d000e2a4 <shutdown_finalize>
d00083ba:       0000                    unimp

d00083bc <_asm_exception_handler>:
_asm_exception_handler():
/proc/self/cwd/sw/device/silicon_creator/lib/irq_asm.S:29
  .global _asm_exception_handler
  .type _asm_exception_handler, @function
_asm_exception_handler:
.L_exception_loop:
  // Request a system reset.
  li t0, TOP_EARLGREY_RSTMGR_AON_BASE_ADDR
d00083bc:       /-> c04102b7            lui     t0,0xc0410
/proc/self/cwd/sw/device/silicon_creator/lib/irq_asm.S:30
  li t1, MULTIBIT_ASM_BOOL4_TRUE
d00083c0:       |   4319                        li      t1,6
/proc/self/cwd/sw/device/silicon_creator/lib/irq_asm.S:31
  sw t1, RSTMGR_RESET_REQ_REG_OFFSET(t0)
d00083c2:       |   0062a223            sw      t1,4(t0) # c0410004 <_stack_end+0xe03f0004>
/proc/self/cwd/sw/device/silicon_creator/lib/irq_asm.S:37

  // Disable access to flash.
  //
  // This is done after requesting a reset so that this function will
  // work even if it is in flash.
  li t0, TOP_EARLGREY_FLASH_CTRL_CORE_BASE_ADDR
d00083c6:       |   c10002b7            lui     t0,0xc1000
/proc/self/cwd/sw/device/silicon_creator/lib/irq_asm.S:38
  sw zero, FLASH_CTRL_DIS_REG_OFFSET(t0)
d00083ca:       |   0002a823            sw      zero,16(t0) # c1000010 <_stack_end+0xe0fe0010>
/proc/self/cwd/sw/device/silicon_creator/lib/irq_asm.S:40

  wfi
d00083ce:       |   10500073            wfi
/proc/self/cwd/sw/device/silicon_creator/lib/irq_asm.S:41
  j   .L_exception_loop
d00083d2:       \-- b7ed                        j       d00083bc <_asm_exception_handler>

d00083d4 <crt_section_clear>:
crt_section_clear():
/proc/self/cwd/sw/device/lib/crt/crt.S:41
  .global crt_section_clear
  .type crt_section_clear, @function
crt_section_clear:

  // Check that start is before end.
  bgeu a0, a1, .L_clear_nothing
d00083d4:       /-------- 00b57e63              bgeu    a0,a1,d00083f0 <crt_section_clear+0x1c>
/proc/self/cwd/sw/device/lib/crt/crt.S:44

  // Check that start and end are word aligned.
  or   t0, a0, a1
d00083d8:       |         00b562b3              or      t0,a0,a1
/proc/self/cwd/sw/device/lib/crt/crt.S:45
  andi t0, t0, 0x3
d00083dc:       |         0032f293              andi    t0,t0,3
/proc/self/cwd/sw/device/lib/crt/crt.S:46
  bnez t0, .L_clear_error
d00083e0:       |  /----- 00029b63              bnez    t0,d00083f6 <crt_section_clear+0x22>
/proc/self/cwd/sw/device/lib/crt/crt.S:51

.L_clear_loop:
  // Write zero into section memory word-by-word.
  // TODO: unroll
  sw   zero, 0(a0)
d00083e4:       |  |  /-> 00052023              sw      zero,0(a0)
/proc/self/cwd/sw/device/lib/crt/crt.S:52
  addi a0, a0, 4
d00083e8:       |  |  |   0511                  addi    a0,a0,4
/proc/self/cwd/sw/device/lib/crt/crt.S:53
  bltu a0, a1, .L_clear_loop
d00083ea:       |  |  \-- feb56de3              bltu    a0,a1,d00083e4 <crt_section_clear+0x10>
/proc/self/cwd/sw/device/lib/crt/crt.S:54
  ret
d00083ee:       |  |      8082                  ret
/proc/self/cwd/sw/device/lib/crt/crt.S:59

.L_clear_nothing:
  // If section length is 0 just return. Otherwise end is before start
  // which is invalid so trigger an error.
  bne a0, a1, .L_clear_error
d00083f0:       \--+----X 00b51363              bne     a0,a1,d00083f6 <crt_section_clear+0x22>
/proc/self/cwd/sw/device/lib/crt/crt.S:60
  ret
d00083f4:          |      8082                  ret
/proc/self/cwd/sw/device/lib/crt/crt.S:63

.L_clear_error:
  unimp
d00083f6:          \----> 0000                  unimp

d00083f8 <crt_section_copy>:
crt_section_copy():
/proc/self/cwd/sw/device/lib/crt/crt.S:95
  .global crt_section_copy
  .type crt_section_copy, @function
crt_section_copy:

  // Check that start is before end.
  bgeu a0, a1, .L_copy_nothing
d00083f8:       /-------- 02b57963              bgeu    a0,a1,d000842a <crt_section_copy+0x32>
/proc/self/cwd/sw/device/lib/crt/crt.S:98

  // Check that start, end and src are word aligned.
  or   t0, a0, a1
d00083fc:       |         00b562b3              or      t0,a0,a1
/proc/self/cwd/sw/device/lib/crt/crt.S:99
  or   t0, t0, a2
d0008400:       |         00c2e2b3              or      t0,t0,a2
/proc/self/cwd/sw/device/lib/crt/crt.S:100
  andi t0, t0, 0x3
d0008404:       |         0032f293              andi    t0,t0,3
/proc/self/cwd/sw/device/lib/crt/crt.S:101
  bnez t0, .L_copy_error
d0008408:       |  /----- 02029463              bnez    t0,d0008430 <crt_section_copy+0x38>
/proc/self/cwd/sw/device/lib/crt/crt.S:118
  //        +-------------+
  //        |             |
  //      start          end
  //
  // TODO: disallow all overlap since it indicates API misuse?
  sub  t0, a0, a2           // (start - src) mod 2**32
d000840c:       |  |      40c502b3              sub     t0,a0,a2
/proc/self/cwd/sw/device/lib/crt/crt.S:119
  sub  t1, a1, a0           // end - start
d0008410:       |  |      40a58333              sub     t1,a1,a0
/proc/self/cwd/sw/device/lib/crt/crt.S:120
  bltu t0, t1, .L_copy_error
d0008414:       |  +----- 0062ee63              bltu    t0,t1,d0008430 <crt_section_copy+0x38>
/proc/self/cwd/sw/device/lib/crt/crt.S:125

.L_copy_loop:
  // Copy data from src into section word-by-word.
  // TODO: unroll
  lw   t0, 0(a2)
d0008418:       |  |  /-> 00062283              lw      t0,0(a2)
/proc/self/cwd/sw/device/lib/crt/crt.S:126
  addi a2, a2, 4
d000841c:       |  |  |   0611                  addi    a2,a2,4
/proc/self/cwd/sw/device/lib/crt/crt.S:127
  sw   t0, 0(a0)
d000841e:       |  |  |   00552023              sw      t0,0(a0)
/proc/self/cwd/sw/device/lib/crt/crt.S:128
  addi a0, a0, 4
d0008422:       |  |  |   0511                  addi    a0,a0,4
/proc/self/cwd/sw/device/lib/crt/crt.S:129
  bltu a0, a1, .L_copy_loop
d0008424:       |  |  \-- feb56ae3              bltu    a0,a1,d0008418 <crt_section_copy+0x20>
/proc/self/cwd/sw/device/lib/crt/crt.S:130
  ret
d0008428:       |  |      8082                  ret
/proc/self/cwd/sw/device/lib/crt/crt.S:135

.L_copy_nothing:
  // If section length is 0 just return. Otherwise end is before start
  // which is invalid so trigger an error.
  bne a0, a1, .L_copy_error
d000842a:       \--+----X 00b51363              bne     a0,a1,d0008430 <crt_section_copy+0x38>
/proc/self/cwd/sw/device/lib/crt/crt.S:136
  ret
d000842e:          |      8082                  ret
/proc/self/cwd/sw/device/lib/crt/crt.S:139

.L_copy_error:
  unimp
d0008430:          \----> 0000                  unimp
d0008432:                 0000                  unimp

d0008434 <rom_epmp_init>:
rom_epmp_init():
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:59
  .extern _epmp_stack_guard_na4

  // Setup PMP address registers.

  // ROM TEXT
  la   t0, _epmp_text_tor_lo
d0008434:       63ffa297                auipc   t0,0x63ffa
d0008438:       bcc28293                addi    t0,t0,-1076 # 34002000 <_stack_end+0x53fe2000>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:60
  csrw pmpaddr0, t0
d000843c:       3b029073                csrw    pmpaddr0,t0
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:61
  la   t0, _epmp_text_tor_hi
d0008440:       63ffb297                auipc   t0,0x63ffb
d0008444:       50f28293                addi    t0,t0,1295 # 3400394f <_stack_end+0x53fe394f>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:62
  csrw pmpaddr1, t0
d0008448:       3b129073                csrw    pmpaddr1,t0
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:65

  // ROM
  li   t0, NAPOT(TOP_EARLGREY_ROM_BASE_ADDR, TOP_EARLGREY_ROM_SIZE_BYTES)
d000844c:       340032b7                lui     t0,0x34003
d0008450:       12fd                    addi    t0,t0,-1
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:66
  csrw pmpaddr2, t0
d0008452:       3b229073                csrw    pmpaddr2,t0
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:69

  // ROM_EXT TEXT (configured after signature verification)
  csrw pmpaddr3, zero // ROM_EXT TEXT low
d0008456:       3b301073                csrw    pmpaddr3,zero
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:70
  csrw pmpaddr4, zero // ROM_EXT TEXT high
d000845a:       3b401073                csrw    pmpaddr4,zero
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:73

  // eFLASH
  li   t0, NAPOT(TOP_EARLGREY_EFLASH_BASE_ADDR, TOP_EARLGREY_EFLASH_SIZE_BYTES)
d000845e:       3c0022b7                lui     t0,0x3c002
d0008462:       12fd                    addi    t0,t0,-1
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:74
  csrw pmpaddr5, t0
d0008464:       3b529073                csrw    pmpaddr5,t0
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:77

  // MMIO
  li   t0, TOR(TOP_EARLGREY_MMIO_BASE_ADDR)
d0008468:       6291                    lui     t0,0x4
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:78
  csrw pmpaddr10, t0
d000846a:       3ba29073                csrw    pmpaddr10,t0
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:79
  li   t0, TOR(TOP_EARLGREY_MMIO_BASE_ADDR + TOP_EARLGREY_MMIO_SIZE_BYTES)
d000846e:       340002b7                lui     t0,0x34000
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:80
  csrw pmpaddr11, t0
d0008472:       3bb29073                csrw    pmpaddr11,t0
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:83

  // Debug ROM
  li   t0, NAPOT(TOP_EARLGREY_RV_DM_MEM_BASE_ADDR, TOP_EARLGREY_RV_DM_MEM_SIZE_BYTES)
d0008476:       1ff00293                li      t0,511
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:84
  csrw pmpaddr13, t0
d000847a:       3bd29073                csrw    pmpaddr13,t0
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:87

  // Stack guard
  la   t0, _epmp_stack_guard_na4
d000847e:       67fff297                auipc   t0,0x67fff
d0008482:       b8228293                addi    t0,t0,-1150 # 38007000 <_stack_end+0x57fe7000>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:88
  csrw pmpaddr14, t0
d0008486:       3be29073                csrw    pmpaddr14,t0
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:91

  // RAM
  li   t0, NAPOT(TOP_EARLGREY_RAM_MAIN_BASE_ADDR, TOP_EARLGREY_RAM_MAIN_SIZE_BYTES)
d000848a:       380042b7                lui     t0,0x38004
d000848e:       12fd                    addi    t0,t0,-1
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:92
  csrw pmpaddr15, t0
d0008490:       3bf29073                csrw    pmpaddr15,t0
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:95

  // Set PMP configuration registers.
  li   t0, CFG_INDEX(1  % 4, EPMP_CFG_A_TOR   | EPMP_CFG_LRX) | /* ROM TEXT    */ \
d0008494:       009992b7                lui     t0,0x999
d0008498:       d0028293                addi    t0,t0,-768 # 998d00 <WDOG_BARK_THOLD+0x961e18>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:97
           CFG_INDEX(2  % 4, EPMP_CFG_A_NAPOT | EPMP_CFG_LR)    /* ROM         */
  li   t1, CFG_INDEX(5  % 4, EPMP_CFG_A_NAPOT | EPMP_CFG_LR)    /* eFLASH      */
d000849c:       6329                    lui     t1,0xa
d000849e:       90030313                addi    t1,t1,-1792 # 9900 <_rom_ext_virtual_size+0x1900>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:98
  li   t2, CFG_INDEX(11 % 4, EPMP_CFG_A_TOR   | EPMP_CFG_LRW)   /* MMIO        */
d00084a2:       8b0003b7                lui     t2,0x8b000
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:99
  li   t3, CFG_INDEX(13 % 4, EPMP_CFG_A_NAPOT | EPMP_CFG_LRWX)| /* Debug ROM   */ \
d00084a6:       9b90ae37                lui     t3,0x9b90a
d00084aa:       f00e0e13                addi    t3,t3,-256 # 9b909f00 <_stack_end+0xbb8e9f00>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:104
           CFG_INDEX(14 % 4, EPMP_CFG_A_NA4   | EPMP_CFG_L)   | /* Stack Guard */ \
           CFG_INDEX(15 % 4, EPMP_CFG_A_NAPOT | EPMP_CFG_LRW)   /* RAM         */
  //li   t4, 0x6

  csrw pmpcfg0, t0
d00084ae:       3a029073                csrw    pmpcfg0,t0
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:105
  csrw pmpcfg1, t1
d00084b2:       3a131073                csrw    pmpcfg1,t1
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:106
  csrw pmpcfg2, t2
d00084b6:       3a239073                csrw    pmpcfg2,t2
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:107
  csrw pmpcfg3, t3
d00084ba:       3a3e1073                csrw    pmpcfg3,t3
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp_init.S:110
  //csrw EPMP_MSECCFG , t4      

  ret
d00084be:       8082                    ret
d00084c0:       0000                    unimp
d00084c2:       0000                    unimp
d00084c4:       0000                    unimp
d00084c6:       0000                    unimp
d00084c8:       0000                    unimp
d00084ca:       0000                    unimp
d00084cc:       0000                    unimp
d00084ce:       0000                    unimp
d00084d0:       0000                    unimp
d00084d2:       0000                    unimp
d00084d4:       0000                    unimp
d00084d6:       0000                    unimp
d00084d8:       0000                    unimp
d00084da:       0000                    unimp
d00084dc:       0000                    unimp
d00084de:       0000                    unimp
d00084e0:       0000                    unimp
d00084e2:       0000                    unimp
d00084e4:       0000                    unimp
d00084e6:       0000                    unimp
d00084e8:       0000                    unimp
d00084ea:       0000                    unimp
d00084ec:       0000                    unimp
d00084ee:       0000                    unimp
d00084f0:       0000                    unimp
d00084f2:       0000                    unimp
d00084f4:       0000                    unimp
d00084f6:       0000                    unimp
d00084f8:       0000                    unimp
d00084fa:       0000                    unimp
d00084fc:       0000                    unimp
d00084fe:       0000                    unimp
d0008500:       0000                    unimp
d0008502:       0000                    unimp
d0008504:       0000                    unimp
d0008506:       0000                    unimp
d0008508:       0000                    unimp
d000850a:       0000                    unimp
d000850c:       0000                    unimp
d000850e:       0000                    unimp
d0008510:       0000                    unimp
d0008512:       0000                    unimp
d0008514:       0000                    unimp
d0008516:       0000                    unimp
d0008518:       0000                    unimp
d000851a:       0000                    unimp
d000851c:       0000                    unimp
d000851e:       0000                    unimp
d0008520:       0000                    unimp
d0008522:       0000                    unimp
d0008524:       0000                    unimp
d0008526:       0000                    unimp
d0008528:       0000                    unimp
d000852a:       0000                    unimp
d000852c:       0000                    unimp
d000852e:       0000                    unimp
d0008530:       0000                    unimp
d0008532:       0000                    unimp
d0008534:       0000                    unimp
d0008536:       0000                    unimp
d0008538:       0000                    unimp
d000853a:       0000                    unimp
d000853c:       0000                    unimp
d000853e:       0000                    unimp
d0008540:       0000                    unimp
d0008542:       0000                    unimp
d0008544:       0000                    unimp
d0008546:       0000                    unimp
d0008548:       0000                    unimp
d000854a:       0000                    unimp
d000854c:       0000                    unimp
d000854e:       0000                    unimp
d0008550:       0000                    unimp
d0008552:       0000                    unimp
d0008554:       0000                    unimp
d0008556:       0000                    unimp
d0008558:       0000                    unimp
d000855a:       0000                    unimp
d000855c:       0000                    unimp
d000855e:       0000                    unimp
d0008560:       0000                    unimp
d0008562:       0000                    unimp
d0008564:       0000                    unimp
d0008566:       0000                    unimp
d0008568:       0000                    unimp
d000856a:       0000                    unimp
d000856c:       0000                    unimp
d000856e:       0000                    unimp
d0008570:       0000                    unimp
d0008572:       0000                    unimp
d0008574:       0000                    unimp
d0008576:       0000                    unimp
d0008578:       0000                    unimp
d000857a:       0000                    unimp
d000857c:       0000                    unimp
d000857e:       0000                    unimp
d0008580:       0000                    unimp
d0008582:       0000                    unimp
d0008584:       0000                    unimp
d0008586:       0000                    unimp
d0008588:       0000                    unimp
d000858a:       0000                    unimp
d000858c:       0000                    unimp
d000858e:       0000                    unimp
d0008590:       0000                    unimp
d0008592:       0000                    unimp
d0008594:       0000                    unimp
d0008596:       0000                    unimp
d0008598:       0000                    unimp
d000859a:       0000                    unimp
d000859c:       0000                    unimp
d000859e:       0000                    unimp
d00085a0:       0000                    unimp
d00085a2:       0000                    unimp
d00085a4:       0000                    unimp
d00085a6:       0000                    unimp
d00085a8:       0000                    unimp
d00085aa:       0000                    unimp
d00085ac:       0000                    unimp
d00085ae:       0000                    unimp
d00085b0:       0000                    unimp
d00085b2:       0000                    unimp
d00085b4:       0000                    unimp
d00085b6:       0000                    unimp
d00085b8:       0000                    unimp
d00085ba:       0000                    unimp
d00085bc:       0000                    unimp
d00085be:       0000                    unimp
d00085c0:       0000                    unimp
d00085c2:       0000                    unimp
d00085c4:       0000                    unimp
d00085c6:       0000                    unimp
d00085c8:       0000                    unimp
d00085ca:       0000                    unimp
d00085cc:       0000                    unimp
d00085ce:       0000                    unimp
d00085d0:       0000                    unimp
d00085d2:       0000                    unimp
d00085d4:       0000                    unimp
d00085d6:       0000                    unimp
d00085d8:       0000                    unimp
d00085da:       0000                    unimp
d00085dc:       0000                    unimp
d00085de:       0000                    unimp
d00085e0:       0000                    unimp
d00085e2:       0000                    unimp
d00085e4:       0000                    unimp
d00085e6:       0000                    unimp
d00085e8:       0000                    unimp
d00085ea:       0000                    unimp
d00085ec:       0000                    unimp
d00085ee:       0000                    unimp
d00085f0:       0000                    unimp
d00085f2:       0000                    unimp
d00085f4:       0000                    unimp
d00085f6:       0000                    unimp
d00085f8:       0000                    unimp
d00085fa:       0000                    unimp
d00085fc:       0000                    unimp
d00085fe:       0000                    unimp
d0008600:       0000                    unimp
d0008602:       0000                    unimp
d0008604:       0000                    unimp
d0008606:       0000                    unimp
d0008608:       0000                    unimp
d000860a:       0000                    unimp
d000860c:       0000                    unimp
d000860e:       0000                    unimp
d0008610:       0000                    unimp
d0008612:       0000                    unimp
d0008614:       0000                    unimp
d0008616:       0000                    unimp
d0008618:       0000                    unimp
d000861a:       0000                    unimp
d000861c:       0000                    unimp
d000861e:       0000                    unimp
d0008620:       0000                    unimp
d0008622:       0000                    unimp
d0008624:       0000                    unimp
d0008626:       0000                    unimp
d0008628:       0000                    unimp
d000862a:       0000                    unimp
d000862c:       0000                    unimp
d000862e:       0000                    unimp
d0008630:       0000                    unimp
d0008632:       0000                    unimp
d0008634:       0000                    unimp
d0008636:       0000                    unimp
d0008638:       0000                    unimp
d000863a:       0000                    unimp
d000863c:       0000                    unimp
d000863e:       0000                    unimp
d0008640:       0000                    unimp
d0008642:       0000                    unimp
d0008644:       0000                    unimp
d0008646:       0000                    unimp
d0008648:       0000                    unimp
d000864a:       0000                    unimp
d000864c:       0000                    unimp
d000864e:       0000                    unimp
d0008650:       0000                    unimp
d0008652:       0000                    unimp
d0008654:       0000                    unimp
d0008656:       0000                    unimp
d0008658:       0000                    unimp
d000865a:       0000                    unimp
d000865c:       0000                    unimp
d000865e:       0000                    unimp
d0008660:       0000                    unimp
d0008662:       0000                    unimp
d0008664:       0000                    unimp
d0008666:       0000                    unimp
d0008668:       0000                    unimp
d000866a:       0000                    unimp
d000866c:       0000                    unimp
d000866e:       0000                    unimp
d0008670:       0000                    unimp
d0008672:       0000                    unimp
d0008674:       0000                    unimp
d0008676:       0000                    unimp
d0008678:       0000                    unimp
d000867a:       0000                    unimp
d000867c:       0000                    unimp
d000867e:       0000                    unimp
d0008680:       0000                    unimp
d0008682:       0000                    unimp
d0008684:       0000                    unimp
d0008686:       0000                    unimp
d0008688:       0000                    unimp
d000868a:       0000                    unimp
d000868c:       0000                    unimp
d000868e:       0000                    unimp
d0008690:       0000                    unimp
d0008692:       0000                    unimp
d0008694:       0000                    unimp
d0008696:       0000                    unimp
d0008698:       0000                    unimp
d000869a:       0000                    unimp
d000869c:       0000                    unimp
d000869e:       0000                    unimp
d00086a0:       0000                    unimp
d00086a2:       0000                    unimp
d00086a4:       0000                    unimp
d00086a6:       0000                    unimp
d00086a8:       0000                    unimp
d00086aa:       0000                    unimp
d00086ac:       0000                    unimp
d00086ae:       0000                    unimp
d00086b0:       0000                    unimp
d00086b2:       0000                    unimp
d00086b4:       0000                    unimp
d00086b6:       0000                    unimp
d00086b8:       0000                    unimp
d00086ba:       0000                    unimp
d00086bc:       0000                    unimp
d00086be:       0000                    unimp
d00086c0:       0000                    unimp
d00086c2:       0000                    unimp
d00086c4:       0000                    unimp
d00086c6:       0000                    unimp
d00086c8:       0000                    unimp
d00086ca:       0000                    unimp
d00086cc:       0000                    unimp
d00086ce:       0000                    unimp
d00086d0:       0000                    unimp
d00086d2:       0000                    unimp
d00086d4:       0000                    unimp
d00086d6:       0000                    unimp
d00086d8:       0000                    unimp
d00086da:       0000                    unimp
d00086dc:       0000                    unimp
d00086de:       0000                    unimp
d00086e0:       0000                    unimp
d00086e2:       0000                    unimp
d00086e4:       0000                    unimp
d00086e6:       0000                    unimp
d00086e8:       0000                    unimp
d00086ea:       0000                    unimp
d00086ec:       0000                    unimp
d00086ee:       0000                    unimp
d00086f0:       0000                    unimp
d00086f2:       0000                    unimp
d00086f4:       0000                    unimp
d00086f6:       0000                    unimp
d00086f8:       0000                    unimp
d00086fa:       0000                    unimp
d00086fc:       0000                    unimp
d00086fe:       0000                    unimp
d0008700:       0000                    unimp
d0008702:       0000                    unimp
d0008704:       0000                    unimp
d0008706:       0000                    unimp
d0008708:       0000                    unimp
d000870a:       0000                    unimp
d000870c:       0000                    unimp
d000870e:       0000                    unimp
d0008710:       0000                    unimp
d0008712:       0000                    unimp
d0008714:       0000                    unimp
d0008716:       0000                    unimp
d0008718:       0000                    unimp
d000871a:       0000                    unimp
d000871c:       0000                    unimp
d000871e:       0000                    unimp
d0008720:       0000                    unimp
d0008722:       0000                    unimp
d0008724:       0000                    unimp
d0008726:       0000                    unimp
d0008728:       0000                    unimp
d000872a:       0000                    unimp
d000872c:       0000                    unimp
d000872e:       0000                    unimp
d0008730:       0000                    unimp
d0008732:       0000                    unimp
d0008734:       0000                    unimp
d0008736:       0000                    unimp
d0008738:       0000                    unimp
d000873a:       0000                    unimp
d000873c:       0000                    unimp
d000873e:       0000                    unimp
d0008740:       0000                    unimp
d0008742:       0000                    unimp
d0008744:       0000                    unimp
d0008746:       0000                    unimp
d0008748:       0000                    unimp
d000874a:       0000                    unimp
d000874c:       0000                    unimp
d000874e:       0000                    unimp
d0008750:       0000                    unimp
d0008752:       0000                    unimp
d0008754:       0000                    unimp
d0008756:       0000                    unimp
d0008758:       0000                    unimp
d000875a:       0000                    unimp
d000875c:       0000                    unimp
d000875e:       0000                    unimp
d0008760:       0000                    unimp
d0008762:       0000                    unimp
d0008764:       0000                    unimp
d0008766:       0000                    unimp
d0008768:       0000                    unimp
d000876a:       0000                    unimp
d000876c:       0000                    unimp
d000876e:       0000                    unimp
d0008770:       0000                    unimp
d0008772:       0000                    unimp
d0008774:       0000                    unimp
d0008776:       0000                    unimp
d0008778:       0000                    unimp
d000877a:       0000                    unimp
d000877c:       0000                    unimp
d000877e:       0000                    unimp
d0008780:       0000                    unimp
d0008782:       0000                    unimp
d0008784:       0000                    unimp
d0008786:       0000                    unimp
d0008788:       0000                    unimp
d000878a:       0000                    unimp
d000878c:       0000                    unimp
d000878e:       0000                    unimp
d0008790:       0000                    unimp
d0008792:       0000                    unimp
d0008794:       0000                    unimp
d0008796:       0000                    unimp
d0008798:       0000                    unimp
d000879a:       0000                    unimp
d000879c:       0000                    unimp
d000879e:       0000                    unimp
d00087a0:       0000                    unimp
d00087a2:       0000                    unimp
d00087a4:       0000                    unimp
d00087a6:       0000                    unimp
d00087a8:       0000                    unimp
d00087aa:       0000                    unimp
d00087ac:       0000                    unimp
d00087ae:       0000                    unimp
d00087b0:       0000                    unimp
d00087b2:       0000                    unimp
d00087b4:       0000                    unimp
d00087b6:       0000                    unimp
d00087b8:       0000                    unimp
d00087ba:       0000                    unimp
d00087bc:       0000                    unimp
d00087be:       0000                    unimp
d00087c0:       0000                    unimp
d00087c2:       0000                    unimp
d00087c4:       0000                    unimp
d00087c6:       0000                    unimp
d00087c8:       0000                    unimp
d00087ca:       0000                    unimp
d00087cc:       0000                    unimp
d00087ce:       0000                    unimp
d00087d0:       0000                    unimp
d00087d2:       0000                    unimp
d00087d4:       0000                    unimp
d00087d6:       0000                    unimp
d00087d8:       0000                    unimp
d00087da:       0000                    unimp
d00087dc:       0000                    unimp
d00087de:       0000                    unimp
d00087e0:       0000                    unimp
d00087e2:       0000                    unimp
d00087e4:       0000                    unimp
d00087e6:       0000                    unimp
d00087e8:       0000                    unimp
d00087ea:       0000                    unimp
d00087ec:       0000                    unimp
d00087ee:       0000                    unimp
d00087f0:       0000                    unimp
d00087f2:       0000                    unimp
d00087f4:       0000                    unimp
d00087f6:       0000                    unimp
d00087f8:       0000                    unimp
d00087fa:       0000                    unimp
d00087fc:       0000                    unimp
d00087fe:       0000                    unimp

Disassembly of section .text:

d0008800 <init_spi_host>:
init_spi_host():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:125
                   uint32_t peripheral_clock_freq_hz) {
d0008800:                 7179                  addi    sp,sp,-48
d0008802:                 d606                  sw      ra,44(sp)
d0008804:                 d422                  sw      s0,40(sp)
d0008806:                 d226                  sw      s1,36(sp)
d0008808:                 d04a                  sw      s2,32(sp)
d000880a:                 842a                  mv      s0,a0
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:127
      .spi_clock = peripheral_clock_freq_hz / 8,// consider 50MHz default ot freq, 6.25MHz after /8
d000880c:                 0035d513              srli    a0,a1,0x3
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:134
  CHECK_DIF_OK(dif_spi_host_configure(spi_host, config));
d0008810:                 c42a                  sw      a0,8(sp)
d0008812:                 c62e                  sw      a1,12(sp)
d0008814:                 01020537              lui     a0,0x1020
d0008818:                 20250513              addi    a0,a0,514 # 1020202 <WDOG_BARK_THOLD+0xfe931a>
d000881c:                 c82a                  sw      a0,16(sp)
d000881e:                 10100513              li      a0,257
d0008822:                 00a11a23              sh      a0,20(sp)
d0008826:                 002c                  addi    a1,sp,8
d0008828:                 8522                  mv      a0,s0
d000882a:                 688030ef              jal     ra,d000beb2 <dif_spi_host_configure>
d000882e:                 00007917              auipc   s2,0x7
d0008832:                 d6290913              addi    s2,s2,-670 # d000f590 <kDeviceLogBypassUartAddress>
d0008836:       /-------- cd0d                  beqz    a0,d0008870 <init_spi_host+0x70>
d0008838:       |         84aa                  mv      s1,a0
d000883a:       |         00092503              lw      a0,0(s2)
d000883e:       |     /-- c901                  beqz    a0,d000884e <init_spi_host+0x4e>
d0008840:       |     |   00000513              li      a0,0
d0008844:       |     |   4585                  li      a1,1
d0008846:       |     |   8626                  mv      a2,s1
d0008848:       |     |   2ad030ef              jal     ra,d000c2f4 <base_log_internal_dv>
d000884c:       |  /--|-- a829                  j       d0008866 <init_spi_host+0x66>
d000884e:       |  |  \-> 00006597              auipc   a1,0x6
d0008852:       |  |      e9258593              addi    a1,a1,-366 # d000e6e0 <_text_end+0x1a4>
d0008856:       |  |      0028                  addi    a0,sp,8
d0008858:       |  |      4651                  li      a2,20
d000885a:       |  |      744050ef              jal     ra,d000df9e <memcpy>
d000885e:       |  |      0028                  addi    a0,sp,8
d0008860:       |  |      85a6                  mv      a1,s1
d0008862:       |  |      1f1030ef              jal     ra,d000c252 <base_log_internal_core>
d0008866:       |  \----> 6531                  lui     a0,0xc
d0008868:       |         aad50513              addi    a0,a0,-1363 # baad <_rom_ext_virtual_size+0x3aad>
d000886c:       |         13b030ef              jal     ra,d000c1a6 <test_status_set>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:135
  CHECK_DIF_OK(dif_spi_host_output_set_enabled(spi_host, /*enabled=*/true));
d0008870:       \-------> 4585                  li      a1,1
d0008872:                 8522                  mv      a0,s0
d0008874:                 6c0030ef              jal     ra,d000bf34 <dif_spi_host_output_set_enabled>
d0008878:       /-------- cd0d                  beqz    a0,d00088b2 <init_spi_host+0xb2>
d000887a:       |         842a                  mv      s0,a0
d000887c:       |         00092503              lw      a0,0(s2)
d0008880:       |     /-- c901                  beqz    a0,d0008890 <init_spi_host+0x90>
d0008882:       |     |   01400513              li      a0,20
d0008886:       |     |   4585                  li      a1,1
d0008888:       |     |   8622                  mv      a2,s0
d000888a:       |     |   26b030ef              jal     ra,d000c2f4 <base_log_internal_dv>
d000888e:       |  /--|-- a829                  j       d00088a8 <init_spi_host+0xa8>
d0008890:       |  |  \-> 00006597              auipc   a1,0x6
d0008894:       |  |      e6458593              addi    a1,a1,-412 # d000e6f4 <_text_end+0x1b8>
d0008898:       |  |      0028                  addi    a0,sp,8
d000889a:       |  |      4651                  li      a2,20
d000889c:       |  |      702050ef              jal     ra,d000df9e <memcpy>
d00088a0:       |  |      0028                  addi    a0,sp,8
d00088a2:       |  |      85a2                  mv      a1,s0
d00088a4:       |  |      1af030ef              jal     ra,d000c252 <base_log_internal_core>
d00088a8:       |  \----> 6531                  lui     a0,0xc
d00088aa:       |         aad50513              addi    a0,a0,-1363 # baad <_rom_ext_virtual_size+0x3aad>
d00088ae:       |         0f9030ef              jal     ra,d000c1a6 <test_status_set>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:136
}
d00088b2:       \-------> 5902                  lw      s2,32(sp)
d00088b4:                 5492                  lw      s1,36(sp)
d00088b6:                 5422                  lw      s0,40(sp)
d00088b8:                 50b2                  lw      ra,44(sp)
d00088ba:                 6145                  addi    sp,sp,48
d00088bc:                 8082                  ret

d00088be <spi_flash_load_data>:
spi_flash_load_data():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:137
void spi_flash_load_data(void){
d00088be:                    7125                       addi    sp,sp,-416
d00088c0:                    18112e23           sw      ra,412(sp)
d00088c4:                    18812c23           sw      s0,408(sp)
d00088c8:                    18912a23           sw      s1,404(sp)
d00088cc:                    19212823           sw      s2,400(sp)
d00088d0:                    19312623           sw      s3,396(sp)
d00088d4:                    19412423           sw      s4,392(sp)
d00088d8:                    19512223           sw      s5,388(sp)
d00088dc:                    19612023           sw      s6,384(sp)
d00088e0:                    17712e23           sw      s7,380(sp)
d00088e4:                    17812c23           sw      s8,376(sp)
d00088e8:                    17912a23           sw      s9,372(sp)
d00088ec:                    17a12823           sw      s10,368(sp)
d00088f0:                    17b12623           sw      s11,364(sp)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:159
  alsaqr_periph_padframe_periphs_ot_spi_00_mux_set( 1 );
d00088f4:                    4505                       li      a0,1
d00088f6:                    4d05                       li      s10,1
d00088f8:                    07f030ef           jal     ra,d000c176 <alsaqr_periph_padframe_periphs_ot_spi_00_mux_set>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:160
  alsaqr_periph_padframe_periphs_ot_spi_01_mux_set( 1 );
d00088fc:                    4505                       li      a0,1
d00088fe:                    085030ef           jal     ra,d000c182 <alsaqr_periph_padframe_periphs_ot_spi_01_mux_set>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:161
  alsaqr_periph_padframe_periphs_ot_spi_02_mux_set( 1 );
d0008902:                    4505                       li      a0,1
d0008904:                    08b030ef           jal     ra,d000c18e <alsaqr_periph_padframe_periphs_ot_spi_02_mux_set>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:162
  alsaqr_periph_padframe_periphs_ot_spi_03_mux_set( 1 );
d0008908:                    4505                       li      a0,1
d000890a:                    091030ef           jal     ra,d000c19a <alsaqr_periph_padframe_periphs_ot_spi_03_mux_set>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:164
  CHECK_DIF_OK(dif_spi_host_init(mmio_region_from_addr(base_addr), &spi_host));
d000890e:                    0fff9597           auipc   a1,0xfff9
d0008912:                    73e58593           addi    a1,a1,1854 # e000204c <spi_host>
d0008916:                    c0300537           lui     a0,0xc0300
d000891a:                    374030ef           jal     ra,d000bc8e <dif_spi_host_init>
d000891e:                    00007597           auipc   a1,0x7
d0008922:                    c7258593           addi    a1,a1,-910 # d000f590 <kDeviceLogBypassUartAddress>
d0008926:                    0005a903           lw      s2,0(a1)
d000892a:          /-------- cd05                       beqz    a0,d0008962 <spi_flash_load_data+0xa4>
d000892c:          |         84aa                       mv      s1,a0
d000892e:          |     /-- 00090963           beqz    s2,d0008940 <spi_flash_load_data+0x82>
d0008932:          |     |   02800513           li      a0,40
d0008936:          |     |   4585                       li      a1,1
d0008938:          |     |   8626                       mv      a2,s1
d000893a:          |     |   1bb030ef           jal     ra,d000c2f4 <base_log_internal_dv>
d000893e:          |  /--|-- a829                       j       d0008958 <spi_flash_load_data+0x9a>
d0008940:          |  |  \-> 00006597           auipc   a1,0x6
d0008944:          |  |      dc858593           addi    a1,a1,-568 # d000e708 <_text_end+0x1cc>
d0008948:          |  |      1a08                       addi    a0,sp,304
d000894a:          |  |      4651                       li      a2,20
d000894c:          |  |      652050ef           jal     ra,d000df9e <memcpy>
d0008950:          |  |      1a08                       addi    a0,sp,304
d0008952:          |  |      85a6                       mv      a1,s1
d0008954:          |  |      0ff030ef           jal     ra,d000c252 <base_log_internal_core>
d0008958:          |  \----> 6531                       lui     a0,0xc
d000895a:          |         aad50513           addi    a0,a0,-1363 # baad <_rom_ext_virtual_size+0x3aad>
d000895e:          |         049030ef           jal     ra,d000c1a6 <test_status_set>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:165
  init_spi_host(&spi_host, (uint32_t)clkHz);
d0008962:          \-------> 0fff9b17           auipc   s6,0xfff9
d0008966:                    6eab0b13           addi    s6,s6,1770 # e000204c <spi_host>
d000896a:                    02faf537           lui     a0,0x2faf
d000896e:                    08050593           addi    a1,a0,128 # 2faf080 <WDOG_BARK_THOLD+0x2f78198>
d0008972:                    855a                       mv      a0,s6
d0008974:                    3571                       jal     d0008800 <init_spi_host>
d0008976:                    4481                       li      s1,0
d0008978:                    4c81                       li      s9,0
d000897a:                    ff000437           lui     s0,0xff000
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:167
  *datapath = 1;
d000897e:                    01a42e23           sw      s10,28(s0) # ff00001c <_stack_end+0x1efe001c>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:168
  *address = 0;
d0008982:                    00042623           sw      zero,12(s0)
d0008986:                    00193b93           seqz    s7,s2
d000898a:                    0fc00913           li      s2,252
d000898e:                    6541                       lui     a0,0x10
d0008990:                    f0050a13           addi    s4,a0,-256 # ff00 <_rom_ext_virtual_size+0x7f00>
d0008994:                    03c00993           li      s3,60
d0008998:                    0c300d93           li      s11,195
d000899c:                    00006517           auipc   a0,0x6
d00089a0:                    d8050513           addi    a0,a0,-640 # d000e71c <_text_end+0x1e0>
d00089a4:                    c22a                       sw      a0,4(sp)
d00089a6:                    6531                       lui     a0,0xc
d00089a8:                    aad50a93           addi    s5,a0,-1363 # baad <_rom_ext_virtual_size+0x3aad>
d00089ac:                    03c00513           li      a0,60
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:170
  for(int j=0;j<num_iter;j++){
d00089b0:                    c42a                       sw      a0,8(sp)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:171
     addr = j*sizeof(buf);
d00089b2:       /----------> 032c8533           mul     a0,s9,s2
bitfield_byteswap32():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:293
 * @param bitfield Bitfield to reverse bytes of.
 * @return `bitfield` with the order of bytes reversed.
 */
OT_WARN_UNUSED_RESULT
inline uint32_t bitfield_byteswap32(uint32_t bitfield) {
  return __builtin_bswap32(bitfield);
d00089b6:       |            00855593           srli    a1,a0,0x8
d00089ba:       |            0145f5b3           and     a1,a1,s4
d00089be:       |            01855613           srli    a2,a0,0x18
d00089c2:       |            8dd1                       or      a1,a1,a2
d00089c4:       |            00851613           slli    a2,a0,0x8
d00089c8:       |            00ff06b7           lui     a3,0xff0
d00089cc:       |            8e75                       and     a2,a2,a3
d00089ce:       |            0562                       slli    a0,a0,0x18
d00089d0:       |            8d51                       or      a0,a0,a2
d00089d2:       |            00b56c33           or      s8,a0,a1
spi_flash_load_data():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:173
     segments[0] = (dif_spi_host_segment_t) {
d00089d6:       |            12110513           addi    a0,sp,289
d00089da:       |            463d                       li      a2,15
d00089dc:       |            4581                       li      a1,0
d00089de:       |            648050ef           jal     ra,d000e026 <memset>
d00089e2:       |            12012823           sw      zero,304(sp)
d00089e6:       |            454d                       li      a0,19
d00089e8:       |            12a10a23           sb      a0,308(sp)
d00089ec:       |            12110593           addi    a1,sp,289
d00089f0:       |            463d                       li      a2,15
d00089f2:       |            13510513           addi    a0,sp,309
d00089f6:       |            5a8050ef           jal     ra,d000df9e <memcpy>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:177
     segments[1] = (dif_spi_host_segment_t) {
d00089fa:       |            15a12223           sw      s10,324(sp)
d00089fe:       |            14012423           sw      zero,328(sp)
d0008a02:       |            15a12623           sw      s10,332(sp)
d0008a06:       |            15812823           sw      s8,336(sp)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:186
     segments[2] = (dif_spi_host_segment_t) {
d0008a0a:       |            4511                       li      a0,4
d0008a0c:       |            14a12c23           sw      a0,344(sp)
d0008a10:       |            14012e23           sw      zero,348(sp)
d0008a14:       |            0068                       addi    a0,sp,12
d0008a16:       |            16a12023           sw      a0,352(sp)
d0008a1a:       |            17212223           sw      s2,356(sp)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:196
     CHECK_DIF_OK(
d0008a1e:       |            1a10                       addi    a2,sp,304
d0008a20:       |            468d                       li      a3,3
d0008a22:       |            855a                       mv      a0,s6
d0008a24:       |            4581                       li      a1,0
d0008a26:       |            562030ef           jal     ra,d000bf88 <dif_spi_host_transaction>
d0008a2a:       |  /-------- c515                       beqz    a0,d0008a56 <spi_flash_load_data+0x198>
d0008a2c:       |  |         8c2a                       mv      s8,a0
d0008a2e:       |  |     /-- 000b9863           bnez    s7,d0008a3e <spi_flash_load_data+0x180>
d0008a32:       |  |     |   4585                       li      a1,1
d0008a34:       |  |     |   4522                       lw      a0,8(sp)
d0008a36:       |  |     |   8662                       mv      a2,s8
d0008a38:       |  |     |   0bd030ef           jal     ra,d000c2f4 <base_log_internal_dv>
d0008a3c:       |  |  /--|-- a811                       j       d0008a50 <spi_flash_load_data+0x192>
d0008a3e:       |  |  |  \-> 0228                       addi    a0,sp,264
d0008a40:       |  |  |      4651                       li      a2,20
d0008a42:       |  |  |      4592                       lw      a1,4(sp)
d0008a44:       |  |  |      55a050ef           jal     ra,d000df9e <memcpy>
d0008a48:       |  |  |      0228                       addi    a0,sp,264
d0008a4a:       |  |  |      85e2                       mv      a1,s8
d0008a4c:       |  |  |      007030ef           jal     ra,d000c252 <base_log_internal_core>
d0008a50:       |  |  \----> 8556                       mv      a0,s5
d0008a52:       |  |         754030ef           jal     ra,d000c1a6 <test_status_set>
d0008a56:       |  \-------> 5575                       li      a0,-3
d0008a58:       |            080c                       addi    a1,sp,16
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:201
         *payload_1 = buf[i];
d0008a5a:       |        /-> ffc5a603           lw      a2,-4(a1)
d0008a5e:       |        |   c010                       sw      a2,0(s0)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:202
         *payload_2 = buf[i+1];
d0008a60:       |        |   4190                       lw      a2,0(a1)
d0008a62:       |        |   c050                       sw      a2,4(s0)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:203
         *payload_3 = buf[i+2];
d0008a64:       |        |   41d0                       lw      a2,4(a1)
d0008a66:       |        |   c410                       sw      a2,8(s0)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:204
               *address   = index;
d0008a68:       |        |   c444                       sw      s1,12(s0)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:205
         *start = 0x1;
d0008a6a:       |        |   01a42823           sw      s10,16(s0)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:206
         index++;
d0008a6e:       |        |   0485                       addi    s1,s1,1
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:199
     for(int i = 0; i < buf_size; i += 3) {
d0008a70:       |        |   050d                       addi    a0,a0,3
d0008a72:       |        |   05b1                       addi    a1,a1,12
d0008a74:       |        \-- ff3563e3           bltu    a0,s3,d0008a5a <spi_flash_load_data+0x19c>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:170
  for(int j=0;j<num_iter;j++){
d0008a78:       |            0c85                       addi    s9,s9,1
d0008a7a:       \----------- f3bc9ce3           bne     s9,s11,d00089b2 <spi_flash_load_data+0xf4>
d0008a7e:                    ff000537           lui     a0,0xff000
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:211
  *datapath = 0;
d0008a82:                    00052e23           sw      zero,28(a0) # ff00001c <_stack_end+0x1efe001c>
d0008a86:                    f0000537           lui     a0,0xf0000
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:214
  if(*test == 0x01010101)
d0008a8a:                    410c                       lw      a1,0(a0)
d0008a8c:                    01010637           lui     a2,0x1010
d0008a90:                    10160613           addi    a2,a2,257 # 1010101 <WDOG_BARK_THOLD+0xfd9219>
d0008a94:                /-- 00c59463           bne     a1,a2,d0008a9c <spi_flash_load_data+0x1de>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:215
    *test= 0x0;
d0008a98:                |   00052023           sw      zero,0(a0) # f0000000 <_stack_end+0xffe0000>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:217
  CHECK_DIF_OK(dif_spi_host_output_set_enabled(&spi_host, false));
d0008a9c:                \-> 0fff9517           auipc   a0,0xfff9
d0008aa0:                    5b050513           addi    a0,a0,1456 # e000204c <spi_host>
d0008aa4:                    4581                       li      a1,0
d0008aa6:                    48e030ef           jal     ra,d000bf34 <dif_spi_host_output_set_enabled>
d0008aaa:          /-------- cd05                       beqz    a0,d0008ae2 <spi_flash_load_data+0x224>
d0008aac:          |         842a                       mv      s0,a0
d0008aae:          |     /-- 000b9963           bnez    s7,d0008ac0 <spi_flash_load_data+0x202>
d0008ab2:          |     |   05000513           li      a0,80
d0008ab6:          |     |   4585                       li      a1,1
d0008ab8:          |     |   8622                       mv      a2,s0
d0008aba:          |     |   03b030ef           jal     ra,d000c2f4 <base_log_internal_dv>
d0008abe:          |  /--|-- a829                       j       d0008ad8 <spi_flash_load_data+0x21a>
d0008ac0:          |  |  \-> 00006597           auipc   a1,0x6
d0008ac4:          |  |      c7058593           addi    a1,a1,-912 # d000e730 <_text_end+0x1f4>
d0008ac8:          |  |      0228                       addi    a0,sp,264
d0008aca:          |  |      4651                       li      a2,20
d0008acc:          |  |      4d2050ef           jal     ra,d000df9e <memcpy>
d0008ad0:          |  |      0228                       addi    a0,sp,264
d0008ad2:          |  |      85a2                       mv      a1,s0
d0008ad4:          |  |      77e030ef           jal     ra,d000c252 <base_log_internal_core>
d0008ad8:          |  \----> 6531                       lui     a0,0xc
d0008ada:          |         aad50513           addi    a0,a0,-1363 # baad <_rom_ext_virtual_size+0x3aad>
d0008ade:          |         6c8030ef           jal     ra,d000c1a6 <test_status_set>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:218
}
d0008ae2:          \-------> 16c12d83           lw      s11,364(sp)
d0008ae6:                    17012d03           lw      s10,368(sp)
d0008aea:                    17412c83           lw      s9,372(sp)
d0008aee:                    17812c03           lw      s8,376(sp)
d0008af2:                    17c12b83           lw      s7,380(sp)
d0008af6:                    18012b03           lw      s6,384(sp)
d0008afa:                    18412a83           lw      s5,388(sp)
d0008afe:                    18812a03           lw      s4,392(sp)
d0008b02:                    18c12983           lw      s3,396(sp)
d0008b06:                    19012903           lw      s2,400(sp)
d0008b0a:                    19412483           lw      s1,404(sp)
d0008b0e:                    19812403           lw      s0,408(sp)
d0008b12:                    19c12083           lw      ra,412(sp)
d0008b16:                    611d                       addi    sp,sp,416
d0008b18:                    8082                       ret

d0008b1a <rom_main>:
rom_main():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:544
void rom_main(void) {
d0008b1a:                 1101                  addi    sp,sp,-32
d0008b1c:                 ce06                  sw      ra,28(sp)
d0008b1e:                 cc22                  sw      s0,24(sp)
d0008b20:                 ca26                  sw      s1,20(sp)
d0008b22:                 c84a                  sw      s2,16(sp)
d0008b24:                 c64e                  sw      s3,12(sp)
d0008b26:                 c452                  sw      s4,8(sp)
d0008b28:                 c256                  sw      s5,4(sp)
d0008b2a:                 c1418a93              addi    s5,gp,-1004 # e000245c <rom_counters>
d0008b2e:                 1a500513              li      a0,421
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:549
  CFI_FUNC_COUNTER_INIT(rom_counters, kCfiRomMain);
d0008b32:                 00aaa023              sw      a0,0(s5)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:550
  CFI_FUNC_COUNTER_PREPCALL(rom_counters, kCfiRomMain, 1, kCfiRomInit);
d0008b36:                 000aa583              lw      a1,0(s5)
d0008b3a:             /-- 00a58663              beq     a1,a0,d0008b46 <rom_main+0x2c>
d0008b3e:             |   0000                  unimp
d0008b40:             |   0000                  unimp
d0008b42:             |   0000                  unimp
d0008b44:             |   0000                  unimp
d0008b46:             \-> 000aa503              lw      a0,0(s5)
d0008b4a:                 05a50513              addi    a0,a0,90
d0008b4e:                 00aaa023              sw      a0,0(s5)
barrier32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:349
 * loop; however, the barriers in each loop iteration force a particular order
 * is observed.
 *
 * @param val A value to create a barrier for.
 */
inline void barrier32(uint32_t val) { asm volatile("" ::"r"(val)); }
d0008b52:                 6505                  lui     a0,0x1
d0008b54:                 83650513              addi    a0,a0,-1994 # 836 <_epmp_reset_rx_size+0x36>
rom_main():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:550
d0008b58:                 00aaa223              sw      a0,4(s5)
d0008b5c:                 000aa583              lw      a1,0(s5)
d0008b60:                 1ff00613              li      a2,511
d0008b64:             /-- 00c58663              beq     a1,a2,d0008b70 <rom_main+0x56>
d0008b68:             |   0000                  unimp
d0008b6a:             |   0000                  unimp
d0008b6c:             |   0000                  unimp
d0008b6e:             |   0000                  unimp
d0008b70:             \-> 000aa583              lw      a1,0(s5)
d0008b74:                 05a58593              addi    a1,a1,90
d0008b78:                 00baa023              sw      a1,0(s5)
rom_init():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:224
  CFI_FUNC_COUNTER_INCREMENT(rom_counters, kCfiRomInit, 1);
d0008b7c:                 004aa583              lw      a1,4(s5)
d0008b80:             /-- 00a58663              beq     a1,a0,d0008b8c <rom_main+0x72>
d0008b84:             |   0000                  unimp
d0008b86:             |   0000                  unimp
d0008b88:             |   0000                  unimp
d0008b8a:             |   0000                  unimp
d0008b8c:             \-> 004aa503              lw      a0,4(s5)
d0008b90:                 05a50513              addi    a0,a0,90
d0008b94:                 00aaa223              sw      a0,4(s5)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:225
  sec_mmio_init();
d0008b98:                 1a2050ef              jal     ra,d000dd3a <sec_mmio_init>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:227
  pinmux_init();
d0008b9c:                 689020ef              jal     ra,d000ba24 <pinmux_init>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:229
  uart_init(kUartNCOValue);
d0008ba0:                 00007517              auipc   a0,0x7
d0008ba4:                 9e050513              addi    a0,a0,-1568 # d000f580 <kUartNCOValue>
d0008ba8:                 4108                  lw      a0,0(a0)
d0008baa:                 737020ef              jal     ra,d000bae0 <uart_init>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:238
  uart_set_cfg(0,(test_freq/baud_rate)>>4);
d0008bae:                 45ed                  li      a1,27
d0008bb0:                 4501                  li      a0,0
d0008bb2:                 5da010ef              jal     ra,d000a18c <uart_set_cfg>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:243
  CSR_WRITE(CSR_REG_SECURESEED, rnd_uint32());
d0008bb6:                 493040ef              jal     ra,d000d848 <rnd_uint32>
d0008bba:                 7c151073              csrw    0x7c1,a0
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:247
  CSR_READ(CSR_REG_CPUCTRL, &cpuctrl_csr);
d0008bbe:                 7c002473              csrr    s0,0x7c0
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:250
      otp_read32(OTP_CTRL_PARAM_CREATOR_SW_CFG_CPUCTRL_OFFSET));
d0008bc2:                 10c00513              li      a0,268
d0008bc6:                 16c050ef              jal     ra,d000dd32 <otp_read32>
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:75
  bitfield &= ~(field.mask << field.index);
d0008bca:                 fc047593              andi    a1,s0,-64
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
  bitfield |= (value & field.mask) << field.index;
d0008bce:                 03f57513              andi    a0,a0,63
d0008bd2:                 8d4d                  or      a0,a0,a1
rom_init():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:251
  CSR_WRITE(CSR_REG_CPUCTRL, cpuctrl_csr);
d0008bd4:                 7c051073              csrw    0x7c0,a0
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:253
  lc_state = lifecycle_state_get();
d0008bd8:                 749040ef              jal     ra,d000db20 <lifecycle_state_get>
d0008bdc:                 0fff9417              auipc   s0,0xfff9
d0008be0:                 46c40413              addi    s0,s0,1132 # e0002048 <lc_state>
d0008be4:                 c008                  sw      a0,0(s0)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:256
  rom_epmp_config_debug_rom(lc_state);
d0008be6:                 7ad030ef              jal     ra,d000cb92 <rom_epmp_config_debug_rom>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:259
  watchdog_init(lc_state);
d0008bea:                 4008                  lw      a0,0(s0)
d0008bec:                 723020ef              jal     ra,d000bb0e <watchdog_init>
d0008bf0:                 0fff7497              auipc   s1,0xfff7
d0008bf4:                 48448493              addi    s1,s1,1156 # e0000074 <sec_mmio_ctx>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:260
  SEC_MMIO_WRITE_INCREMENT(kWatchdogSecMmioInit);
d0008bf8:                 448c                  lw      a1,8(s1)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:263
  HARDENED_RETURN_IF_ERROR(shutdown_init(lc_state));
d0008bfa:                 4008                  lw      a0,0(s0)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:260
  SEC_MMIO_WRITE_INCREMENT(kWatchdogSecMmioInit);
d0008bfc:                 0591                  addi    a1,a1,4
d0008bfe:                 c48c                  sw      a1,8(s1)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:263
  HARDENED_RETURN_IF_ERROR(shutdown_init(lc_state));
d0008c00:                 143010ef              jal     ra,d000a542 <shutdown_init>
d0008c04:                 8a2a                  mv      s4,a0
d0008c06:                 73900993              li      s3,1849
d0008c0a:       /-------- 09351f63              bne     a0,s3,d0008ca8 <rom_main+0x18e>
d0008c0e:       |     /-- 013a0663              beq     s4,s3,d0008c1a <rom_main+0x100>
d0008c12:       |     |   0000                  unimp
d0008c14:       |     |   0000                  unimp
d0008c16:       |     |   0000                  unimp
d0008c18:       |     |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:265
  flash_ctrl_init();
d0008c1a:       |     \-> 224020ef              jal     ra,d000ae3e <flash_ctrl_init>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:266
  SEC_MMIO_WRITE_INCREMENT(kFlashCtrlSecMmioInit);
d0008c1e:       |         448c                  lw      a1,8(s1)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:269
  rom_epmp_state_init(lc_state);
d0008c20:       |         4008                  lw      a0,0(s0)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:266
  SEC_MMIO_WRITE_INCREMENT(kFlashCtrlSecMmioInit);
d0008c22:       |         058d                  addi    a1,a1,3
d0008c24:       |         c48c                  sw      a1,8(s1)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:269
  rom_epmp_state_init(lc_state);
d0008c26:       |         5b7030ef              jal     ra,d000c9dc <rom_epmp_state_init>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:272
  HARDENED_RETURN_IF_ERROR(ast_check(lc_state));
d0008c2a:       |         4008                  lw      a0,0(s0)
d0008c2c:       |         0f4020ef              jal     ra,d000ad20 <ast_check>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
  asm volatile("" : "+r"(val));
d0008c30:       |         85aa                  mv      a1,a0
rom_init():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:272
d0008c32:       |  /----- 07359a63              bne     a1,s3,d0008ca6 <rom_main+0x18c>
d0008c36:       |  |      73900a13              li      s4,1849
d0008c3a:       |  |  /-- 01450663              beq     a0,s4,d0008c46 <rom_main+0x12c>
d0008c3e:       |  |  |   0000                  unimp
d0008c40:       |  |  |   0000                  unimp
d0008c42:       |  |  |   0000                  unimp
d0008c44:       |  |  |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:276
  uint32_t reset_reasons = rstmgr_reason_get();
d0008c46:       |  |  \-> 64f020ef              jal     ra,d000ba94 <rstmgr_reason_get>
d0008c4a:       |  |      892a                  mv      s2,a0
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:279
      otp_read32(OTP_CTRL_PARAM_CREATOR_SW_CFG_RET_RAM_RESET_MASK_OFFSET);
d0008c4c:       |  |      10000513              li      a0,256
d0008c50:       |  |      0e2050ef              jal     ra,d000dd32 <otp_read32>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:278
      (1 << kRstmgrReasonPowerOn) |
d0008c54:       |  |      00156513              ori     a0,a0,1
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:280
  if ((reset_reasons & reset_mask) != 0) {
d0008c58:       |  |      01257533              and     a0,a0,s2
d0008c5c:       |  |  /-- c119                  beqz    a0,d0008c62 <rom_main+0x148>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:281
    retention_sram_init();
d0008c5e:       |  |  |   62d020ef              jal     ra,d000ba8a <retention_sram_init>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:284
  retention_sram_get()->reset_reasons = reset_reasons;
d0008c62:       |  |  \-> 623020ef              jal     ra,d000ba84 <retention_sram_get>
d0008c66:       |  |      01252023              sw      s2,0(a0)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:285
  rstmgr_reason_clear(reset_reasons);
d0008c6a:       |  |      854a                  mv      a0,s2
d0008c6c:       |  |      65d020ef              jal     ra,d000bac8 <rstmgr_reason_clear>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:288
  device_fpga_version_print();
d0008c70:       |  |      630050ef              jal     ra,d000e2a0 <device_fpga_version_print>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:290
  sec_mmio_check_values(rnd_uint32());
d0008c74:       |  |      3d5040ef              jal     ra,d000d848 <rnd_uint32>
d0008c78:       |  |      26a050ef              jal     ra,d000dee2 <sec_mmio_check_values>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:291
  sec_mmio_check_counters(/*expected_check_count=*/1);
d0008c7c:       |  |      4505                  li      a0,1
d0008c7e:       |  |      2d4050ef              jal     ra,d000df52 <sec_mmio_check_counters>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:293
  CFI_FUNC_COUNTER_INCREMENT(rom_counters, kCfiRomInit, 2);
d0008c82:       |  |      004aa503              lw      a0,4(s5)
d0008c86:       |  |      6585                  lui     a1,0x1
d0008c88:       |  |      89058593              addi    a1,a1,-1904 # 890 <_epmp_reset_rx_size+0x90>
d0008c8c:       |  |  /-- 00b50663              beq     a0,a1,d0008c98 <rom_main+0x17e>
d0008c90:       |  |  |   0000                  unimp
d0008c92:       |  |  |   0000                  unimp
d0008c94:       |  |  |   0000                  unimp
d0008c96:       |  |  |   0000                  unimp
d0008c98:       |  |  \-> 004aa503              lw      a0,4(s5)
d0008c9c:       |  |      05a50513              addi    a0,a0,90
d0008ca0:       |  |      00aaa223              sw      a0,4(s5)
barrier32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:349
inline void barrier32(uint32_t val) { asm volatile("" ::"r"(val)); }
d0008ca4:       +--|----- a011                  j       d0008ca8 <rom_main+0x18e>
d0008ca6:       |  \----> 8a2a                  mv      s4,a0
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
  asm volatile("" : "+r"(val));
d0008ca8:       \-------> 8552                  mv      a0,s4
rom_main():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:552
  SHUTDOWN_IF_ERROR(rom_init());
d0008caa:       /-------- 07351f63              bne     a0,s3,d0008d28 <rom_main+0x20e>
d0008cae:       |         73900413              li      s0,1849
d0008cb2:       |     /-- 008a0663              beq     s4,s0,d0008cbe <rom_main+0x1a4>
d0008cb6:       |     |   0000                  unimp
d0008cb8:       |     |   0000                  unimp
d0008cba:       |     |   0000                  unimp
d0008cbc:       |     |   0000                  unimp
d0008cbe:       |     \-> ff000537              lui     a0,0xff000
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:555
  if(*pad_bootmode == 0x1)
d0008cc2:       |         4948                  lw      a0,20(a0)
d0008cc4:       |         4585                  li      a1,1
d0008cc6:       |     /-- 00b51363              bne     a0,a1,d0008ccc <rom_main+0x1b2>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:556
    spi_flash_load_data();
d0008cca:       |     |   3ed5                  jal     d00088be <spi_flash_load_data>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:560
  CFI_FUNC_COUNTER_INCREMENT(rom_counters, kCfiRomMain, 3);
d0008ccc:       |     \-> 000aa503              lw      a0,0(s5)
d0008cd0:       |         25900593              li      a1,601
d0008cd4:       |     /-- 00b50663              beq     a0,a1,d0008ce0 <rom_main+0x1c6>
d0008cd8:       |     |   0000                  unimp
d0008cda:       |     |   0000                  unimp
d0008cdc:       |     |   0000                  unimp
d0008cde:       |     |   0000                  unimp
d0008ce0:       |     \-> 000aa503              lw      a0,0(s5)
d0008ce4:       |         05a50513              addi    a0,a0,90 # ff00005a <_stack_end+0x1efe005a>
d0008ce8:       |         00aaa023              sw      a0,0(s5)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:561
  CFI_FUNC_COUNTER_CHECK(rom_counters, kCfiRomInit, 3);
d0008cec:       |         004aa503              lw      a0,4(s5)
d0008cf0:       |         6585                  lui     a1,0x1
d0008cf2:       |         8ea58593              addi    a1,a1,-1814 # 8ea <_epmp_reset_rx_size+0xea>
d0008cf6:       |     /-- 00b50663              beq     a0,a1,d0008d02 <rom_main+0x1e8>
d0008cfa:       |     |   0000                  unimp
d0008cfc:       |     |   0000                  unimp
d0008cfe:       |     |   0000                  unimp
d0008d00:       |     |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:563
  hardened_bool_t bootstrap_req = bootstrap_requested();
d0008d02:       |     \-> 6b7000ef              jal     ra,d0009bb8 <bootstrap_requested>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0008d06:       |         85aa                  mv      a1,a0
rom_main():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:564
  if (launder32(bootstrap_req) == kHardenedBoolTrue) {
d0008d08:       |  /----- 02859363              bne     a1,s0,d0008d2e <rom_main+0x214>
d0008d0c:       |  |      73900593              li      a1,1849
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:565
    HARDENED_CHECK_EQ(bootstrap_req, kHardenedBoolTrue);
d0008d10:       |  |  /-- 00b50663              beq     a0,a1,d0008d1c <rom_main+0x202>
d0008d14:       |  |  |   0000                  unimp
d0008d16:       |  |  |   0000                  unimp
d0008d18:       |  |  |   0000                  unimp
d0008d1a:       |  |  |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:567
    watchdog_disable();
d0008d1c:       |  |  \-> 767020ef              jal     ra,d000bc82 <watchdog_disable>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:568
    shutdown_finalize(bootstrap());
d0008d20:       |  |      6ef000ef              jal     ra,d0009c0e <bootstrap>
d0008d24:       |  |      580050ef              jal     ra,d000e2a4 <shutdown_finalize>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:552
  SHUTDOWN_IF_ERROR(rom_init());
d0008d28:       \--|----> 8552                  mv      a0,s4
d0008d2a:          |      57a050ef              jal     ra,d000e2a4 <shutdown_finalize>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:572
  CFI_FUNC_COUNTER_PREPCALL(rom_counters, kCfiRomMain, 4, kCfiRomTryBoot);
d0008d2e:          \----> 000aa503              lw      a0,0(s5)
d0008d32:                 2b300593              li      a1,691
d0008d36:             /-- 00b50663              beq     a0,a1,d0008d42 <rom_main+0x228>
d0008d3a:             |   0000                  unimp
d0008d3c:             |   0000                  unimp
d0008d3e:             |   0000                  unimp
d0008d40:             |   0000                  unimp
d0008d42:             \-> 000aa503              lw      a0,0(s5)
d0008d46:                 05a50513              addi    a0,a0,90
d0008d4a:                 00aaa023              sw      a0,0(s5)
barrier32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:349
inline void barrier32(uint32_t val) { asm volatile("" ::"r"(val)); }
d0008d4e:                 28f00513              li      a0,655
rom_main():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:572
d0008d52:                 00aaa623              sw      a0,12(s5)
d0008d56:                 000aa503              lw      a0,0(s5)
d0008d5a:                 30d00593              li      a1,781
d0008d5e:             /-- 00b50663              beq     a0,a1,d0008d6a <rom_main+0x250>
d0008d62:             |   0000                  unimp
d0008d64:             |   0000                  unimp
d0008d66:             |   0000                  unimp
d0008d68:             |   0000                  unimp
d0008d6a:             \-> 000aa503              lw      a0,0(s5)
d0008d6e:                 05a50513              addi    a0,a0,90
d0008d72:                 00aaa023              sw      a0,0(s5)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:575
  shutdown_finalize(rom_try_boot());
d0008d76:                 2019                  jal     d0008d7c <rom_try_boot>
d0008d78:                 52c050ef              jal     ra,d000e2a4 <shutdown_finalize>

d0008d7c <rom_try_boot>:
rom_try_boot():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:513
static rom_error_t rom_try_boot(void) {
d0008d7c:                    1101                       addi    sp,sp,-32
d0008d7e:                    ce06                       sw      ra,28(sp)
d0008d80:                    cc22                       sw      s0,24(sp)
d0008d82:                    ca26                       sw      s1,20(sp)
d0008d84:                    c84a                       sw      s2,16(sp)
d0008d86:                    c64e                       sw      s3,12(sp)
d0008d88:                    c452                       sw      s4,8(sp)
d0008d8a:                    c256                       sw      s5,4(sp)
d0008d8c:                    c1418413           addi    s0,gp,-1004 # e000245c <rom_counters>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:514
  CFI_FUNC_COUNTER_INCREMENT(rom_counters, kCfiRomTryBoot, 1);
d0008d90:                    4448                       lw      a0,12(s0)
d0008d92:                    28f00593           li      a1,655
d0008d96:                /-- 00b50663           beq     a0,a1,d0008da2 <rom_try_boot+0x26>
d0008d9a:                |   0000                       unimp
d0008d9c:                |   0000                       unimp
d0008d9e:                |   0000                       unimp
d0008da0:                |   0000                       unimp
d0008da2:                \-> 4448                       lw      a0,12(s0)
d0008da4:                    05a50513           addi    a0,a0,90
d0008da8:                    c448                       sw      a0,12(s0)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:517
  HARDENED_RETURN_IF_ERROR(boot_data_read(lc_state, &boot_data));
d0008daa:                    0fff9517           auipc   a0,0xfff9
d0008dae:                    29e50513           addi    a0,a0,670 # e0002048 <lc_state>
d0008db2:                    4108                       lw      a0,0(a0)
d0008db4:                    c3018593           addi    a1,gp,-976 # e0002478 <boot_data>
d0008db8:                    7e2000ef           jal     ra,d000959a <boot_data_read>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
  asm volatile("" : "+r"(val));
d0008dbc:                    85aa                       mv      a1,a0
d0008dbe:                    73900493           li      s1,1849
rom_try_boot():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:517
d0008dc2:       /----------- 1c959663           bne     a1,s1,d0008f8e <rom_try_boot+0x212>
d0008dc6:       |        /-- 00950663           beq     a0,s1,d0008dd2 <rom_try_boot+0x56>
d0008dca:       |        |   0000                       unimp
d0008dcc:       |        |   0000                       unimp
d0008dce:       |        |   0000                       unimp
d0008dd0:       |        |   0000                       unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:519
  boot_policy_manifests_t manifests = boot_policy_manifests_get();
d0008dd2:       |        \-> 25ed                       jal     d00094bc <boot_policy_manifests_get>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:522
  CFI_FUNC_COUNTER_PREPCALL(rom_counters, kCfiRomTryBoot, 2, kCfiRomVerify);
d0008dd4:       |            4450                       lw      a2,12(s0)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:520
  uint32_t flash_exec = 0;
d0008dd6:       |            c002                       sw      zero,0(sp)
d0008dd8:       |            2e900993           li      s3,745
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:522
  CFI_FUNC_COUNTER_PREPCALL(rom_counters, kCfiRomTryBoot, 2, kCfiRomVerify);
d0008ddc:       |        /-- 01360663           beq     a2,s3,d0008de8 <rom_try_boot+0x6c>
d0008de0:       |        |   0000                       unimp
d0008de2:       |        |   0000                       unimp
d0008de4:       |        |   0000                       unimp
d0008de6:       |        |   0000                       unimp
d0008de8:       |        \-> 4450                       lw      a2,12(s0)
d0008dea:       |            05a60613           addi    a2,a2,90
d0008dee:       |            c450                       sw      a2,12(s0)
barrier32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:349
inline void barrier32(uint32_t val) { asm volatile("" ::"r"(val)); }
d0008df0:       |            60100a93           li      s5,1537
rom_try_boot():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:522
d0008df4:       |            01542423           sw      s5,8(s0)
d0008df8:       |            4450                       lw      a2,12(s0)
d0008dfa:       |            34300693           li      a3,835
d0008dfe:       |        /-- 00d60663           beq     a2,a3,d0008e0a <rom_try_boot+0x8e>
d0008e02:       |        |   0000                       unimp
d0008e04:       |        |   0000                       unimp
d0008e06:       |        |   0000                       unimp
d0008e08:       |        |   0000                       unimp
d0008e0a:       |        \-> 4450                       lw      a2,12(s0)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:519
  boot_policy_manifests_t manifests = boot_policy_manifests_get();
d0008e0c:       |            8a2a                       mv      s4,a0
d0008e0e:       |            892e                       mv      s2,a1
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:522
  CFI_FUNC_COUNTER_PREPCALL(rom_counters, kCfiRomTryBoot, 2, kCfiRomVerify);
d0008e10:       |            05a60513           addi    a0,a2,90
d0008e14:       |            c448                       sw      a0,12(s0)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:523
  rom_error_t error = rom_verify(manifests.ordered[0], &flash_exec);
d0008e16:       |            858a                       mv      a1,sp
d0008e18:       |            8552                       mv      a0,s4
d0008e1a:       |            2259                       jal     d0008fa0 <rom_verify>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:524
  CFI_FUNC_COUNTER_INCREMENT(rom_counters, kCfiRomTryBoot, 4);
d0008e1c:       |            444c                       lw      a1,12(s0)
d0008e1e:       |            39d00613           li      a2,925
d0008e22:       |        /-- 00c58663           beq     a1,a2,d0008e2e <rom_try_boot+0xb2>
d0008e26:       |        |   0000                       unimp
d0008e28:       |        |   0000                       unimp
d0008e2a:       |        |   0000                       unimp
d0008e2c:       |        |   0000                       unimp
d0008e2e:       |        \-> 444c                       lw      a1,12(s0)
d0008e30:       |            05a58593           addi    a1,a1,90
d0008e34:       |            c44c                       sw      a1,12(s0)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
  asm volatile("" : "+r"(val));
d0008e36:       |            85aa                       mv      a1,a0
rom_try_boot():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:526
  if (launder32(error) == kErrorOk) {
d0008e38:       |     /----- 06959c63           bne     a1,s1,d0008eb0 <rom_try_boot+0x134>
d0008e3c:       |     |      73900493           li      s1,1849
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:527
    HARDENED_CHECK_EQ(error, kErrorOk);
d0008e40:       |     |  /-- 00950663           beq     a0,s1,d0008e4c <rom_try_boot+0xd0>
d0008e44:       |     |  |   0000                       unimp
d0008e46:       |     |  |   0000                       unimp
d0008e48:       |     |  |   0000                       unimp
d0008e4a:       |     |  |   0000                       unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:528
    CFI_FUNC_COUNTER_CHECK(rom_counters, kCfiRomVerify, 3);
d0008e4c:       |     |  \-> 4408                       lw      a0,8(s0)
d0008e4e:       |     |      6b500593           li      a1,1717
d0008e52:       |     |  /-- 00b50663           beq     a0,a1,d0008e5e <rom_try_boot+0xe2>
d0008e56:       |     |  |   0000                       unimp
d0008e58:       |     |  |   0000                       unimp
d0008e5a:       |     |  |   0000                       unimp
d0008e5c:       |     |  |   0000                       unimp
d0008e5e:       |     |  \-> 28f00513           li      a0,655
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:529
    CFI_FUNC_COUNTER_INIT(rom_counters, kCfiRomTryBoot);
d0008e62:       |     |      c448                       sw      a0,12(s0)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:530
    CFI_FUNC_COUNTER_PREPCALL(rom_counters, kCfiRomTryBoot, 1, kCfiRomBoot);
d0008e64:       |     |      444c                       lw      a1,12(s0)
d0008e66:       |     |  /-- 00a58663           beq     a1,a0,d0008e72 <rom_try_boot+0xf6>
d0008e6a:       |     |  |   0000                       unimp
d0008e6c:       |     |  |   0000                       unimp
d0008e6e:       |     |  |   0000                       unimp
d0008e70:       |     |  |   0000                       unimp
d0008e72:       |     |  \-> 4448                       lw      a0,12(s0)
d0008e74:       |     |      05a50513           addi    a0,a0,90
d0008e78:       |     |      c448                       sw      a0,12(s0)
barrier32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:349
inline void barrier32(uint32_t val) { asm volatile("" ::"r"(val)); }
d0008e7a:       |     |      33c00513           li      a0,828
rom_try_boot():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:530
d0008e7e:       |     |      c848                       sw      a0,20(s0)
d0008e80:       |     |      4448                       lw      a0,12(s0)
d0008e82:       |     |  /-- 01350663           beq     a0,s3,d0008e8e <rom_try_boot+0x112>
d0008e86:       |     |  |   0000                       unimp
d0008e88:       |     |  |   0000                       unimp
d0008e8a:       |     |  |   0000                       unimp
d0008e8c:       |     |  |   0000                       unimp
d0008e8e:       |     |  \-> 4448                       lw      a0,12(s0)
d0008e90:       |     |      05a50513           addi    a0,a0,90
d0008e94:       |     |      c448                       sw      a0,12(s0)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:531
    HARDENED_RETURN_IF_ERROR(rom_boot(manifests.ordered[0], flash_exec));
d0008e96:       |     |      4582                       lw      a1,0(sp)
d0008e98:       |     |      8552                       mv      a0,s4
d0008e9a:       |     |      2c91                       jal     d00090ee <rom_boot>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
  asm volatile("" : "+r"(val));
d0008e9c:       |     |      85aa                       mv      a1,a0
rom_try_boot():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:531
d0008e9e:       +-----|----- 0e959863           bne     a1,s1,d0008f8e <rom_try_boot+0x212>
d0008ea2:       |     |  /-- 00950663           beq     a0,s1,d0008eae <rom_try_boot+0x132>
d0008ea6:       |     |  |   0000                       unimp
d0008ea8:       |     |  |   0000                       unimp
d0008eaa:       |     |  |   0000                       unimp
d0008eac:       |     |  |   0000                       unimp
d0008eae:       |  /--|--\-X a8e1                       j       d0008f86 <rom_try_boot+0x20a>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:534
  CFI_FUNC_COUNTER_PREPCALL(rom_counters, kCfiRomTryBoot, 5, kCfiRomVerify);
d0008eb0:       |  |  \----> 4448                       lw      a0,12(s0)
d0008eb2:       |  |         3f700593           li      a1,1015
d0008eb6:       |  |     /-- 00b50663           beq     a0,a1,d0008ec2 <rom_try_boot+0x146>
d0008eba:       |  |     |   0000                       unimp
d0008ebc:       |  |     |   0000                       unimp
d0008ebe:       |  |     |   0000                       unimp
d0008ec0:       |  |     |   0000                       unimp
d0008ec2:       |  |     \-> 4448                       lw      a0,12(s0)
d0008ec4:       |  |         05a50513           addi    a0,a0,90
d0008ec8:       |  |         c448                       sw      a0,12(s0)
d0008eca:       |  |         01542423           sw      s5,8(s0)
d0008ece:       |  |         4448                       lw      a0,12(s0)
d0008ed0:       |  |         45100593           li      a1,1105
d0008ed4:       |  |     /-- 00b50663           beq     a0,a1,d0008ee0 <rom_try_boot+0x164>
d0008ed8:       |  |     |   0000                       unimp
d0008eda:       |  |     |   0000                       unimp
d0008edc:       |  |     |   0000                       unimp
d0008ede:       |  |     |   0000                       unimp
d0008ee0:       |  |     \-> 4448                       lw      a0,12(s0)
d0008ee2:       |  |         05a50513           addi    a0,a0,90
d0008ee6:       |  |         c448                       sw      a0,12(s0)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:535
  HARDENED_RETURN_IF_ERROR(rom_verify(manifests.ordered[1], &flash_exec));
d0008ee8:       |  |         858a                       mv      a1,sp
d0008eea:       |  |         854a                       mv      a0,s2
d0008eec:       |  |         2855                       jal     d0008fa0 <rom_verify>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0008eee:       |  |         85aa                       mv      a1,a0
d0008ef0:       |  |         73900493           li      s1,1849
rom_try_boot():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:535
d0008ef4:       +--|-------- 08959d63           bne     a1,s1,d0008f8e <rom_try_boot+0x212>
d0008ef8:       |  |     /-- 00950663           beq     a0,s1,d0008f04 <rom_try_boot+0x188>
d0008efc:       |  |     |   0000                       unimp
d0008efe:       |  |     |   0000                       unimp
d0008f00:       |  |     |   0000                       unimp
d0008f02:       |  |     |   0000                       unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:536
  CFI_FUNC_COUNTER_INCREMENT(rom_counters, kCfiRomTryBoot, 7);
d0008f04:       |  |     \-> 4448                       lw      a0,12(s0)
d0008f06:       |  |         4ab00593           li      a1,1195
d0008f0a:       |  |     /-- 00b50663           beq     a0,a1,d0008f16 <rom_try_boot+0x19a>
d0008f0e:       |  |     |   0000                       unimp
d0008f10:       |  |     |   0000                       unimp
d0008f12:       |  |     |   0000                       unimp
d0008f14:       |  |     |   0000                       unimp
d0008f16:       |  |     \-> 4448                       lw      a0,12(s0)
d0008f18:       |  |         05a50513           addi    a0,a0,90
d0008f1c:       |  |         c448                       sw      a0,12(s0)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:537
  CFI_FUNC_COUNTER_CHECK(rom_counters, kCfiRomVerify, 3);
d0008f1e:       |  |         4408                       lw      a0,8(s0)
d0008f20:       |  |         6b500593           li      a1,1717
d0008f24:       |  |     /-- 00b50663           beq     a0,a1,d0008f30 <rom_try_boot+0x1b4>
d0008f28:       |  |     |   0000                       unimp
d0008f2a:       |  |     |   0000                       unimp
d0008f2c:       |  |     |   0000                       unimp
d0008f2e:       |  |     |   0000                       unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:539
  CFI_FUNC_COUNTER_PREPCALL(rom_counters, kCfiRomTryBoot, 8, kCfiRomBoot);
d0008f30:       |  |     \-> 4448                       lw      a0,12(s0)
d0008f32:       |  |         50500593           li      a1,1285
d0008f36:       |  |     /-- 00b50663           beq     a0,a1,d0008f42 <rom_try_boot+0x1c6>
d0008f3a:       |  |     |   0000                       unimp
d0008f3c:       |  |     |   0000                       unimp
d0008f3e:       |  |     |   0000                       unimp
d0008f40:       |  |     |   0000                       unimp
d0008f42:       |  |     \-> 4448                       lw      a0,12(s0)
d0008f44:       |  |         05a50513           addi    a0,a0,90
d0008f48:       |  |         c448                       sw      a0,12(s0)
barrier32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:349
inline void barrier32(uint32_t val) { asm volatile("" ::"r"(val)); }
d0008f4a:       |  |         33c00513           li      a0,828
rom_try_boot():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:539
d0008f4e:       |  |         c848                       sw      a0,20(s0)
d0008f50:       |  |         4448                       lw      a0,12(s0)
d0008f52:       |  |         55f00593           li      a1,1375
d0008f56:       |  |     /-- 00b50663           beq     a0,a1,d0008f62 <rom_try_boot+0x1e6>
d0008f5a:       |  |     |   0000                       unimp
d0008f5c:       |  |     |   0000                       unimp
d0008f5e:       |  |     |   0000                       unimp
d0008f60:       |  |     |   0000                       unimp
d0008f62:       |  |     \-> 4448                       lw      a0,12(s0)
d0008f64:       |  |         05a50513           addi    a0,a0,90
d0008f68:       |  |         c448                       sw      a0,12(s0)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:540
  HARDENED_RETURN_IF_ERROR(rom_boot(manifests.ordered[1], flash_exec));
d0008f6a:       |  |         4582                       lw      a1,0(sp)
d0008f6c:       |  |         854a                       mv      a0,s2
d0008f6e:       |  |         2241                       jal     d00090ee <rom_boot>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
  asm volatile("" : "+r"(val));
d0008f70:       |  |         85aa                       mv      a1,a0
rom_try_boot():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:540
d0008f72:       +--|-------- 00959e63           bne     a1,s1,d0008f8e <rom_try_boot+0x212>
d0008f76:       |  |         73900593           li      a1,1849
d0008f7a:       |  +-------- 00b50663           beq     a0,a1,d0008f86 <rom_try_boot+0x20a>
d0008f7e:       |  |         0000                       unimp
d0008f80:       |  |         0000                       unimp
d0008f82:       |  |         0000                       unimp
d0008f84:       |  |         0000                       unimp
d0008f86:       |  \-------> 014d5537           lui     a0,0x14d5
d0008f8a:       |            20950513           addi    a0,a0,521 # 14d5209 <WDOG_BARK_THOLD+0x149e321>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:542
}
d0008f8e:       \----------> 4a92                       lw      s5,4(sp)
d0008f90:                    4a22                       lw      s4,8(sp)
d0008f92:                    49b2                       lw      s3,12(sp)
d0008f94:                    4942                       lw      s2,16(sp)
d0008f96:                    44d2                       lw      s1,20(sp)
d0008f98:                    4462                       lw      s0,24(sp)
d0008f9a:                    40f2                       lw      ra,28(sp)
d0008f9c:                    6105                       addi    sp,sp,32
d0008f9e:                    8082                       ret

d0008fa0 <rom_verify>:
rom_verify():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:308
                              uint32_t *flash_exec) {
d0008fa0:              7119                     addi    sp,sp,-128
d0008fa2:              de86                     sw      ra,124(sp)
d0008fa4:              dca2                     sw      s0,120(sp)
d0008fa6:              daa6                     sw      s1,116(sp)
d0008fa8:              d8ca                     sw      s2,112(sp)
d0008faa:              d6ce                     sw      s3,108(sp)
d0008fac:              d4d2                     sw      s4,104(sp)
d0008fae:              d2d6                     sw      s5,100(sp)
d0008fb0:              d0da                     sw      s6,96(sp)
d0008fb2:              c1418413                 addi    s0,gp,-1004 # e000245c <rom_counters>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:309
  CFI_FUNC_COUNTER_INCREMENT(rom_counters, kCfiRomVerify, 1);
d0008fb6:              4410                     lw      a2,8(s0)
d0008fb8:              60100693                 li      a3,1537
d0008fbc:          /-- 00d60663                 beq     a2,a3,d0008fc8 <rom_verify+0x28>
d0008fc0:          |   0000                     unimp
d0008fc2:          |   0000                     unimp
d0008fc4:          |   0000                     unimp
d0008fc6:          |   0000                     unimp
d0008fc8:          \-> 4410                     lw      a2,8(s0)
d0008fca:              892e                     mv      s2,a1
d0008fcc:              8b2a                     mv      s6,a0
d0008fce:              05a60513                 addi    a0,a2,90
d0008fd2:              c408                     sw      a0,8(s0)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:310
  *flash_exec = 0;
d0008fd4:              0005a023                 sw      zero,0(a1)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:311
  HARDENED_RETURN_IF_ERROR(boot_policy_manifest_check(manifest, &boot_data));
d0008fd8:              c3018a13                 addi    s4,gp,-976 # e0002478 <boot_data>
d0008fdc:              855a                     mv      a0,s6
d0008fde:              85d2                     mv      a1,s4
d0008fe0:              2301                     jal     d00094e0 <boot_policy_manifest_check>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0008fe2:              85aa                     mv      a1,a0
d0008fe4:              73900493                 li      s1,1849
rom_verify():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:311
d0008fe8:       /----- 0e959963                 bne     a1,s1,d00090da <rom_verify+0x13a>
d0008fec:       |  /-- 00950663                 beq     a0,s1,d0008ff8 <rom_verify+0x58>
d0008ff0:       |  |   0000                     unimp
d0008ff2:       |  |   0000                     unimp
d0008ff4:       |  |   0000                     unimp
d0008ff6:       |  |   0000                     unimp
sigverify_rsa_key_id_get():
/proc/self/cwd/./sw/device/silicon_creator/lib/sigverify/rsa_key.h:68
 * @param key An RSA public key.
 * @return ID of the key.
 */
inline uint32_t sigverify_rsa_key_id_get(
    const sigverify_rsa_buffer_t *modulus) {
  return modulus->data[0];
d0008ff8:       |  \-> 1b0b2503                 lw      a0,432(s6)
rom_verify():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:314
  HARDENED_RETURN_IF_ERROR(sigverify_rsa_key_get(
d0008ffc:       |      0fff9a97                 auipc   s5,0xfff9
d0009000:       |      04ca8a93                 addi    s5,s5,76 # e0002048 <lc_state>
d0009004:       |      000aa583                 lw      a1,0(s5)
d0009008:       |      08f0                     addi    a2,sp,92
d000900a:       |      1b0010ef                 jal     ra,d000a1ba <sigverify_rsa_key_get>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000900e:       |      85aa                     mv      a1,a0
rom_verify():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:314
d0009010:       +----- 0c959563                 bne     a1,s1,d00090da <rom_verify+0x13a>
d0009014:       |      1b0b0993                 addi    s3,s6,432
d0009018:       |      73900593                 li      a1,1849
d000901c:       |  /-- 00b50663                 beq     a0,a1,d0009028 <rom_verify+0x88>
d0009020:       |  |   0000                     unimp
d0009022:       |  |   0000                     unimp
d0009024:       |  |   0000                     unimp
d0009026:       |  |   0000                     unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:316
  uint32_t clobber_value = rnd_uint32();
d0009028:       |  \-> 021040ef                 jal     ra,d000d848 <rnd_uint32>
d000902c:       |      4581                     li      a1,0
d000902e:       |      0fff7617                 auipc   a2,0xfff7
d0009032:       |      fd260613                 addi    a2,a2,-46 # e0000000 <boot_measurements>
d0009036:       |      02000693                 li      a3,32
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:318
    boot_measurements.rom_ext.data[i] = clobber_value;
d000903a:       |  /-> 00c58733                 add     a4,a1,a2
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:317
  for (size_t i = 0; i < ARRAYSIZE(boot_measurements.rom_ext.data); ++i) {
d000903e:       |  |   0591                     addi    a1,a1,4
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:318
    boot_measurements.rom_ext.data[i] = clobber_value;
d0009040:       |  |   c308                     sw      a0,0(a4)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:317
  for (size_t i = 0; i < ARRAYSIZE(boot_measurements.rom_ext.data); ++i) {
d0009042:       |  \-- fed59ce3                 bne     a1,a3,d000903a <rom_verify+0x9a>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:320
  hmac_sha256_init();
d0009046:       |      21d040ef                 jal     ra,d000da62 <hmac_sha256_init>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:323
  if (launder32(manifest->security_version) <
d000904a:       |      344b2583                 lw      a1,836(s6)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:324
      boot_data.min_security_version_rom_ext) {
d000904e:       |      030a2503                 lw      a0,48(s4)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:323
  if (launder32(manifest->security_version) <
d0009052:       |  /-- 00a5fa63                 bgeu    a1,a0,d0009066 <rom_verify+0xc6>
d0009056:       |  |   557d                     li      a0,-1
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:325
    uint32_t extra_word = UINT32_MAX;
d0009058:       |  |   d42a                     sw      a0,40(sp)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:326
    hmac_sha256_update(&extra_word, sizeof(extra_word));
d000905a:       |  |   1028                     addi    a0,sp,40
d000905c:       |  |   4591                     li      a1,4
d000905e:       |  |   21f040ef                 jal     ra,d000da7c <hmac_sha256_update>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:328
  HARDENED_CHECK_GE(manifest->security_version,
d0009062:       |  |   030a2503                 lw      a0,48(s4)
d0009066:       |  \-> 344b2583                 lw      a1,836(s6)
d000906a:       |  /-- 00a5f663                 bgeu    a1,a0,d0009076 <rom_verify+0xd6>
d000906e:       |  |   0000                     unimp
d0009070:       |  |   0000                     unimp
d0009072:       |  |   0000                     unimp
d0009074:       |  |   0000                     unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:333
  sigverify_usage_constraints_get(manifest->usage_constraints.selector_bits,
d0009076:       |  \-> 180b2503                 lw      a0,384(s6)
d000907a:       |      102c                     addi    a1,sp,40
d000907c:       |      663030ef                 jal     ra,d000cede <sigverify_usage_constraints_get>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:335
  hmac_sha256_update(&usage_constraints_from_hw,
d0009080:       |      1028                     addi    a0,sp,40
d0009082:       |      03000593                 li      a1,48
d0009086:       |      1f7040ef                 jal     ra,d000da7c <hmac_sha256_update>
manifest_digest_region_get():
/proc/self/cwd/./sw/device/silicon_creator/lib/manifest.h:296
    kDigestRegionOffset =
        sizeof(manifest->signature) + sizeof(manifest->usage_constraints),
  };
  return (manifest_digest_region_t){
      .start = (const char *)manifest + kDigestRegionOffset,
      .length = manifest->length - kDigestRegionOffset,
d000908a:       |      338b2503                 lw      a0,824(s6)
d000908e:       |      e5050593                 addi    a1,a0,-432
rom_verify():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:339
  hmac_sha256_update(digest_region.start, digest_region.length);
d0009092:       |      854e                     mv      a0,s3
d0009094:       |      1e9040ef                 jal     ra,d000da7c <hmac_sha256_update>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:342
  hmac_sha256_final(&act_digest);
d0009098:       |      0028                     addi    a0,sp,8
d000909a:       |      251040ef                 jal     ra,d000daea <hmac_sha256_final>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:346
  memcpy(&boot_measurements.rom_ext, &act_digest,
d000909e:       |      0fff7517                 auipc   a0,0xfff7
d00090a2:       |      f6250513                 addi    a0,a0,-158 # e0000000 <boot_measurements>
d00090a6:       |      002c                     addi    a1,sp,8
d00090a8:       |      02000613                 li      a2,32
d00090ac:       |      6f3040ef                 jal     ra,d000df9e <memcpy>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:348
  CFI_FUNC_COUNTER_INCREMENT(rom_counters, kCfiRomVerify, 2);
d00090b0:       |      4408                     lw      a0,8(s0)
d00090b2:       |      65b00593                 li      a1,1627
d00090b6:       |  /-- 00b50663                 beq     a0,a1,d00090c2 <rom_verify+0x122>
d00090ba:       |  |   0000                     unimp
d00090bc:       |  |   0000                     unimp
d00090be:       |  |   0000                     unimp
d00090c0:       |  |   0000                     unimp
d00090c2:       |  \-> 4408                     lw      a0,8(s0)
d00090c4:       |      05a50513                 addi    a0,a0,90
d00090c8:       |      c408                     sw      a0,8(s0)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:349
  return sigverify_rsa_verify(&manifest->signature, key, &act_digest, lc_state,
d00090ca:       |      45f6                     lw      a1,92(sp)
d00090cc:       |      000aa683                 lw      a3,0(s5)
d00090d0:       |      0030                     addi    a2,sp,8
d00090d2:       |      855a                     mv      a0,s6
d00090d4:       |      874a                     mv      a4,s2
d00090d6:       |      37b030ef                 jal     ra,d000cc50 <sigverify_rsa_verify>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:351
}
d00090da:       \----> 5b06                     lw      s6,96(sp)
d00090dc:              5a96                     lw      s5,100(sp)
d00090de:              5a26                     lw      s4,104(sp)
d00090e0:              59b6                     lw      s3,108(sp)
d00090e2:              5946                     lw      s2,112(sp)
d00090e4:              54d6                     lw      s1,116(sp)
d00090e6:              5466                     lw      s0,120(sp)
d00090e8:              50f6                     lw      ra,124(sp)
d00090ea:              6109                     addi    sp,sp,128
d00090ec:              8082                     ret

d00090ee <rom_boot>:
rom_boot():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:429
static rom_error_t rom_boot(const manifest_t *manifest, uint32_t flash_exec) {
d00090ee:                             7179                      addi    sp,sp,-48
d00090f0:                             d606                      sw      ra,44(sp)
d00090f2:                             d422                      sw      s0,40(sp)
d00090f4:                             d226                      sw      s1,36(sp)
d00090f6:                             d04a                      sw      s2,32(sp)
d00090f8:                             ce4e                      sw      s3,28(sp)
d00090fa:                             cc52                      sw      s4,24(sp)
d00090fc:                             ca56                      sw      s5,20(sp)
d00090fe:                             c85a                      sw      s6,16(sp)
d0009100:                             c65e                      sw      s7,12(sp)
d0009102:                             c462                      sw      s8,8(sp)
d0009104:                             c266                      sw      s9,4(sp)
d0009106:                             c1418a13                  addi    s4,gp,-1004 # e000245c <rom_counters>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:430
  CFI_FUNC_COUNTER_INCREMENT(rom_counters, kCfiRomBoot, 1);
d000910a:                             014a2603                  lw      a2,20(s4)
d000910e:                             33c00693                  li      a3,828
d0009112:                         /-- 00d60663                  beq     a2,a3,d000911e <rom_boot+0x30>
d0009116:                         |   0000                      unimp
d0009118:                         |   0000                      unimp
d000911a:                         |   0000                      unimp
d000911c:                         |   0000                      unimp
d000911e:                         \-> 014a2603                  lw      a2,20(s4)
d0009122:                             892e                      mv      s2,a1
d0009124:                             84aa                      mv      s1,a0
d0009126:                             05a60513                  addi    a0,a2,90
d000912a:                             00aa2a23                  sw      a0,20(s4)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:431
  HARDENED_RETURN_IF_ERROR(keymgr_state_check(kKeymgrStateReset));
d000912e:                             4501                      li      a0,0
d0009130:                             0f3020ef                  jal     ra,d000ba22 <keymgr_state_check>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009134:                             85aa                      mv      a1,a0
d0009136:                             73900413                  li      s0,1849
rom_boot():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:431
d000913a:       /-------------------- 34859263                  bne     a1,s0,d000947e <rom_boot+0x390>
d000913e:       |                 /-- 00850663                  beq     a0,s0,d000914a <rom_boot+0x5c>
d0009142:       |                 |   0000                      unimp
d0009144:       |                 |   0000                      unimp
d0009146:       |                 |   0000                      unimp
d0009148:       |                 |   0000                      unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:434
      &manifest->binding_value;
d000914a:       |                 \-> 35048993                  addi    s3,s1,848
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:436
      otp_read32(OTP_CTRL_PARAM_OWNER_SW_CFG_ROM_KEYMGR_ROM_EXT_MEAS_EN_OFFSET);
d000914e:       |                     56400513                  li      a0,1380
d0009152:       |                     3e1040ef                  jal     ra,d000dd32 <otp_read32>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009156:       |                     85aa                      mv      a1,a0
rom_boot():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:437
  if (launder32(use_rom_ext_measurement) == kHardenedBoolTrue) {
d0009158:       |           /-------- 00859f63                  bne     a1,s0,d0009176 <rom_boot+0x88>
d000915c:       |           |         73900593                  li      a1,1849
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:438
    HARDENED_CHECK_EQ(use_rom_ext_measurement, kHardenedBoolTrue);
d0009160:       |           |     /-- 00b50663                  beq     a0,a1,d000916c <rom_boot+0x7e>
d0009164:       |           |     |   0000                      unimp
d0009166:       |           |     |   0000                      unimp
d0009168:       |           |     |   0000                      unimp
d000916a:       |           |     |   0000                      unimp
d000916c:       |           |     \-> 0fff7597                  auipc   a1,0xfff7
d0009170:       |           |         e9458593                  addi    a1,a1,-364 # e0000000 <boot_measurements>
d0009174:       |           |  /----- a811                      j       d0009188 <rom_boot+0x9a>
d0009176:       |           \--|----> 73900593                  li      a1,1849
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:442
    HARDENED_CHECK_NE(use_rom_ext_measurement, kHardenedBoolTrue);
d000917a:       |              |  /-- 00b51663                  bne     a0,a1,d0009186 <rom_boot+0x98>
d000917e:       |              |  |   0000                      unimp
d0009180:       |              |  |   0000                      unimp
d0009182:       |              |  |   0000                      unimp
d0009184:       |              |  |   0000                      unimp
d0009186:       |              |  \-> 85ce                      mv      a1,s3
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:444
  keymgr_sw_binding_set(&manifest->binding_value, attestation_measurement);
d0009188:       |              \----> 854e                      mv      a0,s3
d000918a:       |                     007020ef                  jal     ra,d000b990 <keymgr_sw_binding_set>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:445
  keymgr_creator_max_ver_set(manifest->max_key_version);
d000918e:       |                     3704a503                  lw      a0,880(s1)
d0009192:       |                     06d020ef                  jal     ra,d000b9fe <keymgr_creator_max_ver_set>
d0009196:       |                     0fff7a97                  auipc   s5,0xfff7
d000919a:       |                     edea8a93                  addi    s5,s5,-290 # e0000074 <sec_mmio_ctx>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:446
  SEC_MMIO_WRITE_INCREMENT(kKeymgrSecMmioSwBindingSet +
d000919e:       |                     008aa503                  lw      a0,8(s5)
d00091a2:       |                     054d                      addi    a0,a0,19
d00091a4:       |                     00aaa423                  sw      a0,8(s5)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:449
  sec_mmio_check_counters(/*expected_check_count=*/2);
d00091a8:       |                     4509                      li      a0,2
d00091aa:       |                     5a9040ef                  jal     ra,d000df52 <sec_mmio_check_counters>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:457
  switch (launder32(manifest->address_translation)) {
d00091ae:       |                     3304a503                  lw      a0,816(s1)
manifest_code_region_get():
/proc/self/cwd/./sw/device/silicon_creator/lib/manifest.h:308
 * @param manifest A manifest.
 * return Executable region of the image.
 */
inline epmp_region_t manifest_code_region_get(const manifest_t *manifest) {
  return (epmp_region_t){
      .start = (uintptr_t)manifest + manifest->code_start,
d00091b2:       |                     3744ab83                  lw      s7,884(s1)
/proc/self/cwd/./sw/device/silicon_creator/lib/manifest.h:309
      .end = (uintptr_t)manifest + manifest->code_end,
d00091b6:       |                     3784ac03                  lw      s8,888(s1)
manifest_entry_point_get():
/proc/self/cwd/./sw/device/silicon_creator/lib/manifest.h:325
 *
 * @param manfiest A manifest.
 * return Entry point address.
 */
inline uintptr_t manifest_entry_point_get(const manifest_t *manifest) {
  return (uintptr_t)manifest + manifest->entry_point;
d00091ba:       |                     37c4ab03                  lw      s6,892(s1)
d00091be:       |                     1d400593                  li      a1,468
rom_boot():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:457
d00091c2:       |              /----- 00b51c63                  bne     a0,a1,d00091da <rom_boot+0xec>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:478
      HARDENED_CHECK_EQ(manifest->address_translation, kHardenedBoolFalse);
d00091c6:       |              |      3304a503                  lw      a0,816(s1)
d00091ca:       |              |  /-- 00b50663                  beq     a0,a1,d00091d6 <rom_boot+0xe8>
d00091ce:       |              |  |   0000                      unimp
d00091d0:       |              |  |   0000                      unimp
d00091d2:       |              |  |   0000                      unimp
d00091d4:       |              |  |   0000                      unimp
d00091d6:       |              |  \-> 89a6                      mv      s3,s1
d00091d8:       |           /--|----- a08d                      j       d000923a <rom_boot+0x14c>
d00091da:       |           |  \----> 73900c93                  li      s9,1849
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:457
  switch (launder32(manifest->address_translation)) {
d00091de:       |  /--------|-------- 2b951f63                  bne     a0,s9,d000949c <rom_boot+0x3ae>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:459
      HARDENED_CHECK_EQ(manifest->address_translation, kHardenedBoolTrue);
d00091e2:       |  |        |         3304a503                  lw      a0,816(s1)
d00091e6:       |  |        |     /-- 01950663                  beq     a0,s9,d00091f2 <rom_boot+0x104>
d00091ea:       |  |        |     |   0000                      unimp
d00091ec:       |  |        |     |   0000                      unimp
d00091ee:       |  |        |     |   0000                      unimp
d00091f0:       |  |        |     |   0000                      unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:460
      ibex_addr_remap_0_set((uintptr_t)_rom_ext_virtual_start_address,
d00091f2:       |  |        |     \-> bfff7997                  auipc   s3,0xbfff7
d00091f6:       |  |        |         e0e98993                  addi    s3,s3,-498 # 90000000 <_rom_ext_virtual_start_address>
d00091fa:       |  |        |         2ffff417                  auipc   s0,0x2ffff
d00091fe:       |  |        |         e0640413                  addi    s0,s0,-506 # 8000 <_stack_end+0x1ffe8000>
d0009202:       |  |        |         854e                      mv      a0,s3
d0009204:       |  |        |         85a6                      mv      a1,s1
d0009206:       |  |        |         8622                      mv      a2,s0
d0009208:       |  |        |         6c4020ef                  jal     ra,d000b8cc <ibex_addr_remap_0_set>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:462
      SEC_MMIO_WRITE_INCREMENT(kAddressTranslationSecMmioConfigure);
d000920c:       |  |        |         008aa503                  lw      a0,8(s5)
d0009210:       |  |        |         0519                      addi    a0,a0,6
d0009212:       |  |        |         00aaa423                  sw      a0,8(s5)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:465
      HARDENED_RETURN_IF_ERROR(epmp_state_check());
d0009216:       |  |        |         65e040ef                  jal     ra,d000d874 <epmp_state_check>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000921a:       |  |        |         85aa                      mv      a1,a0
rom_boot():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:465
d000921c:       +--|--------|-------- 27959163                  bne     a1,s9,d000947e <rom_boot+0x390>
d0009220:       |  |        |         73900593                  li      a1,1849
d0009224:       |  |        |     /-- 00b50663                  beq     a0,a1,d0009230 <rom_boot+0x142>
d0009228:       |  |        |     |   0000                      unimp
d000922a:       |  |        |     |   0000                      unimp
d000922c:       |  |        |     |   0000                      unimp
d000922e:       |  |        |     |   0000                      unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:466
      rom_epmp_unlock_rom_ext_r(
d0009230:       |  |        |     \-> 008985b3                  add     a1,s3,s0
d0009234:       |  |        |         854e                      mv      a0,s3
d0009236:       |  |        |         129030ef                  jal     ra,d000cb5e <rom_epmp_unlock_rom_ext_r>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:485
  HARDENED_RETURN_IF_ERROR(epmp_state_check());
d000923a:       |  |        \-------> 63a040ef                  jal     ra,d000d874 <epmp_state_check>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000923e:       |  |                  85aa                      mv      a1,a0
d0009240:       |  |                  73900413                  li      s0,1849
rom_boot():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:485
d0009244:       +--|----------------- 22859d63                  bne     a1,s0,d000947e <rom_boot+0x390>
d0009248:       |  |                  018985b3                  add     a1,s3,s8
d000924c:       |  |                  01798633                  add     a2,s3,s7
d0009250:       |  |              /-- 00850663                  beq     a0,s0,d000925c <rom_boot+0x16e>
d0009254:       |  |              |   0000                      unimp
d0009256:       |  |              |   0000                      unimp
d0009258:       |  |              |   0000                      unimp
d000925a:       |  |              |   0000                      unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:486
  rom_epmp_unlock_rom_ext_rx(text_region);
d000925c:       |  |              \-> 8532                      mv      a0,a2
d000925e:       |  |                  0d3030ef                  jal     ra,d000cb30 <rom_epmp_unlock_rom_ext_rx>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:487
  HARDENED_RETURN_IF_ERROR(epmp_state_check());
d0009262:       |  |                  612040ef                  jal     ra,d000d874 <epmp_state_check>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009266:       |  |                  85aa                      mv      a1,a0
rom_boot():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:487
d0009268:       +--|----------------- 20859b63                  bne     a1,s0,d000947e <rom_boot+0x390>
d000926c:       |  |                  73900413                  li      s0,1849
d0009270:       |  |              /-- 00850663                  beq     a0,s0,d000927c <rom_boot+0x18e>
d0009274:       |  |              |   0000                      unimp
d0009276:       |  |              |   0000                      unimp
d0009278:       |  |              |   0000                      unimp
d000927a:       |  |              |   0000                      unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:489
  CFI_FUNC_COUNTER_PREPCALL(rom_counters, kCfiRomBoot, 2, kCfiRomPreBootCheck);
d000927c:       |  |              \-> 014a2503                  lw      a0,20(s4)
d0009280:       |  |                  39600593                  li      a1,918
d0009284:       |  |              /-- 00b50663                  beq     a0,a1,d0009290 <rom_boot+0x1a2>
d0009288:       |  |              |   0000                      unimp
d000928a:       |  |              |   0000                      unimp
d000928c:       |  |              |   0000                      unimp
d000928e:       |  |              |   0000                      unimp
d0009290:       |  |              \-> 014a2503                  lw      a0,20(s4)
d0009294:       |  |                  05a50513                  addi    a0,a0,90
d0009298:       |  |                  00aa2a23                  sw      a0,20(s4)
barrier32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:349
inline void barrier32(uint32_t val) { asm volatile("" ::"r"(val)); }
d000929c:       |  |                  49400513                  li      a0,1172
rom_boot():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:489
d00092a0:       |  |                  00aa2823                  sw      a0,16(s4)
d00092a4:       |  |                  014a2583                  lw      a1,20(s4)
d00092a8:       |  |                  3f000613                  li      a2,1008
d00092ac:       |  |              /-- 00c58663                  beq     a1,a2,d00092b8 <rom_boot+0x1ca>
d00092b0:       |  |              |   0000                      unimp
d00092b2:       |  |              |   0000                      unimp
d00092b4:       |  |              |   0000                      unimp
d00092b6:       |  |              |   0000                      unimp
d00092b8:       |  |              \-> 014a2583                  lw      a1,20(s4)
d00092bc:       |  |                  05a58593                  addi    a1,a1,90
d00092c0:       |  |                  00ba2a23                  sw      a1,20(s4)
rom_pre_boot_check():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:379
  CFI_FUNC_COUNTER_INCREMENT(rom_counters, kCfiRomPreBootCheck, 1);
d00092c4:       |  |                  010a2583                  lw      a1,16(s4)
d00092c8:       |  |              /-- 00a58663                  beq     a1,a0,d00092d4 <rom_boot+0x1e6>
d00092cc:       |  |              |   0000                      unimp
d00092ce:       |  |              |   0000                      unimp
d00092d0:       |  |              |   0000                      unimp
d00092d2:       |  |              |   0000                      unimp
d00092d4:       |  |              \-> 010a2503                  lw      a0,16(s4)
d00092d8:       |  |                  05a50513                  addi    a0,a0,90
d00092dc:       |  |                  00aa2823                  sw      a0,16(s4)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:382
  SHUTDOWN_IF_ERROR(alert_config_check(lc_state));
d00092e0:       |  |                  0fff9497                  auipc   s1,0xfff9
d00092e4:       |  |                  d6848493                  addi    s1,s1,-664 # e0002048 <lc_state>
d00092e8:       |  |                  4088                      lw      a0,0(s1)
d00092ea:       |  |                  0f5010ef                  jal     ra,d000abde <alert_config_check>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
  asm volatile("" : "+r"(val));
d00092ee:       |  |                  85aa                      mv      a1,a0
rom_pre_boot_check():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:382
d00092f0:       |  |  /-------------- 1a859463                  bne     a1,s0,d0009498 <rom_boot+0x3aa>
d00092f4:       |  |  |           /-- 00850663                  beq     a0,s0,d0009300 <rom_boot+0x212>
d00092f8:       |  |  |           |   0000                      unimp
d00092fa:       |  |  |           |   0000                      unimp
d00092fc:       |  |  |           |   0000                      unimp
d00092fe:       |  |  |           |   0000                      unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:383
  CFI_FUNC_COUNTER_INCREMENT(rom_counters, kCfiRomPreBootCheck, 2);
d0009300:       |  |  |           \-> 010a2503                  lw      a0,16(s4)
d0009304:       |  |  |               4ee00593                  li      a1,1262
d0009308:       |  |  |           /-- 00b50663                  beq     a0,a1,d0009314 <rom_boot+0x226>
d000930c:       |  |  |           |   0000                      unimp
d000930e:       |  |  |           |   0000                      unimp
d0009310:       |  |  |           |   0000                      unimp
d0009312:       |  |  |           |   0000                      unimp
d0009314:       |  |  |           \-> 010a2503                  lw      a0,16(s4)
d0009318:       |  |  |               05a50513                  addi    a0,a0,90
d000931c:       |  |  |               00aa2823                  sw      a0,16(s4)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:386
  lifecycle_state_t lc_state_check = lifecycle_state_get();
d0009320:       |  |  |               001040ef                  jal     ra,d000db20 <lifecycle_state_get>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009324:       |  |  |               85aa                      mv      a1,a0
rom_pre_boot_check():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:387
  if (launder32(lc_state_check) != lc_state) {
d0009326:       |  |  |               4090                      lw      a2,0(s1)
d0009328:       |  |  |  /----------- 16c59e63                  bne     a1,a2,d00094a4 <rom_boot+0x3b6>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:390
  HARDENED_CHECK_EQ(lc_state_check, lc_state);
d000932c:       |  |  |  |        /-- 00b50663                  beq     a0,a1,d0009338 <rom_boot+0x24a>
d0009330:       |  |  |  |        |   0000                      unimp
d0009332:       |  |  |  |        |   0000                      unimp
d0009334:       |  |  |  |        |   0000                      unimp
d0009336:       |  |  |  |        |   0000                      unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:391
  CFI_FUNC_COUNTER_INCREMENT(rom_counters, kCfiRomPreBootCheck, 3);
d0009338:       |  |  |  |        \-> 010a2503                  lw      a0,16(s4)
d000933c:       |  |  |  |            54800593                  li      a1,1352
d0009340:       |  |  |  |        /-- 00b50663                  beq     a0,a1,d000934c <rom_boot+0x25e>
d0009344:       |  |  |  |        |   0000                      unimp
d0009346:       |  |  |  |        |   0000                      unimp
d0009348:       |  |  |  |        |   0000                      unimp
d000934a:       |  |  |  |        |   0000                      unimp
d000934c:       |  |  |  |        \-> 010a2503                  lw      a0,16(s4)
d0009350:       |  |  |  |            05a50513                  addi    a0,a0,90
d0009354:       |  |  |  |            00aa2823                  sw      a0,16(s4)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:394
  rom_error_t boot_data_ok = boot_data_check(&boot_data);
d0009358:       |  |  |  |            c3018513                  addi    a0,gp,-976 # e0002478 <boot_data>
d000935c:       |  |  |  |            7b2000ef                  jal     ra,d0009b0e <boot_data_check>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009360:       |  |  |  |            862a                      mv      a2,a0
d0009362:       |  |  |  |            73900593                  li      a1,1849
rom_pre_boot_check():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:395
  if (launder32(boot_data_ok) != kErrorOk) {
d0009366:       |  |  |  |  /-------- 14b61363                  bne     a2,a1,d00094ac <rom_boot+0x3be>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:398
  HARDENED_CHECK_EQ(boot_data_ok, kErrorOk);
d000936a:       |  |  |  |  |     /-- 00b50663                  beq     a0,a1,d0009376 <rom_boot+0x288>
d000936e:       |  |  |  |  |     |   0000                      unimp
d0009370:       |  |  |  |  |     |   0000                      unimp
d0009372:       |  |  |  |  |     |   0000                      unimp
d0009374:       |  |  |  |  |     |   0000                      unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:399
  CFI_FUNC_COUNTER_INCREMENT(rom_counters, kCfiRomPreBootCheck, 4);
d0009376:       |  |  |  |  |     \-> 010a2503                  lw      a0,16(s4)
d000937a:       |  |  |  |  |         5a200593                  li      a1,1442
d000937e:       |  |  |  |  |     /-- 00b50663                  beq     a0,a1,d000938a <rom_boot+0x29c>
d0009382:       |  |  |  |  |     |   0000                      unimp
d0009384:       |  |  |  |  |     |   0000                      unimp
d0009386:       |  |  |  |  |     |   0000                      unimp
d0009388:       |  |  |  |  |     |   0000                      unimp
d000938a:       |  |  |  |  |     \-> 010a2503                  lw      a0,16(s4)
d000938e:       |  |  |  |  |         05a50513                  addi    a0,a0,90
d0009392:       |  |  |  |  |         00aa2823                  sw      a0,16(s4)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:404
      otp_read32(OTP_CTRL_PARAM_CREATOR_SW_CFG_CPUCTRL_OFFSET);
d0009396:       |  |  |  |  |         10c00513                  li      a0,268
d000939a:       |  |  |  |  |         199040ef                  jal     ra,d000dd32 <otp_read32>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:405
  CSR_READ(CSR_REG_CPUCTRL, &cpuctrl_csr);
d000939e:       |  |  |  |  |         7c0025f3                  csrr    a1,0x7c0
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:75
  bitfield &= ~(field.mask << field.index);
d00093a2:       |  |  |  |  |         eff5f593                  andi    a1,a1,-257
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d00093a6:       |  |  |  |  |         862e                      mv      a2,a1
rom_pre_boot_check():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:409
  if (launder32(cpuctrl_csr) != cpuctrl_otp) {
d00093a8:       |  |  |  |  |  /----- 10a61663                  bne     a2,a0,d00094b4 <rom_boot+0x3c6>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:412
  HARDENED_CHECK_EQ(cpuctrl_csr, cpuctrl_otp);
d00093ac:       |  |  |  |  |  |  /-- 00a58663                  beq     a1,a0,d00093b8 <rom_boot+0x2ca>
d00093b0:       |  |  |  |  |  |  |   0000                      unimp
d00093b2:       |  |  |  |  |  |  |   0000                      unimp
d00093b4:       |  |  |  |  |  |  |   0000                      unimp
d00093b6:       |  |  |  |  |  |  |   0000                      unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:413
  CFI_FUNC_COUNTER_INCREMENT(rom_counters, kCfiRomPreBootCheck, 5);
d00093b8:       |  |  |  |  |  |  \-> 010a2503                  lw      a0,16(s4)
d00093bc:       |  |  |  |  |  |      5fc00593                  li      a1,1532
d00093c0:       |  |  |  |  |  |  /-- 00b50663                  beq     a0,a1,d00093cc <rom_boot+0x2de>
d00093c4:       |  |  |  |  |  |  |   0000                      unimp
d00093c6:       |  |  |  |  |  |  |   0000                      unimp
d00093c8:       |  |  |  |  |  |  |   0000                      unimp
d00093ca:       |  |  |  |  |  |  |   0000                      unimp
d00093cc:       |  |  |  |  |  |  \-> 010a2503                  lw      a0,16(s4)
d00093d0:       |  |  |  |  |  |      01698433                  add     s0,s3,s6
d00093d4:       |  |  |  |  |  |      05a50513                  addi    a0,a0,90
d00093d8:       |  |  |  |  |  |      00aa2823                  sw      a0,16(s4)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:415
  sec_mmio_check_counters(/*expected_check_count=*/3);
d00093dc:       |  |  |  |  |  |      450d                      li      a0,3
d00093de:       |  |  |  |  |  |      375040ef                  jal     ra,d000df52 <sec_mmio_check_counters>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:416
  CFI_FUNC_COUNTER_INCREMENT(rom_counters, kCfiRomPreBootCheck, 6);
d00093e2:       |  |  |  |  |  |      010a2503                  lw      a0,16(s4)
d00093e6:       |  |  |  |  |  |      65600593                  li      a1,1622
d00093ea:       |  |  |  |  |  |  /-- 00b50663                  beq     a0,a1,d00093f6 <rom_boot+0x308>
d00093ee:       |  |  |  |  |  |  |   0000                      unimp
d00093f0:       |  |  |  |  |  |  |   0000                      unimp
d00093f2:       |  |  |  |  |  |  |   0000                      unimp
d00093f4:       |  |  |  |  |  |  |   0000                      unimp
d00093f6:       |  |  |  |  |  |  \-> 010a2503                  lw      a0,16(s4)
d00093fa:       |  |  |  |  |  |      05a50513                  addi    a0,a0,90
d00093fe:       |  |  |  |  |  |      00aa2823                  sw      a0,16(s4)
rom_boot():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:491
  CFI_FUNC_COUNTER_INCREMENT(rom_counters, kCfiRomBoot, 4);
d0009402:       |  |  |  |  |  |      014a2503                  lw      a0,20(s4)
d0009406:       |  |  |  |  |  |      44a00593                  li      a1,1098
d000940a:       |  |  |  |  |  |  /-- 00b50663                  beq     a0,a1,d0009416 <rom_boot+0x328>
d000940e:       |  |  |  |  |  |  |   0000                      unimp
d0009410:       |  |  |  |  |  |  |   0000                      unimp
d0009412:       |  |  |  |  |  |  |   0000                      unimp
d0009414:       |  |  |  |  |  |  |   0000                      unimp
d0009416:       |  |  |  |  |  |  \-> 014a2503                  lw      a0,20(s4)
d000941a:       |  |  |  |  |  |      05a50513                  addi    a0,a0,90
d000941e:       |  |  |  |  |  |      00aa2a23                  sw      a0,20(s4)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:492
  CFI_FUNC_COUNTER_CHECK(rom_counters, kCfiRomPreBootCheck, 7);
d0009422:       |  |  |  |  |  |      010a2503                  lw      a0,16(s4)
d0009426:       |  |  |  |  |  |      6b000593                  li      a1,1712
d000942a:       |  |  |  |  |  |  /-- 00b50663                  beq     a0,a1,d0009436 <rom_boot+0x348>
d000942e:       |  |  |  |  |  |  |   0000                      unimp
d0009430:       |  |  |  |  |  |  |   0000                      unimp
d0009432:       |  |  |  |  |  |  |   0000                      unimp
d0009434:       |  |  |  |  |  |  |   0000                      unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:495
  flash_ctrl_exec_set(flash_exec);
d0009436:       |  |  |  |  |  |  \-> 854a                      mv      a0,s2
d0009438:       |  |  |  |  |  |      054020ef                  jal     ra,d000b48c <flash_ctrl_exec_set>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:496
  SEC_MMIO_WRITE_INCREMENT(kFlashCtrlSecMmioExecSet);
d000943c:       |  |  |  |  |  |      008aa503                  lw      a0,8(s5)
d0009440:       |  |  |  |  |  |      0505                      addi    a0,a0,1
d0009442:       |  |  |  |  |  |      00aaa423                  sw      a0,8(s5)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:498
  sec_mmio_check_values(rnd_uint32());
d0009446:       |  |  |  |  |  |      402040ef                  jal     ra,d000d848 <rnd_uint32>
d000944a:       |  |  |  |  |  |      299040ef                  jal     ra,d000dee2 <sec_mmio_check_values>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:499
  sec_mmio_check_counters(/*expected_check_count=*/5);
d000944e:       |  |  |  |  |  |      4515                      li      a0,5
d0009450:       |  |  |  |  |  |      303040ef                  jal     ra,d000df52 <sec_mmio_check_counters>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:502
  CFI_FUNC_COUNTER_INCREMENT(rom_counters, kCfiRomBoot, 5);
d0009454:       |  |  |  |  |  |      014a2503                  lw      a0,20(s4)
d0009458:       |  |  |  |  |  |      4a400593                  li      a1,1188
d000945c:       |  |  |  |  |  |  /-- 00b50663                  beq     a0,a1,d0009468 <rom_boot+0x37a>
d0009460:       |  |  |  |  |  |  |   0000                      unimp
d0009462:       |  |  |  |  |  |  |   0000                      unimp
d0009464:       |  |  |  |  |  |  |   0000                      unimp
d0009466:       |  |  |  |  |  |  |   0000                      unimp
d0009468:       |  |  |  |  |  |  \-> 014a2503                  lw      a0,20(s4)
d000946c:       |  |  |  |  |  |      05a50513                  addi    a0,a0,90
d0009470:       |  |  |  |  |  |      00aa2a23                  sw      a0,20(s4)
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:503
  ((rom_ext_entry_point *)entry_point)();
d0009474:       |  |  |  |  |  |      9402                      jalr    s0
d0009476:       |  |  |  |  |  |      014d5537                  lui     a0,0x14d5
d000947a:       |  |  |  |  |  |      20950513                  addi    a0,a0,521 # 14d5209 <WDOG_BARK_THOLD+0x149e321>
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:506
}
d000947e:       \--|--|--|--|--|----> 4c92                      lw      s9,4(sp)
d0009480:          |  |  |  |  |      4c22                      lw      s8,8(sp)
d0009482:          |  |  |  |  |      4bb2                      lw      s7,12(sp)
d0009484:          |  |  |  |  |      4b42                      lw      s6,16(sp)
d0009486:          |  |  |  |  |      4ad2                      lw      s5,20(sp)
d0009488:          |  |  |  |  |      4a62                      lw      s4,24(sp)
d000948a:          |  |  |  |  |      49f2                      lw      s3,28(sp)
d000948c:          |  |  |  |  |      5902                      lw      s2,32(sp)
d000948e:          |  |  |  |  |      5492                      lw      s1,36(sp)
d0009490:          |  |  |  |  |      5422                      lw      s0,40(sp)
d0009492:          |  |  |  |  |      50b2                      lw      ra,44(sp)
d0009494:          |  |  |  |  |      6145                      addi    sp,sp,48
d0009496:          |  |  |  |  |      8082                      ret
rom_pre_boot_check():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:382
  SHUTDOWN_IF_ERROR(alert_config_check(lc_state));
d0009498:          |  \--|--|--|----> 60d040ef                  jal     ra,d000e2a4 <shutdown_finalize>
rom_boot():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:481
      HARDENED_UNREACHABLE();
d000949c:          \-----|--|--|----> 0000                      unimp
d000949e:                |  |  |      0000                      unimp
d00094a0:                |  |  |      0000                      unimp
d00094a2:                |  |  |      0000                      unimp
rom_pre_boot_check():
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:388
    HARDENED_UNREACHABLE();
d00094a4:                \--|--|----> 0000                      unimp
d00094a6:                   |  |      0000                      unimp
d00094a8:                   |  |      0000                      unimp
d00094aa:                   |  |      0000                      unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:396
    HARDENED_UNREACHABLE();
d00094ac:                   \--|----> 0000                      unimp
d00094ae:                      |      0000                      unimp
d00094b0:                      |      0000                      unimp
d00094b2:                      |      0000                      unimp
/proc/self/cwd/sw/device/silicon_creator/rom/rom.c:410
    HARDENED_UNREACHABLE();
d00094b4:                      \----> 0000                      unimp
d00094b6:                             0000                      unimp
d00094b8:                             0000                      unimp
d00094ba:                             0000                      unimp

d00094bc <boot_policy_manifests_get>:
boot_policy_manifests_get():
/proc/self/cwd/sw/device/silicon_creator/rom/boot_policy.c:15
#include "sw/device/silicon_creator/lib/drivers/lifecycle.h"
#include "sw/device/silicon_creator/lib/error.h"
#include "sw/device/silicon_creator/lib/shutdown.h"
#include "sw/device/silicon_creator/rom/boot_policy_ptrs.h"

boot_policy_manifests_t boot_policy_manifests_get(void) {
d00094bc:           f0000537            lui     a0,0xf0000
/proc/self/cwd/sw/device/silicon_creator/rom/boot_policy.c:18
  const manifest_t *slot_a = boot_policy_manifest_a_get();
  const manifest_t *slot_b = boot_policy_manifest_b_get();
  if (slot_a->security_version >= slot_b->security_version) {
d00094c0:           34452503            lw      a0,836(a0) # f0000344 <_stack_end+0xffe0344>
d00094c4:           f00085b7            lui     a1,0xf0008
d00094c8:           3445a603            lw      a2,836(a1) # f0008344 <_stack_end+0xffe8344>
/proc/self/cwd/sw/device/silicon_creator/rom/boot_policy.c:26
    };
  }
  return (boot_policy_manifests_t){
      .ordered = {slot_b, slot_a},
  };
}
d00094cc:       /-- 00c56563            bltu    a0,a2,d00094d6 <boot_policy_manifests_get+0x1a>
d00094d0:       |   f0000537            lui     a0,0xf0000
d00094d4:       |   8082                        ret
d00094d6:       \-> f0008537            lui     a0,0xf0008
d00094da:           f00005b7            lui     a1,0xf0000
d00094de:           8082                        ret

d00094e0 <boot_policy_manifest_check>:
boot_policy_manifest_check():
/proc/self/cwd/sw/device/silicon_creator/rom/boot_policy.c:30

rom_error_t boot_policy_manifest_check(const manifest_t *manifest,
                                       const boot_data_t *boot_data) {
  if (manifest->identifier != CHIP_ROM_EXT_IDENTIFIER) {
d00094e0:                    33452603           lw      a2,820(a0)
d00094e4:                    455256b7           lui     a3,0x45525
d00094e8:                    44f68693           addi    a3,a3,1103 # 4552544f <_epmp_stack_guard_na4+0xd51e44f>
d00094ec:             /----- 00d61e63           bne     a2,a3,d0009508 <boot_policy_manifest_check+0x28>
/proc/self/cwd/sw/device/silicon_creator/rom/boot_policy.c:33
    return kErrorBootPolicyBadIdentifier;
  }
  if (manifest->length < CHIP_ROM_EXT_SIZE_MIN ||
d00094f0:             |      33852783           lw      a5,824(a0)
d00094f4:             |      c8078613           addi    a2,a5,-896
d00094f8:             |      66c1                       lui     a3,0x10
d00094fa:             |      c8068693           addi    a3,a3,-896 # fc80 <_rom_ext_virtual_size+0x7c80>
d00094fe:             |  /-- 00c6fb63           bgeu    a3,a2,d0009514 <boot_policy_manifest_check+0x34>
d0009502:             |  |   02425537           lui     a0,0x2425
d0009506:          /--|--|-- a019                       j       d000950c <boot_policy_manifest_check+0x2c>
d0009508:          |  \--|-> 01425537           lui     a0,0x1425
d000950c:          >-----|-> 00d50613           addi    a2,a0,13 # 142500d <WDOG_BARK_THOLD+0x13ee125>
/proc/self/cwd/sw/device/silicon_creator/rom/boot_policy.c:46
    HARDENED_CHECK_GE(manifest->security_version,
                      boot_data->min_security_version_rom_ext);
    return kErrorOk;
  }
  return kErrorBootPolicyRollback;
}
d0009510:       /--|-----|-> 8532                       mv      a0,a2
d0009512:       |  |     |   8082                       ret
manifest_check():
/proc/self/cwd/./sw/device/silicon_creator/lib/manifest.h:260
  if (manifest->code_start >= manifest->code_end ||
d0009514:       |  |     \-> 37452683           lw      a3,884(a0)
d0009518:       |  |         37852803           lw      a6,888(a0)
d000951c:       |  |         0106b633           sltu    a2,a3,a6
d0009520:       |  |         00164613           xori    a2,a2,1
d0009524:       |  |         3806b713           sltiu   a4,a3,896
d0009528:       |  |         8f51                       or      a4,a4,a2
d000952a:       |  |         024d4637           lui     a2,0x24d4
d000952e:       |  |         10d60613           addi    a2,a2,269 # 24d410d <WDOG_BARK_THOLD+0x249d225>
d0009532:       +--|-------- ff79                       bnez    a4,d0009510 <boot_policy_manifest_check+0x30>
/proc/self/cwd/./sw/device/silicon_creator/lib/manifest.h:262
      manifest->code_end > manifest->length ||
d0009534:       |  |         0107b733           sltu    a4,a5,a6
d0009538:       |  |         0036f793           andi    a5,a3,3
d000953c:       |  |         00f037b3           snez    a5,a5
d0009540:       |  |         8f5d                       or      a4,a4,a5
d0009542:       |  |         00387793           andi    a5,a6,3
d0009546:       |  |         00f037b3           snez    a5,a5
d000954a:       |  |         8f5d                       or      a4,a4,a5
d000954c:       +--|-------- f371                       bnez    a4,d0009510 <boot_policy_manifest_check+0x30>
/proc/self/cwd/./sw/device/silicon_creator/lib/manifest.h:268
  if (manifest->entry_point < manifest->code_start ||
d000954e:       |  |         37c52603           lw      a2,892(a0)
d0009552:       |  |         00d636b3           sltu    a3,a2,a3
d0009556:       |  |         01063733           sltu    a4,a2,a6
d000955a:       |  |         00174713           xori    a4,a4,1
d000955e:       |  |         8ed9                       or      a3,a3,a4
d0009560:       |  |         8a0d                       andi    a2,a2,3
d0009562:       |  |         00c03633           snez    a2,a2
d0009566:       |  |         8e55                       or      a2,a2,a3
d0009568:       |  |     /-- ea09                       bnez    a2,d000957a <boot_policy_manifest_check+0x9a>
boot_policy_manifest_check():
/proc/self/cwd/sw/device/silicon_creator/rom/boot_policy.c:39
  if (launder32(manifest->security_version) >=
d000956a:       |  |     |   34452603           lw      a2,836(a0)
/proc/self/cwd/sw/device/silicon_creator/rom/boot_policy.c:40
      boot_data->min_security_version_rom_ext) {
d000956e:       |  |     |   598c                       lw      a1,48(a1)
/proc/self/cwd/sw/device/silicon_creator/rom/boot_policy.c:39
  if (launder32(manifest->security_version) >=
d0009570:       |  |  /--|-- 00b67a63           bgeu    a2,a1,d0009584 <boot_policy_manifest_check+0xa4>
d0009574:       |  |  |  |   03425537           lui     a0,0x3425
d0009578:       |  \--|--|-- bf51                       j       d000950c <boot_policy_manifest_check+0x2c>
d000957a:       |     |  \-> 014d4537           lui     a0,0x14d4
d000957e:       |     |      10d50613           addi    a2,a0,269 # 14d410d <WDOG_BARK_THOLD+0x149d225>
d0009582:       +-----|----- b779                       j       d0009510 <boot_policy_manifest_check+0x30>
/proc/self/cwd/sw/device/silicon_creator/rom/boot_policy.c:41
    HARDENED_CHECK_GE(manifest->security_version,
d0009584:       |     \----> 34452503           lw      a0,836(a0)
d0009588:       |        /-- 00b57663           bgeu    a0,a1,d0009594 <boot_policy_manifest_check+0xb4>
d000958c:       |        |   0000                       unimp
d000958e:       |        |   0000                       unimp
d0009590:       |        |   0000                       unimp
d0009592:       |        |   0000                       unimp
d0009594:       |        \-> 73900613           li      a2,1849
d0009598:       \----------- bfa5                       j       d0009510 <boot_policy_manifest_check+0x30>

d000959a <boot_data_read>:
boot_data_read():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:543
  boot_data_digest_compute(boot_data, &boot_data->digest);

  return res;
}

rom_error_t boot_data_read(lifecycle_state_t lc_state, boot_data_t *boot_data) {
d000959a:                                   7179                        addi    sp,sp,-48
d000959c:                                   d606                        sw      ra,44(sp)
d000959e:                                   d422                        sw      s0,40(sp)
d00095a0:                                   d226                        sw      s1,36(sp)
d00095a2:                                   d04a                        sw      s2,32(sp)
d00095a4:                                   892e                        mv      s2,a1
d00095a6:                                   842a                        mv      s0,a0
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:545
  active_page_info_t active_page;
  HARDENED_RETURN_IF_ERROR(boot_data_active_page_find(&active_page, boot_data));
d00095a8:                                   0028                        addi    a0,sp,8
d00095aa:                                   22e9                        jal     d0009774 <boot_data_active_page_find>
d00095ac:                                   84aa                        mv      s1,a0
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d00095ae:                                   85aa                        mv      a1,a0
d00095b0:                                   73900513            li      a0,1849
boot_data_read():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:545
d00095b4:       /-------------------------- 18a59e63            bne     a1,a0,d0009750 <boot_data_read+0x1b6>
d00095b8:       |                       /-- 00a48663            beq     s1,a0,d00095c4 <boot_data_read+0x2a>
d00095bc:       |                       |   0000                        unimp
d00095be:       |                       |   0000                        unimp
d00095c0:       |                       |   0000                        unimp
d00095c2:       |                       |   0000                        unimp
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:546
  switch (launder32(active_page.has_valid_entry)) {
d00095c4:       |                       \-> 4552                        lw      a0,20(sp)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d00095c6:       |                           85aa                        mv      a1,a0
d00095c8:       |                           1d400613            li      a2,468
boot_data_read():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:546
d00095cc:       |                 /-------- 04c59d63            bne     a1,a2,d0009626 <boot_data_read+0x8c>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:551
    case kHardenedBoolTrue:
      HARDENED_CHECK_EQ(active_page.has_valid_entry, kHardenedBoolTrue);
      return kErrorOk;
    case kHardenedBoolFalse:
      HARDENED_CHECK_EQ(active_page.has_valid_entry, kHardenedBoolFalse);
d00095d0:       |                 |     /-- 00c50663            beq     a0,a2,d00095dc <boot_data_read+0x42>
d00095d4:       |                 |     |   0000                        unimp
d00095d6:       |                 |     |   0000                        unimp
d00095d8:       |                 |     |   0000                        unimp
d00095da:       |                 |     |   0000                        unimp
boot_data_default_get():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:490
  uint32_t allowed_in_prod = otp_read32(
d00095dc:       |                 |     \-> 11800513            li      a0,280
d00095e0:       |                 |         752040ef            jal     ra,d000dd32 <otp_read32>
d00095e4:       |                 |         014245b7            lui     a1,0x1424
d00095e8:       |                 |         40d58593            addi    a1,a1,1037 # 142440d <WDOG_BARK_THOLD+0x13ed525>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:492
  rom_error_t res = lc_state ^ launder32(kErrorBootDataNotFound);
d00095ec:       |                 |         8da1                        xor     a1,a1,s0
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d00095ee:       |                 |         8622                        mv      a2,s0
d00095f0:       |                 |         cf8d06b7            lui     a3,0xcf8d0
d00095f4:       |                 |         aaa68713            addi    a4,a3,-1366 # cf8cfaaa <_stack_end+0xef8afaaa>
boot_data_default_get():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:494
  switch (launder32(lc_state)) {
d00095f8:       |                 |  /----- 04c75263            bge     a4,a2,d000963c <boot_data_read+0xa2>
d00095fc:       |                 |  |      aab68693            addi    a3,a3,-1365
d0009600:       |              /--|--|----- 06d60a63            beq     a2,a3,d0009674 <boot_data_read+0xda>
d0009604:       |              |  |  |      0b5a76b7            lui     a3,0xb5a7
d0009608:       |              |  |  |      5e068693            addi    a3,a3,1504 # b5a75e0 <WDOG_BARK_THOLD+0xb5706f8>
d000960c:       |           /--|--|--|----- 08d61363            bne     a2,a3,d0009692 <boot_data_read+0xf8>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:500
      HARDENED_CHECK_EQ(lc_state, kLcStateDev);
d0009610:       |           |  |  |  |  /-- 00d40663            beq     s0,a3,d000961c <boot_data_read+0x82>
d0009614:       |           |  |  |  |  |   0000                        unimp
d0009616:       |           |  |  |  |  |   0000                        unimp
d0009618:       |           |  |  |  |  |   0000                        unimp
d000961a:       |           |  |  |  |  |   0000                        unimp
d000961c:       |           |  |  |  |  \-> 0a183537            lui     a0,0xa183
d0009620:       |           |  |  |  |      6d450513            addi    a0,a0,1748 # a1836d4 <WDOG_BARK_THOLD+0xa14c7ec>
d0009624:       |        /--|--|--|--|----- a0d9                        j       d00096ea <boot_data_read+0x150>
d0009626:       |        |  |  |  \--|----> 73900493            li      s1,1849
boot_data_read():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:546
  switch (launder32(active_page.has_valid_entry)) {
d000962a:       |  /-----|--|--|-----|----- 12959d63            bne     a1,s1,d0009764 <boot_data_read+0x1ca>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:548
      HARDENED_CHECK_EQ(active_page.has_valid_entry, kHardenedBoolTrue);
d000962e:       |  |     |  |  |     |  /-- 00950663            beq     a0,s1,d000963a <boot_data_read+0xa0>
d0009632:       |  |     |  |  |     |  |   0000                        unimp
d0009634:       |  |     |  |  |     |  |   0000                        unimp
d0009636:       |  |     |  |  |     |  |   0000                        unimp
d0009638:       |  |     |  |  |     |  |   0000                        unimp
d000963a:       +--|-----|--|--|-----|--\-X aa19                        j       d0009750 <boot_data_read+0x1b6>
d000963c:       |  |     |  |  |     \----> 91b9b6b7            lui     a3,0x91b9b
d0009640:       |  |     |  |  |            68a68693            addi    a3,a3,1674 # 91b9b68a <_stack_end+0xb1b7b68a>
boot_data_default_get():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:494
  switch (launder32(lc_state)) {
d0009644:       |  |     |  |  |     /----- 08d61363            bne     a2,a3,d00096ca <boot_data_read+0x130>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:512
      HARDENED_CHECK_EQ(lc_state, kLcStateProdEnd);
d0009648:       |  |     |  |  |     |  /-- 00d40663            beq     s0,a3,d0009654 <boot_data_read+0xba>
d000964c:       |  |     |  |  |     |  |   0000                        unimp
d000964e:       |  |     |  |  |     |  |   0000                        unimp
d0009650:       |  |     |  |  |     |  |   0000                        unimp
d0009652:       |  |     |  |  |     |  |   0000                        unimp
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009654:       |  |     |  |  |     |  \-> 872a                        mv      a4,a0
d0009656:       |  |     |  |  |     |      73900613            li      a2,1849
boot_data_default_get():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:514
      if (launder32(allowed_in_prod) == kHardenedBoolTrue) {
d000965a:       |  |  /--|--|--|-----|----- 10c71263            bne     a4,a2,d000975e <boot_data_read+0x1c4>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:515
        HARDENED_CHECK_EQ(allowed_in_prod, kHardenedBoolTrue);
d000965e:       |  |  |  |  |  |     |  /-- 00c50663            beq     a0,a2,d000966a <boot_data_read+0xd0>
d0009662:       |  |  |  |  |  |     |  |   0000                        unimp
d0009664:       |  |  |  |  |  |     |  |   0000                        unimp
d0009666:       |  |  |  |  |  |     |  |   0000                        unimp
d0009668:       |  |  |  |  |  |     |  |   0000                        unimp
d000966a:       |  |  |  |  |  |     |  \-> 90fbf537            lui     a0,0x90fbf
d000966e:       |  |  |  |  |  |     |      5be50513            addi    a0,a0,1470 # 90fbf5be <_stack_end+0xb0f9f5be>
d0009672:       |  |  |  +--|--|-----|----- a8a5                        j       d00096ea <boot_data_read+0x150>
d0009674:       |  |  |  |  |  \-----|----> cf8d0537            lui     a0,0xcf8d0
d0009678:       |  |  |  |  |        |      aab50513            addi    a0,a0,-1365 # cf8cfaab <_stack_end+0xef8afaab>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:520
      HARDENED_CHECK_EQ(lc_state, kLcStateRma);
d000967c:       |  |  |  |  |        |  /-- 00a40663            beq     s0,a0,d0009688 <boot_data_read+0xee>
d0009680:       |  |  |  |  |        |  |   0000                        unimp
d0009682:       |  |  |  |  |        |  |   0000                        unimp
d0009684:       |  |  |  |  |        |  |   0000                        unimp
d0009686:       |  |  |  |  |        |  |   0000                        unimp
d0009688:       |  |  |  |  |        |  \-> cecec537            lui     a0,0xcecec
d000968c:       |  |  |  |  |        |      99f50513            addi    a0,a0,-1633 # ceceb99f <_stack_end+0xeeccb99f>
d0009690:       |  |  |  +--|--------|----- a8a9                        j       d00096ea <boot_data_read+0x150>
d0009692:       |  |  |  |  \--------|----> 65f256b7            lui     a3,0x65f25
d0009696:       |  |  |  |           |      20f68693            addi    a3,a3,527 # 65f2520f <_epmp_stack_guard_na4+0x2df1e20f>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:494
  switch (launder32(lc_state)) {
d000969a:       |  |  |  |        /--|----- 0cd61963            bne     a2,a3,d000976c <boot_data_read+0x1d2>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:504
      HARDENED_CHECK_EQ(lc_state, kLcStateProd);
d000969e:       |  |  |  |        |  |  /-- 00d40663            beq     s0,a3,d00096aa <boot_data_read+0x110>
d00096a2:       |  |  |  |        |  |  |   0000                        unimp
d00096a4:       |  |  |  |        |  |  |   0000                        unimp
d00096a6:       |  |  |  |        |  |  |   0000                        unimp
d00096a8:       |  |  |  |        |  |  |   0000                        unimp
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d00096aa:       |  |  |  |        |  |  \-> 872a                        mv      a4,a0
d00096ac:       |  |  |  |        |  |      73900613            li      a2,1849
boot_data_default_get():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:506
      if (launder32(allowed_in_prod) == kHardenedBoolTrue) {
d00096b0:       |  |  +--|--------|--|----- 0ac71763            bne     a4,a2,d000975e <boot_data_read+0x1c4>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:507
        HARDENED_CHECK_EQ(allowed_in_prod, kHardenedBoolTrue);
d00096b4:       |  |  |  |        |  |  /-- 00c50663            beq     a0,a2,d00096c0 <boot_data_read+0x126>
d00096b8:       |  |  |  |        |  |  |   0000                        unimp
d00096ba:       |  |  |  |        |  |  |   0000                        unimp
d00096bc:       |  |  |  |        |  |  |   0000                        unimp
d00096be:       |  |  |  |        |  |  |   0000                        unimp
d00096c0:       |  |  |  |        |  |  \-> 64b01537            lui     a0,0x64b01
d00096c4:       |  |  |  |        |  |      13b50513            addi    a0,a0,315 # 64b0113b <_epmp_stack_guard_na4+0x2cafa13b>
d00096c8:       |  |  |  +--------|--|----- a00d                        j       d00096ea <boot_data_read+0x150>
d00096ca:       |  |  |  |        |  \----> b2866537            lui     a0,0xb2866
d00096ce:       |  |  |  |        |         fbb50513            addi    a0,a0,-69 # b2865fbb <_stack_end+0xd2845fbb>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:494
  switch (launder32(lc_state)) {
d00096d2:       |  |  |  |        +-------- 08a61d63            bne     a2,a0,d000976c <boot_data_read+0x1d2>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:496
      HARDENED_CHECK_EQ(lc_state, kLcStateTest);
d00096d6:       |  |  |  |        |     /-- 00a40663            beq     s0,a0,d00096e2 <boot_data_read+0x148>
d00096da:       |  |  |  |        |     |   0000                        unimp
d00096dc:       |  |  |  |        |     |   0000                        unimp
d00096de:       |  |  |  |        |     |   0000                        unimp
d00096e0:       |  |  |  |        |     |   0000                        unimp
d00096e2:       |  |  |  |        |     \-> b3c42537            lui     a0,0xb3c42
d00096e6:       |  |  |  |        |         c8f50513            addi    a0,a0,-881 # b3c41c8f <_stack_end+0xd3c21c8f>
d00096ea:       |  |  |  \--------|-------> 00a5c4b3            xor     s1,a1,a0
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d00096ee:       |  |  |           |  /----> 85a6                        mv      a1,s1
d00096f0:       |  |  |           |  |      73900513            li      a0,1849
boot_data_default_get():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:527
  HARDENED_RETURN_IF_ERROR(res);
d00096f4:       +--|--|-----------|--|----- 04a59e63            bne     a1,a0,d0009750 <boot_data_read+0x1b6>
d00096f8:       |  |  |           |  |  /-- 00a48663            beq     s1,a0,d0009704 <boot_data_read+0x16a>
d00096fc:       |  |  |           |  |  |   0000                        unimp
d00096fe:       |  |  |           |  |  |   0000                        unimp
d0009700:       |  |  |           |  |  |   0000                        unimp
d0009702:       |  |  |           |  |  |   0000                        unimp
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:529
  boot_data->is_valid = kBootDataValidEntry;
d0009704:       |  |  |           |  |  \-> 02090413            addi    s0,s2,32
d0009708:       |  |  |           |  |      557d                        li      a0,-1
d000970a:       |  |  |           |  |      02a92223            sw      a0,36(s2)
d000970e:       |  |  |           |  |      02a92023            sw      a0,32(s2)
d0009712:       |  |  |           |  |      41445537            lui     a0,0x41445
d0009716:       |  |  |           |  |      f4250513            addi    a0,a0,-190 # 41444f42 <_epmp_stack_guard_na4+0x943df42>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:530
  boot_data->identifier = kBootDataIdentifier;
d000971a:       |  |  |           |  |      02a92423            sw      a0,40(s2)
d000971e:       |  |  |           |  |      4515                        li      a0,5
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:531
  boot_data->counter = kBootDataDefaultCounterVal;
d0009720:       |  |  |           |  |      02a92623            sw      a0,44(s2)
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:533
      otp_read32(OTP_CTRL_PARAM_CREATOR_SW_CFG_MIN_SEC_VER_ROM_EXT_OFFSET);
d0009724:       |  |  |           |  |      11000513            li      a0,272
d0009728:       |  |  |           |  |      60a040ef            jal     ra,d000dd32 <otp_read32>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:532
  boot_data->min_security_version_rom_ext =
d000972c:       |  |  |           |  |      02a92823            sw      a0,48(s2)
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:535
      otp_read32(OTP_CTRL_PARAM_CREATOR_SW_CFG_MIN_SEC_VER_BL0_OFFSET);
d0009730:       |  |  |           |  |      11400513            li      a0,276
d0009734:       |  |  |           |  |      5fe040ef            jal     ra,d000dd32 <otp_read32>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:534
  boot_data->min_security_version_bl0 =
d0009738:       |  |  |           |  |      02a92a23            sw      a0,52(s2)
boot_data_digest_compute():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:65
  hmac_sha256_init();
d000973c:       |  |  |           |  |      326040ef            jal     ra,d000da62 <hmac_sha256_init>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:66
  hmac_sha256_update((const char *)boot_data + kDigestRegionOffset,
d0009740:       |  |  |           |  |      02000593            li      a1,32
d0009744:       |  |  |           |  |      8522                        mv      a0,s0
d0009746:       |  |  |           |  |      336040ef            jal     ra,d000da7c <hmac_sha256_update>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:68
  hmac_sha256_final(digest);
d000974a:       |  |  |           |  |      854a                        mv      a0,s2
d000974c:       |  |  |           |  |      39e040ef            jal     ra,d000daea <hmac_sha256_final>
boot_data_read():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:556
      return boot_data_default_get(lc_state, boot_data);
    default:
      HARDENED_UNREACHABLE();
  }
}
d0009750:       \--|--|-----------|--|----> 8526                        mv      a0,s1
d0009752:          |  |           |  |      5902                        lw      s2,32(sp)
d0009754:          |  |           |  |      5492                        lw      s1,36(sp)
d0009756:          |  |           |  |      5422                        lw      s0,40(sp)
d0009758:          |  |           |  |      50b2                        lw      ra,44(sp)
d000975a:          |  |           |  |      6145                        addi    sp,sp,48
d000975c:          |  |           |  |      8082                        ret
d000975e:          |  \-----------|--|----> 00d5c4b3            xor     s1,a1,a3
d0009762:          |              |  \----- b771                        j       d00096ee <boot_data_read+0x154>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:554
      HARDENED_UNREACHABLE();
d0009764:          \--------------|-------> 0000                        unimp
d0009766:                         |         0000                        unimp
d0009768:                         |         0000                        unimp
d000976a:                         |         0000                        unimp
boot_data_default_get():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:524
      HARDENED_UNREACHABLE();
d000976c:                         \-------> 0000                        unimp
d000976e:                                   0000                        unimp
d0009770:                                   0000                        unimp
d0009772:                                   0000                        unimp

d0009774 <boot_data_active_page_find>:
boot_data_active_page_find():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:457
                                              boot_data_t *boot_data) {
d0009774:                                         716d                  addi    sp,sp,-272
d0009776:                                         10112623              sw      ra,268(sp)
d000977a:                                         10812423              sw      s0,264(sp)
d000977e:                                         10912223              sw      s1,260(sp)
d0009782:                                         11212023              sw      s2,256(sp)
d0009786:                                         dfce                  sw      s3,252(sp)
d0009788:                                         ddd2                  sw      s4,248(sp)
d000978a:                                         dbd6                  sw      s5,244(sp)
d000978c:                                         d9da                  sw      s6,240(sp)
d000978e:                                         d7de                  sw      s7,236(sp)
d0009790:                                         d5e2                  sw      s8,232(sp)
d0009792:                                         d3e6                  sw      s9,228(sp)
d0009794:                                         d1ea                  sw      s10,224(sp)
d0009796:                                         cfee                  sw      s11,220(sp)
d0009798:                                         8b2a                  mv      s6,a0
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000979a:                                         4501                  li      a0,0
boot_data_active_page_find():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:458
  *page_info = (active_page_info_t){
d000979c:                                         000b2023              sw      zero,0(s6)
d00097a0:                                         1d400913              li      s2,468
d00097a4:                                         012b2223              sw      s2,4(s6)
d00097a8:                                         02000c13              li      s8,32
d00097ac:                                         018b2423              sw      s8,8(s6)
d00097b0:                                         012b2623              sw      s2,12(s6)
d00097b4:                                         018b2823              sw      s8,16(s6)
d00097b8:                                         4605                  li      a2,1
d00097ba:                                         c02e                  sw      a1,0(sp)
d00097bc:                                         4b81                  li      s7,0
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:467
  for (; launder32(i) < ARRAYSIZE(kPages); ++i) {
d00097be:       /-------------------------------- 30a66b63              bltu    a2,a0,d0009ad4 <boot_data_active_page_find+0x360>
d00097c2:       |                                 4b81                  li      s7,0
d00097c4:       |                                 00005517              auipc   a0,0x5
d00097c8:       |                                 f8050513              addi    a0,a0,-128 # d000e744 <kPages>
d00097cc:       |                                 c22a                  sw      a0,4(sp)
d00097ce:       |                                 44a5                  li      s1,9
d00097d0:       |                                 73900d13              li      s10,1849
d00097d4:       |                                 4cc1                  li      s9,16
d00097d6:       |                                 41445537              lui     a0,0x41445
d00097da:       |                                 f4250513              addi    a0,a0,-190 # 41444f42 <_epmp_stack_guard_na4+0x943df42>
d00097de:       |                                 c62a                  sw      a0,12(sp)
d00097e0:       |                                 03424537              lui     a0,0x3424
d00097e4:       |                                 40d50513              addi    a0,a0,1037 # 342440d <WDOG_BARK_THOLD+0x33ed525>
d00097e8:       |                                 c42a                  sw      a0,8(sp)
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:468
    HARDENED_RETURN_IF_ERROR(
d00097ea:       |  /----------------------------> 002b9513              slli    a0,s7,0x2
d00097ee:       |  |                              4592                  lw      a1,4(sp)
d00097f0:       |  |                              952e                  add     a0,a0,a1
d00097f2:       |  |                              00052a03              lw      s4,0(a0)
boot_data_page_info_update():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:429
  flash_ctrl_info_perms_set(page, (flash_ctrl_perms_t){
d00097f6:       |  |                              4519                  li      a0,6
d00097f8:       |  |                              c8aa                  sw      a0,80(sp)
d00097fa:       |  |                              caa6                  sw      s1,84(sp)
d00097fc:       |  |                              cca6                  sw      s1,88(sp)
d00097fe:       |  |                              088c                  addi    a1,sp,80
d0009800:       |  |                              8552                  mv      a0,s4
d0009802:       |  |                              4dd010ef              jal     ra,d000b4de <flash_ctrl_info_perms_set>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009806:       |  |                              4501                  li      a0,0
d0009808:       |  |                              4d81                  li      s11,0
d000980a:       |  |                              1d400993              li      s3,468
boot_data_page_info_update_impl():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:330
  for (; launder32(i) < kBootDataEntriesPerPage; ++i) {
d000980e:       |  |                              45fd                  li      a1,31
d0009810:       |  |              /-------------- 10a5e263              bltu    a1,a0,d0009914 <boot_data_active_page_find+0x1a0>
d0009814:       |  |              |               4d81                  li      s11,0
d0009816:       |  |              |               1d400993              li      s3,468
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:333
    HARDENED_RETURN_IF_ERROR(boot_data_sniff(page, i, &sniff_results[i]));
d000981a:       |  |              |  /----------> 002d9513              slli    a0,s11,0x2
d000981e:       |  |              |  |            088c                  addi    a1,sp,80
d0009820:       |  |              |  |            00a584b3              add     s1,a1,a0
boot_data_sniff():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:126
  *masked_identifier = 0;
d0009824:       |  |              |  |            0004a023              sw      zero,0(s1)
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:128
  const uint32_t offset = index * sizeof(boot_data_t) + kIsValidOffset;
d0009828:       |  |              |  |            006d9a93              slli    s5,s11,0x6
d000982c:       |  |              |  |            020ae593              ori     a1,s5,32
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:129
  HARDENED_RETURN_IF_ERROR(flash_ctrl_info_read(page, offset, 3, buf));
d0009830:       |  |              |  |            460d                  li      a2,3
d0009832:       |  |              |  |            0994                  addi    a3,sp,208
d0009834:       |  |              |  |            8552                  mv      a0,s4
d0009836:       |  |              |  |            790010ef              jal     ra,d000afc6 <flash_ctrl_info_read>
d000983a:       |  |              |  |            842a                  mv      s0,a0
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000983c:       |  |              |  |            85aa                  mv      a1,a0
boot_data_sniff():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:129
d000983e:       |  |              |  |     /----- 03a59363              bne     a1,s10,d0009864 <boot_data_active_page_find+0xf0>
d0009842:       |  |              |  |     |      73900513              li      a0,1849
d0009846:       |  |              |  |     |  /-- 00a40663              beq     s0,a0,d0009852 <boot_data_active_page_find+0xde>
d000984a:       |  |              |  |     |  |   0000                  unimp
d000984c:       |  |              |  |     |  |   0000                  unimp
d000984e:       |  |              |  |     |  |   0000                  unimp
d0009850:       |  |              |  |     |  |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:130
  *masked_identifier = buf[0] & buf[1] & buf[2];
d0009852:       |  |              |  |     |  \-> 454e                  lw      a0,208(sp)
d0009854:       |  |              |  |     |      45de                  lw      a1,212(sp)
d0009856:       |  |              |  |     |      466e                  lw      a2,216(sp)
d0009858:       |  |              |  |     |      8d6d                  and     a0,a0,a1
d000985a:       |  |              |  |     |      8d71                  and     a0,a0,a2
d000985c:       |  |              |  |     |      c088                  sw      a0,0(s1)
d000985e:       |  |              |  |     |      73900413              li      s0,1849
d0009862:       |  |              |  |     |  /-- a011                  j       d0009866 <boot_data_active_page_find+0xf2>
d0009864:       |  |              |  |     \--|-> 4501                  li      a0,0
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009866:       |  |              |  |        \-> 85a2                  mv      a1,s0
boot_data_page_info_update_impl():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:333
    HARDENED_RETURN_IF_ERROR(boot_data_sniff(page, i, &sniff_results[i]));
d0009868:       |  |  /-----------|--|----------- 23a59063              bne     a1,s10,d0009a88 <boot_data_active_page_find+0x314>
d000986c:       |  |  |           |  |        /-- 01a40663              beq     s0,s10,d0009878 <boot_data_active_page_find+0x104>
d0009870:       |  |  |           |  |        |   0000                  unimp
d0009872:       |  |  |           |  |        |   0000                  unimp
d0009874:       |  |  |           |  |        |   0000                  unimp
d0009876:       |  |  |           |  |        |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:335
    if (sniff_results[i] == kFlashCtrlErasedWord) {
d0009878:       |  |  |           |  |        \-> 55fd                  li      a1,-1
d000987a:       |  |  |           |  |  /-------- 08b51263              bne     a0,a1,d00098fe <boot_data_active_page_find+0x18a>
boot_data_entry_read():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:145
  return flash_ctrl_info_read(page, offset, kBootDataNumWords, boot_data);
d000987e:       |  |  |           |  |  |         4641                  li      a2,16
d0009880:       |  |  |           |  |  |         0814                  addi    a3,sp,16
d0009882:       |  |  |           |  |  |         8552                  mv      a0,s4
d0009884:       |  |  |           |  |  |         85d6                  mv      a1,s5
d0009886:       |  |  |           |  |  |         740010ef              jal     ra,d000afc6 <flash_ctrl_info_read>
d000988a:       |  |  |           |  |  |         842a                  mv      s0,a0
boot_data_page_info_update_impl():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:336
      HARDENED_RETURN_IF_ERROR(boot_data_entry_read(page, i, &buf));
d000988c:       |  |  +-----------|--|--|-------- 1fa51e63              bne     a0,s10,d0009a88 <boot_data_active_page_find+0x314>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009890:       |  |  |           |  |  |         4581                  li      a1,0
d0009892:       |  |  |           |  |  |         73900513              li      a0,1849
boot_data_page_info_update_impl():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:336
d0009896:       |  |  |           |  |  |     /-- 00a40663              beq     s0,a0,d00098a2 <boot_data_active_page_find+0x12e>
d000989a:       |  |  |           |  |  |     |   0000                  unimp
d000989c:       |  |  |           |  |  |     |   0000                  unimp
d000989e:       |  |  |           |  |  |     |   0000                  unimp
d00098a0:       |  |  |           |  |  |     |   0000                  unimp
boot_data_is_empty():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:83
  for (; launder32(i) < kBootDataNumWords; ++i) {
d00098a2:       |  |  |           |  |  |     \-> 463d                  li      a2,15
d00098a4:       |  |  |           |  |  |  /----- 00b66e63              bltu    a2,a1,d00098c0 <boot_data_active_page_find+0x14c>
d00098a8:       |  |  |           |  |  |  |      4601                  li      a2,0
d00098aa:       |  |  |           |  |  |  |      55fd                  li      a1,-1
d00098ac:       |  |  |           |  |  |  |      0814                  addi    a3,sp,16
read_32():
/proc/self/cwd/./sw/device/lib/base/memory.h:88
  // Failing to get that particular codegen in either GCC or Clang with -O2 or
  // -Os set shall be considered a bug in this function. The same applies to
  // `write32()`.
  ptr = __builtin_assume_aligned(ptr, alignof(uint32_t));
  uint32_t val;
  __builtin_memcpy(&val, ptr, sizeof(uint32_t));
d00098ae:       |  |  |           |  |  |  |  /-> 4298                  lw      a4,0(a3)
boot_data_is_empty():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:84
    res &= read_32(boot_data);
d00098b0:       |  |  |           |  |  |  |  |   8df9                  and     a1,a1,a4
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:83
  for (; launder32(i) < kBootDataNumWords; ++i) {
d00098b2:       |  |  |           |  |  |  |  |   0605                  addi    a2,a2,1
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:85
    is_empty &= read_32(boot_data);
d00098b4:       |  |  |           |  |  |  |  |   8d79                  and     a0,a0,a4
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d00098b6:       |  |  |           |  |  |  |  |   8732                  mv      a4,a2
boot_data_is_empty():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:86
    boot_data = (char *)boot_data + sizeof(uint32_t);
d00098b8:       |  |  |           |  |  |  |  |   0691                  addi    a3,a3,4
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:83
  for (; launder32(i) < kBootDataNumWords; ++i) {
d00098ba:       |  |  |           |  |  |  |  \-- ff976ae3              bltu    a4,s9,d00098ae <boot_data_active_page_find+0x13a>
d00098be:       |  |  |           |  |  |  |  /-- a019                  j       d00098c4 <boot_data_active_page_find+0x150>
d00098c0:       |  |  |           |  |  |  \--|-> 4601                  li      a2,0
d00098c2:       |  |  |           |  |  |     |   55fd                  li      a1,-1
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:88
  HARDENED_CHECK_EQ(i, kBootDataNumWords);
d00098c4:       |  |  |           |  |  |  /--\-X 01960663              beq     a2,s9,d00098d0 <boot_data_active_page_find+0x15c>
d00098c8:       |  |  |           |  |  |  |      0000                  unimp
d00098ca:       |  |  |           |  |  |  |      0000                  unimp
d00098cc:       |  |  |           |  |  |  |      0000                  unimp
d00098ce:       |  |  |           |  |  |  |      0000                  unimp
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d00098d0:       |  |  |           |  |  |  \----> 862e                  mv      a2,a1
d00098d2:       |  |  |           |  |  |         1d400993              li      s3,468
boot_data_is_empty():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:89
  if (launder32(res) == kFlashCtrlErasedWord) {
d00098d6:       |  |  |           |  |  |         56fd                  li      a3,-1
d00098d8:       |  |  |           |  |  |  /----- 00d61a63              bne     a2,a3,d00098ec <boot_data_active_page_find+0x178>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:90
    HARDENED_CHECK_EQ(res, kFlashCtrlErasedWord);
d00098dc:       |  |  |           |  |  |  |      567d                  li      a2,-1
d00098de:       |  |  |           |  |  |  |  /-- 00c58663              beq     a1,a2,d00098ea <boot_data_active_page_find+0x176>
d00098e2:       |  |  |           |  |  |  |  |   0000                  unimp
d00098e4:       |  |  |           |  |  |  |  |   0000                  unimp
d00098e6:       |  |  |           |  |  |  |  |   0000                  unimp
d00098e8:       |  |  |           |  |  |  |  |   0000                  unimp
d00098ea:       |  |  |           |  |  |  |  \-> 89aa                  mv      s3,a0
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d00098ec:       |  |  |           |  |  |  \----> 854e                  mv      a0,s3
boot_data_page_info_update_impl():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:338
      if (launder32(has_empty_entry) == kHardenedBoolTrue) {
d00098ee:       |  |  |           |  |  |     /-- 01a50d63              beq     a0,s10,d0009908 <boot_data_active_page_find+0x194>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:342
      HARDENED_CHECK_EQ(has_empty_entry, kHardenedBoolFalse);
d00098f2:       |  |  |           |  |  +-----|-- 01298663              beq     s3,s2,d00098fe <boot_data_active_page_find+0x18a>
d00098f6:       |  |  |           |  |  |     |   0000                  unimp
d00098f8:       |  |  |           |  |  |     |   0000                  unimp
d00098fa:       |  |  |           |  |  |     |   0000                  unimp
d00098fc:       |  |  |           |  |  |     |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:330
  for (; launder32(i) < kBootDataEntriesPerPage; ++i) {
d00098fe:       |  |  |           |  |  \-----|-> 0d85                  addi    s11,s11,1
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009900:       |  |  |           |  |        |   856e                  mv      a0,s11
boot_data_page_info_update_impl():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:330
d0009902:       |  |  |           |  \--------|-- f1856ce3              bltu    a0,s8,d000981a <boot_data_active_page_find+0xa6>
d0009906:       |  |  |           +-----------|-- a039                  j       d0009914 <boot_data_active_page_find+0x1a0>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:339
        HARDENED_CHECK_EQ(has_empty_entry, kHardenedBoolTrue);
d0009908:       |  |  |           +-----------\-X 01a98663              beq     s3,s10,d0009914 <boot_data_active_page_find+0x1a0>
d000990c:       |  |  |           |               0000                  unimp
d000990e:       |  |  |           |               0000                  unimp
d0009910:       |  |  |           |               0000                  unimp
d0009912:       |  |  |           |               0000                  unimp
d0009914:       |  |  |           \-------------> 895a                  mv      s2,s6
d0009916:       |  |  |                           02000513              li      a0,32
d000991a:       |  |  |                           fffd8c13              addi    s8,s11,-1
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:347
  HARDENED_CHECK_LE(i, kBootDataEntriesPerPage);
d000991e:       |  |  |                       /-- 01b57663              bgeu    a0,s11,d000992a <boot_data_active_page_find+0x1b6>
d0009922:       |  |  |                       |   0000                  unimp
d0009924:       |  |  |                       |   0000                  unimp
d0009926:       |  |  |                       |   0000                  unimp
d0009928:       |  |  |                       |   0000                  unimp
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000992a:       |  |  |                       \-> 8562                  mv      a0,s8
boot_data_page_info_update_impl():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:354
  for (; launder32(i) < first_empty_index && launder32(j) < first_empty_index;
d000992c:       |  |  |           /-------------- 07b57863              bgeu    a0,s11,d000999c <boot_data_active_page_find+0x228>
d0009930:       |  |  |           |               4b01                  li      s6,0
d0009932:       |  |  |           |               006d9513              slli    a0,s11,0x6
d0009936:       |  |  |           |               fc050493              addi    s1,a0,-64
d000993a:       |  |  |           |               002d9513              slli    a0,s11,0x2
d000993e:       |  |  |           |               00ec                  addi    a1,sp,76
d0009940:       |  |  |           |               00a58ab3              add     s5,a1,a0
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009944:       |  |  |           |     /-------> 855a                  mv      a0,s6
boot_data_page_info_update_impl():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:354
d0009946:       |  |  |           |  /--|-------- 05b57c63              bgeu    a0,s11,d000999e <boot_data_active_page_find+0x22a>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:357
    if (sniff_results[i] == kBootDataIdentifier) {
d000994a:       |  |  |           |  |  |         000aa503              lw      a0,0(s5)
d000994e:       |  |  |           |  |  |         45b2                  lw      a1,12(sp)
d0009950:       |  |  |           |  |  |  /----- 02b51d63              bne     a0,a1,d000998a <boot_data_active_page_find+0x216>
boot_data_entry_read():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:145
  return flash_ctrl_info_read(page, offset, kBootDataNumWords, boot_data);
d0009954:       |  |  |           |  |  |  |      4641                  li      a2,16
d0009956:       |  |  |           |  |  |  |      0814                  addi    a3,sp,16
d0009958:       |  |  |           |  |  |  |      8552                  mv      a0,s4
d000995a:       |  |  |           |  |  |  |      85a6                  mv      a1,s1
d000995c:       |  |  |           |  |  |  |      66a010ef              jal     ra,d000afc6 <flash_ctrl_info_read>
d0009960:       |  |  |           |  |  |  |      842a                  mv      s0,a0
boot_data_page_info_update_impl():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:358
      HARDENED_RETURN_IF_ERROR(boot_data_entry_read(page, i, &buf));
d0009962:       |  |  |        /--|--|--|--|----- 0ba51263              bne     a0,s10,d0009a06 <boot_data_active_page_find+0x292>
d0009966:       |  |  |        |  |  |  |  |  /-- 01a40663              beq     s0,s10,d0009972 <boot_data_active_page_find+0x1fe>
d000996a:       |  |  |        |  |  |  |  |  |   0000                  unimp
d000996c:       |  |  |        |  |  |  |  |  |   0000                  unimp
d000996e:       |  |  |        |  |  |  |  |  |   0000                  unimp
d0009970:       |  |  |        |  |  |  |  |  |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:359
      rom_error_t is_valid = boot_data_check(&buf);
d0009972:       |  |  |        |  |  |  |  |  \-> 0808                  addi    a0,sp,16
d0009974:       |  |  |        |  |  |  |  |      2a69                  jal     d0009b0e <boot_data_check>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009976:       |  |  |        |  |  |  |  |      85aa                  mv      a1,a0
boot_data_page_info_update_impl():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:360
      if (launder32(is_valid) == kErrorOk) {
d0009978:       |  |  |  /-----|--|--|--|--|----- 15a58663              beq     a1,s10,d0009ac4 <boot_data_active_page_find+0x350>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:367
      HARDENED_CHECK_EQ(is_valid, kErrorBootDataInvalid);
d000997c:       |  |  |  |     |  |  |  |  |      45a2                  lw      a1,8(sp)
d000997e:       |  |  |  |     |  |  |  |  +----- 00b50663              beq     a0,a1,d000998a <boot_data_active_page_find+0x216>
d0009982:       |  |  |  |     |  |  |  |  |      0000                  unimp
d0009984:       |  |  |  |     |  |  |  |  |      0000                  unimp
d0009986:       |  |  |  |     |  |  |  |  |      0000                  unimp
d0009988:       |  |  |  |     |  |  |  |  |      0000                  unimp
d000998a:       |  |  |  |     |  |  |  |  \----> 1c7d                  addi    s8,s8,-1
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:355
       --i, ++j) {
d000998c:       |  |  |  |     |  |  |  |         0b05                  addi    s6,s6,1
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000998e:       |  |  |  |     |  |  |  |         8562                  mv      a0,s8
boot_data_page_info_update_impl():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:354
  for (; launder32(i) < first_empty_index && launder32(j) < first_empty_index;
d0009990:       |  |  |  |     |  |  |  |         fc048493              addi    s1,s1,-64
d0009994:       |  |  |  |     |  |  |  |         1af1                  addi    s5,s5,-4
d0009996:       |  |  |  |     |  |  |  \-------- fbb567e3              bltu    a0,s11,d0009944 <boot_data_active_page_find+0x1d0>
d000999a:       |  |  |  |     |  |  +----------- a011                  j       d000999e <boot_data_active_page_find+0x22a>
d000999c:       |  |  |  |     |  \--|----------> 4b01                  li      s6,0
d000999e:       |  |  |  |     |     \----------> 1d400593              li      a1,468
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:373
  HARDENED_CHECK_LE(j, first_empty_index);
d00099a2:       |  |  |  |  /--|--------------/-X 016df663              bgeu    s11,s6,d00099ae <boot_data_active_page_find+0x23a>
d00099a6:       |  |  |  |  |  |              |   0000                  unimp
d00099a8:       |  |  |  |  |  |              |   0000                  unimp
d00099aa:       |  |  |  |  |  |              |   0000                  unimp
d00099ac:       |  |  |  |  |  |              |   0000                  unimp
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d00099ae:       |  |  |  |  |  |              \-> 852e                  mv      a0,a1
d00099b0:       |  |  |  |  |  |                  73900413              li      s0,1849
boot_data_page_info_update_impl():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:375
  if (launder32(has_valid_entry) == kHardenedBoolTrue) {
d00099b4:       |  |  |  |  |  +----------------- 04851963              bne     a0,s0,d0009a06 <boot_data_active_page_find+0x292>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:376
    HARDENED_CHECK_EQ(has_valid_entry, kHardenedBoolTrue);
d00099b8:       |  |  |  |  |  |              /-- 01a58663              beq     a1,s10,d00099c4 <boot_data_active_page_find+0x250>
d00099bc:       |  |  |  |  |  |              |   0000                  unimp
d00099be:       |  |  |  |  |  |              |   0000                  unimp
d00099c0:       |  |  |  |  |  |              |   0000                  unimp
d00099c2:       |  |  |  |  |  |              |   0000                  unimp
d00099c4:       |  |  |  |  |  |              \-> 8b4a                  mv      s6,s2
d00099c6:       |  |  |  |  |  |                  86ae                  mv      a3,a1
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:377
    if (launder32(page_info->has_valid_entry) == kHardenedBoolFalse) {
d00099c8:       |  |  |  |  |  |                  00c92583              lw      a1,12(s2)
d00099cc:       |  |  |  |  |  |                  00c92503              lw      a0,12(s2)
d00099d0:       |  |  |  |  |  |                  1d400913              li      s2,468
d00099d4:       |  |  |  |  |  |           /----- 03259d63              bne     a1,s2,d0009a0e <boot_data_active_page_find+0x29a>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:379
      HARDENED_CHECK_EQ(page_info->has_valid_entry, kHardenedBoolFalse);
d00099d8:       |  |  |  |  |  |           |  /-- 01250663              beq     a0,s2,d00099e4 <boot_data_active_page_find+0x270>
d00099dc:       |  |  |  |  |  |           |  |   0000                  unimp
d00099de:       |  |  |  |  |  |           |  |   0000                  unimp
d00099e0:       |  |  |  |  |  |           |  |   0000                  unimp
d00099e2:       |  |  |  |  |  |           |  |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:380
      *page_info = (active_page_info_t){
d00099e4:       |  |  |  |  |  |           |  \-> 014b2023              sw      s4,0(s6)
d00099e8:       |  |  |  |  |  |           |      013b2223              sw      s3,4(s6)
d00099ec:       |  |  |  |  |  |           |      01bb2423              sw      s11,8(s6)
d00099f0:       |  |  |  |  |  |           |      00db2623              sw      a3,12(s6)
d00099f4:       |  |  |  |  |  |           |      018b2823              sw      s8,16(s6)
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:387
      *boot_data = buf;
d00099f8:       |  |  |  |  |  |           |      080c                  addi    a1,sp,16
d00099fa:       |  |  |  |  |  |           |      04000613              li      a2,64
d00099fe:       |  |  |  |  |  |           |      4502                  lw      a0,0(sp)
d0009a00:       |  |  |  |  |  |     /-----|----> 59e040ef              jal     ra,d000df9e <memcpy>
d0009a04:       |  |  |  |  |  |  /--|-----|----- a041                  j       d0009a84 <boot_data_active_page_find+0x310>
d0009a06:       |  |  |  |  |  \--|--|-----|----> 8b4a                  mv      s6,s2
d0009a08:       |  |  |  |  |     |  |     |      1d400913              li      s2,468
d0009a0c:       |  |  |  |  |     +--|-----|----- a8a5                  j       d0009a84 <boot_data_active_page_find+0x310>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:388
    } else if (launder32(page_info->has_valid_entry) == kHardenedBoolTrue &&
d0009a0e:       |  |  |  |  |     |  |  /--\----X 05a51863              bne     a0,s10,d0009a5e <boot_data_active_page_find+0x2ea>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:389
               launder32(buf.counter) > boot_data->counter) {
d0009a12:       |  |  |  |  |     |  |  |         5572                  lw      a0,60(sp)
d0009a14:       |  |  |  |  |     |  |  |         4582                  lw      a1,0(sp)
d0009a16:       |  |  |  |  |     |  |  |         55cc                  lw      a1,44(a1)
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:388
    } else if (launder32(page_info->has_valid_entry) == kHardenedBoolTrue &&
d0009a18:       |  |  |  |  |     |  |  +-------- 04a5f363              bgeu    a1,a0,d0009a5e <boot_data_active_page_find+0x2ea>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:391
      HARDENED_CHECK_EQ(page_info->has_valid_entry, kHardenedBoolTrue);
d0009a1c:       |  |  |  |  |     |  |  |         00cb2503              lw      a0,12(s6)
d0009a20:       |  |  |  |  |     |  |  |         73900413              li      s0,1849
d0009a24:       |  |  |  |  |     |  |  |     /-- 00850663              beq     a0,s0,d0009a30 <boot_data_active_page_find+0x2bc>
d0009a28:       |  |  |  |  |     |  |  |     |   0000                  unimp
d0009a2a:       |  |  |  |  |     |  |  |     |   0000                  unimp
d0009a2c:       |  |  |  |  |     |  |  |     |   0000                  unimp
d0009a2e:       |  |  |  |  |     |  |  |     |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:392
      HARDENED_CHECK_GT(buf.counter, boot_data->counter);
d0009a30:       |  |  |  |  |     |  |  |     \-> 5672                  lw      a2,60(sp)
d0009a32:       |  |  |  |  |     |  |  |         4502                  lw      a0,0(sp)
d0009a34:       |  |  |  |  |     |  |  |         554c                  lw      a1,44(a0)
d0009a36:       |  |  |  |  |     |  |  |     /-- 00c5e663              bltu    a1,a2,d0009a42 <boot_data_active_page_find+0x2ce>
d0009a3a:       |  |  |  |  |     |  |  |     |   0000                  unimp
d0009a3c:       |  |  |  |  |     |  |  |     |   0000                  unimp
d0009a3e:       |  |  |  |  |     |  |  |     |   0000                  unimp
d0009a40:       |  |  |  |  |     |  |  |     |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:393
      *page_info = (active_page_info_t){
d0009a42:       |  |  |  |  |     |  |  |     \-> 014b2023              sw      s4,0(s6)
d0009a46:       |  |  |  |  |     |  |  |         013b2223              sw      s3,4(s6)
d0009a4a:       |  |  |  |  |     |  |  |         01bb2423              sw      s11,8(s6)
d0009a4e:       |  |  |  |  |     |  |  |         00db2623              sw      a3,12(s6)
d0009a52:       |  |  |  |  |     |  |  |         018b2823              sw      s8,16(s6)
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:400
      *boot_data = buf;
d0009a56:       |  |  |  |  |     |  |  |         080c                  addi    a1,sp,16
d0009a58:       |  |  |  |  |     |  |  |         04000613              li      a2,64
d0009a5c:       |  |  |  |  |     |  \--|-------- b755                  j       d0009a00 <boot_data_active_page_find+0x28c>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:402
      HARDENED_CHECK_EQ(page_info->has_valid_entry, kHardenedBoolTrue);
d0009a5e:       |  |  |  |  |     |     \-------> 00cb2503              lw      a0,12(s6)
d0009a62:       |  |  |  |  |     |               73900413              li      s0,1849
d0009a66:       |  |  |  |  |     |           /-- 00850663              beq     a0,s0,d0009a72 <boot_data_active_page_find+0x2fe>
d0009a6a:       |  |  |  |  |     |           |   0000                  unimp
d0009a6c:       |  |  |  |  |     |           |   0000                  unimp
d0009a6e:       |  |  |  |  |     |           |   0000                  unimp
d0009a70:       |  |  |  |  |     |           |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:405
      HARDENED_CHECK_LT(buf.counter, boot_data->counter);
d0009a72:       |  |  |  |  |     |           \-> 5572                  lw      a0,60(sp)
d0009a74:       |  |  |  |  |     |               4582                  lw      a1,0(sp)
d0009a76:       |  |  |  |  |     |               55cc                  lw      a1,44(a1)
d0009a78:       |  |  |  |  |     +-------------- 00b56663              bltu    a0,a1,d0009a84 <boot_data_active_page_find+0x310>
d0009a7c:       |  |  |  |  |     |               0000                  unimp
d0009a7e:       |  |  |  |  |     |               0000                  unimp
d0009a80:       |  |  |  |  |     |               0000                  unimp
d0009a82:       |  |  |  |  |     |               0000                  unimp
d0009a84:       |  |  |  |  |     \-------------> 02000c13              li      s8,32
d0009a88:       |  |  \--|--|-------------------> 44a5                  li      s1,9
boot_data_page_info_update():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:436
  flash_ctrl_info_perms_set(page, (flash_ctrl_perms_t){
d0009a8a:       |  |     |  |                     c8a6                  sw      s1,80(sp)
d0009a8c:       |  |     |  |                     caa6                  sw      s1,84(sp)
d0009a8e:       |  |     |  |                     cca6                  sw      s1,88(sp)
d0009a90:       |  |     |  |                     088c                  addi    a1,sp,80
d0009a92:       |  |     |  |                     8552                  mv      a0,s4
d0009a94:       |  |     |  |                     24b010ef              jal     ra,d000b4de <flash_ctrl_info_perms_set>
d0009a98:       |  |     |  |                     0fff6517              auipc   a0,0xfff6
d0009a9c:       |  |     |  |                     5dc50513              addi    a0,a0,1500 # e0000074 <sec_mmio_ctx>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:441
  SEC_MMIO_WRITE_INCREMENT(2 * kFlashCtrlSecMmioInfoPermsSet);
d0009aa0:       |  |     |  |                     450c                  lw      a1,8(a0)
d0009aa2:       |  |     |  |                     0589                  addi    a1,a1,2
d0009aa4:       |  |     |  |                     c50c                  sw      a1,8(a0)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009aa6:       |  |     |  |                     8522                  mv      a0,s0
boot_data_active_page_find():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:468
    HARDENED_RETURN_IF_ERROR(
d0009aa8:       |  |     |  |              /----- 03a51f63              bne     a0,s10,d0009ae6 <boot_data_active_page_find+0x372>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:467
  for (; launder32(i) < ARRAYSIZE(kPages); ++i) {
d0009aac:       |  |     |  |              |      0b85                  addi    s7,s7,1
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:468
    HARDENED_RETURN_IF_ERROR(
d0009aae:       |  |     |  |              |  /-- 01a40663              beq     s0,s10,d0009aba <boot_data_active_page_find+0x346>
d0009ab2:       |  |     |  |              |  |   0000                  unimp
d0009ab4:       |  |     |  |              |  |   0000                  unimp
d0009ab6:       |  |     |  |              |  |   0000                  unimp
d0009ab8:       |  |     |  |              |  |   0000                  unimp
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009aba:       |  |     |  |              |  \-> 855e                  mv      a0,s7
boot_data_active_page_find():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:467
  for (; launder32(i) < ARRAYSIZE(kPages); ++i) {
d0009abc:       |  |     |  |              |      4589                  li      a1,2
d0009abe:       |  \-----|--|--------------|----- d2b566e3              bltu    a0,a1,d00097ea <boot_data_active_page_find+0x76>
d0009ac2:       +--------|--|--------------|----- a809                  j       d0009ad4 <boot_data_active_page_find+0x360>
boot_data_page_info_update_impl():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:361
        HARDENED_CHECK_EQ(is_valid, kErrorOk);
d0009ac4:       |        \--|--------------|--/-X 01a50663              beq     a0,s10,d0009ad0 <boot_data_active_page_find+0x35c>
d0009ac8:       |           |              |  |   0000                  unimp
d0009aca:       |           |              |  |   0000                  unimp
d0009acc:       |           |              |  |   0000                  unimp
d0009ace:       |           |              |  |   0000                  unimp
d0009ad0:       |           |              |  \-> 85aa                  mv      a1,a0
d0009ad2:       |           \--------------|----- bdc1                  j       d00099a2 <boot_data_active_page_find+0x22e>
d0009ad4:       \--------------------------|----> 4509                  li      a0,2
boot_data_active_page_find():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:471
  HARDENED_CHECK_EQ(i, ARRAYSIZE(kPages));
d0009ad6:                                  |  /-- 00ab8663              beq     s7,a0,d0009ae2 <boot_data_active_page_find+0x36e>
d0009ada:                                  |  |   0000                  unimp
d0009adc:                                  |  |   0000                  unimp
d0009ade:                                  |  |   0000                  unimp
d0009ae0:                                  |  |   0000                  unimp
d0009ae2:                                  |  \-> 73900413              li      s0,1849
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:474
}
d0009ae6:                                  \----> 8522                  mv      a0,s0
d0009ae8:                                         4dfe                  lw      s11,220(sp)
d0009aea:                                         5d0e                  lw      s10,224(sp)
d0009aec:                                         5c9e                  lw      s9,228(sp)
d0009aee:                                         5c2e                  lw      s8,232(sp)
d0009af0:                                         5bbe                  lw      s7,236(sp)
d0009af2:                                         5b4e                  lw      s6,240(sp)
d0009af4:                                         5ade                  lw      s5,244(sp)
d0009af6:                                         5a6e                  lw      s4,248(sp)
d0009af8:                                         59fe                  lw      s3,252(sp)
d0009afa:                                         10012903              lw      s2,256(sp)
d0009afe:                                         10412483              lw      s1,260(sp)
d0009b02:                                         10812403              lw      s0,264(sp)
d0009b06:                                         10c12083              lw      ra,268(sp)
d0009b0a:                                         6151                  addi    sp,sp,272
d0009b0c:                                         8082                  ret

d0009b0e <boot_data_check>:
boot_data_check():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:627
 * Checks whether the digest of a boot data entry is valid.
 *
 * @param boot_data A buffer that holds a boot data entry.
 * @return Whether the digest of the entry is valid.
 */
rom_error_t boot_data_check(const boot_data_t *boot_data) {
d0009b0e:              7179                     addi    sp,sp,-48
d0009b10:              d606                     sw      ra,44(sp)
d0009b12:              d422                     sw      s0,40(sp)
d0009b14:              d226                     sw      s1,36(sp)
d0009b16:              d04a                     sw      s2,32(sp)
d0009b18:              892a                     mv      s2,a0
boot_data_digest_compute():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:65
  hmac_sha256_init();
d0009b1a:              749030ef                 jal     ra,d000da62 <hmac_sha256_init>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:66
  hmac_sha256_update((const char *)boot_data + kDigestRegionOffset,
d0009b1e:              02090513                 addi    a0,s2,32
d0009b22:              02000593                 li      a1,32
d0009b26:              757030ef                 jal     ra,d000da7c <hmac_sha256_update>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:68
  hmac_sha256_final(digest);
d0009b2a:              850a                     mv      a0,sp
d0009b2c:              848a                     mv      s1,sp
d0009b2e:              7bd030ef                 jal     ra,d000daea <hmac_sha256_final>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009b32:              4681                     li      a3,0
d0009b34:              03424737                 lui     a4,0x3424
d0009b38:              40d70513                 addi    a0,a4,1037 # 342440d <WDOG_BARK_THOLD+0x33ed525>
d0009b3c:              479d                     li      a5,7
d0009b3e:              4581                     li      a1,0
d0009b40:              862a                     mv      a2,a0
boot_data_check():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:636
  rom_error_t error = kErrorBootDataInvalid;
  hmac_digest_t act_digest;
  boot_data_digest_compute(boot_data, &act_digest);

  size_t i = 0;
  for (; launder32(i) < kHmacDigestNumWords; ++i) {
d0009b42:       /----- 02d7ea63                 bltu    a5,a3,d0009b76 <boot_data_check+0x68>
d0009b46:       |      4581                     li      a1,0
d0009b48:       |      00005697                 auipc   a3,0x5
d0009b4c:       |      c0468693                 addi    a3,a3,-1020 # d000e74c <kCheckShares>
d0009b50:       |      40d70613                 addi    a2,a4,1037
d0009b54:       |      4821                     li      a6,8
d0009b56:       |      87ca                     mv      a5,s2
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:638
    error ^=
        boot_data->digest.digest[i] ^ act_digest.digest[i] ^ kCheckShares[i];
d0009b58:       |  /-> 4380                     lw      s0,0(a5)
d0009b5a:       |  |   4098                     lw      a4,0(s1)
d0009b5c:       |  |   0006a883                 lw      a7,0(a3)
d0009b60:       |  |   8e21                     xor     a2,a2,s0
d0009b62:       |  |   8e39                     xor     a2,a2,a4
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:636
  for (; launder32(i) < kHmacDigestNumWords; ++i) {
d0009b64:       |  |   0585                     addi    a1,a1,1
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:637
    error ^=
d0009b66:       |  |   01164633                 xor     a2,a2,a7
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009b6a:       |  |   872e                     mv      a4,a1
boot_data_check():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:636
  for (; launder32(i) < kHmacDigestNumWords; ++i) {
d0009b6c:       |  |   0691                     addi    a3,a3,4
d0009b6e:       |  |   0791                     addi    a5,a5,4
d0009b70:       |  |   0491                     addi    s1,s1,4
d0009b72:       |  \-- ff0763e3                 bltu    a4,a6,d0009b58 <boot_data_check+0x4a>
d0009b76:       \----> 46a1                     li      a3,8
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:640
  }
  HARDENED_CHECK_EQ(i, kHmacDigestNumWords);
d0009b78:          /-- 00d58663                 beq     a1,a3,d0009b84 <boot_data_check+0x76>
d0009b7c:          |   0000                     unimp
d0009b7e:          |   0000                     unimp
d0009b80:          |   0000                     unimp
d0009b82:          |   0000                     unimp
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:641
  error ^= boot_data->identifier ^ kCheckShares[kHmacDigestNumWords];
d0009b84:          \-> 02892583                 lw      a1,40(s2)
d0009b88:              8db1                     xor     a1,a1,a2
d0009b8a:              381df637                 lui     a2,0x381df
d0009b8e:              e3a60613                 addi    a2,a2,-454 # 381dee3a <_epmp_stack_guard_na4+0x1d7e3a>
d0009b92:              8db1                     xor     a1,a1,a2
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009b94:              86ae                     mv      a3,a1
d0009b96:              73900613                 li      a2,1849
boot_data_check():
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:642
  if (launder32(error) == kErrorOk) {
d0009b9a:       /----- 00c69963                 bne     a3,a2,d0009bac <boot_data_check+0x9e>
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:643
    HARDENED_CHECK_EQ(error, kErrorOk);
d0009b9e:       |  /-- 00c58663                 beq     a1,a2,d0009baa <boot_data_check+0x9c>
d0009ba2:       |  |   0000                     unimp
d0009ba4:       |  |   0000                     unimp
d0009ba6:       |  |   0000                     unimp
d0009ba8:       |  |   0000                     unimp
d0009baa:       |  \-> 852e                     mv      a0,a1
/proc/self/cwd/sw/device/silicon_creator/lib/boot_data.c:648
    return error;
  }

  return kErrorBootDataInvalid;
}
d0009bac:       \----> 5902                     lw      s2,32(sp)
d0009bae:              5492                     lw      s1,36(sp)
d0009bb0:              5422                     lw      s0,40(sp)
d0009bb2:              50b2                     lw      ra,44(sp)
d0009bb4:              6145                     addi    sp,sp,48
d0009bb6:              8082                     ret

d0009bb8 <bootstrap_requested>:
bootstrap_requested():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:335

  spi_device_flash_status_clear();
  return error;
}

hardened_bool_t bootstrap_requested(void) {
d0009bb8:              1141                     addi    sp,sp,-16
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:337
  uint32_t res =
      otp_read32(OTP_CTRL_PARAM_OWNER_SW_CFG_ROM_BOOTSTRAP_EN_OFFSET);
d0009bba:              c606                     sw      ra,12(sp)
d0009bbc:              36400513                 li      a0,868
d0009bc0:              172040ef                 jal     ra,d000dd32 <otp_read32>
d0009bc4:              85aa                     mv      a1,a0
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009bc6:              86aa                     mv      a3,a0
d0009bc8:              73900613                 li      a2,1849
d0009bcc:              1d400513                 li      a0,468
bootstrap_requested():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:338
  if (launder32(res) != kHardenedBoolTrue) {
d0009bd0:       /----- 02c69c63                 bne     a3,a2,d0009c08 <bootstrap_requested+0x50>
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:341
    return kHardenedBoolFalse;
  }
  HARDENED_CHECK_EQ(res, kHardenedBoolTrue);
d0009bd4:       |  /-- 00c58663                 beq     a1,a2,d0009be0 <bootstrap_requested+0x28>
d0009bd8:       |  |   0000                     unimp
d0009bda:       |  |   0000                     unimp
d0009bdc:       |  |   0000                     unimp
d0009bde:       |  |   0000                     unimp
d0009be0:       |  \-> c00406b7                 lui     a3,0xc0040
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
 * @param addr the address to read from.
 * @return the read value.
 */
OT_WARN_UNUSED_RESULT
inline uint32_t abs_mmio_read32(uint32_t addr) {
  return *((volatile uint32_t *)addr);
d0009be4:       |      4a94                     lw      a3,16(a3)
d0009be6:       |      01c00737                 lui     a4,0x1c00
bootstrap_requested():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:347

  // A single read is sufficient since we expect strong pull-ups on the strap
  // pins.
  res ^= SW_STRAP_BOOTSTRAP;
  res ^=
      abs_mmio_read32(TOP_EARLGREY_GPIO_BASE_ADDR + GPIO_DATA_IN_REG_OFFSET) &
d0009bea:       |      8ef9                     and     a3,a3,a4
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:346
  res ^=
d0009bec:       |      8db5                     xor     a1,a1,a3
d0009bee:       |      8db9                     xor     a1,a1,a4
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009bf0:       |      86ae                     mv      a3,a1
bootstrap_requested():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:349
      SW_STRAP_MASK;
  if (launder32(res) != kHardenedBoolTrue) {
d0009bf2:       +----- 00c69b63                 bne     a3,a2,d0009c08 <bootstrap_requested+0x50>
d0009bf6:       |      73900513                 li      a0,1849
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:352
    return kHardenedBoolFalse;
  }
  HARDENED_CHECK_EQ(res, kHardenedBoolTrue);
d0009bfa:       |  /-- 00a58663                 beq     a1,a0,d0009c06 <bootstrap_requested+0x4e>
d0009bfe:       |  |   0000                     unimp
d0009c00:       |  |   0000                     unimp
d0009c02:       |  |   0000                     unimp
d0009c04:       |  |   0000                     unimp
d0009c06:       |  \-> 852e                     mv      a0,a1
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:354
  return res;
}
d0009c08:       \----> 40b2                     lw      ra,12(sp)
d0009c0a:              0141                     addi    sp,sp,16
d0009c0c:              8082                     ret

d0009c0e <bootstrap>:
bootstrap():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:356

rom_error_t bootstrap(void) {
d0009c0e:                                                  7149                 addi    sp,sp,-368
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:357
  hardened_bool_t requested = bootstrap_requested();
d0009c10:                                                  16112623             sw      ra,364(sp)
d0009c14:                                                  16812423             sw      s0,360(sp)
d0009c18:                                                  16912223             sw      s1,356(sp)
d0009c1c:                                                  17212023             sw      s2,352(sp)
d0009c20:                                                  15312e23             sw      s3,348(sp)
d0009c24:                                                  15412c23             sw      s4,344(sp)
d0009c28:                                                  15512a23             sw      s5,340(sp)
d0009c2c:                                                  15612823             sw      s6,336(sp)
d0009c30:                                                  15712623             sw      s7,332(sp)
d0009c34:                                                  15812423             sw      s8,328(sp)
d0009c38:                                                  15912223             sw      s9,324(sp)
d0009c3c:                                                  15a12023             sw      s10,320(sp)
d0009c40:                                                  13b12e23             sw      s11,316(sp)
d0009c44:                                                  3f95                 jal     d0009bb8 <bootstrap_requested>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009c46:                                                  85aa                 mv      a1,a0
d0009c48:                                                  73900493             li      s1,1849
bootstrap():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:358
  if (launder32(requested) != kHardenedBoolTrue) {
d0009c4c:       /----------------------------------------- 30959763             bne     a1,s1,d0009f5a <bootstrap+0x34c>
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:361
    return kErrorBootstrapNotRequested;
  }
  HARDENED_CHECK_EQ(requested, kHardenedBoolTrue);
d0009c50:       |                                      /-- 00950663             beq     a0,s1,d0009c5c <bootstrap+0x4e>
d0009c54:       |                                      |   0000                 unimp
d0009c56:       |                                      |   0000                 unimp
d0009c58:       |                                      |   0000                 unimp
d0009c5a:       |                                      |   0000                 unimp
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:363

  spi_device_init();
d0009c5c:       |                                      \-> 2645                 jal     d0009ffc <spi_device_init>
d0009c5e:       |                                          d4576cb7             lui     s9,0xd4576
d0009c62:       |                                          543c8d93             addi    s11,s9,1347 # d4576543 <_stack_end+0xf4556543>
d0009c66:       |                                          03425537             lui     a0,0x3425
d0009c6a:       |                                          30350d13             addi    s10,a0,771 # 3425303 <WDOG_BARK_THOLD+0x33ee41b>
d0009c6e:       |                                          bdd8d537             lui     a0,0xbdd8d
d0009c72:       |                                          a6050993             addi    s3,a0,-1440 # bdd8ca60 <_stack_end+0xddd6ca60>
d0009c76:       |                                          09900a93             li      s5,153
d0009c7a:       |                                          7541                 lui     a0,0xffff0
d0009c7c:       |                                          051d                 addi    a0,a0,7
d0009c7e:       |                                          ce2a                 sw      a0,28(sp)
d0009c80:       |                                          02425537             lui     a0,0x2425
d0009c84:       |                                          30350513             addi    a0,a0,771 # 2425303 <WDOG_BARK_THOLD+0x23ee41b>
d0009c88:       |                                          cc2a                 sw      a0,24(sp)
d0009c8a:       |                                          4919                 li      s2,6
d0009c8c:       |                                          01425537             lui     a0,0x1425
d0009c90:       |                                          30350513             addi    a0,a0,771 # 1425303 <WDOG_BARK_THOLD+0x13ee41b>
d0009c94:       |                                          ca2a                 sw      a0,20(sp)
d0009c96:       |                                          af0eb537             lui     a0,0xaf0eb
d0009c9a:       |                                          b8b50513             addi    a0,a0,-1141 # af0eab8b <_stack_end+0xcf0cab8b>
d0009c9e:       |                                          c82a                 sw      a0,16(sp)
d0009ca0:       |                                          6505                 lui     a0,0x1
d0009ca2:       |                                          80050513             addi    a0,a0,-2048 # 800 <_epmp_reset_rx_size>
d0009ca6:       |                                          c62a                 sw      a0,12(sp)
d0009ca8:       |                                          0c700b93             li      s7,199
d0009cac:       |                                          f3c72537             lui     a0,0xf3c72
d0009cb0:       |                                          bac50b13             addi    s6,a0,-1108 # f3c71bac <_stack_end+0x13c51bac>
d0009cb4:       |                                          8032a537             lui     a0,0x8032a
d0009cb8:       |                                          be950c13             addi    s8,a0,-1047 # 80329be9 <_stack_end+0xa0309be9>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009cbc:       |  /-------------------------------------> 856e                 mv      a0,s11
bootstrap():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:369

  // Bootstrap event loop.
  bootstrap_state_t state = kBootstrapStateErase;
  rom_error_t error = kErrorUnknown;
  while (true) {
    switch (launder32(state)) {
d0009cbe:       |  |                             /-------- 07350163             beq     a0,s3,d0009d20 <bootstrap+0x112>
d0009cc2:       |  |                    /--------|-------- 11650f63             beq     a0,s6,d0009de0 <bootstrap+0x1d2>
d0009cc6:       |  |                    |        |         543c8593             addi    a1,s9,1347
d0009cca:       |  |              /-----|--------|-------- 16b51963             bne     a0,a1,d0009e3c <bootstrap+0x22e>
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:371
      case kBootstrapStateErase:
        HARDENED_CHECK_EQ(state, kBootstrapStateErase);
d0009cce:       |  |              |     |        |     /-- 00bd8663             beq     s11,a1,d0009cda <bootstrap+0xcc>
d0009cd2:       |  |              |     |        |     |   0000                 unimp
d0009cd4:       |  |              |     |        |     |   0000                 unimp
d0009cd6:       |  |              |     |        |     |   0000                 unimp
d0009cd8:       |  |              |     |        |     |   0000                 unimp
bootstrap_handle_erase():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:225
  HARDENED_CHECK_EQ(*state, kBootstrapStateErase);
d0009cda:       |  |              |     |        |  /--\-X 00bd8663             beq     s11,a1,d0009ce6 <bootstrap+0xd8>
d0009cde:       |  |              |     |        |  |      0000                 unimp
d0009ce0:       |  |              |     |        |  |      0000                 unimp
d0009ce2:       |  |              |     |        |  |      0000                 unimp
d0009ce4:       |  |              |     |        |  |      0000                 unimp
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:228
  RETURN_IF_ERROR(spi_device_cmd_get(&cmd));
d0009ce6:       |  |              |     |        |  \----> 1008                 addi    a0,sp,32
d0009ce8:       |  |              |     |        |         2139                 jal     d000a0f6 <spi_device_cmd_get>
d0009cea:       |  |              |  /--|--------|-------- 14951b63             bne     a0,s1,d0009e40 <bootstrap+0x232>
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:230
  if (!bitfield_bit32_read(spi_device_flash_status_get(), kSpiDeviceWelBit)) {
d0009cee:       |  |              |  |  |        |         2959                 jal     d000a184 <spi_device_flash_status_get>
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
                               bitfield_bit32_to_field32(bit_index)) == 0x1u;
d0009cf0:       |  |              |  |  |        |         8909                 andi    a0,a0,2
d0009cf2:       |  |              |  |  |        |         73900413             li      s0,1849
bootstrap_handle_erase():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:230
d0009cf6:       |  |     /--------|--|--|--------|-------- 24050263             beqz    a0,d0009f3a <bootstrap+0x32c>
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:235
  switch (cmd.opcode) {
d0009cfa:       |  |     |        |  |  |        |         5502                 lw      a0,32(sp)
d0009cfc:       |  |     |        |  |  |        |     /-- 01750663             beq     a0,s7,d0009d08 <bootstrap+0xfa>
d0009d00:       |  |     |        |  |  |        |     |   02000593             li      a1,32
d0009d04:       |  |     |  /-----|--|--|--------|-----|-- 22b51a63             bne     a0,a1,d0009f38 <bootstrap+0x32a>
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:238
      error = bootstrap_chip_erase();
d0009d08:       |  |     |  |     |  |  |        |     \-> 2c61                 jal     d0009fa0 <bootstrap_chip_erase>
d0009d0a:       |  |     |  |     |  |  |        |         842a                 mv      s0,a0
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:239
      HARDENED_RETURN_IF_ERROR(error);
d0009d0c:       |  |     +--|-----|--|--|--------|-------- 22951763             bne     a0,s1,d0009f3a <bootstrap+0x32c>
d0009d10:       |  |     |  |     |  |  |        |     /-- 00940663             beq     s0,s1,d0009d1c <bootstrap+0x10e>
d0009d14:       |  |     |  |     |  |  |        |     |   0000                 unimp
d0009d16:       |  |     |  |     |  |  |        |     |   0000                 unimp
d0009d18:       |  |     |  |     |  |  |        |     |   0000                 unimp
d0009d1a:       |  |     |  |     |  |  |        |     |   0000                 unimp
d0009d1c:       |  |     |  |     |  |  |        |     \-> 8dda                 mv      s11,s6
d0009d1e:       |  |     +--|-----|--|--|--------|-------- ac31                 j       d0009f3a <bootstrap+0x32c>
bootstrap():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:379
      case kBootstrapStateEraseVerify:
        HARDENED_CHECK_EQ(state, kBootstrapStateEraseVerify);
        error = bootstrap_handle_erase_verify(&state);
        break;
      case kBootstrapStateProgram:
        HARDENED_CHECK_EQ(state, kBootstrapStateProgram);
d0009d20:       |  |     |  |     |  |  |        \-----/-X 013d8663             beq     s11,s3,d0009d2c <bootstrap+0x11e>
d0009d24:       |  |     |  |     |  |  |              |   0000                 unimp
d0009d26:       |  |     |  |     |  |  |              |   0000                 unimp
d0009d28:       |  |     |  |     |  |  |              |   0000                 unimp
d0009d2a:       |  |     |  |     |  |  |              |   0000                 unimp
bootstrap_handle_program():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:291
  HARDENED_CHECK_EQ(*state, kBootstrapStateProgram);
d0009d2c:       |  |     |  |     |  |  |           /--\-X 013d8663             beq     s11,s3,d0009d38 <bootstrap+0x12a>
d0009d30:       |  |     |  |     |  |  |           |      0000                 unimp
d0009d32:       |  |     |  |     |  |  |           |      0000                 unimp
d0009d34:       |  |     |  |     |  |  |           |      0000                 unimp
d0009d36:       |  |     |  |     |  |  |           |      0000                 unimp
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:294
  RETURN_IF_ERROR(spi_device_cmd_get(&cmd));
d0009d38:       |  |     |  |     |  |  |           \----> 1008                 addi    a0,sp,32
d0009d3a:       |  |     |  |     |  |  |                  2e75                 jal     d000a0f6 <spi_device_cmd_get>
d0009d3c:       |  |     |  |     |  |  |                  842a                 mv      s0,a0
d0009d3e:       |  |     +--|-----|--|--|----------------- 1e951e63             bne     a0,s1,d0009f3a <bootstrap+0x32c>
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:296
  if (cmd.opcode != kSpiDeviceOpcodeReset &&
d0009d42:       |  |     |  |     |  |  |                  5502                 lw      a0,32(sp)
d0009d44:       |  |  /--|--|-----|--|--|----------------- 25550c63             beq     a0,s5,d0009f9c <bootstrap+0x38e>
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:297
      !bitfield_bit32_read(spi_device_flash_status_get(), kSpiDeviceWelBit)) {
d0009d48:       |  |  |  |  |     |  |  |                  2935                 jal     d000a184 <spi_device_flash_status_get>
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
d0009d4a:       |  |  |  |  |     |  |  |                  8909                 andi    a0,a0,2
d0009d4c:       |  |  |  |  |     |  |  |                  73900413             li      s0,1849
bootstrap_handle_program():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:296
  if (cmd.opcode != kSpiDeviceOpcodeReset &&
d0009d50:       |  |  |  +--|-----|--|--|----------------- 1e050563             beqz    a0,d0009f3a <bootstrap+0x32c>
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:302
  switch (cmd.opcode) {
d0009d54:       |  |  |  |  |     |  |  |                  5502                 lw      a0,32(sp)
d0009d56:       |  |  |  |  |     |  |  |                  73900413             li      s0,1849
d0009d5a:       |  |  |  |  |     |  |  |                  09800593             li      a1,152
d0009d5e:       |  |  |  |  |     |  |  |     /----------- 0ea5c363             blt     a1,a0,d0009e44 <bootstrap+0x236>
d0009d62:       |  |  |  |  |     |  |  |     |            4589                 li      a1,2
d0009d64:       |  |  |  |  |     |  |  |  /--|----------- 0eb50563             beq     a0,a1,d0009e4e <bootstrap+0x240>
d0009d68:       |  |  |  |  |     |  |  |  |  |            02000593             li      a1,32
d0009d6c:       |  |  |  |  |  /--|--|--|--|--|----------- 1ab51d63             bne     a0,a1,d0009f26 <bootstrap+0x318>
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:307
      error = bootstrap_sector_erase(cmd.address);
d0009d70:       |  |  |  |  |  |  |  |  |  |  |            5512                 lw      a0,36(sp)
bootstrap_sector_erase():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:103
  if (addr >= kMaxAddress) {
d0009d72:       |  |  |  |  |  |  |  |  |  |  |            01055593             srli    a1,a0,0x10
d0009d76:       |  |  |  |  |  |  |  |  |  |  |            4452                 lw      s0,20(sp)
d0009d78:       |  |  |  |  |  +--|--|--|--|--|----------- 1a059763             bnez    a1,d0009f26 <bootstrap+0x318>
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:106
  addr &= kPageAddrMask;
d0009d7c:       |  |  |  |  |  |  |  |  |  |  |            75fd                 lui     a1,0xfffff
d0009d7e:       |  |  |  |  |  |  |  |  |  |  |            00b57a33             and     s4,a0,a1
d0009d82:       |  |  |  |  |  |  |  |  |  |  |            4519                 li      a0,6
d0009d84:       |  |  |  |  |  |  |  |  |  |  |            4925                 li      s2,9
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:108
  flash_ctrl_data_default_perms_set((flash_ctrl_perms_t){
d0009d86:       |  |  |  |  |  |  |  |  |  |  |            13212823             sw      s2,304(sp)
d0009d8a:       |  |  |  |  |  |  |  |  |  |  |            13212a23             sw      s2,308(sp)
d0009d8e:       |  |  |  |  |  |  |  |  |  |  |            12a12c23             sw      a0,312(sp)
d0009d92:       |  |  |  |  |  |  |  |  |  |  |            1a08                 addi    a0,sp,304
d0009d94:       |  |  |  |  |  |  |  |  |  |  |            708010ef             jal     ra,d000b49c <flash_ctrl_data_default_perms_set>
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:113
  rom_error_t err_0 = flash_ctrl_data_erase(addr, kFlashCtrlEraseTypePage);
d0009d98:       |  |  |  |  |  |  |  |  |  |  |            8552                 mv      a0,s4
d0009d9a:       |  |  |  |  |  |  |  |  |  |  |            4bc2                 lw      s7,16(sp)
d0009d9c:       |  |  |  |  |  |  |  |  |  |  |            85de                 mv      a1,s7
d0009d9e:       |  |  |  |  |  |  |  |  |  |  |            5fc010ef             jal     ra,d000b39a <flash_ctrl_data_erase>
d0009da2:       |  |  |  |  |  |  |  |  |  |  |            842a                 mv      s0,a0
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:115
      addr + FLASH_CTRL_PARAM_BYTES_PER_PAGE, kFlashCtrlEraseTypePage);
d0009da4:       |  |  |  |  |  |  |  |  |  |  |            4532                 lw      a0,12(sp)
d0009da6:       |  |  |  |  |  |  |  |  |  |  |            00aa6533             or      a0,s4,a0
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:114
  rom_error_t err_1 = flash_ctrl_data_erase(
d0009daa:       |  |  |  |  |  |  |  |  |  |  |            85de                 mv      a1,s7
d0009dac:       |  |  |  |  |  |  |  |  |  |  |            5ee010ef             jal     ra,d000b39a <flash_ctrl_data_erase>
d0009db0:       |  |  |  |  |  |  |  |  |  |  |            8a2a                 mv      s4,a0
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:116
  flash_ctrl_data_default_perms_set((flash_ctrl_perms_t){
d0009db2:       |  |  |  |  |  |  |  |  |  |  |            13212823             sw      s2,304(sp)
d0009db6:       |  |  |  |  |  |  |  |  |  |  |            13212a23             sw      s2,308(sp)
d0009dba:       |  |  |  |  |  |  |  |  |  |  |            13212c23             sw      s2,312(sp)
d0009dbe:       |  |  |  |  |  |  |  |  |  |  |            1a08                 addi    a0,sp,304
d0009dc0:       |  |  |  |  |  |  |  |  |  |  |            6dc010ef             jal     ra,d000b49c <flash_ctrl_data_default_perms_set>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009dc4:       |  |  |  |  |  |  |  |  |  |  |            8522                 mv      a0,s0
d0009dc6:       |  |  |  |  |  |  |  |  |  |  |     /----- 00951963             bne     a0,s1,d0009dd8 <bootstrap+0x1ca>
bootstrap_sector_erase():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:122
  HARDENED_RETURN_IF_ERROR(err_0);
d0009dca:       |  |  |  |  |  |  |  |  |  |  |     |  /-- 00940663             beq     s0,s1,d0009dd6 <bootstrap+0x1c8>
d0009dce:       |  |  |  |  |  |  |  |  |  |  |     |  |   0000                 unimp
d0009dd0:       |  |  |  |  |  |  |  |  |  |  |     |  |   0000                 unimp
d0009dd2:       |  |  |  |  |  |  |  |  |  |  |     |  |   0000                 unimp
d0009dd4:       |  |  |  |  |  |  |  |  |  |  |     |  |   0000                 unimp
d0009dd6:       |  |  |  |  |  |  |  |  |  |  |     |  \-> 8452                 mv      s0,s4
d0009dd8:       |  |  |  |  |  |  |  |  |  |  |     \----> 4919                 li      s2,6
d0009dda:       |  |  |  |  |  |  |  |  |  |  |            0c700b93             li      s7,199
d0009dde:       |  |  |  |  |  +--|--|--|--|--|----------- a2a1                 j       d0009f26 <bootstrap+0x318>
d0009de0:       |  |  |  |  |  |  |  |  \--|--|----------> f3c72537             lui     a0,0xf3c72
d0009de4:       |  |  |  |  |  |  |  |     |  |            bac50513             addi    a0,a0,-1108 # f3c71bac <_stack_end+0x13c51bac>
bootstrap():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:375
        HARDENED_CHECK_EQ(state, kBootstrapStateEraseVerify);
d0009de8:       |  |  |  |  |  |  |  |     |  |        /-- 00ad8663             beq     s11,a0,d0009df4 <bootstrap+0x1e6>
d0009dec:       |  |  |  |  |  |  |  |     |  |        |   0000                 unimp
d0009dee:       |  |  |  |  |  |  |  |     |  |        |   0000                 unimp
d0009df0:       |  |  |  |  |  |  |  |     |  |        |   0000                 unimp
d0009df2:       |  |  |  |  |  |  |  |     |  |        |   0000                 unimp
bootstrap_handle_erase_verify():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:263
  HARDENED_CHECK_EQ(*state, kBootstrapStateEraseVerify);
d0009df4:       |  |  |  |  |  |  |  |     |  |     /--\-X 00ad8663             beq     s11,a0,d0009e00 <bootstrap+0x1f2>
d0009df8:       |  |  |  |  |  |  |  |     |  |     |      0000                 unimp
d0009dfa:       |  |  |  |  |  |  |  |     |  |     |      0000                 unimp
d0009dfc:       |  |  |  |  |  |  |  |     |  |     |      0000                 unimp
d0009dfe:       |  |  |  |  |  |  |  |     |  |     |      0000                 unimp
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:265
  rom_error_t err_0 = flash_ctrl_data_erase_verify(0, kFlashCtrlEraseTypeBank);
d0009e00:       |  |  |  |  |  |  |  |     |  |     \----> 4501                 li      a0,0
d0009e02:       |  |  |  |  |  |  |  |     |  |            85e2                 mv      a1,s8
d0009e04:       |  |  |  |  |  |  |  |     |  |            5da010ef             jal     ra,d000b3de <flash_ctrl_data_erase_verify>
d0009e08:       |  |  |  |  |  |  |  |     |  |            842a                 mv      s0,a0
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:266
  rom_error_t err_1 = flash_ctrl_data_erase_verify(
d0009e0a:       |  |  |  |  |  |  |  |     |  |            6521                 lui     a0,0x8
d0009e0c:       |  |  |  |  |  |  |  |     |  |            85e2                 mv      a1,s8
d0009e0e:       |  |  |  |  |  |  |  |     |  |            5d0010ef             jal     ra,d000b3de <flash_ctrl_data_erase_verify>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009e12:       |  |  |  |  |  |  |  |     |  |            85a2                 mv      a1,s0
bootstrap_handle_erase_verify():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:268
  HARDENED_RETURN_IF_ERROR(err_0);
d0009e14:       |  |  |  +--|--|--|--|-----|--|----------- 12959363             bne     a1,s1,d0009f3a <bootstrap+0x32c>
d0009e18:       |  |  |  |  |  |  |  |     |  |        /-- 00940663             beq     s0,s1,d0009e24 <bootstrap+0x216>
d0009e1c:       |  |  |  |  |  |  |  |     |  |        |   0000                 unimp
d0009e1e:       |  |  |  |  |  |  |  |     |  |        |   0000                 unimp
d0009e20:       |  |  |  |  |  |  |  |     |  |        |   0000                 unimp
d0009e22:       |  |  |  |  |  |  |  |     |  |        |   0000                 unimp
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009e24:       |  |  |  |  |  |  |  |     |  |        \-> 85aa                 mv      a1,a0
bootstrap_handle_erase_verify():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:269
  HARDENED_RETURN_IF_ERROR(err_1);
d0009e26:       |  |  |  |  |  |  |  +-----|--|----------- 00959d63             bne     a1,s1,d0009e40 <bootstrap+0x232>
d0009e2a:       |  |  |  |  |  |  |  |     |  |        /-- 00950663             beq     a0,s1,d0009e36 <bootstrap+0x228>
d0009e2e:       |  |  |  |  |  |  |  |     |  |        |   0000                 unimp
d0009e30:       |  |  |  |  |  |  |  |     |  |        |   0000                 unimp
d0009e32:       |  |  |  |  |  |  |  |     |  |        |   0000                 unimp
d0009e34:       |  |  |  |  |  |  |  |     |  |        |   0000                 unimp
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:272
  spi_device_flash_status_clear();
d0009e36:       |  |  |  |  |  |  |  |     |  |        \-> 2691                 jal     d000a17a <spi_device_flash_status_clear>
d0009e38:       |  |  |  |  |  |  |  |     |  |            8dce                 mv      s11,s3
d0009e3a:       |  |  |  +--|--|--|--|-----|--|----------- a201                 j       d0009f3a <bootstrap+0x32c>
d0009e3c:       |  |  |  |  |  |  \--|-----|--|----------> 846a                 mv      s0,s10
d0009e3e:       |  |  |  +--|--|-----|-----|--|----------- a8f5                 j       d0009f3a <bootstrap+0x32c>
d0009e40:       |  |  |  |  |  |     \-----|--|----------> 842a                 mv      s0,a0
d0009e42:       |  |  |  +--|--|-----------|--|----------- a8e5                 j       d0009f3a <bootstrap+0x32c>
bootstrap_handle_program():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:302
  switch (cmd.opcode) {
d0009e44:       |  |  |  |  |  |           |  \--/-------X 05751063             bne     a0,s7,d0009e84 <bootstrap+0x276>
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:304
      error = bootstrap_chip_erase();
d0009e48:       |  |  |  |  |  |           |     |         2aa1                 jal     d0009fa0 <bootstrap_chip_erase>
d0009e4a:       |  |  |  |  |  |           |     |         842a                 mv      s0,a0
d0009e4c:       |  |  |  |  |  +-----------|-----|-------- a8e9                 j       d0009f26 <bootstrap+0x318>
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:310
      error = bootstrap_page_program(cmd.address, cmd.payload_byte_count,
d0009e4e:       |  |  |  |  |  |           \-----|-------> 5a12                 lw      s4,36(sp)
bootstrap_page_program():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:163
  if (addr & kFlashWordMask || addr >= kMaxAddress) {
d0009e50:       |  |  |  |  |  |                 |         4572                 lw      a0,28(sp)
d0009e52:       |  |  |  |  |  |                 |         00aa7533             and     a0,s4,a0
d0009e56:       |  |  |  |  |  |                 |         4462                 lw      s0,24(sp)
d0009e58:       |  |  |  |  |  +-----------------|-------- e579                 bnez    a0,d0009f26 <bootstrap+0x318>
d0009e5a:       |  |  |  |  |  |                 |         5522                 lw      a0,40(sp)
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:168
  size_t flash_word_misalignment = byte_count & kFlashWordMask;
d0009e5c:       |  |  |  |  |  |                 |         00757593             andi    a1,a0,7
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:169
  if (flash_word_misalignment > 0) {
d0009e60:       |  |  |  |  |  |                 |  /----- c58d                 beqz    a1,d0009e8a <bootstrap+0x27c>
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:172
    for (size_t i = 0; i < padding_byte_count; ++i) {
d0009e62:       |  |  |  |  |  |                 |  |      ff85e613             ori     a2,a1,-8
d0009e66:       |  |  |  |  |  |                 |  |      0ff00713             li      a4,255
d0009e6a:       |  |  |  |  |  |                 |  |      02c10b93             addi    s7,sp,44
d0009e6e:       |  |  |  |  |  |                 |  |  /-> 86b2                 mv      a3,a2
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:173
      data[byte_count++] = 0xff;
d0009e70:       |  |  |  |  |  |                 |  |  |   00150593             addi    a1,a0,1 # 8001 <_rom_ext_virtual_size+0x1>
d0009e74:       |  |  |  |  |  |                 |  |  |   955e                 add     a0,a0,s7
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:172
    for (size_t i = 0; i < padding_byte_count; ++i) {
d0009e76:       |  |  |  |  |  |                 |  |  |   0605                 addi    a2,a2,1
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:173
      data[byte_count++] = 0xff;
d0009e78:       |  |  |  |  |  |                 |  |  |   00e50023             sb      a4,0(a0)
d0009e7c:       |  |  |  |  |  |                 |  |  |   852e                 mv      a0,a1
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:172
    for (size_t i = 0; i < padding_byte_count; ++i) {
d0009e7e:       |  |  |  |  |  |                 |  |  \-- fed678e3             bgeu    a2,a3,d0009e6e <bootstrap+0x260>
d0009e82:       |  |  |  |  |  |                 |  |  /-- a039                 j       d0009e90 <bootstrap+0x282>
d0009e84:       |  |  |  |  |  +-----------------\--|--|-X 0b551163             bne     a0,s5,d0009f26 <bootstrap+0x318>
d0009e88:       |  |  +--|--|--|--------------------|--|-- aa11                 j       d0009f9c <bootstrap+0x38e>
d0009e8a:       |  |  |  |  |  |                    \--|-> 85aa                 mv      a1,a0
d0009e8c:       |  |  |  |  |  |                       |   02c10b93             addi    s7,sp,44
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:176
  size_t rem_word_count = byte_count / sizeof(uint32_t);
d0009e90:       |  |  |  |  |  |                       \-> 0025da93             srli    s5,a1,0x2
d0009e94:       |  |  |  |  |  |                           4525                 li      a0,9
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:178
  flash_ctrl_data_default_perms_set((flash_ctrl_perms_t){
d0009e96:       |  |  |  |  |  |                           12a12823             sw      a0,304(sp)
d0009e9a:       |  |  |  |  |  |                           13212a23             sw      s2,308(sp)
d0009e9e:       |  |  |  |  |  |                           12a12c23             sw      a0,312(sp)
d0009ea2:       |  |  |  |  |  |                           1a08                 addi    a0,sp,304
d0009ea4:       |  |  |  |  |  |                           5f8010ef             jal     ra,d000b49c <flash_ctrl_data_default_perms_set>
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:186
  size_t prog_page_misalignment = addr & kFlashProgPageMask;
d0009ea8:       |  |  |  |  |  |                           0ffa7513             andi    a0,s4,255
d0009eac:       |  |  |  |  |  |                           73900413             li      s0,1849
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:187
  if (prog_page_misalignment > 0) {
d0009eb0:       |  |  |  |  |  |        /----------------- cd59                 beqz    a0,d0009f4e <bootstrap+0x340>
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:189
        (kFlashProgPageSize - prog_page_misalignment) / sizeof(uint32_t);
d0009eb2:       |  |  |  |  |  |        |                  10000593             li      a1,256
d0009eb6:       |  |  |  |  |  |        |                  40a58533             sub     a0,a1,a0
d0009eba:       |  |  |  |  |  |        |                  8109                 srli    a0,a0,0x2
d0009ebc:       |  |  |  |  |  |        |                  8bd6                 mv      s7,s5
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:190
    if (word_count > rem_word_count) {
d0009ebe:       |  |  |  |  |  |        |              /-- 00aae363             bltu    s5,a0,d0009ec4 <bootstrap+0x2b6>
d0009ec2:       |  |  |  |  |  |        |              |   8baa                 mv      s7,a0
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:193
    err_0 = flash_ctrl_data_write(addr, word_count, data);
d0009ec4:       |  |  |  |  |  |        |              \-> 8552                 mv      a0,s4
d0009ec6:       |  |  |  |  |  |        |                  85de                 mv      a1,s7
d0009ec8:       |  |  |  |  |  |        |                  1070                 addi    a2,sp,44
d0009eca:       |  |  |  |  |  |        |                  412010ef             jal     ra,d000b2dc <flash_ctrl_data_write>
d0009ece:       |  |  |  |  |  |        |                  892a                 mv      s2,a0
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:194
    rem_word_count -= word_count;
d0009ed0:       |  |  |  |  |  |        |                  417a8ab3             sub     s5,s5,s7
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:195
    data += word_count * sizeof(uint32_t);
d0009ed4:       |  |  |  |  |  |        |                  002b9513             slli    a0,s7,0x2
d0009ed8:       |  |  |  |  |  |        |                  100c                 addi    a1,sp,32
d0009eda:       |  |  |  |  |  |        |                  952e                 add     a0,a0,a1
d0009edc:       |  |  |  |  |  |        |                  00c50613             addi    a2,a0,12
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:198
    addr &= ~kFlashProgPageMask;
d0009ee0:       |  |  |  |  |  |        |                  f00a7a13             andi    s4,s4,-256
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:201
  if (rem_word_count > 0) {
d0009ee4:       |  |  |  |  |  |        |  /-------------- 000a8763             beqz    s5,d0009ef2 <bootstrap+0x2e4>
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:202
    err_1 = flash_ctrl_data_write(addr, rem_word_count, data);
d0009ee8:       |  |  |  |  |  |        |  |  /----------> 8552                 mv      a0,s4
d0009eea:       |  |  |  |  |  |        |  |  |            85d6                 mv      a1,s5
d0009eec:       |  |  |  |  |  |        |  |  |            3f0010ef             jal     ra,d000b2dc <flash_ctrl_data_write>
d0009ef0:       |  |  |  |  |  |        |  |  |            842a                 mv      s0,a0
d0009ef2:       |  |  |  |  |  |        |  >--|----------> 4525                 li      a0,9
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:204
  flash_ctrl_data_default_perms_set((flash_ctrl_perms_t){
d0009ef4:       |  |  |  |  |  |        |  |  |            12a12823             sw      a0,304(sp)
d0009ef8:       |  |  |  |  |  |        |  |  |            12a12a23             sw      a0,308(sp)
d0009efc:       |  |  |  |  |  |        |  |  |            12a12c23             sw      a0,312(sp)
d0009f00:       |  |  |  |  |  |        |  |  |            1a08                 addi    a0,sp,304
d0009f02:       |  |  |  |  |  |        |  |  |            59a010ef             jal     ra,d000b49c <flash_ctrl_data_default_perms_set>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009f06:       |  |  |  |  |  |        |  |  |            854a                 mv      a0,s2
bootstrap_page_program():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:210
  HARDENED_RETURN_IF_ERROR(err_0);
d0009f08:       |  |  |  |  |  |        |  |  |  /-------- 00951963             bne     a0,s1,d0009f1a <bootstrap+0x30c>
d0009f0c:       |  |  |  |  |  |        |  |  |  |  /----- 00990663             beq     s2,s1,d0009f18 <bootstrap+0x30a>
d0009f10:       |  |  |  |  |  |        |  |  |  |  |      0000                 unimp
d0009f12:       |  |  |  |  |  |        |  |  |  |  |      0000                 unimp
d0009f14:       |  |  |  |  |  |        |  |  |  |  |      0000                 unimp
d0009f16:       |  |  |  |  |  |        |  |  |  |  |      0000                 unimp
d0009f18:       |  |  |  |  |  |        |  |  |  |  \--/-X a011                 j       d0009f1c <bootstrap+0x30e>
d0009f1a:       |  |  |  |  |  |        |  |  |  \-----|-> 844a                 mv      s0,s2
d0009f1c:       |  |  |  |  |  |        |  |  |        \-> 09900a93             li      s5,153
d0009f20:       |  |  |  |  |  |        |  |  |            0c700b93             li      s7,199
d0009f24:       |  |  |  |  |  |        |  |  |            4919                 li      s2,6
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009f26:       |  |  |  |  |  \--------|--|--|----------> 8522                 mv      a0,s0
bootstrap_handle_program():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:329
  HARDENED_RETURN_IF_ERROR(error);
d0009f28:       |  |  |  +--|-----------|--|--|----------- 00951963             bne     a0,s1,d0009f3a <bootstrap+0x32c>
d0009f2c:       |  |  |  |  +-----------|--|--|----------- 00940663             beq     s0,s1,d0009f38 <bootstrap+0x32a>
d0009f30:       |  |  |  |  |           |  |  |            0000                 unimp
d0009f32:       |  |  |  |  |           |  |  |            0000                 unimp
d0009f34:       |  |  |  |  |           |  |  |            0000                 unimp
d0009f36:       |  |  |  |  |           |  |  |            0000                 unimp
d0009f38:       |  |  |  |  \-----------|--|--|----------> 2489                 jal     d000a17a <spi_device_flash_status_clear>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009f3a:       |  |  |  \--------------|--|--|----------> 8522                 mv      a0,s0
bootstrap():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:385
        error = bootstrap_handle_program(&state);
        break;
      default:
        error = kErrorBootstrapInvalidState;
    }
    HARDENED_RETURN_IF_ERROR(error);
d0009f3c:       |  |  |                 |  |  |     /----- 02951363             bne     a0,s1,d0009f62 <bootstrap+0x354>
d0009f40:       |  |  |                 |  |  |     |  /-- 00940663             beq     s0,s1,d0009f4c <bootstrap+0x33e>
d0009f44:       |  |  |                 |  |  |     |  |   0000                 unimp
d0009f46:       |  |  |                 |  |  |     |  |   0000                 unimp
d0009f48:       |  |  |                 |  |  |     |  |   0000                 unimp
d0009f4a:       |  |  |                 |  |  |     |  |   0000                 unimp
d0009f4c:       |  \--|-----------------|--|--|-----|--\-X bb85                 j       d0009cbc <bootstrap+0xae>
d0009f4e:       |     |                 \--|--|-----|----> 73900913             li      s2,1849
d0009f52:       |     |                    |  |     |      865e                 mv      a2,s7
bootstrap_page_program():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:201
  if (rem_word_count > 0) {
d0009f54:       |     |                    |  \-----|----- f80a9ae3             bnez    s5,d0009ee8 <bootstrap+0x2da>
d0009f58:       |     |                    \--------|----- bf69                 j       d0009ef2 <bootstrap+0x2e4>
d0009f5a:       \-----|-----------------------------|----> 04425537             lui     a0,0x4425
d0009f5e:             |                             |      30d50413             addi    s0,a0,781 # 442530d <WDOG_BARK_THOLD+0x43ee425>
bootstrap():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:388
  }
  HARDENED_UNREACHABLE();
}
d0009f62:             |                             \----> 8522                 mv      a0,s0
d0009f64:             |                                    13c12d83             lw      s11,316(sp)
d0009f68:             |                                    14012d03             lw      s10,320(sp)
d0009f6c:             |                                    14412c83             lw      s9,324(sp)
d0009f70:             |                                    14812c03             lw      s8,328(sp)
d0009f74:             |                                    14c12b83             lw      s7,332(sp)
d0009f78:             |                                    15012b03             lw      s6,336(sp)
d0009f7c:             |                                    15412a83             lw      s5,340(sp)
d0009f80:             |                                    15812a03             lw      s4,344(sp)
d0009f84:             |                                    15c12983             lw      s3,348(sp)
d0009f88:             |                                    16012903             lw      s2,352(sp)
d0009f8c:             |                                    16412483             lw      s1,356(sp)
d0009f90:             |                                    16812403             lw      s0,360(sp)
d0009f94:             |                                    16c12083             lw      ra,364(sp)
d0009f98:             |                                    6175                 addi    sp,sp,368
d0009f9a:             |                                    8082                 ret
bootstrap_handle_program():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:314
      rstmgr_reset();
d0009f9c:             \----------------------------------> 335010ef             jal     ra,d000bad0 <rstmgr_reset>

d0009fa0 <bootstrap_chip_erase>:
bootstrap_chip_erase():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:72
static rom_error_t bootstrap_chip_erase(void) {
d0009fa0:              1141                     addi    sp,sp,-16
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:73
  flash_ctrl_bank_erase_perms_set(kHardenedBoolTrue);
d0009fa2:              c606                     sw      ra,12(sp)
d0009fa4:              c422                     sw      s0,8(sp)
d0009fa6:              c226                     sw      s1,4(sp)
d0009fa8:              c04a                     sw      s2,0(sp)
d0009faa:              73900513                 li      a0,1849
d0009fae:              73900913                 li      s2,1849
d0009fb2:              0d7010ef                 jal     ra,d000b888 <flash_ctrl_bank_erase_perms_set>
d0009fb6:              8032a537                 lui     a0,0x8032a
d0009fba:              be950493                 addi    s1,a0,-1047 # 80329be9 <_stack_end+0xa0309be9>
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:74
  rom_error_t err_0 = flash_ctrl_data_erase(0, kFlashCtrlEraseTypeBank);
d0009fbe:              4501                     li      a0,0
d0009fc0:              85a6                     mv      a1,s1
d0009fc2:              3d8010ef                 jal     ra,d000b39a <flash_ctrl_data_erase>
d0009fc6:              842a                     mv      s0,a0
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:75
  rom_error_t err_1 = flash_ctrl_data_erase(FLASH_CTRL_PARAM_BYTES_PER_BANK,
d0009fc8:              6521                     lui     a0,0x8
d0009fca:              85a6                     mv      a1,s1
d0009fcc:              3ce010ef                 jal     ra,d000b39a <flash_ctrl_data_erase>
d0009fd0:              84aa                     mv      s1,a0
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:77
  flash_ctrl_bank_erase_perms_set(kHardenedBoolFalse);
d0009fd2:              1d400513                 li      a0,468
d0009fd6:              0b3010ef                 jal     ra,d000b888 <flash_ctrl_bank_erase_perms_set>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d0009fda:              8522                     mv      a0,s0
bootstrap_chip_erase():
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:79
  HARDENED_RETURN_IF_ERROR(err_0);
d0009fdc:       /----- 01251963                 bne     a0,s2,d0009fee <bootstrap_chip_erase+0x4e>
d0009fe0:       |  /-- 01240663                 beq     s0,s2,d0009fec <bootstrap_chip_erase+0x4c>
d0009fe4:       |  |   0000                     unimp
d0009fe6:       |  |   0000                     unimp
d0009fe8:       |  |   0000                     unimp
d0009fea:       |  |   0000                     unimp
d0009fec:       |  \-> 8426                     mv      s0,s1
/proc/self/cwd/sw/device/silicon_creator/rom/bootstrap.c:81
}
d0009fee:       \----> 8522                     mv      a0,s0
d0009ff0:              4902                     lw      s2,0(sp)
d0009ff2:              4492                     lw      s1,4(sp)
d0009ff4:              4422                     lw      s0,8(sp)
d0009ff6:              40b2                     lw      ra,12(sp)
d0009ff8:              0141                     addi    sp,sp,16
d0009ffa:              8082                     ret

d0009ffc <spi_device_init>:
spi_device_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:499
                             cmd_info.handled_in_sw);
  reg = bitfield_bit32_write(reg, SPI_DEVICE_CMD_INFO_0_VALID_0_BIT, true);
  abs_mmio_write32(kBase + cmd_info.reg_offset, reg);
}

void spi_device_init(void) {
d0009ffc:           1141                        addi    sp,sp,-16
d0009ffe:           c606                        sw      ra,12(sp)
d000a000:           c422                        sw      s0,8(sp)
d000a002:           c226                        sw      s1,4(sp)
d000a004:           c0052537            lui     a0,0xc0052
d000a008:           c0050413            addi    s0,a0,-1024 # c0051c00 <_stack_end+0xe0031c00>
d000a00c:           6521                        lui     a0,0x8
d000a00e:           f0050513            addi    a0,a0,-256 # 7f00 <_stack_size+0x3f00>
d000a012:           c00504b7            lui     s1,0xc0050
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
 *
 * @param addr the address to write to.
 * @param value the value to write.
 */
inline void abs_mmio_write32(uint32_t addr, uint32_t value) {
  *((volatile uint32_t *)addr) = value;
d000a016:           c8c8                        sw      a0,20(s1)
d000a018:           6505                        lui     a0,0x1
d000a01a:           c7f50513            addi    a0,a0,-897 # c7f <_epmp_reset_rx_size+0x47f>
d000a01e:           c0a8                        sw      a0,64(s1)
spi_device_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:522
  abs_mmio_write32(kBase + SPI_DEVICE_JEDEC_CC_REG_OFFSET, reg);
  // Note: The code below assumes that chip revision and generation numbers
  // from the life cycle controller (16-bits each) will fit in the revision and
  // generation fields of the device ID (3 and 4 bits, respectively).
  lifecycle_hw_rev_t hw_rev;
  lifecycle_hw_rev_get(&hw_rev);
d000a020:           850a                        mv      a0,sp
d000a022:           4eb030ef            jal     ra,d000dd0c <lifecycle_hw_rev_get>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:524
  reg = bitfield_field32_write(0, SPI_DEVICE_DEV_ID_CHIP_REV_FIELD,
                               hw_rev.chip_rev);
d000a026:           00215583            lhu     a1,2(sp)
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:527
  reg = bitfield_bit32_write(reg, SPI_DEVICE_DEV_ID_ROM_BOOTSTRAP_BIT, true);
  reg = bitfield_field32_write(reg, SPI_DEVICE_DEV_ID_CHIP_GEN_FIELD,
                               hw_rev.chip_gen);
d000a02a:           00011603            lh      a2,0(sp)
d000a02e:           4501                        li      a0,0
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
  bitfield |= (value & field.mask) << field.index;
d000a030:           899d                        andi    a1,a1,7
d000a032:           0612                        slli    a2,a2,0x4
/proc/self/cwd/./sw/device/lib/base/bitfield.h:75
  bitfield &= ~(field.mask << field.index);
d000a034:           0f067613            andi    a2,a2,240
d000a038:           8dd1                        or      a1,a1,a2
d000a03a:           00ef1637            lui     a2,0xef1
d000a03e:           40860613            addi    a2,a2,1032 # ef1408 <WDOG_BARK_THOLD+0xeba520>
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
  bitfield |= (value & field.mask) << field.index;
d000a042:           8dd1                        or      a1,a1,a2
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000a044:           c0ec                        sw      a1,68(s1)
d000a046:           00004597            auipc   a1,0x4
d000a04a:           72a58593            addi    a1,a1,1834 # d000e770 <kSpiDeviceSfdpTable>
d000a04e:           06c00613            li      a2,108
read_32():
/proc/self/cwd/./sw/device/lib/base/memory.h:86
  ptr = __builtin_assume_aligned(ptr, alignof(uint32_t));
d000a052:       /-> 00b506b3            add     a3,a0,a1
/proc/self/cwd/./sw/device/lib/base/memory.h:88
  __builtin_memcpy(&val, ptr, sizeof(uint32_t));
d000a056:       |   4294                        lw      a3,0(a3)
/proc/self/cwd/./sw/device/lib/base/memory.h:86
  ptr = __builtin_assume_aligned(ptr, alignof(uint32_t));
d000a058:       |   00850733            add     a4,a0,s0
spi_device_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:537
  abs_mmio_write32(kBase + SPI_DEVICE_JEDEC_ID_REG_OFFSET, reg);

  // Write SFDP table to the reserved region in spi_device buffer.
  uint32_t dest = kSfdpAreaStartAddr;
  const char *table = (const char *)&kSpiDeviceSfdpTable;
  for (size_t i = 0; i < kSpiDeviceSfdpTableNumWords; ++i) {
d000a05c:       |   0511                        addi    a0,a0,4
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000a05e:       |   c314                        sw      a3,0(a4)
spi_device_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:537
d000a060:       \-- fec519e3            bne     a0,a2,d000a052 <spi_device_init+0x56>
d000a064:           c0052637            lui     a2,0xc0052
d000a068:           c6860593            addi    a1,a2,-920 # c0051c68 <_stack_end+0xe0031c68>
d000a06c:           557d                        li      a0,-1
d000a06e:           cfc60613            addi    a2,a2,-772
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000a072:       /-> 00458693            addi    a3,a1,4
d000a076:       |   c1c8                        sw      a0,4(a1)
d000a078:       |   85b6                        mv      a1,a3
spi_device_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:543
    abs_mmio_write32(dest, read_32(table));
    dest += sizeof(uint32_t);
    table += sizeof(uint32_t);
  }
  // Fill the remaining space with `0xff`s.
  for (; dest < kSfdpAreaEndAddr; dest += sizeof(uint32_t)) {
d000a07a:       \-- fec6ece3            bltu    a3,a2,d000a072 <spi_device_init+0x76>
d000a07e:           5571                        li      a0,-4
d000a080:           0fc00593            li      a1,252
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000a084:       /-> 00a40633            add     a2,s0,a0
spi_device_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:549
    abs_mmio_write32(dest, UINT32_MAX);
  }

  // Reset the payload buffer to prevent access faults when reading beyond
  // current payload depth (see #11782).
  for (size_t i = 0; i < kSpiDevicePayloadAreaNumBytes; i += sizeof(uint32_t)) {
d000a088:       |   0511                        addi    a0,a0,4
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000a08a:       |   10062223            sw      zero,260(a2)
spi_device_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:549
d000a08e:       \-- feb56be3            bltu    a0,a1,d000a084 <spi_device_init+0x88>
d000a092:           c0050537            lui     a0,0xc0050
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000a096:           02052e23            sw      zero,60(a0) # c005003c <_stack_end+0xe003003c>
d000a09a:           800005b7            lui     a1,0x80000
d000a09e:           00558613            addi    a2,a1,5 # 80000005 <_stack_end+0x9ffe0005>
d000a0a2:           08c52823            sw      a2,144(a0)
d000a0a6:           09f58613            addi    a2,a1,159
d000a0aa:           08c52e23            sw      a2,156(a0)
d000a0ae:           8000f637            lui     a2,0x8000f
d000a0b2:           25a60613            addi    a2,a2,602 # 8000f25a <_stack_end+0x9ffef25a>
d000a0b6:           0ac52023            sw      a2,160(a0)
d000a0ba:           83000637            lui     a2,0x83000
d000a0be:           0c760693            addi    a3,a2,199 # 830000c7 <_stack_end+0xa2fe00c7>
d000a0c2:           0ad52e23            sw      a3,188(a0)
d000a0c6:           22060693            addi    a3,a2,544
d000a0ca:           0cd52023            sw      a3,192(a0)
d000a0ce:           20260693            addi    a3,a2,514
d000a0d2:           0cd52223            sw      a3,196(a0)
d000a0d6:           09960613            addi    a2,a2,153
d000a0da:           0cc52423            sw      a2,200(a0)
d000a0de:           00658613            addi    a2,a1,6
d000a0e2:           0ec52c23            sw      a2,248(a0)
d000a0e6:           0591                        addi    a1,a1,4
d000a0e8:           0eb52e23            sw      a1,252(a0)
spi_device_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:622
  reg = bitfield_bit32_write(reg, SPI_DEVICE_CMD_INFO_WREN_VALID_BIT, true);
  abs_mmio_write32(kBase + SPI_DEVICE_CMD_INFO_WREN_REG_OFFSET, reg);
  reg = bitfield_field32_write(reg, SPI_DEVICE_CMD_INFO_WRDI_OPCODE_FIELD,
                               kSpiDeviceOpcodeWriteDisable);
  abs_mmio_write32(kBase + SPI_DEVICE_CMD_INFO_WRDI_REG_OFFSET, reg);
}
d000a0ec:           4492                        lw      s1,4(sp)
d000a0ee:           4422                        lw      s0,8(sp)
d000a0f0:           40b2                        lw      ra,12(sp)
d000a0f2:           0141                        addi    sp,sp,16
d000a0f4:           8082                        ret

d000a0f6 <spi_device_cmd_get>:
spi_device_cmd_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:624

rom_error_t spi_device_cmd_get(spi_device_cmd_t *cmd) {
d000a0f6:                 c00505b7              lui     a1,0xc0050
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000a0fa:             /-> 4190                  lw      a2,0(a1)
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
                               bitfield_bit32_to_field32(bit_index)) == 0x1u;
d000a0fc:             |   04067693              andi    a3,a2,64
spi_device_cmd_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:627
  uint32_t reg = 0;
  bool cmd_pending = false;
  while (!cmd_pending) {
d000a100:             \-- deed                  beqz    a3,d000a0fa <spi_device_cmd_get+0x4>
d000a102:                 10067693              andi    a3,a2,256
d000a106:                 c00505b7              lui     a1,0xc0050
d000a10a:                 567d                  li      a2,-1
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000a10c:                 c190                  sw      a2,0(a1)
spi_device_cmd_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:635
    reg = abs_mmio_read32(kBase + SPI_DEVICE_INTR_STATE_REG_OFFSET);
    cmd_pending = bitfield_bit32_read(
        reg, SPI_DEVICE_INTR_COMMON_UPLOAD_CMDFIFO_NOT_EMPTY_BIT);
  }
  abs_mmio_write32(kBase + SPI_DEVICE_INTR_STATE_REG_OFFSET, UINT32_MAX);
  if (bitfield_bit32_read(reg,
d000a10e:       /-------- e2a5                  bnez    a3,d000a16e <spi_device_cmd_get+0x78>
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000a110:       |         4db4                  lw      a3,88(a1)
spi_device_cmd_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:640
                          SPI_DEVICE_INTR_COMMON_UPLOAD_PAYLOAD_OVERFLOW_BIT)) {
    return kErrorSpiDevicePayloadOverflow;
  }

  cmd->opcode = abs_mmio_read32(kBase + SPI_DEVICE_UPLOAD_CMDFIFO_REG_OFFSET);
d000a112:       |         c114                  sw      a3,0(a0)
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:641
  cmd->address = kSpiDeviceNoAddress;
d000a114:       |         c150                  sw      a2,4(a0)
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000a116:       |         49ac                  lw      a1,80(a1)
d000a118:       |         6621                  lui     a2,0x8
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
d000a11a:       |         8df1                  and     a1,a1,a2
spi_device_cmd_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:643
  reg = abs_mmio_read32(kBase + SPI_DEVICE_UPLOAD_STATUS_REG_OFFSET);
  if (bitfield_bit32_read(reg,
d000a11c:       |     /-- c589                  beqz    a1,d000a126 <spi_device_cmd_get+0x30>
d000a11e:       |     |   c00505b7              lui     a1,0xc0050
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000a122:       |     |   4dec                  lw      a1,92(a1)
spi_device_cmd_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:645
                          SPI_DEVICE_UPLOAD_STATUS_ADDRFIFO_NOTEMPTY_BIT)) {
    cmd->address =
d000a124:       |     |   c14c                  sw      a1,4(a0)
d000a126:       |     \-> c00505b7              lui     a1,0xc0050
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000a12a:       |         49ec                  lw      a1,84(a1)
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
  return (bitfield >> field.index) & field.mask;
d000a12c:       |         1ff5f593              andi    a1,a1,511
spi_device_cmd_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:650
        abs_mmio_read32(kBase + SPI_DEVICE_UPLOAD_ADDRFIFO_REG_OFFSET);
  }

  reg = abs_mmio_read32(kBase + SPI_DEVICE_UPLOAD_STATUS2_REG_OFFSET);
  cmd->payload_byte_count =
d000a130:       |         c50c                  sw      a1,8(a0)
d000a132:       |         10000613              li      a2,256
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:653
      bitfield_field32_read(reg, SPI_DEVICE_UPLOAD_STATUS2_PAYLOAD_DEPTH_FIELD);
  // `payload_byte_count` can be at most `kSpiDevicePayloadAreaNumBytes`.
  HARDENED_CHECK_LE(cmd->payload_byte_count, kSpiDevicePayloadAreaNumBytes);
d000a136:       |     /-- 00b67663              bgeu    a2,a1,d000a142 <spi_device_cmd_get+0x4c>
d000a13a:       |     |   0000                  unimp
d000a13c:       |     |   0000                  unimp
d000a13e:       |     |   0000                  unimp
d000a140:       |     |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:657
  uint32_t src =
      kBase + SPI_DEVICE_BUFFER_REG_OFFSET + kSpiDevicePayloadAreaOffset;
  char *dest = (char *)&cmd->payload;
  for (size_t i = 0; i < cmd->payload_byte_count; i += sizeof(uint32_t)) {
d000a142:       |     \-> 4510                  lw      a2,8(a0)
d000a144:       |         73900813              li      a6,1849
d000a148:       |  /----- c61d                  beqz    a2,d000a176 <spi_device_cmd_get+0x80>
d000a14a:       |  |      4601                  li      a2,0
d000a14c:       |  |      00c50693              addi    a3,a0,12
d000a150:       |  |      c0052737              lui     a4,0xc0052
d000a154:       |  |      d0070713              addi    a4,a4,-768 # c0051d00 <_stack_end+0xe0031d00>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:658
    write_32(abs_mmio_read32(src + i), dest + i);
d000a158:       |  |  /-> 00e607b3              add     a5,a2,a4
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000a15c:       |  |  |   439c                  lw      a5,0(a5)
write_32():
/proc/self/cwd/./sw/device/lib/base/memory.h:145
 */
inline void write_32(uint32_t value, void *ptr) {
  // Both GCC and Clang optimize the code below into a single word-store on most
  // platforms. See the comment in `read_32()` for more implementation-private
  // information.
  ptr = __builtin_assume_aligned(ptr, alignof(uint32_t));
d000a15e:       |  |  |   00c685b3              add     a1,a3,a2
/proc/self/cwd/./sw/device/lib/base/memory.h:146
  __builtin_memcpy(ptr, &value, sizeof(uint32_t));
d000a162:       |  |  |   c19c                  sw      a5,0(a1)
spi_device_cmd_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:657
  for (size_t i = 0; i < cmd->payload_byte_count; i += sizeof(uint32_t)) {
d000a164:       |  |  |   450c                  lw      a1,8(a0)
d000a166:       |  |  |   0611                  addi    a2,a2,4
d000a168:       |  |  \-- feb668e3              bltu    a2,a1,d000a158 <spi_device_cmd_get+0x62>
d000a16c:       |  +----- a029                  j       d000a176 <spi_device_cmd_get+0x80>
d000a16e:       \--|----> 01535537              lui     a0,0x1535
d000a172:          |      00d50813              addi    a6,a0,13 # 153500d <WDOG_BARK_THOLD+0x14fe125>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:662
  }

  return kErrorOk;
}
d000a176:          \----> 8542                  mv      a0,a6
d000a178:                 8082                  ret

d000a17a <spi_device_flash_status_clear>:
spi_device_flash_status_clear():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:664

void spi_device_flash_status_clear(void) {
d000a17a:       c0050537                lui     a0,0xc0050
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000a17e:       02052e23                sw      zero,60(a0) # c005003c <_stack_end+0xe003003c>
spi_device_flash_status_clear():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:666
  abs_mmio_write32(kBase + SPI_DEVICE_FLASH_STATUS_REG_OFFSET, 0);
}
d000a182:       8082                    ret

d000a184 <spi_device_flash_status_get>:
spi_device_flash_status_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:668

uint32_t spi_device_flash_status_get(void) {
d000a184:       c0050537                lui     a0,0xc0050
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000a188:       5d48                    lw      a0,60(a0)
spi_device_flash_status_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/spi_device.c:669
  return abs_mmio_read32(kBase + SPI_DEVICE_FLASH_STATUS_REG_OFFSET);
d000a18a:       8082                    ret

d000a18c <uart_set_cfg>:
uart_set_cfg():
/proc/self/cwd/sw/device/silicon_creator/rom/uart.c:25
 *              There is a prescaler in place that already divides the SoC
 *              clock by 16.  Since this is a counter, a value of 1 means that
 *              the SoC clock divided by 16*2 = 32 is used. A value of 31 would mean
 *              that we use the SoC clock divided by 16*32 = 512.
 */
void uart_set_cfg(int parity, uint16_t clk_counter) {
d000a18c:       40000537                lui     a0,0x40000
d000a190:       08300613                li      a2,131
/proc/self/cwd/sw/device/silicon_creator/rom/uart.c:27
  unsigned int i;
  *(volatile unsigned int*)(UART_REG_LCR) = 0x83; //sets 8N1 and set DLAB to 1
d000a194:       c550                    sw      a2,12(a0)
/proc/self/cwd/sw/device/silicon_creator/rom/uart.c:28
  *(volatile unsigned int*)(UART_REG_DLM) = (clk_counter >> 8) & 0xFF;
d000a196:       0085d613                srli    a2,a1,0x8
d000a19a:       c150                    sw      a2,4(a0)
/proc/self/cwd/sw/device/silicon_creator/rom/uart.c:29
  *(volatile unsigned int*)(UART_REG_DLL) =  clk_counter       & 0xFF;
d000a19c:       0ff5f593                andi    a1,a1,255
d000a1a0:       c10c                    sw      a1,0(a0)
d000a1a2:       0a700593                li      a1,167
/proc/self/cwd/sw/device/silicon_creator/rom/uart.c:30
  *(volatile unsigned int*)(UART_REG_FCR) = 0xA7; //enables 16byte FIFO and clear FIFOs
d000a1a6:       c50c                    sw      a1,8(a0)
d000a1a8:       458d                    li      a1,3
/proc/self/cwd/sw/device/silicon_creator/rom/uart.c:31
  *(volatile unsigned int*)(UART_REG_LCR) = 0x03; //sets 8N1 and set DLAB to 0
d000a1aa:       c54c                    sw      a1,12(a0)
/proc/self/cwd/sw/device/silicon_creator/rom/uart.c:33

  *(volatile unsigned int*)(UART_REG_IER) = ((*(volatile unsigned int*)(UART_REG_IER)) & 0xF0) | 0x02; // set IER (interrupt enable register) on UART
d000a1ac:       414c                    lw      a1,4(a0)
d000a1ae:       0f05f593                andi    a1,a1,240
d000a1b2:       0025e593                ori     a1,a1,2
d000a1b6:       c14c                    sw      a1,4(a0)
/proc/self/cwd/sw/device/silicon_creator/rom/uart.c:34
}
d000a1b8:       8082                    ret

d000a1ba <sigverify_rsa_key_get>:
sigverify_rsa_key_get():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:183
      HARDENED_UNREACHABLE();
  }
}

rom_error_t sigverify_rsa_key_get(uint32_t key_id, lifecycle_state_t lc_state,
                                  const sigverify_rsa_key_t **key) {
d000a1ba:                    7179                       addi    sp,sp,-48
d000a1bc:                    d606                       sw      ra,44(sp)
d000a1be:                    d422                       sw      s0,40(sp)
d000a1c0:                    d226                       sw      s1,36(sp)
d000a1c2:                    d04a                       sw      s2,32(sp)
d000a1c4:                    ce4e                       sw      s3,28(sp)
d000a1c6:                    cc52                       sw      s4,24(sp)
d000a1c8:                    ca56                       sw      s5,20(sp)
d000a1ca:                    c85a                       sw      s6,16(sp)
d000a1cc:                    c65e                       sw      s7,12(sp)
d000a1ce:                    c462                       sw      s8,8(sp)
d000a1d0:                    c266                       sw      s9,4(sp)
d000a1d2:                    c06a                       sw      s10,0(sp)
d000a1d4:                    8932                       mv      s2,a2
d000a1d6:                    89ae                       mv      s3,a1
d000a1d8:                    8aaa                       mv      s5,a0
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:186
  size_t cand_key_index = UINT32_MAX;
  // Random start index that is less than `kSigverifyRsaKeysCnt`.
  size_t i = ((uint64_t)rnd_uint32() * (uint64_t)kSigverifyRsaKeysCnt) >> 32;
d000a1da:                    66e030ef           jal     ra,d000d848 <rnd_uint32>
d000a1de:                    00005597           auipc   a1,0x5
d000a1e2:                    96a58593           addi    a1,a1,-1686 # d000eb48 <kSigverifyRsaKeysCnt>
d000a1e6:                    0005ab83           lw      s7,0(a1)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a1ea:                    4581                       li      a1,0
d000a1ec:                    00005b17           auipc   s6,0x5
d000a1f0:                    964b0b13           addi    s6,s6,-1692 # d000eb50 <kSigverifyRsaKeys>
d000a1f4:                    4401                       li      s0,0
sigverify_rsa_key_get():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:188
  size_t iter_cnt = 0;
  for (; launder32(iter_cnt) < kSigverifyRsaKeysCnt; ++iter_cnt) {
d000a1f6:       /----------- 0975f163           bgeu    a1,s7,d000a278 <sigverify_rsa_key_get+0xbe>
d000a1fa:       |            00005597           auipc   a1,0x5
d000a1fe:       |            95258593           addi    a1,a1,-1710 # d000eb4c <kSigverifyRsaKeysStep>
d000a202:       |            0005ac03           lw      s8,0(a1)
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:186
  size_t i = ((uint64_t)rnd_uint32() * (uint64_t)kSigverifyRsaKeysCnt) >> 32;
d000a206:       |            02abb4b3           mulhu   s1,s7,a0
d000a20a:       |            5a7d                       li      s4,-1
d000a20c:       |            1a400c93           li      s9,420
d000a210:       |            73900d13           li      s10,1849
sigverify_rsa_key_id_get():
/proc/self/cwd/./sw/device/silicon_creator/lib/sigverify/rsa_key.h:68
d000a214:       |  /-------> 03948533           mul     a0,s1,s9
d000a218:       |  |         016505b3           add     a1,a0,s6
d000a21c:       |  |         418c                       lw      a1,0(a1)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a21e:       |  |         862e                       mv      a2,a1
sigverify_rsa_key_get():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:191
    const sigverify_rom_key_t *k = &kSigverifyRsaKeys[i];
    size_t k_id = sigverify_rsa_key_id_get(&k->key.n);
    if (launder32(k_id) == key_id) {
d000a220:       |  |  /----- 03561863           bne     a2,s5,d000a250 <sigverify_rsa_key_get+0x96>
d000a224:       |  |  |      955a                       add     a0,a0,s6
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:193
      HARDENED_CHECK_EQ(k_id, key_id);
      rom_error_t error = key_is_valid(k->key_type, lc_state, i);
d000a226:       |  |  |      1a052503           lw      a0,416(a0)
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:192
      HARDENED_CHECK_EQ(k_id, key_id);
d000a22a:       |  |  |  /-- 01558663           beq     a1,s5,d000a236 <sigverify_rsa_key_get+0x7c>
d000a22e:       |  |  |  |   0000                       unimp
d000a230:       |  |  |  |   0000                       unimp
d000a232:       |  |  |  |   0000                       unimp
d000a234:       |  |  |  |   0000                       unimp
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:193
      rom_error_t error = key_is_valid(k->key_type, lc_state, i);
d000a236:       |  |  |  \-> 85ce                       mv      a1,s3
d000a238:       |  |  |      8626                       mv      a2,s1
d000a23a:       |  |  |      207d                       jal     d000a2e8 <key_is_valid>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a23c:       |  |  |      85aa                       mv      a1,a0
sigverify_rsa_key_get():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:194
      if (launder32(error) == kErrorOk) {
d000a23e:       |  |  +----- 01a59963           bne     a1,s10,d000a250 <sigverify_rsa_key_get+0x96>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:195
        HARDENED_CHECK_EQ(error, kErrorOk);
d000a242:       |  |  |  /-- 01a50663           beq     a0,s10,d000a24e <sigverify_rsa_key_get+0x94>
d000a246:       |  |  |  |   0000                       unimp
d000a248:       |  |  |  |   0000                       unimp
d000a24a:       |  |  |  |   0000                       unimp
d000a24c:       |  |  |  |   0000                       unimp
d000a24e:       |  |  |  \-> 8a26                       mv      s4,s1
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:199
        cand_key_index = i;
      }
    }
    i += kSigverifyRsaKeysStep;
d000a250:       |  |  \----> 009c0533           add     a0,s8,s1
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a254:       |  |         862a                       mv      a2,a0
d000a256:       |  |         4581                       li      a1,0
sigverify_rsa_key_get():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:200
    if (launder32(i) >= kSigverifyRsaKeysCnt) {
d000a258:       |  |     /-- 01766363           bltu    a2,s7,d000a25e <sigverify_rsa_key_get+0xa4>
d000a25c:       |  |     |   85de                       mv      a1,s7
d000a25e:       |  |     \-> 40b504b3           sub     s1,a0,a1
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:188
  for (; launder32(iter_cnt) < kSigverifyRsaKeysCnt; ++iter_cnt) {
d000a262:       |  |         0405                       addi    s0,s0,1
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:203
      i -= kSigverifyRsaKeysCnt;
    }
    HARDENED_CHECK_LT(i, kSigverifyRsaKeysCnt);
d000a264:       |  |     /-- 0174e663           bltu    s1,s7,d000a270 <sigverify_rsa_key_get+0xb6>
d000a268:       |  |     |   0000                       unimp
d000a26a:       |  |     |   0000                       unimp
d000a26c:       |  |     |   0000                       unimp
d000a26e:       |  |     |   0000                       unimp
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a270:       |  |     \-> 8522                       mv      a0,s0
sigverify_rsa_key_get():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:188
  for (; launder32(iter_cnt) < kSigverifyRsaKeysCnt; ++iter_cnt) {
d000a272:       |  \-------- fb7561e3           bltu    a0,s7,d000a214 <sigverify_rsa_key_get+0x5a>
d000a276:       |        /-- a011                       j       d000a27a <sigverify_rsa_key_get+0xc0>
d000a278:       \--------|-> 5a7d                       li      s4,-1
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:205
  }
  HARDENED_CHECK_EQ(iter_cnt, kSigverifyRsaKeysCnt);
d000a27a:             /--\-X 01740663           beq     s0,s7,d000a286 <sigverify_rsa_key_get+0xcc>
d000a27e:             |      0000                       unimp
d000a280:             |      0000                       unimp
d000a282:             |      0000                       unimp
d000a284:             |      0000                       unimp
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a286:             \----> 8552                       mv      a0,s4
sigverify_rsa_key_get():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:207

  if (launder32(cand_key_index) < kSigverifyRsaKeysCnt) {
d000a288:             /----- 03757e63           bgeu    a0,s7,d000a2c4 <sigverify_rsa_key_get+0x10a>
d000a28c:             |      1a400513           li      a0,420
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:209
    HARDENED_CHECK_LT(cand_key_index, kSigverifyRsaKeysCnt);
    rom_error_t error = key_is_valid(kSigverifyRsaKeys[cand_key_index].key_type,
d000a290:             |      02aa0533           mul     a0,s4,a0
d000a294:             |      01650433           add     s0,a0,s6
d000a298:             |      1a042503           lw      a0,416(s0)
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:208
    HARDENED_CHECK_LT(cand_key_index, kSigverifyRsaKeysCnt);
d000a29c:             |  /-- 017a6663           bltu    s4,s7,d000a2a8 <sigverify_rsa_key_get+0xee>
d000a2a0:             |  |   0000                       unimp
d000a2a2:             |  |   0000                       unimp
d000a2a4:             |  |   0000                       unimp
d000a2a6:             |  |   0000                       unimp
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:209
    rom_error_t error = key_is_valid(kSigverifyRsaKeys[cand_key_index].key_type,
d000a2a8:             |  \-> 85ce                       mv      a1,s3
d000a2aa:             |      8652                       mv      a2,s4
d000a2ac:             |      2835                       jal     d000a2e8 <key_is_valid>
d000a2ae:             |      73900593           li      a1,1849
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:211
                                     lc_state, cand_key_index);
    HARDENED_CHECK_EQ(error, kErrorOk);
d000a2b2:             |  /-- 00b50663           beq     a0,a1,d000a2be <sigverify_rsa_key_get+0x104>
d000a2b6:             |  |   0000                       unimp
d000a2b8:             |  |   0000                       unimp
d000a2ba:             |  |   0000                       unimp
d000a2bc:             |  |   0000                       unimp
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:212
    *key = &kSigverifyRsaKeys[cand_key_index].key;
d000a2be:             |  \-> 00892023           sw      s0,0(s2)
d000a2c2:             |  /-- a029                       j       d000a2cc <sigverify_rsa_key_get+0x112>
d000a2c4:             \--|-> 02535537           lui     a0,0x2535
d000a2c8:                |   60350513           addi    a0,a0,1539 # 2535603 <WDOG_BARK_THOLD+0x24fe71b>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:217
    return error;
  }

  return kErrorSigverifyBadKey;
}
d000a2cc:                \-> 4d02                       lw      s10,0(sp)
d000a2ce:                    4c92                       lw      s9,4(sp)
d000a2d0:                    4c22                       lw      s8,8(sp)
d000a2d2:                    4bb2                       lw      s7,12(sp)
d000a2d4:                    4b42                       lw      s6,16(sp)
d000a2d6:                    4ad2                       lw      s5,20(sp)
d000a2d8:                    4a62                       lw      s4,24(sp)
d000a2da:                    49f2                       lw      s3,28(sp)
d000a2dc:                    5902                       lw      s2,32(sp)
d000a2de:                    5492                       lw      s1,36(sp)
d000a2e0:                    5422                       lw      s0,40(sp)
d000a2e2:                    50b2                       lw      ra,44(sp)
d000a2e4:                    6145                       addi    sp,sp,48
d000a2e6:                    8082                       ret

d000a2e8 <key_is_valid>:
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a2e8:                                         86ae                  mv      a3,a1
d000a2ea:                                         cf8d0737              lui     a4,0xcf8d0
d000a2ee:                                         aaa70793              addi    a5,a4,-1366 # cf8cfaaa <_stack_end+0xef8afaaa>
key_is_valid():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:161
  switch (launder32(lc_state)) {
d000a2f2:                                  /----- 04d7d663              bge     a5,a3,d000a33e <key_is_valid+0x56>
d000a2f6:                                  |      aab70713              addi    a4,a4,-1365
d000a2fa:                               /--|----- 04e68f63              beq     a3,a4,d000a358 <key_is_valid+0x70>
d000a2fe:                               |  |      0b5a7737              lui     a4,0xb5a7
d000a302:                               |  |      5e070713              addi    a4,a4,1504 # b5a75e0 <WDOG_BARK_THOLD+0xb5706f8>
d000a306:                         /-----|--|----- 08e69763              bne     a3,a4,d000a394 <key_is_valid+0xac>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:172
      HARDENED_CHECK_EQ(lc_state, kLcStateDev);
d000a30a:                         |     |  |  /-- 00e58663              beq     a1,a4,d000a316 <key_is_valid+0x2e>
d000a30e:                         |     |  |  |   0000                  unimp
d000a310:                         |     |  |  |   0000                  unimp
d000a312:                         |     |  |  |   0000                  unimp
d000a314:                         |     |  |  |   0000                  unimp
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a316:                         |     |  |  \-> 85aa                  mv      a1,a0
d000a318:                         |     |  |      7a01a6b7              lui     a3,0x7a01a
d000a31c:                         |     |  |      47168693              addi    a3,a3,1137 # 7a01a471 <_epmp_stack_guard_na4+0x42013471>
key_is_valid_in_lc_state_dev():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:83
  switch (launder32(key_type)) {
d000a320:             /-----------|-----|--|----- 0cd58f63              beq     a1,a3,d000a3fe <key_is_valid+0x116>
d000a324:             |           |     |  |      43a846b7              lui     a3,0x43a84
d000a328:             |           |     |  |      9ad68693              addi    a3,a3,-1619 # 43a839ad <_epmp_stack_guard_na4+0xba7c9ad>
d000a32c:       /-----|-----------|-----|--|----- 10d59563              bne     a1,a3,d000a436 <key_is_valid+0x14e>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:88
      HARDENED_CHECK_EQ(key_type, kSigverifyKeyTypeProd);
d000a330:       |     |           |     |  |  /-- 00d50663              beq     a0,a3,d000a33c <key_is_valid+0x54>
d000a334:       |     |           |     |  |  |   0000                  unimp
d000a336:       |     |           |     |  |  |   0000                  unimp
d000a338:       |     |           |     |  |  |   0000                  unimp
d000a33a:       |     |           |     |  |  |   0000                  unimp
d000a33c:       |  /--|-----------|-----|--|--\-X a8dd                  j       d000a432 <key_is_valid+0x14a>
d000a33e:       |  |  |           |     |  \----> 91b9b737              lui     a4,0x91b9b
d000a342:       |  |  |           |     |         68a70713              addi    a4,a4,1674 # 91b9b68a <_stack_end+0xb1b7b68a>
key_is_valid():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:161
  switch (launder32(lc_state)) {
d000a346:       |  |  |           |  /--|-------- 06e69563              bne     a3,a4,d000a3b0 <key_is_valid+0xc8>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:169
      HARDENED_CHECK_EQ(lc_state, kLcStateProdEnd);
d000a34a:       |  |  |           |  |  |     /-- 00e58663              beq     a1,a4,d000a356 <key_is_valid+0x6e>
d000a34e:       |  |  |           |  |  |     |   0000                  unimp
d000a350:       |  |  |           |  |  |     |   0000                  unimp
d000a352:       |  |  |           |  |  |     |   0000                  unimp
d000a354:       |  |  |           |  |  |     |   0000                  unimp
d000a356:       |  |  |           |  |  |  /--\-X a899                  j       d000a3ac <key_is_valid+0xc4>
d000a358:       |  |  |           |  |  \--|----> cf8d06b7              lui     a3,0xcf8d0
d000a35c:       |  |  |           |  |     |      aab68693              addi    a3,a3,-1365 # cf8cfaab <_stack_end+0xef8afaab>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:175
      HARDENED_CHECK_EQ(lc_state, kLcStateRma);
d000a360:       |  |  |           |  |     |  /-- 00d58663              beq     a1,a3,d000a36c <key_is_valid+0x84>
d000a364:       |  |  |           |  |     |  |   0000                  unimp
d000a366:       |  |  |           |  |     |  |   0000                  unimp
d000a368:       |  |  |           |  |     |  |   0000                  unimp
d000a36a:       |  |  |           |  |     |  |   0000                  unimp
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a36c:       |  |  |           |  |     |  \-> 85aa                  mv      a1,a0
d000a36e:       |  |  |           |  |     |      7a01a6b7              lui     a3,0x7a01a
d000a372:       |  |  |           |  |     |      47168693              addi    a3,a3,1137 # 7a01a471 <_epmp_stack_guard_na4+0x42013471>
key_is_valid_in_lc_state_rma():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:56
  switch (launder32(key_type)) {
d000a376:       |  |  |           |  |  /--|----- 06d58d63              beq     a1,a3,d000a3f0 <key_is_valid+0x108>
d000a37a:       |  |  |           |  |  |  |      43a846b7              lui     a3,0x43a84
d000a37e:       |  |  |           |  |  |  |      9ad68693              addi    a3,a3,-1619 # 43a839ad <_epmp_stack_guard_na4+0xba7c9ad>
d000a382:       |  |  |     /-----|--|--|--|----- 08d59c63              bne     a1,a3,d000a41a <key_is_valid+0x132>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:61
      HARDENED_CHECK_EQ(key_type, kSigverifyKeyTypeProd);
d000a386:       |  |  |     |     |  |  |  |  /-- 00d50663              beq     a0,a3,d000a392 <key_is_valid+0xaa>
d000a38a:       |  |  |     |     |  |  |  |  |   0000                  unimp
d000a38c:       |  |  |     |     |  |  |  |  |   0000                  unimp
d000a38e:       |  |  |     |     |  |  |  |  |   0000                  unimp
d000a390:       |  |  |     |     |  |  |  |  |   0000                  unimp
d000a392:       |  +--|-----|-----|--|--|--|--\-X a045                  j       d000a432 <key_is_valid+0x14a>
d000a394:       |  |  |     |     \--|--|--|----> 65f25737              lui     a4,0x65f25
d000a398:       |  |  |     |        |  |  |      20f70713              addi    a4,a4,527 # 65f2520f <_epmp_stack_guard_na4+0x2df1e20f>
key_is_valid():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:161
  switch (launder32(lc_state)) {
d000a39c:       |  |  |  /--|--------|--|--|----- 0ce69d63              bne     a3,a4,d000a476 <key_is_valid+0x18e>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:166
      HARDENED_CHECK_EQ(lc_state, kLcStateProd);
d000a3a0:       |  |  |  |  |        |  |  +----- 00e58663              beq     a1,a4,d000a3ac <key_is_valid+0xc4>
d000a3a4:       |  |  |  |  |        |  |  |      0000                  unimp
d000a3a6:       |  |  |  |  |        |  |  |      0000                  unimp
d000a3a8:       |  |  |  |  |        |  |  |      0000                  unimp
d000a3aa:       |  |  |  |  |        |  |  |      0000                  unimp
d000a3ac:       |  |  |  |  |        |  |  \----> 85b2                  mv      a1,a2
d000a3ae:       |  |  |  |  |        |  |         a0e5                  j       d000a496 <key_is_valid_in_lc_state_prod>
d000a3b0:       |  |  |  |  |        \--|-------> b2866637              lui     a2,0xb2866
d000a3b4:       |  |  |  |  |           |         fbb60613              addi    a2,a2,-69 # b2865fbb <_stack_end+0xd2845fbb>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:161
  switch (launder32(lc_state)) {
d000a3b8:       |  |  |  +--|-----------|-------- 0ac69f63              bne     a3,a2,d000a476 <key_is_valid+0x18e>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:163
      HARDENED_CHECK_EQ(lc_state, kLcStateTest);
d000a3bc:       |  |  |  |  |           |     /-- 00c58663              beq     a1,a2,d000a3c8 <key_is_valid+0xe0>
d000a3c0:       |  |  |  |  |           |     |   0000                  unimp
d000a3c2:       |  |  |  |  |           |     |   0000                  unimp
d000a3c4:       |  |  |  |  |           |     |   0000                  unimp
d000a3c6:       |  |  |  |  |           |     |   0000                  unimp
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a3c8:       |  |  |  |  |           |     \-> 85aa                  mv      a1,a0
d000a3ca:       |  |  |  |  |           |         7a01a637              lui     a2,0x7a01a
d000a3ce:       |  |  |  |  |           |         47160613              addi    a2,a2,1137 # 7a01a471 <_epmp_stack_guard_na4+0x42013471>
key_is_valid_in_lc_state_test():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:136
  switch (launder32(key_type)) {
d000a3d2:       |  |  |  |  |           |  /----- 02c58d63              beq     a1,a2,d000a40c <key_is_valid+0x124>
d000a3d6:       |  |  |  |  |           |  |      43a84637              lui     a2,0x43a84
d000a3da:       |  |  |  |  |           |  |      9ad60613              addi    a2,a2,-1619 # 43a839ad <_epmp_stack_guard_na4+0xba7c9ad>
d000a3de:       |  |  |  |  |     /-----|--|----- 06c59d63              bne     a1,a2,d000a458 <key_is_valid+0x170>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:141
      HARDENED_CHECK_EQ(key_type, kSigverifyKeyTypeProd);
d000a3e2:       |  |  |  |  |     |     |  |  /-- 00c50663              beq     a0,a2,d000a3ee <key_is_valid+0x106>
d000a3e6:       |  |  |  |  |     |     |  |  |   0000                  unimp
d000a3e8:       |  |  |  |  |     |     |  |  |   0000                  unimp
d000a3ea:       |  |  |  |  |     |     |  |  |   0000                  unimp
d000a3ec:       |  |  |  |  |     |     |  |  |   0000                  unimp
d000a3ee:       |  |  |  |  |  /--|-----|--|--\-X a049                  j       d000a470 <key_is_valid+0x188>
key_is_valid_in_lc_state_rma():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:64
      HARDENED_CHECK_EQ(key_type, kSigverifyKeyTypeDev);
d000a3f0:       |  |  |  |  |  |  |     \--|--/-X 00d50663              beq     a0,a3,d000a3fc <key_is_valid+0x114>
d000a3f4:       |  |  |  |  |  |  |        |  |   0000                  unimp
d000a3f6:       |  |  |  |  |  |  |        |  |   0000                  unimp
d000a3f8:       |  |  |  |  |  |  |        |  |   0000                  unimp
d000a3fa:       |  |  |  |  |  |  |        |  |   0000                  unimp
d000a3fc:       |  |  |  |  |  |  |     /--|--\-X a889                  j       d000a44e <key_is_valid+0x166>
key_is_valid_in_lc_state_dev():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:91
      HARDENED_CHECK_EQ(key_type, kSigverifyKeyTypeDev);
d000a3fe:       |  |  \--|--|--|--|-----|--|--/-X 00d50663              beq     a0,a3,d000a40a <key_is_valid+0x122>
d000a402:       |  |     |  |  |  |     |  |  |   0000                  unimp
d000a404:       |  |     |  |  |  |     |  |  |   0000                  unimp
d000a406:       |  |     |  |  |  |     |  |  |   0000                  unimp
d000a408:       |  |     |  |  |  |     |  |  |   0000                  unimp
d000a40a:       |  +-----|--|--|--|-----|--|--\-X a025                  j       d000a432 <key_is_valid+0x14a>
key_is_valid_in_lc_state_test():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:144
      HARDENED_CHECK_EQ(key_type, kSigverifyKeyTypeDev);
d000a40c:       |  |     |  |  |  |     |  \--/-X 00c50663              beq     a0,a2,d000a418 <key_is_valid+0x130>
d000a410:       |  |     |  |  |  |     |     |   0000                  unimp
d000a412:       |  |     |  |  |  |     |     |   0000                  unimp
d000a414:       |  |     |  |  |  |     |     |   0000                  unimp
d000a416:       |  |     |  |  |  |     |     |   0000                  unimp
d000a418:       |  |     |  |  |  |     +-----\-X a81d                  j       d000a44e <key_is_valid+0x166>
d000a41a:       |  |     |  \--|--|-----|-------> 3ff0d6b7              lui     a3,0x3ff0d
d000a41e:       |  |     |     |  |     |         81968693              addi    a3,a3,-2023 # 3ff0c819 <_epmp_stack_guard_na4+0x7f05819>
key_is_valid_in_lc_state_rma():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:56
  switch (launder32(key_type)) {
d000a422:       |  |     |     |  |  /--|-------- 04d59e63              bne     a1,a3,d000a47e <key_is_valid+0x196>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:58
      HARDENED_CHECK_EQ(key_type, kSigverifyKeyTypeTest);
d000a426:       |  +-----|-----|--|--|--|-------- 00d50663              beq     a0,a3,d000a432 <key_is_valid+0x14a>
d000a42a:       |  |     |     |  |  |  |         0000                  unimp
d000a42c:       |  |     |     |  |  |  |         0000                  unimp
d000a42e:       |  |     |     |  |  |  |         0000                  unimp
d000a430:       |  |     |     |  |  |  |         0000                  unimp
d000a432:       |  \-----|-----|--|--|--|-------> 8532                  mv      a0,a2
d000a434:       |        |     |  |  |  |         a0d1                  j       d000a4f8 <key_is_valid_in_otp>
d000a436:       \--------|-----|--|--|--|-------> 3ff0d637              lui     a2,0x3ff0d
d000a43a:                |     |  |  |  |         81960613              addi    a2,a2,-2023 # 3ff0c819 <_epmp_stack_guard_na4+0x7f05819>
key_is_valid_in_lc_state_dev():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:83
  switch (launder32(key_type)) {
d000a43e:                |     |  |  |  |  /----- 04c59463              bne     a1,a2,d000a486 <key_is_valid+0x19e>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:85
      HARDENED_CHECK_EQ(key_type, kSigverifyKeyTypeTest);
d000a442:                |     |  |  |  +--|----- 00c50663              beq     a0,a2,d000a44e <key_is_valid+0x166>
d000a446:                |     |  |  |  |  |      0000                  unimp
d000a448:                |     |  |  |  |  |      0000                  unimp
d000a44a:                |     |  |  |  |  |      0000                  unimp
d000a44c:                |     |  |  |  |  |      0000                  unimp
d000a44e:                |     |  |  |  \--|----> 02535537              lui     a0,0x2535
d000a452:                |     |  |  |     |      60350513              addi    a0,a0,1539 # 2535603 <WDOG_BARK_THOLD+0x24fe71b>
key_is_valid():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:180
}
d000a456:                |     |  |  |     |      8082                  ret
d000a458:                |     |  \--|-----|----> 3ff0d637              lui     a2,0x3ff0d
d000a45c:                |     |     |     |      81960613              addi    a2,a2,-2023 # 3ff0c819 <_epmp_stack_guard_na4+0x7f05819>
key_is_valid_in_lc_state_test():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:136
  switch (launder32(key_type)) {
d000a460:                |     |     |     |  /-- 02c59763              bne     a1,a2,d000a48e <key_is_valid+0x1a6>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:138
      HARDENED_CHECK_EQ(key_type, kSigverifyKeyTypeTest);
d000a464:                |     +-----|-----|--|-- 00c50663              beq     a0,a2,d000a470 <key_is_valid+0x188>
d000a468:                |     |     |     |  |   0000                  unimp
d000a46a:                |     |     |     |  |   0000                  unimp
d000a46c:                |     |     |     |  |   0000                  unimp
d000a46e:                |     |     |     |  |   0000                  unimp
d000a470:                |     \-----|-----|--|-> 73900513              li      a0,1849
key_is_valid():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:180
}
d000a474:                |           |     |  |   8082                  ret
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:178
      HARDENED_UNREACHABLE();
d000a476:                \-----------|-----|--|-> 0000                  unimp
d000a478:                            |     |  |   0000                  unimp
d000a47a:                            |     |  |   0000                  unimp
d000a47c:                            |     |  |   0000                  unimp
key_is_valid_in_lc_state_rma():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:67
      HARDENED_UNREACHABLE();
d000a47e:                            \-----|--|-> 0000                  unimp
d000a480:                                  |  |   0000                  unimp
d000a482:                                  |  |   0000                  unimp
d000a484:                                  |  |   0000                  unimp
key_is_valid_in_lc_state_dev():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:94
      HARDENED_UNREACHABLE();
d000a486:                                  \--|-> 0000                  unimp
d000a488:                                     |   0000                  unimp
d000a48a:                                     |   0000                  unimp
d000a48c:                                     |   0000                  unimp
key_is_valid_in_lc_state_test():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:147
      HARDENED_UNREACHABLE();
d000a48e:                                     \-> 0000                  unimp
d000a490:                                         0000                  unimp
d000a492:                                         0000                  unimp
d000a494:                                         0000                  unimp

d000a496 <key_is_valid_in_lc_state_prod>:
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a496:                 862a                  mv      a2,a0
d000a498:                 7a01a6b7              lui     a3,0x7a01a
d000a49c:                 47168693              addi    a3,a3,1137 # 7a01a471 <_epmp_stack_guard_na4+0x42013471>
key_is_valid_in_lc_state_prod():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:110
  switch (launder32(key_type)) {
d000a4a0:          /----- 02d60063              beq     a2,a3,d000a4c0 <key_is_valid_in_lc_state_prod+0x2a>
d000a4a4:          |      43a846b7              lui     a3,0x43a84
d000a4a8:          |      9ad68693              addi    a3,a3,-1619 # 43a839ad <_epmp_stack_guard_na4+0xba7c9ad>
d000a4ac:       /--|----- 02d61163              bne     a2,a3,d000a4ce <key_is_valid_in_lc_state_prod+0x38>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:115
      HARDENED_CHECK_EQ(key_type, kSigverifyKeyTypeProd);
d000a4b0:       |  |  /-- 00d50663              beq     a0,a3,d000a4bc <key_is_valid_in_lc_state_prod+0x26>
d000a4b4:       |  |  |   0000                  unimp
d000a4b6:       |  |  |   0000                  unimp
d000a4b8:       |  |  |   0000                  unimp
d000a4ba:       |  |  |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:116
      return key_is_valid_in_otp(key_index);
d000a4bc:       |  |  \-> 852e                  mv      a0,a1
d000a4be:       |  |      a82d                  j       d000a4f8 <key_is_valid_in_otp>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:118
      HARDENED_CHECK_EQ(key_type, kSigverifyKeyTypeDev);
d000a4c0:       |  \--/-X 00d50663              beq     a0,a3,d000a4cc <key_is_valid_in_lc_state_prod+0x36>
d000a4c4:       |     |   0000                  unimp
d000a4c6:       |     |   0000                  unimp
d000a4c8:       |     |   0000                  unimp
d000a4ca:       |     |   0000                  unimp
d000a4cc:       |  /--\-X a829                  j       d000a4e6 <key_is_valid_in_lc_state_prod+0x50>
d000a4ce:       \--|----> 3ff0d5b7              lui     a1,0x3ff0d
d000a4d2:          |      81958593              addi    a1,a1,-2023 # 3ff0c819 <_epmp_stack_guard_na4+0x7f05819>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:110
  switch (launder32(key_type)) {
d000a4d6:          |  /-- 00b61d63              bne     a2,a1,d000a4f0 <key_is_valid_in_lc_state_prod+0x5a>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:112
      HARDENED_CHECK_EQ(key_type, kSigverifyKeyTypeTest);
d000a4da:          +--|-- 00b50663              beq     a0,a1,d000a4e6 <key_is_valid_in_lc_state_prod+0x50>
d000a4de:          |  |   0000                  unimp
d000a4e0:          |  |   0000                  unimp
d000a4e2:          |  |   0000                  unimp
d000a4e4:          |  |   0000                  unimp
d000a4e6:          \--|-> 02535537              lui     a0,0x2535
d000a4ea:             |   60350513              addi    a0,a0,1539 # 2535603 <WDOG_BARK_THOLD+0x24fe71b>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:123
}
d000a4ee:             |   8082                  ret
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:121
      HARDENED_UNREACHABLE();
d000a4f0:             \-> 0000                  unimp
d000a4f2:                 0000                  unimp
d000a4f4:                 0000                  unimp
d000a4f6:                 0000                  unimp

d000a4f8 <key_is_valid_in_otp>:
key_is_valid_in_otp():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:27
static rom_error_t key_is_valid_in_otp(size_t key_index) {
d000a4f8:              1141                     addi    sp,sp,-16
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:29
      OTP_CTRL_PARAM_CREATOR_SW_CFG_KEY_IS_VALID_OFFSET +
d000a4fa:              c606                     sw      ra,12(sp)
d000a4fc:              c422                     sw      s0,8(sp)
d000a4fe:              0e850593                 addi    a1,a0,232
d000a502:              99f1                     andi    a1,a1,-4
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:33
      .index = (key_index % kSigverifyNumEntriesPerOtpWord) * 8,
d000a504:              00351413                 slli    s0,a0,0x3
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:36
      bitfield_field32_read(otp_read32(addr), field);
d000a508:              852e                     mv      a0,a1
d000a50a:              029030ef                 jal     ra,d000dd32 <otp_read32>
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
d000a50e:              00855533                 srl     a0,a0,s0
d000a512:              0ff57513                 andi    a0,a0,255
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a516:              862a                     mv      a2,a0
d000a518:              0a500593                 li      a1,165
key_is_valid_in_otp():
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:37
  if (launder32(is_valid) == kHardenedByteBoolTrue) {
d000a51c:       /----- 00b61b63                 bne     a2,a1,d000a532 <key_is_valid_in_otp+0x3a>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:38
    HARDENED_CHECK_EQ(is_valid, kHardenedByteBoolTrue);
d000a520:       |  /-- 00b50663                 beq     a0,a1,d000a52c <key_is_valid_in_otp+0x34>
d000a524:       |  |   0000                     unimp
d000a526:       |  |   0000                     unimp
d000a528:       |  |   0000                     unimp
d000a52a:       |  |   0000                     unimp
d000a52c:       |  \-> 73900513                 li      a0,1849
d000a530:       |  /-- a029                     j       d000a53a <key_is_valid_in_otp+0x42>
d000a532:       \--|-> 02535537                 lui     a0,0x2535
d000a536:          |   60350513                 addi    a0,a0,1539 # 2535603 <WDOG_BARK_THOLD+0x24fe71b>
/proc/self/cwd/sw/device/silicon_creator/rom/sigverify_keys.c:42
}
d000a53a:          \-> 4422                     lw      s0,8(sp)
d000a53c:              40b2                     lw      ra,12(sp)
d000a53e:              0141                     addi    sp,sp,16
d000a540:              8082                     ret

d000a542 <shutdown_init>:
shutdown_init():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:78
    default:
      return 0;
  }
}

rom_error_t shutdown_init(lifecycle_state_t lc_state) {
d000a542:                                7119                   addi    sp,sp,-128
d000a544:                                de86                   sw      ra,124(sp)
d000a546:                                dca2                   sw      s0,120(sp)
d000a548:                                daa6                   sw      s1,116(sp)
d000a54a:                                d8ca                   sw      s2,112(sp)
d000a54c:                                d6ce                   sw      s3,108(sp)
d000a54e:                                d4d2                   sw      s4,104(sp)
d000a550:                                d2d6                   sw      s5,100(sp)
d000a552:                                d0da                   sw      s6,96(sp)
d000a554:                                cede                   sw      s7,92(sp)
d000a556:                                cce2                   sw      s8,88(sp)
d000a558:                                cae6                   sw      s9,84(sp)
d000a55a:                                c8ea                   sw      s10,80(sp)
d000a55c:                                c6ee                   sw      s11,76(sp)
d000a55e:                                892a                   mv      s2,a0
d000a560:                                cf8d05b7               lui     a1,0xcf8d0
d000a564:                                aaa58613               addi    a2,a1,-1366 # cf8cfaaa <_stack_end+0xef8afaaa>
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:90
  };

  // Are we in a lifecycle state which needs alert configuration?
  uint32_t lc_shift;
  uint32_t lc_shift_masked;
  switch (launder32(lc_state)) {
d000a568:                         /----- 02a65563               bge     a2,a0,d000a592 <shutdown_init+0x50>
d000a56c:                         |      aab58593               addi    a1,a1,-1365
d000a570:                      /--|----- 04b50063               beq     a0,a1,d000a5b0 <shutdown_init+0x6e>
d000a574:                      |  |      0b5a75b7               lui     a1,0xb5a7
d000a578:                      |  |      5e058593               addi    a1,a1,1504 # b5a75e0 <WDOG_BARK_THOLD+0xb5706f8>
d000a57c:                   /--|--|----- 04b51963               bne     a0,a1,d000a5ce <shutdown_init+0x8c>
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:109
      HARDENED_CHECK_EQ(lc_state, kLcStateProdEnd);
      lc_shift = kLcShiftProdEnd;
      lc_shift_masked = launder32(kLcShiftProdEnd) ^ kLcStateProdEnd;
      break;
    case kLcStateDev:
      HARDENED_CHECK_EQ(lc_state, kLcStateDev);
d000a580:                   |  |  |  /-- 00b90663               beq     s2,a1,d000a58c <shutdown_init+0x4a>
d000a584:                   |  |  |  |   0000                   unimp
d000a586:                   |  |  |  |   0000                   unimp
d000a588:                   |  |  |  |   0000                   unimp
d000a58a:                   |  |  |  |   0000                   unimp
d000a58c:                   |  |  |  \-> 49c1                   li      s3,16
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a58e:                   |  |  |      4541                   li      a0,16
d000a590:                /--|--|--|----- a8a9                   j       d000a5ea <shutdown_init+0xa8>
d000a592:                |  |  |  \----> 91b9b5b7               lui     a1,0x91b9b
d000a596:                |  |  |         68a58593               addi    a1,a1,1674 # 91b9b68a <_stack_end+0xb1b7b68a>
shutdown_init():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:90
  switch (launder32(lc_state)) {
d000a59a:       /--------|--|--|-------- 24b51863               bne     a0,a1,d000a7ea <shutdown_init+0x2a8>
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:104
      HARDENED_CHECK_EQ(lc_state, kLcStateProdEnd);
d000a59e:       |        |  |  |     /-- 00b90663               beq     s2,a1,d000a5aa <shutdown_init+0x68>
d000a5a2:       |        |  |  |     |   0000                   unimp
d000a5a4:       |        |  |  |     |   0000                   unimp
d000a5a6:       |        |  |  |     |   0000                   unimp
d000a5a8:       |        |  |  |     |   0000                   unimp
d000a5aa:       |        |  |  |     \-> 49a1                   li      s3,8
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a5ac:       |        |  |  |         4521                   li      a0,8
d000a5ae:       |        +--|--|-------- a835                   j       d000a5ea <shutdown_init+0xa8>
d000a5b0:       |        |  |  \-------> cf8d0537               lui     a0,0xcf8d0
d000a5b4:       |        |  |            aab50513               addi    a0,a0,-1365 # cf8cfaab <_stack_end+0xef8afaab>
shutdown_init():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:114
      lc_shift = kLcShiftDev;
      lc_shift_masked = launder32(kLcShiftDev) ^ kLcStateDev;
      break;
    case kLcStateRma:
      HARDENED_CHECK_EQ(lc_state, kLcStateRma);
d000a5b8:       |        |  |        /-- 00a90663               beq     s2,a0,d000a5c4 <shutdown_init+0x82>
d000a5bc:       |        |  |        |   0000                   unimp
d000a5be:       |        |  |        |   0000                   unimp
d000a5c0:       |        |  |        |   0000                   unimp
d000a5c2:       |        |  |        |   0000                   unimp
d000a5c4:       |        |  |        \-> 49e1                   li      s3,24
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a5c6:       |        |  |            45e1                   li      a1,24
shutdown_init():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:116
      lc_shift = kLcShiftRma;
      lc_shift_masked = launder32(kLcShiftRma) ^ kLcStateRma;
d000a5c8:       |        |  |            00a5ca33               xor     s4,a1,a0
d000a5cc:       |        |  |        /-- a00d                   j       d000a5ee <shutdown_init+0xac>
d000a5ce:       |        |  \--------|-> 65f255b7               lui     a1,0x65f25
d000a5d2:       |        |           |   20f58593               addi    a1,a1,527 # 65f2520f <_epmp_stack_guard_na4+0x2df1e20f>
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:90
  switch (launder32(lc_state)) {
d000a5d6:       |  /-----|-----------|-- 24b51763               bne     a0,a1,d000a824 <shutdown_init+0x2e2>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a5da:       |  |     |           |   4501                   li      a0,0
d000a5dc:       |  |     |           |   4981                   li      s3,0
shutdown_init():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:97
      HARDENED_CHECK_EQ(lc_state, kLcStateProd);
d000a5de:       |  |     +-----------|-- 00b90663               beq     s2,a1,d000a5ea <shutdown_init+0xa8>
d000a5e2:       |  |     |           |   0000                   unimp
d000a5e4:       |  |     |           |   0000                   unimp
d000a5e6:       |  |     |           |   0000                   unimp
d000a5e8:       |  |     |           |   0000                   unimp
d000a5ea:       |  |     \-----------|-> 00b54a33               xor     s4,a0,a1
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:128
  // Each of these OTP words is composed of 4 byte enums with the enable and
  // escalate configs per alert class (a/b/c/d).
  size_t i = 0;
  rom_error_t error = kErrorOk;
  uint32_t class_enable =
      otp_read32(OTP_CTRL_PARAM_OWNER_SW_CFG_ROM_ALERT_CLASS_EN_OFFSET);
d000a5ee:       |  |                 \-> 36800513               li      a0,872
d000a5f2:       |  |                     740030ef               jal     ra,d000dd32 <otp_read32>
d000a5f6:       |  |                     842a                   mv      s0,a0
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:130
  uint32_t class_escalate =
      otp_read32(OTP_CTRL_PARAM_OWNER_SW_CFG_ROM_ALERT_ESCALATION_OFFSET);
d000a5f8:       |  |                     36c00513               li      a0,876
d000a5fc:       |  |                     736030ef               jal     ra,d000dd32 <otp_read32>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a600:       |  |                     4581                   li      a1,0
d000a602:       |  |                     5afd                   li      s5,-1
d000a604:       |  |                     460d                   li      a2,3
d000a606:       |  |                     5b7d                   li      s6,-1
shutdown_init():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:133
  alert_enable_t enable[ALERT_CLASSES];
  alert_escalate_t escalate[ALERT_CLASSES];
  for (i = 0; launder32(i) < ALERT_CLASSES; ++i) {
d000a608:       |  |              /----- 02b66e63               bltu    a2,a1,d000a644 <shutdown_init+0x102>
d000a60c:       |  |              |      4601                   li      a2,0
d000a60e:       |  |              |      1874                   addi    a3,sp,60
d000a610:       |  |              |      1078                   addi    a4,sp,44
d000a612:       |  |              |      4585                   li      a1,1
d000a614:       |  |              |      4791                   li      a5,4
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
d000a616:       |  |              |  /-> 00c454b3               srl     s1,s0,a2
d000a61a:       |  |              |  |   0ff4f493               andi    s1,s1,255
shutdown_init():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:134
    enable[i] = (alert_enable_t)bitfield_field32_read(
d000a61e:       |  |              |  |   c284                   sw      s1,0(a3)
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
d000a620:       |  |              |  |   00c554b3               srl     s1,a0,a2
d000a624:       |  |              |  |   0ff4f493               andi    s1,s1,255
shutdown_init():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:136
        class_enable, (bitfield_field32_t){.mask = 0xff, .index = i * 8});
    escalate[i] = (alert_escalate_t)bitfield_field32_read(
d000a628:       |  |              |  |   c304                   sw      s1,0(a4)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a62a:       |  |              |  |   84ae                   mv      s1,a1
shutdown_init():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:133
  for (i = 0; launder32(i) < ALERT_CLASSES; ++i) {
d000a62c:       |  |              |  |   0691                   addi    a3,a3,4
d000a62e:       |  |              |  |   0711                   addi    a4,a4,4
d000a630:       |  |              |  |   0585                   addi    a1,a1,1
d000a632:       |  |              |  |   0621                   addi    a2,a2,8
d000a634:       |  |              |  \-- fef4e1e3               bltu    s1,a5,d000a616 <shutdown_init+0xd4>
d000a638:       |  |              |      4515                   li      a0,5
d000a63a:       |  |              |      73900b13               li      s6,1849
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:139
        class_escalate, (bitfield_field32_t){.mask = 0xff, .index = i * 8});
  }
  if (i != ALERT_CLASSES) {
d000a63e:       |  |              +----- 00a58363               beq     a1,a0,d000a644 <shutdown_init+0x102>
d000a642:       |  |              |      5b7d                   li      s6,-1
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a644:       |  |              \----> 4501                   li      a0,0
d000a646:       |  |                     04000593               li      a1,64
shutdown_init():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:145
    error = kErrorUnknown;
  }

  // For each alert, read its corresponding OTP word and extract the class
  // configuration for the current lifecycle state.
  for (i = 0; launder32(i) < ALERT_HANDLER_ALERT_CLASS_SHADOWED_MULTIREG_COUNT;
d000a64a:       |  |  /----------------- 06a5e863               bltu    a1,a0,d000a6ba <shutdown_init+0x178>
d000a64e:       |  |  |                  4481                   li      s1,0
d000a650:       |  |  |                  37000413               li      s0,880
d000a654:       |  |  |                  03200a93               li      s5,50
d000a658:       |  |  |                  03c10b93               addi    s7,sp,60
d000a65c:       |  |  |                  73900c13               li      s8,1849
d000a660:       |  |  |                  04100c93               li      s9,65
d000a664:       |  |  |                  0a700d13               li      s10,167
d000a668:       |  |  |                  06400d93               li      s11,100
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:148
       ++i) {
    uint32_t value =
        otp_read32(OTP_CTRL_PARAM_OWNER_SW_CFG_ROM_ALERT_CLASSIFICATION_OFFSET +
d000a66c:       |  |  |  /-------------> 8522                   mv      a0,s0
d000a66e:       |  |  |  |               6c4030ef               jal     ra,d000dd32 <otp_read32>
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
d000a672:       |  |  |  |               01355533               srl     a0,a0,s3
d000a676:       |  |  |  |               0ff57593               andi    a1,a0,255
clsindex():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:64
  switch (cls) {
d000a67a:       |  |  |  |  /----------- 01558a63               beq     a1,s5,d000a68e <shutdown_init+0x14c>
d000a67e:       |  |  |  |  |        /-- 01a58663               beq     a1,s10,d000a68a <shutdown_init+0x148>
d000a682:       |  |  |  |  |  /-----|-- 01b59863               bne     a1,s11,d000a692 <shutdown_init+0x150>
d000a686:       |  |  |  |  |  |     |   4505                   li      a0,1
d000a688:       |  |  |  |  |  |  /--|-- a031                   j       d000a694 <shutdown_init+0x152>
d000a68a:       |  |  |  |  |  |  |  \-> 4509                   li      a0,2
d000a68c:       |  |  |  |  |  |  +----- a021                   j       d000a694 <shutdown_init+0x152>
d000a68e:       |  |  |  |  \--|--|----> 450d                   li      a0,3
d000a690:       |  |  |  |     |  +----- a011                   j       d000a694 <shutdown_init+0x152>
d000a692:       |  |  |  |     \--|----> 4501                   li      a0,0
shutdown_init():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:152
                   i * sizeof(uint32_t));
    alert_class_t cls = (alert_class_t)bitfield_field32_read(
        value, (bitfield_field32_t){.mask = 0xff, .index = lc_shift});
    rom_error_t e = alert_configure(i, cls, enable[clsindex(cls)]);
d000a694:       |  |  |  |        \----> 050a                   slli    a0,a0,0x2
d000a696:       |  |  |  |               955e                   add     a0,a0,s7
d000a698:       |  |  |  |               4110                   lw      a2,0(a0)
d000a69a:       |  |  |  |               8526                   mv      a0,s1
d000a69c:       |  |  |  |               2a41                   jal     d000a82c <alert_configure>
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:153
    if (e != kErrorOk) {
d000a69e:       |  |  |  |           /-- 01850363               beq     a0,s8,d000a6a4 <shutdown_init+0x162>
d000a6a2:       |  |  |  |           |   8b2a                   mv      s6,a0
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:146
       ++i) {
d000a6a4:       |  |  |  |           \-> 0485                   addi    s1,s1,1
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a6a6:       |  |  |  |               8526                   mv      a0,s1
shutdown_init():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:145
  for (i = 0; launder32(i) < ALERT_HANDLER_ALERT_CLASS_SHADOWED_MULTIREG_COUNT;
d000a6a8:       |  |  |  |               0411                   addi    s0,s0,4
d000a6aa:       |  |  |  \-------------- fd9561e3               bltu    a0,s9,d000a66c <shutdown_init+0x12a>
d000a6ae:       |  |  |                  04100513               li      a0,65
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:159
      // Keep going if there is an error programming one alert.  We want to
      // program them all.
      error = e;
    }
  }
  if (i != ALERT_HANDLER_ALERT_CLASS_SHADOWED_MULTIREG_COUNT) {
d000a6b2:       |  |  |              /-- 00a48363               beq     s1,a0,d000a6b8 <shutdown_init+0x176>
d000a6b6:       |  |  |              |   5b7d                   li      s6,-1
d000a6b8:       |  |  |              \-> 8ada                   mv      s5,s6
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a6ba:       |  |  \----------------> 4501                   li      a0,0
d000a6bc:       |  |                     4619                   li      a2,6
shutdown_init():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:165
    error = kErrorUnknown;
  }

  // For each local alert, read its corresponding OTP word and extract the class
  // configuration for the current lifecycle state.
  for (i = 0;
d000a6be:       |  |  /----------------- 06a66663               bltu    a2,a0,d000a72a <shutdown_init+0x1e8>
d000a6c2:       |  |  |                  4481                   li      s1,0
d000a6c4:       |  |  |                  4b000413               li      s0,1200
d000a6c8:       |  |  |                  03200b13               li      s6,50
d000a6cc:       |  |  |                  03c10b93               addi    s7,sp,60
d000a6d0:       |  |  |                  73900c13               li      s8,1849
d000a6d4:       |  |  |                  4c9d                   li      s9,7
d000a6d6:       |  |  |                  0a700d13               li      s10,167
d000a6da:       |  |  |                  06400d93               li      s11,100
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:168
       launder32(i) < ALERT_HANDLER_LOC_ALERT_CLASS_SHADOWED_MULTIREG_COUNT;
       ++i) {
    uint32_t value = otp_read32(
d000a6de:       |  |  |  /-------------> 8522                   mv      a0,s0
d000a6e0:       |  |  |  |               652030ef               jal     ra,d000dd32 <otp_read32>
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
d000a6e4:       |  |  |  |               01355533               srl     a0,a0,s3
d000a6e8:       |  |  |  |               0ff57593               andi    a1,a0,255
clsindex():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:64
  switch (cls) {
d000a6ec:       |  |  |  |  /----------- 01658a63               beq     a1,s6,d000a700 <shutdown_init+0x1be>
d000a6f0:       |  |  |  |  |        /-- 01a58663               beq     a1,s10,d000a6fc <shutdown_init+0x1ba>
d000a6f4:       |  |  |  |  |  /-----|-- 01b59863               bne     a1,s11,d000a704 <shutdown_init+0x1c2>
d000a6f8:       |  |  |  |  |  |     |   4505                   li      a0,1
d000a6fa:       |  |  |  |  |  |  /--|-- a031                   j       d000a706 <shutdown_init+0x1c4>
d000a6fc:       |  |  |  |  |  |  |  \-> 4509                   li      a0,2
d000a6fe:       |  |  |  |  |  |  +----- a021                   j       d000a706 <shutdown_init+0x1c4>
d000a700:       |  |  |  |  \--|--|----> 450d                   li      a0,3
d000a702:       |  |  |  |     |  +----- a011                   j       d000a706 <shutdown_init+0x1c4>
d000a704:       |  |  |  |     \--|----> 4501                   li      a0,0
shutdown_init():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:173
        OTP_CTRL_PARAM_OWNER_SW_CFG_ROM_LOCAL_ALERT_CLASSIFICATION_OFFSET +
        i * sizeof(uint32_t));
    alert_class_t cls = (alert_class_t)bitfield_field32_read(
        value, (bitfield_field32_t){.mask = 0xff, .index = lc_shift});
    rom_error_t e = alert_local_configure(i, cls, enable[clsindex(cls)]);
d000a706:       |  |  |  |        \----> 050a                   slli    a0,a0,0x2
d000a708:       |  |  |  |               955e                   add     a0,a0,s7
d000a70a:       |  |  |  |               4110                   lw      a2,0(a0)
d000a70c:       |  |  |  |               8526                   mv      a0,s1
d000a70e:       |  |  |  |               2af9                   jal     d000a8ec <alert_local_configure>
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:174
    if (e != kErrorOk) {
d000a710:       |  |  |  |           /-- 01850363               beq     a0,s8,d000a716 <shutdown_init+0x1d4>
d000a714:       |  |  |  |           |   8aaa                   mv      s5,a0
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:167
       ++i) {
d000a716:       |  |  |  |           \-> 0485                   addi    s1,s1,1
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a718:       |  |  |  |               8526                   mv      a0,s1
shutdown_init():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:165
  for (i = 0;
d000a71a:       |  |  |  |               0411                   addi    s0,s0,4
d000a71c:       |  |  |  \-------------- fd9561e3               bltu    a0,s9,d000a6de <shutdown_init+0x19c>
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:180
      // Keep going if there is an error programming one alert.  We want to
      // program them all.
      error = e;
    }
  }
  if (i != ALERT_HANDLER_LOC_ALERT_CLASS_SHADOWED_MULTIREG_COUNT) {
d000a720:       |  |  |                  ff948513               addi    a0,s1,-7
d000a724:       |  |  |                  00153593               seqz    a1,a0
d000a728:       |  |  |              /-- a011                   j       d000a72c <shutdown_init+0x1ea>
d000a72a:       |  |  \--------------|-> 4581                   li      a1,0
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a72c:       |  |                 \-> 4601                   li      a2,0
d000a72e:       |  |                     468d                   li      a3,3
d000a730:       |  |                     557d                   li      a0,-1
shutdown_init():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:197
      kAlertClassB,
      kAlertClassC,
      kAlertClassD,
  };
  alert_class_config_t config;
  for (i = 0; launder32(i) < ALERT_CLASSES; ++i) {
d000a732:       |  |        /----------- 0cc6ea63               bltu    a3,a2,d000a806 <shutdown_init+0x2c4>
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:185
  if ((lc_shift_masked ^ lc_state) != lc_shift) {
d000a736:       |  |        |            012a4533               xor     a0,s4,s2
d000a73a:       |  |        |            01354533               xor     a0,a0,s3
d000a73e:       |  |        |            00153513               seqz    a0,a0
d000a742:       |  |        |            8d6d                   and     a0,a0,a1
d000a744:       |  |        |        /-- e111                   bnez    a0,d000a748 <shutdown_init+0x206>
d000a746:       |  |        |        |   5afd                   li      s5,-1
d000a748:       |  |        |        \-> 4c01                   li      s8,0
d000a74a:       |  |        |            51000913               li      s2,1296
d000a74e:       |  |        |            03c10a13               addi    s4,sp,60
d000a752:       |  |        |            02c10b13               addi    s6,sp,44
d000a756:       |  |        |            4b8d                   li      s7,3
d000a758:       |  |        |            4491                   li      s1,4
d000a75a:       |  |        |            00004d17               auipc   s10,0x4
d000a75e:       |  |        |            082d0d13               addi    s10,s10,130 # d000e7dc <kSpiDeviceSfdpTable+0x6c>
d000a762:       |  |        |            73900d93               li      s11,1849
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:198
    config.enabled = enable[i];
d000a766:       |  |        |  /-------> 002c1993               slli    s3,s8,0x2
d000a76a:       |  |        |  |         013a0533               add     a0,s4,s3
d000a76e:       |  |        |  |         4108                   lw      a0,0(a0)
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:199
    config.escalation = escalate[i];
d000a770:       |  |        |  |         013b05b3               add     a1,s6,s3
d000a774:       |  |        |  |         418c                   lw      a1,0(a1)
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:198
    config.enabled = enable[i];
d000a776:       |  |        |  |         c42a                   sw      a0,8(sp)
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:199
    config.escalation = escalate[i];
d000a778:       |  |        |  |         c62e                   sw      a1,12(sp)
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:201
    config.accum_threshold =
        otp_read32(OTP_CTRL_PARAM_OWNER_SW_CFG_ROM_ALERT_ACCUM_THRESH_OFFSET +
d000a77a:       |  |        |  |         4f098513               addi    a0,s3,1264
d000a77e:       |  |        |  |         5b4030ef               jal     ra,d000dd32 <otp_read32>
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:200
    config.accum_threshold =
d000a782:       |  |        |  |         c82a                   sw      a0,16(sp)
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:204
                   i * sizeof(uint32_t));
    config.timeout_cycles =
        otp_read32(OTP_CTRL_PARAM_OWNER_SW_CFG_ROM_ALERT_TIMEOUT_CYCLES_OFFSET +
d000a784:       |  |        |  |         50098513               addi    a0,s3,1280
d000a788:       |  |        |  |         5aa030ef               jal     ra,d000dd32 <otp_read32>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a78c:       |  |        |  |         4581                   li      a1,0
shutdown_init():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:203
    config.timeout_cycles =
d000a78e:       |  |        |  |         ca2a                   sw      a0,20(sp)
d000a790:       |  |        |  |         547d                   li      s0,-1
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:207
                   i * sizeof(uint32_t));
    size_t phase = 0;
    for (; launder32(phase) < ARRAYSIZE(config.phase_cycles); ++phase) {
d000a792:       |  |        |  |  /----- 02bbe863               bltu    s7,a1,d000a7c2 <shutdown_init+0x280>
d000a796:       |  |        |  |  |      4c85                   li      s9,1
d000a798:       |  |        |  |  |      01810a13               addi    s4,sp,24
d000a79c:       |  |        |  |  |      844a                   mv      s0,s2
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:208
      config.phase_cycles[phase] = otp_read32(
d000a79e:       |  |        |  |  |  /-> 8522                   mv      a0,s0
d000a7a0:       |  |        |  |  |  |   592030ef               jal     ra,d000dd32 <otp_read32>
d000a7a4:       |  |        |  |  |  |   00aa2023               sw      a0,0(s4)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a7a8:       |  |        |  |  |  |   8566                   mv      a0,s9
shutdown_init():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:207
    for (; launder32(phase) < ARRAYSIZE(config.phase_cycles); ++phase) {
d000a7aa:       |  |        |  |  |  |   0411                   addi    s0,s0,4
d000a7ac:       |  |        |  |  |  |   0c85                   addi    s9,s9,1
d000a7ae:       |  |        |  |  |  |   0a11                   addi    s4,s4,4
d000a7b0:       |  |        |  |  |  \-- fe9567e3               bltu    a0,s1,d000a79e <shutdown_init+0x25c>
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:212
          OTP_CTRL_PARAM_OWNER_SW_CFG_ROM_ALERT_PHASE_CYCLES_OFFSET +
          (i * ARRAYSIZE(config.phase_cycles) + phase) * sizeof(uint32_t));
    }
    if (phase != ARRAYSIZE(config.phase_cycles)) {
d000a7b4:       |  |        |  |  |      4515                   li      a0,5
d000a7b6:       |  |        |  |  |  /-- 00ac8363               beq     s9,a0,d000a7bc <shutdown_init+0x27a>
d000a7ba:       |  |        |  |  |  |   5afd                   li      s5,-1
d000a7bc:       |  |        |  |  |  \-> 8456                   mv      s0,s5
d000a7be:       |  |        |  |  |      03c10a13               addi    s4,sp,60
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:216
      error = kErrorUnknown;
    }

    rom_error_t e = alert_class_configure(kClasses[i], &config);
d000a7c2:       |  |        |  |  \----> 01a98533               add     a0,s3,s10
d000a7c6:       |  |        |  |         4108                   lw      a0,0(a0)
d000a7c8:       |  |        |  |         002c                   addi    a1,sp,8
d000a7ca:       |  |        |  |         22c5                   jal     d000a9aa <alert_class_configure>
d000a7cc:       |  |        |  |         8aa2                   mv      s5,s0
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:217
    if (e != kErrorOk) {
d000a7ce:       |  |        |  |     /-- 01b50363               beq     a0,s11,d000a7d4 <shutdown_init+0x292>
d000a7d2:       |  |        |  |     |   8aaa                   mv      s5,a0
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:197
  for (i = 0; launder32(i) < ALERT_CLASSES; ++i) {
d000a7d4:       |  |        |  |     \-> 0c05                   addi    s8,s8,1
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000a7d6:       |  |        |  |         8562                   mv      a0,s8
shutdown_init():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:197
d000a7d8:       |  |        |  |         0941                   addi    s2,s2,16
d000a7da:       |  |        |  \-------- f89566e3               bltu    a0,s1,d000a766 <shutdown_init+0x224>
d000a7de:       |  |        |            4511                   li      a0,4
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:223
      // Keep going if there is an error programming an alert class. We want to
      // program them all.
      error = e;
    }
  }
  if (i != ALERT_CLASSES) {
d000a7e0:       |  |        |        /-- 00ac0363               beq     s8,a0,d000a7e6 <shutdown_init+0x2a4>
d000a7e4:       |  |        |        |   5afd                   li      s5,-1
d000a7e6:       |  |        |        \-> 8556                   mv      a0,s5
d000a7e8:       |  |        +----------- a839                   j       d000a806 <shutdown_init+0x2c4>
d000a7ea:       \--|--------|----------> b28665b7               lui     a1,0xb2866
d000a7ee:          |        |            fbb58593               addi    a1,a1,-69 # b2865fbb <_stack_end+0xd2845fbb>
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:90
  switch (launder32(lc_state)) {
d000a7f2:          +--------|----------- 02b51963               bne     a0,a1,d000a824 <shutdown_init+0x2e2>
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:92
      HARDENED_CHECK_EQ(lc_state, kLcStateTest);
d000a7f6:          |        |        /-- 00b90663               beq     s2,a1,d000a802 <shutdown_init+0x2c0>
d000a7fa:          |        |        |   0000                   unimp
d000a7fc:          |        |        |   0000                   unimp
d000a7fe:          |        |        |   0000                   unimp
d000a800:          |        |        |   0000                   unimp
d000a802:          |        |        \-> 73900513               li      a0,1849
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:227
    error = kErrorUnknown;
  }
  return error;
}
d000a806:          |        \----------> 4db6                   lw      s11,76(sp)
d000a808:          |                     4d46                   lw      s10,80(sp)
d000a80a:          |                     4cd6                   lw      s9,84(sp)
d000a80c:          |                     4c66                   lw      s8,88(sp)
d000a80e:          |                     4bf6                   lw      s7,92(sp)
d000a810:          |                     5b06                   lw      s6,96(sp)
d000a812:          |                     5a96                   lw      s5,100(sp)
d000a814:          |                     5a26                   lw      s4,104(sp)
d000a816:          |                     59b6                   lw      s3,108(sp)
d000a818:          |                     5946                   lw      s2,112(sp)
d000a81a:          |                     54d6                   lw      s1,116(sp)
d000a81c:          |                     5466                   lw      s0,120(sp)
d000a81e:          |                     50f6                   lw      ra,124(sp)
d000a820:          |                     6109                   addi    sp,sp,128
d000a822:          |                     8082                   ret
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:119
      HARDENED_UNREACHABLE();
d000a824:          \-------------------> 0000                   unimp
d000a826:                                0000                   unimp
d000a828:                                0000                   unimp
d000a82a:                                0000                   unimp

d000a82c <alert_configure>:
alert_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:22
enum {
  kBase = TOP_EARLGREY_ALERT_HANDLER_BASE_ADDR,
};

rom_error_t alert_configure(size_t index, alert_class_t cls,
                            alert_enable_t enabled) {
d000a82c:                             04000693                  li      a3,64
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:23
  if (index >= ALERT_HANDLER_ALERT_CLASS_SHADOWED_MULTIREG_COUNT) {
d000a830:                         /-- 00a6f763                  bgeu    a3,a0,d000a83e <alert_configure+0x12>
d000a834:                         |   01415537                  lui     a0,0x1415
d000a838:       /-----------------|-> 80350513                  addi    a0,a0,-2045 # 1414803 <WDOG_BARK_THOLD+0x13dd91b>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:73
      break;
    default:
      return kErrorAlertBadEnable;
  }
  return kErrorOk;
}
d000a83c:       |                 |   8082                      ret
d000a83e:       |                 \-> c01506b7                  lui     a3,0xc0150
d000a842:       |                     22068693                  addi    a3,a3,544 # c0150220 <_stack_end+0xe0130220>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:26
  index *= 4;
d000a846:       |                     00251713                  slli    a4,a0,0x2
d000a84a:       |                     09300793                  li      a5,147
d000a84e:       |                     73900513                  li      a0,1849
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:28
  switch (cls) {
d000a852:       |                 /-- 02b7d563                  bge     a5,a1,d000a87c <alert_configure+0x50>
d000a856:       |                 |   09400793                  li      a5,148
d000a85a:       |  /--------------|-- 08f58563                  beq     a1,a5,d000a8e4 <alert_configure+0xb8>
d000a85e:       |  |              |   0a700793                  li      a5,167
d000a862:       |  |     /--------|-- 02f58963                  beq     a1,a5,d000a894 <alert_configure+0x68>
d000a866:       |  |     |        |   0ee00793                  li      a5,238
d000a86a:       |  |  /--|--------|-- 06f59363                  bne     a1,a5,d000a8d0 <alert_configure+0xa4>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:31
          kBase + ALERT_HANDLER_ALERT_CLASS_SHADOWED_0_REG_OFFSET + index,
d000a86e:       |  |  |  |        |   00d705b3                  add     a1,a4,a3
abs_mmio_write32_shadowed():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:94
 *
 * @param addr the address to write to.
 * @param value the value to write.
 */
inline void abs_mmio_write32_shadowed(uint32_t addr, uint32_t value) {
  *((volatile uint32_t *)addr) = value;
d000a872:       |  |  |  |        |   0005a023                  sw      zero,0(a1)
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:95
  *((volatile uint32_t *)addr) = value;
d000a876:       |  |  |  |        |   0005a023                  sw      zero,0(a1)
d000a87a:       |  |  |  |  /-----|-- a035                      j       d000a8a6 <alert_configure+0x7a>
d000a87c:       |  |  |  |  |     \-> 03200793                  li      a5,50
alert_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:28
  switch (cls) {
d000a880:       |  |  |  |  |  /----- 00f58e63                  beq     a1,a5,d000a89c <alert_configure+0x70>
d000a884:       |  |  |  |  |  |      06400793                  li      a5,100
d000a888:       |  |  +--|--|--|----- 04f59463                  bne     a1,a5,d000a8d0 <alert_configure+0xa4>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:36
          kBase + ALERT_HANDLER_ALERT_CLASS_SHADOWED_0_REG_OFFSET + index,
d000a88c:       |  |  |  |  |  |      00d705b3                  add     a1,a4,a3
d000a890:       |  |  |  |  |  |      4785                      li      a5,1
d000a892:       |  |  |  |  |  |  /-- a801                      j       d000a8a2 <alert_configure+0x76>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:41
          kBase + ALERT_HANDLER_ALERT_CLASS_SHADOWED_0_REG_OFFSET + index,
d000a894:       |  |  |  \--|--|--|-> 00d705b3                  add     a1,a4,a3
d000a898:       |  |  |     |  |  |   4789                      li      a5,2
d000a89a:       |  |  |     |  |  +-- a021                      j       d000a8a2 <alert_configure+0x76>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:46
          kBase + ALERT_HANDLER_ALERT_CLASS_SHADOWED_0_REG_OFFSET + index,
d000a89c:       |  |  |     |  \--|-> 00d705b3                  add     a1,a4,a3
d000a8a0:       |  |  |     |     |   478d                      li      a5,3
d000a8a2:       |  |  |     |     \-> c19c                      sw      a5,0(a1)
d000a8a4:       |  |  |     |         c19c                      sw      a5,0(a1)
d000a8a6:       |  |  |     \-------> 459d                      li      a1,7
d000a8a8:       |  |  |           /-- 02b60763                  beq     a2,a1,d000a8d6 <alert_configure+0xaa>
d000a8ac:       |  |  |           |   0a900593                  li      a1,169
d000a8b0:       |  +--|-----------|-- 02b60a63                  beq     a2,a1,d000a8e4 <alert_configure+0xb8>
d000a8b4:       |  |  |           |   0d200593                  li      a1,210
d000a8b8:       |  |  |        /--|-- 02b61763                  bne     a2,a1,d000a8e6 <alert_configure+0xba>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:61
          kBase + ALERT_HANDLER_ALERT_EN_SHADOWED_0_REG_OFFSET + index, 1);
d000a8bc:       |  |  |        |  |   00e685b3                  add     a1,a3,a4
d000a8c0:       |  |  |        |  |   4605                      li      a2,1
abs_mmio_write32_shadowed():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:94
  *((volatile uint32_t *)addr) = value;
d000a8c2:       |  |  |        |  |   eec5ae23                  sw      a2,-260(a1)
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:95
  *((volatile uint32_t *)addr) = value;
d000a8c6:       |  |  |        |  |   eec5ae23                  sw      a2,-260(a1)
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000a8ca:       |  |  |        |  |   de05ac23                  sw      zero,-520(a1)
alert_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:73
}
d000a8ce:       |  |  |        |  |   8082                      ret
d000a8d0:       |  |  \--------|--|-> 02415537                  lui     a0,0x2415
d000a8d4:       +--|-----------|--|-- b795                      j       d000a838 <alert_configure+0xc>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:67
          kBase + ALERT_HANDLER_ALERT_EN_SHADOWED_0_REG_OFFSET + index, 1);
d000a8d6:       |  |           |  \-> 00e685b3                  add     a1,a3,a4
d000a8da:       |  |           |      4605                      li      a2,1
abs_mmio_write32_shadowed():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:94
  *((volatile uint32_t *)addr) = value;
d000a8dc:       |  |           |      eec5ae23                  sw      a2,-260(a1)
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:95
  *((volatile uint32_t *)addr) = value;
d000a8e0:       |  |           |      eec5ae23                  sw      a2,-260(a1)
alert_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:73
}
d000a8e4:       |  \-----------|----> 8082                      ret
d000a8e6:       |              \----> 03415537                  lui     a0,0x3415
d000a8ea:       \-------------------- b7b9                      j       d000a838 <alert_configure+0xc>

d000a8ec <alert_local_configure>:
alert_local_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:76

rom_error_t alert_local_configure(size_t index, alert_class_t cls,
                                  alert_enable_t enabled) {
d000a8ec:                             4699                      li      a3,6
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:77
  if (index >= ALERT_HANDLER_LOC_ALERT_CLASS_SHADOWED_MULTIREG_COUNT) {
d000a8ee:                         /-- 00a6f763                  bgeu    a3,a0,d000a8fc <alert_local_configure+0x10>
d000a8f2:                         |   01415537                  lui     a0,0x1415
d000a8f6:       /-----------------|-> 80350513                  addi    a0,a0,-2045 # 1414803 <WDOG_BARK_THOLD+0x13dd91b>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:127
      break;
    default:
      return kErrorAlertBadEnable;
  }
  return kErrorOk;
}
d000a8fa:       |                 |   8082                      ret
d000a8fc:       |                 \-> c01506b7                  lui     a3,0xc0150
d000a900:       |                     46068693                  addi    a3,a3,1120 # c0150460 <_stack_end+0xe0130460>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:80
  index *= 4;
d000a904:       |                     00251713                  slli    a4,a0,0x2
d000a908:       |                     09300793                  li      a5,147
d000a90c:       |                     73900513                  li      a0,1849
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:82
  switch (cls) {
d000a910:       |                 /-- 02b7d563                  bge     a5,a1,d000a93a <alert_local_configure+0x4e>
d000a914:       |                 |   09400793                  li      a5,148
d000a918:       |  /--------------|-- 08f58563                  beq     a1,a5,d000a9a2 <alert_local_configure+0xb6>
d000a91c:       |  |              |   0a700793                  li      a5,167
d000a920:       |  |     /--------|-- 02f58963                  beq     a1,a5,d000a952 <alert_local_configure+0x66>
d000a924:       |  |     |        |   0ee00793                  li      a5,238
d000a928:       |  |  /--|--------|-- 06f59363                  bne     a1,a5,d000a98e <alert_local_configure+0xa2>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:85
          kBase + ALERT_HANDLER_LOC_ALERT_CLASS_SHADOWED_0_REG_OFFSET + index,
d000a92c:       |  |  |  |        |   00d705b3                  add     a1,a4,a3
abs_mmio_write32_shadowed():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:94
  *((volatile uint32_t *)addr) = value;
d000a930:       |  |  |  |        |   0005a023                  sw      zero,0(a1)
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:95
  *((volatile uint32_t *)addr) = value;
d000a934:       |  |  |  |        |   0005a023                  sw      zero,0(a1)
d000a938:       |  |  |  |  /-----|-- a035                      j       d000a964 <alert_local_configure+0x78>
d000a93a:       |  |  |  |  |     \-> 03200793                  li      a5,50
alert_local_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:82
  switch (cls) {
d000a93e:       |  |  |  |  |  /----- 00f58e63                  beq     a1,a5,d000a95a <alert_local_configure+0x6e>
d000a942:       |  |  |  |  |  |      06400793                  li      a5,100
d000a946:       |  |  +--|--|--|----- 04f59463                  bne     a1,a5,d000a98e <alert_local_configure+0xa2>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:90
          kBase + ALERT_HANDLER_LOC_ALERT_CLASS_SHADOWED_0_REG_OFFSET + index,
d000a94a:       |  |  |  |  |  |      00d705b3                  add     a1,a4,a3
d000a94e:       |  |  |  |  |  |      4785                      li      a5,1
d000a950:       |  |  |  |  |  |  /-- a801                      j       d000a960 <alert_local_configure+0x74>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:95
          kBase + ALERT_HANDLER_LOC_ALERT_CLASS_SHADOWED_0_REG_OFFSET + index,
d000a952:       |  |  |  \--|--|--|-> 00d705b3                  add     a1,a4,a3
d000a956:       |  |  |     |  |  |   4789                      li      a5,2
d000a958:       |  |  |     |  |  +-- a021                      j       d000a960 <alert_local_configure+0x74>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:100
          kBase + ALERT_HANDLER_LOC_ALERT_CLASS_SHADOWED_0_REG_OFFSET + index,
d000a95a:       |  |  |     |  \--|-> 00d705b3                  add     a1,a4,a3
d000a95e:       |  |  |     |     |   478d                      li      a5,3
d000a960:       |  |  |     |     \-> c19c                      sw      a5,0(a1)
d000a962:       |  |  |     |         c19c                      sw      a5,0(a1)
d000a964:       |  |  |     \-------> 459d                      li      a1,7
d000a966:       |  |  |           /-- 02b60763                  beq     a2,a1,d000a994 <alert_local_configure+0xa8>
d000a96a:       |  |  |           |   0a900593                  li      a1,169
d000a96e:       |  +--|-----------|-- 02b60a63                  beq     a2,a1,d000a9a2 <alert_local_configure+0xb6>
d000a972:       |  |  |           |   0d200593                  li      a1,210
d000a976:       |  |  |        /--|-- 02b61763                  bne     a2,a1,d000a9a4 <alert_local_configure+0xb8>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:115
          kBase + ALERT_HANDLER_LOC_ALERT_EN_SHADOWED_0_REG_OFFSET + index, 1);
d000a97a:       |  |  |        |  |   00e685b3                  add     a1,a3,a4
d000a97e:       |  |  |        |  |   4605                      li      a2,1
abs_mmio_write32_shadowed():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:94
  *((volatile uint32_t *)addr) = value;
d000a980:       |  |  |        |  |   fec5a223                  sw      a2,-28(a1)
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:95
  *((volatile uint32_t *)addr) = value;
d000a984:       |  |  |        |  |   fec5a223                  sw      a2,-28(a1)
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000a988:       |  |  |        |  |   fc05a423                  sw      zero,-56(a1)
alert_local_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:127
}
d000a98c:       |  |  |        |  |   8082                      ret
d000a98e:       |  |  \--------|--|-> 02415537                  lui     a0,0x2415
d000a992:       +--|-----------|--|-- b795                      j       d000a8f6 <alert_local_configure+0xa>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:121
          kBase + ALERT_HANDLER_LOC_ALERT_EN_SHADOWED_0_REG_OFFSET + index, 1);
d000a994:       |  |           |  \-> 00e685b3                  add     a1,a3,a4
d000a998:       |  |           |      4605                      li      a2,1
abs_mmio_write32_shadowed():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:94
  *((volatile uint32_t *)addr) = value;
d000a99a:       |  |           |      fec5a223                  sw      a2,-28(a1)
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:95
  *((volatile uint32_t *)addr) = value;
d000a99e:       |  |           |      fec5a223                  sw      a2,-28(a1)
alert_local_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:127
}
d000a9a2:       |  \-----------|----> 8082                      ret
d000a9a4:       |              \----> 03415537                  lui     a0,0x3415
d000a9a8:       \-------------------- b7b9                      j       d000a8f6 <alert_local_configure+0xa>

d000a9aa <alert_class_configure>:
alert_class_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:130

rom_error_t alert_class_configure(alert_class_t cls,
                                  const alert_class_config_t *config) {
d000a9aa:                          862a                 mv      a2,a0
d000a9ac:                          02415537             lui     a0,0x2415
d000a9b0:                          0a600693             li      a3,166
d000a9b4:                          80350513             addi    a0,a0,-2045 # 2414803 <WDOG_BARK_THOLD+0x23dd91b>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:147
      reg, ALERT_HANDLER_CLASSA_CTRL_SHADOWED_MAP_E3_FIELD, 3);

  // All of the alert class register blocks are identical but at different
  // offsets.  We'll treat everything like Class A, but add in the offset
  // to the other classes.
  switch (cls) {
d000a9b8:                      /-- 00c6cd63             blt     a3,a2,d000a9d2 <alert_class_configure+0x28>
d000a9bc:                      |   03200693             li      a3,50
d000a9c0:                /-----|-- 02d60363             beq     a2,a3,d000a9e6 <alert_class_configure+0x3c>
d000a9c4:                |     |   06400693             li      a3,100
d000a9c8:       /--------|-----|-- 08d61063             bne     a2,a3,d000aa48 <alert_class_configure+0x9e>
d000a9cc:       |        |     |   03800813             li      a6,56
d000a9d0:       |        |  /--|-- a005                 j       d000a9f0 <alert_class_configure+0x46>
d000a9d2:       |        |  |  \-> 0a700693             li      a3,167
d000a9d6:       |        |  |  /-- 00d60b63             beq     a2,a3,d000a9ec <alert_class_configure+0x42>
d000a9da:       |        |  |  |   0ee00693             li      a3,238
d000a9de:       +--------|--|--|-- 06d61563             bne     a2,a3,d000aa48 <alert_class_configure+0x9e>
d000a9e2:       |        |  |  |   4801                 li      a6,0
d000a9e4:       |        |  +--|-- a031                 j       d000a9f0 <alert_class_configure+0x46>
d000a9e6:       |        \--|--|-> 0a800813             li      a6,168
d000a9ea:       |           +--|-- a019                 j       d000a9f0 <alert_class_configure+0x46>
d000a9ec:       |           |  \-> 07000813             li      a6,112
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:168
      break;
    case kAlertClassX:
    default:
      return kErrorAlertBadClass;
  }
  switch (config->enabled) {
d000a9f0:       |           \----> 0005a883             lw      a7,0(a1)
d000a9f4:       |                  471d                 li      a4,7
d000a9f6:       |                  6511                 lui     a0,0x4
d000a9f8:       |        /-------- 02e88163             beq     a7,a4,d000aa1a <alert_class_configure+0x70>
d000a9fc:       |        |         0a900713             li      a4,169
d000aa00:       |        |  /----- 00e88a63             beq     a7,a4,d000aa14 <alert_class_configure+0x6a>
d000aa04:       |        |  |      0d200513             li      a0,210
d000aa08:       |  /-----|--|----- 0aa89c63             bne     a7,a0,d000aac0 <alert_class_configure+0x116>
d000aa0c:       |  |     |  |      6511                 lui     a0,0x4
d000aa0e:       |  |     |  |      90350713             addi    a4,a0,-1789 # 3903 <_static_critical_size+0x193f>
d000aa12:       |  |     |  |  /-- a031                 j       d000aa1e <alert_class_configure+0x74>
d000aa14:       |  |     |  \--|-> 90050713             addi    a4,a0,-1792
d000aa18:       |  |     |     +-- a019                 j       d000aa1e <alert_class_configure+0x74>
d000aa1a:       |  |     \-----|-> 90150713             addi    a4,a0,-1791
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:182
    case kAlertEnableNone:
      break;
    default:
      return kErrorAlertBadEnable;
  }
  switch (config->escalation) {
d000aa1e:       |  |           \-> 41dc                 lw      a5,4(a1)
d000aa20:       |  |               04415537             lui     a0,0x4415
d000aa24:       |  |               0b800693             li      a3,184
d000aa28:       |  |               80350513             addi    a0,a0,-2045 # 4414803 <WDOG_BARK_THOLD+0x43dd91b>
d000aa2c:       |  |           /-- 00f6df63             bge     a3,a5,d000aa4a <alert_class_configure+0xa0>
d000aa30:       |  |           |   0b900693             li      a3,185
d000aa34:       |  |  /--------|-- 02d78963             beq     a5,a3,d000aa66 <alert_class_configure+0xbc>
d000aa38:       |  |  |        |   0cb00693             li      a3,203
d000aa3c:       |  |  |     /--|-- 02d78363             beq     a5,a3,d000aa62 <alert_class_configure+0xb8>
d000aa40:       |  |  |     |  |   0d100693             li      a3,209
d000aa44:       |  |  |  /--|--|-- 02d78363             beq     a5,a3,d000aa6a <alert_class_configure+0xc0>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:227
    abs_mmio_write32(kBase + ALERT_HANDLER_CLASSA_REGWEN_REG_OFFSET + offset,
                     0);
  }

  return kErrorOk;
}
d000aa48:       >--|--|--|--|--|-> 8082                 ret
d000aa4a:       |  |  |  |  |  \-> 02500693             li      a3,37
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:182
  switch (config->escalation) {
d000aa4e:       |  |  |  |  |  /-- 00d78863             beq     a5,a3,d000aa5e <alert_class_configure+0xb4>
d000aa52:       |  |  |  |  |  |   07600693             li      a3,118
d000aa56:       +--|--|--|--|--|-- fed799e3             bne     a5,a3,d000aa48 <alert_class_configure+0x9e>
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
  bitfield |= (value & field.mask) << field.index;
d000aa5a:       |  |  |  |  |  |   02076713             ori     a4,a4,32
d000aa5e:       |  |  |  |  |  \-> 01076713             ori     a4,a4,16
d000aa62:       |  |  |  |  \----> 00876713             ori     a4,a4,8
d000aa66:       |  |  \--|-------> 00476713             ori     a4,a4,4
d000aa6a:       |  |     \-------> c0150537             lui     a0,0xc0150
d000aa6e:       |  |               49850513             addi    a0,a0,1176 # c0150498 <_stack_end+0xe0130498>
alert_class_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:206
      kBase + ALERT_HANDLER_CLASSA_CTRL_SHADOWED_REG_OFFSET + offset, reg);
d000aa72:       |  |               982a                 add     a6,a6,a0
abs_mmio_write32_shadowed():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:94
  *((volatile uint32_t *)addr) = value;
d000aa74:       |  |               00e82223             sw      a4,4(a6)
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:95
  *((volatile uint32_t *)addr) = value;
d000aa78:       |  |               00e82223             sw      a4,4(a6)
alert_class_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:209
      config->accum_threshold);
d000aa7c:       |  |               4588                 lw      a0,8(a1)
abs_mmio_write32_shadowed():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:94
  *((volatile uint32_t *)addr) = value;
d000aa7e:       |  |               00a82a23             sw      a0,20(a6)
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:95
  *((volatile uint32_t *)addr) = value;
d000aa82:       |  |               00a82a23             sw      a0,20(a6)
alert_class_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:212
      config->timeout_cycles);
d000aa86:       |  |               45d8                 lw      a4,12(a1)
d000aa88:       |  |               4501                 li      a0,0
abs_mmio_write32_shadowed():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:94
  *((volatile uint32_t *)addr) = value;
d000aa8a:       |  |               00e82c23             sw      a4,24(a6)
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:95
  *((volatile uint32_t *)addr) = value;
d000aa8e:       |  |               00e82c23             sw      a4,24(a6)
d000aa92:       |  |               02080713             addi    a4,a6,32
alert_class_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:213
  for (size_t i = 0; i < 4; ++i) {
d000aa96:       |  |               05c1                 addi    a1,a1,16
d000aa98:       |  |               47c1                 li      a5,16
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:217
        config->phase_cycles[i]);
d000aa9a:       |  |           /-> 00a58633             add     a2,a1,a0
d000aa9e:       |  |           |   4210                 lw      a2,0(a2)
d000aaa0:       |  |           |   00a706b3             add     a3,a4,a0
abs_mmio_write32_shadowed():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:94
  *((volatile uint32_t *)addr) = value;
d000aaa4:       |  |           |   c290                 sw      a2,0(a3)
alert_class_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:213
  for (size_t i = 0; i < 4; ++i) {
d000aaa6:       |  |           |   0511                 addi    a0,a0,4
abs_mmio_write32_shadowed():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:95
  *((volatile uint32_t *)addr) = value;
d000aaa8:       |  |           |   c290                 sw      a2,0(a3)
alert_class_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:213
d000aaaa:       |  |           \-- fef518e3             bne     a0,a5,d000aa9a <alert_class_configure+0xf0>
d000aaae:       |  |               0d200593             li      a1,210
d000aab2:       |  |               73900513             li      a0,1849
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:220
  if (config->enabled == kAlertEnableLocked) {
d000aab6:       \--|-------------- f8b899e3             bne     a7,a1,d000aa48 <alert_class_configure+0x9e>
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000aaba:          |               00082023             sw      zero,0(a6)
alert_class_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:227
}
d000aabe:          |               8082                 ret
d000aac0:          \-------------> 03415537             lui     a0,0x3415
d000aac4:                          80350513             addi    a0,a0,-2045 # 3414803 <WDOG_BARK_THOLD+0x33dd91b>
d000aac8:                          8082                 ret

d000aaca <alert_config_crc32>:
alert_config_crc32():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:260
  for (size_t i = 0; i < num_regs; ++i, offset += sizeof(uint32_t)) {
    crc32_add_reg(ctx, offset);
  }
}

uint32_t alert_config_crc32(void) {
d000aaca:              7179                     addi    sp,sp,-48
d000aacc:              d606                     sw      ra,44(sp)
d000aace:              d422                     sw      s0,40(sp)
d000aad0:              d226                     sw      s1,36(sp)
d000aad2:              d04a                     sw      s2,32(sp)
d000aad4:              ce4e                     sw      s3,28(sp)
d000aad6:              cc52                     sw      s4,24(sp)
d000aad8:              ca56                     sw      s5,20(sp)
d000aada:              c85a                     sw      s6,16(sp)
d000aadc:              c0150537                 lui     a0,0xc0150
d000aae0:              01850913                 addi    s2,a0,24 # c0150018 <_stack_end+0xe0130018>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:262
  uint32_t ctx;
  crc32_init(&ctx);
d000aae4:              0068                     addi    a0,sp,12
d000aae6:              22ed                     jal     d000acd0 <crc32_init>
d000aae8:              4401                     li      s0,0
d000aaea:              10400493                 li      s1,260
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000aaee:          /-> 01240533                 add     a0,s0,s2
d000aaf2:          |   410c                     lw      a1,0(a0)
crc32_add_reg():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:244
  crc32_add32(ctx, abs_mmio_read32(kBase + offset));
d000aaf4:          |   0068                     addi    a0,sp,12
d000aaf6:          |   22c5                     jal     d000acd6 <crc32_add32>
crc32_add_regs():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:255
  for (size_t i = 0; i < num_regs; ++i, offset += sizeof(uint32_t)) {
d000aaf8:          |   0411                     addi    s0,s0,4
d000aafa:          \-- fe941ae3                 bne     s0,s1,d000aaee <alert_config_crc32+0x24>
d000aafe:              4401                     li      s0,0
d000ab00:              10400493                 li      s1,260
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000ab04:          /-> 00890533                 add     a0,s2,s0
d000ab08:          |   10452583                 lw      a1,260(a0)
crc32_add_reg():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:244
  crc32_add32(ctx, abs_mmio_read32(kBase + offset));
d000ab0c:          |   0068                     addi    a0,sp,12
d000ab0e:          |   22e1                     jal     d000acd6 <crc32_add32>
crc32_add_regs():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:255
  for (size_t i = 0; i < num_regs; ++i, offset += sizeof(uint32_t)) {
d000ab10:          |   0411                     addi    s0,s0,4
d000ab12:          \-- fe9419e3                 bne     s0,s1,d000ab04 <alert_config_crc32+0x3a>
d000ab16:              4401                     li      s0,0
d000ab18:              10400493                 li      s1,260
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000ab1c:          /-> 00890533                 add     a0,s2,s0
d000ab20:          |   20852583                 lw      a1,520(a0)
crc32_add_reg():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:244
  crc32_add32(ctx, abs_mmio_read32(kBase + offset));
d000ab24:          |   0068                     addi    a0,sp,12
d000ab26:          |   2a45                     jal     d000acd6 <crc32_add32>
crc32_add_regs():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:255
  for (size_t i = 0; i < num_regs; ++i, offset += sizeof(uint32_t)) {
d000ab28:          |   0411                     addi    s0,s0,4
d000ab2a:          \-- fe9419e3                 bne     s0,s1,d000ab1c <alert_config_crc32+0x52>
d000ab2e:              4401                     li      s0,0
d000ab30:              44f1                     li      s1,28
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000ab32:          /-> 00890533                 add     a0,s2,s0
d000ab36:          |   41052583                 lw      a1,1040(a0)
crc32_add_reg():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:244
  crc32_add32(ctx, abs_mmio_read32(kBase + offset));
d000ab3a:          |   0068                     addi    a0,sp,12
d000ab3c:          |   2a69                     jal     d000acd6 <crc32_add32>
crc32_add_regs():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:255
  for (size_t i = 0; i < num_regs; ++i, offset += sizeof(uint32_t)) {
d000ab3e:          |   0411                     addi    s0,s0,4
d000ab40:          \-- fe9419e3                 bne     s0,s1,d000ab32 <alert_config_crc32+0x68>
d000ab44:              4401                     li      s0,0
d000ab46:              44f1                     li      s1,28
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000ab48:          /-> 00890533                 add     a0,s2,s0
d000ab4c:          |   42c52583                 lw      a1,1068(a0)
crc32_add_reg():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:244
  crc32_add32(ctx, abs_mmio_read32(kBase + offset));
d000ab50:          |   0068                     addi    a0,sp,12
d000ab52:          |   2251                     jal     d000acd6 <crc32_add32>
crc32_add_regs():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:255
  for (size_t i = 0; i < num_regs; ++i, offset += sizeof(uint32_t)) {
d000ab54:          |   0411                     addi    s0,s0,4
d000ab56:          \-- fe9419e3                 bne     s0,s1,d000ab48 <alert_config_crc32+0x7e>
d000ab5a:              4401                     li      s0,0
d000ab5c:              44f1                     li      s1,28
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000ab5e:          /-> 00890533                 add     a0,s2,s0
d000ab62:          |   44852583                 lw      a1,1096(a0)
crc32_add_reg():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:244
  crc32_add32(ctx, abs_mmio_read32(kBase + offset));
d000ab66:          |   0068                     addi    a0,sp,12
d000ab68:          |   22bd                     jal     d000acd6 <crc32_add32>
crc32_add_regs():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:255
  for (size_t i = 0; i < num_regs; ++i, offset += sizeof(uint32_t)) {
d000ab6a:          |   0411                     addi    s0,s0,4
d000ab6c:          \-- fe9419e3                 bne     s0,s1,d000ab5e <alert_config_crc32+0x94>
d000ab70:              4a01                     li      s4,0
d000ab72:              c0150537                 lui     a0,0xc0150
d000ab76:              4b850413                 addi    s0,a0,1208 # c01504b8 <_stack_end+0xe01304b8>
d000ab7a:              03800993                 li      s3,56
d000ab7e:              4b41                     li      s6,16
d000ab80:              4a91                     li      s5,4
alert_config_crc32():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:282
  for (size_t class = 0; class < ALERT_HANDLER_PARAM_N_CLASSES; ++class) {
    enum {
      kClassStep = ALERT_HANDLER_CLASSB_REGWEN_REG_OFFSET -
                   ALERT_HANDLER_CLASSA_REGWEN_REG_OFFSET,
    };
    uint32_t classOffset = kClassStep * class;
d000ab82:       /----> 033a0533                 mul     a0,s4,s3
crc32_add_reg():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:244
  crc32_add32(ctx, abs_mmio_read32(kBase + offset));
d000ab86:       |      00a904b3                 add     s1,s2,a0
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000ab8a:       |      4804a583                 lw      a1,1152(s1)
crc32_add_reg():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:244
d000ab8e:       |      0068                     addi    a0,sp,12
d000ab90:       |      2299                     jal     d000acd6 <crc32_add32>
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000ab92:       |      4844a583                 lw      a1,1156(s1)
crc32_add_reg():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:244
d000ab96:       |      0068                     addi    a0,sp,12
d000ab98:       |      2a3d                     jal     d000acd6 <crc32_add32>
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000ab9a:       |      4944a583                 lw      a1,1172(s1)
crc32_add_reg():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:244
d000ab9e:       |      0068                     addi    a0,sp,12
d000aba0:       |      2a1d                     jal     d000acd6 <crc32_add32>
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000aba2:       |      4984a583                 lw      a1,1176(s1)
crc32_add_reg():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:244
d000aba6:       |      0068                     addi    a0,sp,12
d000aba8:       |      223d                     jal     d000acd6 <crc32_add32>
d000abaa:       |      4481                     li      s1,0
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000abac:       |  /-> 00940533                 add     a0,s0,s1
d000abb0:       |  |   410c                     lw      a1,0(a0)
crc32_add_reg():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:244
d000abb2:       |  |   0068                     addi    a0,sp,12
d000abb4:       |  |   220d                     jal     d000acd6 <crc32_add32>
crc32_add_regs():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:255
  for (size_t i = 0; i < num_regs; ++i, offset += sizeof(uint32_t)) {
d000abb6:       |  |   0491                     addi    s1,s1,4
d000abb8:       |  \-- ff649ae3                 bne     s1,s6,d000abac <alert_config_crc32+0xe2>
alert_config_crc32():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:277
  for (size_t class = 0; class < ALERT_HANDLER_PARAM_N_CLASSES; ++class) {
d000abbc:       |      0a05                     addi    s4,s4,1
d000abbe:       |      03840413                 addi    s0,s0,56
d000abc2:       \----- fd5a10e3                 bne     s4,s5,d000ab82 <alert_config_crc32+0xb8>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:299
    crc32_add_regs(
        &ctx, classOffset + ALERT_HANDLER_CLASSA_PHASE0_CYC_SHADOWED_REG_OFFSET,
        ALERT_HANDLER_PARAM_N_PHASES);
  }

  return crc32_finish(&ctx);
d000abc6:              0068                     addi    a0,sp,12
d000abc8:              2a81                     jal     d000ad18 <crc32_finish>
d000abca:              4b42                     lw      s6,16(sp)
d000abcc:              4ad2                     lw      s5,20(sp)
d000abce:              4a62                     lw      s4,24(sp)
d000abd0:              49f2                     lw      s3,28(sp)
d000abd2:              5902                     lw      s2,32(sp)
d000abd4:              5492                     lw      s1,36(sp)
d000abd6:              5422                     lw      s0,40(sp)
d000abd8:              50b2                     lw      ra,44(sp)
d000abda:              6145                     addi    sp,sp,48
d000abdc:              8082                     ret

d000abde <alert_config_check>:
alert_config_check():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:302
}

rom_error_t alert_config_check(lifecycle_state_t lc_state) {
d000abde:                             1141                      addi    sp,sp,-16
d000abe0:                             c606                      sw      ra,12(sp)
d000abe2:                             c422                      sw      s0,8(sp)
d000abe4:                             c226                      sw      s1,4(sp)
d000abe6:                             842a                      mv      s0,a0
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:303
  uint32_t crc32 = alert_config_crc32();
d000abe8:                             35cd                      jal     d000aaca <alert_config_crc32>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000abea:                             85a2                      mv      a1,s0
d000abec:                             cf8d0637                  lui     a2,0xcf8d0
d000abf0:                             aaa60693                  addi    a3,a2,-1366 # cf8cfaaa <_stack_end+0xef8afaaa>
alert_config_check():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:303
d000abf4:                             84aa                      mv      s1,a0
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:305
  rom_error_t res = lc_state ^ crc32;
  switch (launder32(lc_state)) {
d000abf6:                      /----- 02b6d563                  bge     a3,a1,d000ac20 <alert_config_check+0x42>
d000abfa:                      |      aab60513                  addi    a0,a2,-1365
d000abfe:                   /--|----- 04a58063                  beq     a1,a0,d000ac3e <alert_config_check+0x60>
d000ac02:                   |  |      0b5a7537                  lui     a0,0xb5a7
d000ac06:                   |  |      5e050513                  addi    a0,a0,1504 # b5a75e0 <WDOG_BARK_THOLD+0xb5706f8>
d000ac0a:                /--|--|----- 04a59763                  bne     a1,a0,d000ac58 <alert_config_check+0x7a>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:324
      HARDENED_CHECK_EQ(lc_state, kLcStateProdEnd);
      res ^= otp_read32(
          OTP_CTRL_PARAM_OWNER_SW_CFG_ROM_ALERT_DIGEST_PROD_END_OFFSET);
      break;
    case kLcStateDev:
      HARDENED_CHECK_EQ(lc_state, kLcStateDev);
d000ac0e:                |  |  |  /-- 00a40663                  beq     s0,a0,d000ac1a <alert_config_check+0x3c>
d000ac12:                |  |  |  |   0000                      unimp
d000ac14:                |  |  |  |   0000                      unimp
d000ac16:                |  |  |  |   0000                      unimp
d000ac18:                |  |  |  |   0000                      unimp
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:326
      res ^=
          otp_read32(OTP_CTRL_PARAM_OWNER_SW_CFG_ROM_ALERT_DIGEST_DEV_OFFSET);
d000ac1a:                |  |  |  \-> 55800513                  li      a0,1368
d000ac1e:             /--|--|--|----- a899                      j       d000ac74 <alert_config_check+0x96>
d000ac20:             |  |  |  \----> 91b9b537                  lui     a0,0x91b9b
d000ac24:             |  |  |         68a50513                  addi    a0,a0,1674 # 91b9b68a <_stack_end+0xb1b7b68a>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:305
  switch (launder32(lc_state)) {
d000ac28:       /-----|--|--|-------- 08a59063                  bne     a1,a0,d000aca8 <alert_config_check+0xca>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:319
      HARDENED_CHECK_EQ(lc_state, kLcStateProdEnd);
d000ac2c:       |     |  |  |     /-- 00a40663                  beq     s0,a0,d000ac38 <alert_config_check+0x5a>
d000ac30:       |     |  |  |     |   0000                      unimp
d000ac32:       |     |  |  |     |   0000                      unimp
d000ac34:       |     |  |  |     |   0000                      unimp
d000ac36:       |     |  |  |     |   0000                      unimp
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:320
      res ^= otp_read32(
d000ac38:       |     |  |  |     \-> 55400513                  li      a0,1364
d000ac3c:       |     +--|--|-------- a825                      j       d000ac74 <alert_config_check+0x96>
d000ac3e:       |     |  |  \-------> cf8d0537                  lui     a0,0xcf8d0
d000ac42:       |     |  |            aab50513                  addi    a0,a0,-1365 # cf8cfaab <_stack_end+0xef8afaab>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:329
      break;
    case kLcStateRma:
      HARDENED_CHECK_EQ(lc_state, kLcStateRma);
d000ac46:       |     |  |        /-- 00a40663                  beq     s0,a0,d000ac52 <alert_config_check+0x74>
d000ac4a:       |     |  |        |   0000                      unimp
d000ac4c:       |     |  |        |   0000                      unimp
d000ac4e:       |     |  |        |   0000                      unimp
d000ac50:       |     |  |        |   0000                      unimp
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:331
      res ^=
          otp_read32(OTP_CTRL_PARAM_OWNER_SW_CFG_ROM_ALERT_DIGEST_RMA_OFFSET);
d000ac52:       |     |  |        \-> 55c00513                  li      a0,1372
d000ac56:       |     +--|----------- a839                      j       d000ac74 <alert_config_check+0x96>
d000ac58:       |     |  \----------> 65f25537                  lui     a0,0x65f25
d000ac5c:       |     |               20f50513                  addi    a0,a0,527 # 65f2520f <_epmp_stack_guard_na4+0x2df1e20f>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:305
  switch (launder32(lc_state)) {
d000ac60:       |  /--|-------------- 06a59463                  bne     a1,a0,d000acc8 <alert_config_check+0xea>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:314
      HARDENED_CHECK_EQ(lc_state, kLcStateProd);
d000ac64:       |  |  |           /-- 00a40663                  beq     s0,a0,d000ac70 <alert_config_check+0x92>
d000ac68:       |  |  |           |   0000                      unimp
d000ac6a:       |  |  |           |   0000                      unimp
d000ac6c:       |  |  |           |   0000                      unimp
d000ac6e:       |  |  |           |   0000                      unimp
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:316
          otp_read32(OTP_CTRL_PARAM_OWNER_SW_CFG_ROM_ALERT_DIGEST_PROD_OFFSET);
d000ac70:       |  |  |           \-> 55000513                  li      a0,1360
d000ac74:       |  |  \-------------> 0be030ef                  jal     ra,d000dd32 <otp_read32>
d000ac78:       |  |     /----------> 0084c5b3                  xor     a1,s1,s0
d000ac7c:       |  |     |            8d2d                      xor     a0,a0,a1
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000ac7e:       |  |     |            862a                      mv      a2,a0
d000ac80:       |  |     |            73900593                  li      a1,1849
alert_config_check():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:336
      break;
    default:
      HARDENED_UNREACHABLE();
  }
  if (launder32(res) != kErrorOk) {
d000ac84:       |  |     |  /-------- 00b61963                  bne     a2,a1,d000ac96 <alert_config_check+0xb8>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:339
    return kErrorAlertBadCrc32;
  }
  HARDENED_CHECK_EQ(res, kErrorOk);
d000ac88:       |  |     |  |  /----- 00b50663                  beq     a0,a1,d000ac94 <alert_config_check+0xb6>
d000ac8c:       |  |     |  |  |      0000                      unimp
d000ac8e:       |  |     |  |  |      0000                      unimp
d000ac90:       |  |     |  |  |      0000                      unimp
d000ac92:       |  |     |  |  |      0000                      unimp
d000ac94:       |  |     |  |  \--/-X a029                      j       d000ac9e <alert_config_check+0xc0>
d000ac96:       |  |     |  \-----|-> 05415537                  lui     a0,0x5415
d000ac9a:       |  |     |        |   80350513                  addi    a0,a0,-2045 # 5414803 <WDOG_BARK_THOLD+0x53dd91b>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:341
  return res;
}
d000ac9e:       |  |     |        \-> 4492                      lw      s1,4(sp)
d000aca0:       |  |     |            4422                      lw      s0,8(sp)
d000aca2:       |  |     |            40b2                      lw      ra,12(sp)
d000aca4:       |  |     |            0141                      addi    sp,sp,16
d000aca6:       |  |     |            8082                      ret
d000aca8:       \--|-----|----------> b2866537                  lui     a0,0xb2866
d000acac:          |     |            fbb50613                  addi    a2,a0,-69 # b2865fbb <_stack_end+0xd2845fbb>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:305
  switch (launder32(lc_state)) {
d000acb0:          +-----|----------- 00c59c63                  bne     a1,a2,d000acc8 <alert_config_check+0xea>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:307
      HARDENED_CHECK_EQ(lc_state, kLcStateTest);
d000acb4:          |     |        /-- 00c40663                  beq     s0,a2,d000acc0 <alert_config_check+0xe2>
d000acb8:          |     |        |   0000                      unimp
d000acba:          |     |        |   0000                      unimp
d000acbc:          |     |        |   0000                      unimp
d000acbe:          |     |        |   0000                      unimp
d000acc0:          |     |        \-> 88250513                  addi    a0,a0,-1918
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:311
      res ^= crc32 ^ kMask;
d000acc4:          |     |            8d25                      xor     a0,a0,s1
d000acc6:          |     \----------- bf4d                      j       d000ac78 <alert_config_check+0x9a>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/alert.c:334
      HARDENED_UNREACHABLE();
d000acc8:          \----------------> 0000                      unimp
d000acca:                             0000                      unimp
d000accc:                             0000                      unimp
d000acce:                             0000                      unimp

d000acd0 <crc32_init>:
crc32_init():
/proc/self/cwd/sw/device/silicon_creator/lib/crc32.c:18
   * CRC32 polynomial.
   */
  kCrc32Poly = 0xedb88320,
};

void crc32_init(uint32_t *ctx) { *ctx = UINT32_MAX; }
d000acd0:       55fd                    li      a1,-1
d000acd2:       c10c                    sw      a1,0(a0)
d000acd4:       8082                    ret

d000acd6 <crc32_add32>:
crc32_add32():
/proc/self/cwd/sw/device/silicon_creator/lib/crc32.c:39
      *ctx ^= kCrc32Poly;
    }
  }
}

void crc32_add32(uint32_t *ctx, uint32_t word) {
d000acd6:                 1141                  addi    sp,sp,-16
d000acd8:                 4681                  li      a3,0
d000acda:                 c62e                  sw      a1,12(sp)
d000acdc:                 4110                  lw      a2,0(a0)
d000acde:                 edb88737              lui     a4,0xedb88
d000ace2:                 32070713              addi    a4,a4,800 # edb88320 <_stack_end+0xdb68320>
d000ace6:                 4891                  li      a7,4
d000ace8:                 00c10813              addi    a6,sp,12
crc32_add8():
/proc/self/cwd/sw/device/silicon_creator/lib/crc32.c:29
  *ctx ^= byte;
d000acec:       /-------> 0ff5f593              andi    a1,a1,255
d000acf0:       |         8e2d                  xor     a2,a2,a1
d000acf2:       |         45a1                  li      a1,8
/proc/self/cwd/sw/device/silicon_creator/lib/crc32.c:31
    bool lsb = *ctx & 1;
d000acf4:       |  /----> 00167793              andi    a5,a2,1
/proc/self/cwd/sw/device/silicon_creator/lib/crc32.c:32
    *ctx >>= 1;
d000acf8:       |  |      8205                  srli    a2,a2,0x1
/proc/self/cwd/sw/device/silicon_creator/lib/crc32.c:33
    if (lsb) {
d000acfa:       |  |  /-- c391                  beqz    a5,d000acfe <crc32_add32+0x28>
d000acfc:       |  |  |   8e39                  xor     a2,a2,a4
/proc/self/cwd/sw/device/silicon_creator/lib/crc32.c:30
  for (size_t i = 0; i < 8; ++i) {
d000acfe:       |  |  \-> 15fd                  addi    a1,a1,-1
d000ad00:       |  \----- f9f5                  bnez    a1,d000acf4 <crc32_add32+0x1e>
crc32_add32():
/proc/self/cwd/sw/device/silicon_creator/lib/crc32.c:41
  char *bytes = (char *)&word;
  for (size_t i = 0; i < sizeof(uint32_t); ++i) {
d000ad02:       |         0685                  addi    a3,a3,1
d000ad04:       |     /-- 01168763              beq     a3,a7,d000ad12 <crc32_add32+0x3c>
d000ad08:       |     |   00d805b3              add     a1,a6,a3
/proc/self/cwd/sw/device/silicon_creator/lib/crc32.c:42
    crc32_add8(ctx, bytes[i]);
d000ad0c:       |     |   0005c583              lbu     a1,0(a1)
d000ad10:       \-----|-- bff1                  j       d000acec <crc32_add32+0x16>
d000ad12:             \-> c110                  sw      a2,0(a0)
/proc/self/cwd/sw/device/silicon_creator/lib/crc32.c:44
  }
}
d000ad14:                 0141                  addi    sp,sp,16
d000ad16:                 8082                  ret

d000ad18 <crc32_finish>:
crc32_finish():
/proc/self/cwd/sw/device/silicon_creator/lib/crc32.c:64
  for (; len > 0; --len, ++data) {
    crc32_add8(ctx, *data);
  }
}

uint32_t crc32_finish(const uint32_t *ctx) { return *ctx ^ UINT32_MAX; }
d000ad18:       4108                    lw      a0,0(a0)
d000ad1a:       fff54513                not     a0,a0
d000ad1e:       8082                    ret

d000ad20 <ast_check>:
ast_check():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ast.c:26

enum {
  kBase = TOP_EARLGREY_SENSOR_CTRL_BASE_ADDR,
};

rom_error_t ast_check(lifecycle_state_t lc_state) {
d000ad20:                          1141                 addi    sp,sp,-16
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000ad22:                          c606                 sw      ra,12(sp)
d000ad24:                          85aa                 mv      a1,a0
d000ad26:                          cf8d0637             lui     a2,0xcf8d0
d000ad2a:                          aaa60693             addi    a3,a2,-1366 # cf8cfaaa <_stack_end+0xef8afaaa>
ast_check():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ast.c:30
  // In some lifecycle states we want to continue the boot process even if the
  // AST is not initialized. Note that in these states OTP may not have been
  // configured.
  switch (launder32(lc_state)) {
d000ad2e:                   /----- 02b6d363             bge     a3,a1,d000ad54 <ast_check+0x34>
d000ad32:                   |      aab60613             addi    a2,a2,-1365
d000ad36:                /--|----- 02c58c63             beq     a1,a2,d000ad6e <ast_check+0x4e>
d000ad3a:                |  |      0b5a7637             lui     a2,0xb5a7
d000ad3e:                |  |      5e060613             addi    a2,a2,1504 # b5a75e0 <WDOG_BARK_THOLD+0xb5706f8>
d000ad42:             /--|--|----- 04c59163             bne     a1,a2,d000ad84 <ast_check+0x64>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ast.c:38
      return kErrorOk;
    case kLcStateRma:
      HARDENED_CHECK_EQ(lc_state, kLcStateRma);
      return kErrorOk;
    case kLcStateDev:
      HARDENED_CHECK_EQ(lc_state, kLcStateDev);
d000ad46:             |  |  |  /-- 00c50663             beq     a0,a2,d000ad52 <ast_check+0x32>
d000ad4a:             |  |  |  |   0000                 unimp
d000ad4c:             |  |  |  |   0000                 unimp
d000ad4e:             |  |  |  |   0000                 unimp
d000ad50:             |  |  |  |   0000                 unimp
d000ad52:          /--|--|--|--\-X a0a9                 j       d000ad9c <ast_check+0x7c>
d000ad54:          |  |  |  \----> 91b9b637             lui     a2,0x91b9b
d000ad58:          |  |  |         68a60613             addi    a2,a2,1674 # 91b9b68a <_stack_end+0xb1b7b68a>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ast.c:30
  switch (launder32(lc_state)) {
d000ad5c:       /--|--|--|-------- 0ac59c63             bne     a1,a2,d000ae14 <ast_check+0xf4>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ast.c:44
      break;
    case kLcStateProd:
      HARDENED_CHECK_EQ(lc_state, kLcStateProd);
      break;
    case kLcStateProdEnd:
      HARDENED_CHECK_EQ(lc_state, kLcStateProdEnd);
d000ad60:       |  |  |  |     /-- 00c50663             beq     a0,a2,d000ad6c <ast_check+0x4c>
d000ad64:       |  |  |  |     |   0000                 unimp
d000ad66:       |  |  |  |     |   0000                 unimp
d000ad68:       |  |  |  |     |   0000                 unimp
d000ad6a:       |  |  |  |     |   0000                 unimp
d000ad6c:       |  +--|--|-----\-X a805                 j       d000ad9c <ast_check+0x7c>
d000ad6e:       |  |  |  \-------> cf8d05b7             lui     a1,0xcf8d0
d000ad72:       |  |  |            aab58593             addi    a1,a1,-1365 # cf8cfaab <_stack_end+0xef8afaab>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ast.c:35
      HARDENED_CHECK_EQ(lc_state, kLcStateRma);
d000ad76:       |  |  |        /-- 00b50663             beq     a0,a1,d000ad82 <ast_check+0x62>
d000ad7a:       |  |  |        |   0000                 unimp
d000ad7c:       |  |  |        |   0000                 unimp
d000ad7e:       |  |  |        |   0000                 unimp
d000ad80:       |  |  |        |   0000                 unimp
d000ad82:       |  |  |  /-----\-X a06d                 j       d000ae2c <ast_check+0x10c>
d000ad84:       |  |  \--|-------> 65f25637             lui     a2,0x65f25
d000ad88:       |  |     |         20f60613             addi    a2,a2,527 # 65f2520f <_epmp_stack_guard_na4+0x2df1e20f>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ast.c:30
  switch (launder32(lc_state)) {
d000ad8c:       |  |  /--|-------- 0ac59563             bne     a1,a2,d000ae36 <ast_check+0x116>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ast.c:41
      HARDENED_CHECK_EQ(lc_state, kLcStateProd);
d000ad90:       |  +--|--|-------- 00c50663             beq     a0,a2,d000ad9c <ast_check+0x7c>
d000ad94:       |  |  |  |         0000                 unimp
d000ad96:       |  |  |  |         0000                 unimp
d000ad98:       |  |  |  |         0000                 unimp
d000ad9a:       |  |  |  |         0000                 unimp
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ast.c:52
      HARDENED_UNREACHABLE();
  }

  // OTP can be configured to skip AST initialization. In this situation we do
  // not check that AST_INIT_DONE is set.
  uint32_t en = otp_read32(OTP_CTRL_PARAM_CREATOR_SW_CFG_AST_INIT_EN_OFFSET);
d000ad9c:       |  \--|--|-------> 0dc00513             li      a0,220
d000ada0:       |     |  |         793020ef             jal     ra,d000dd32 <otp_read32>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000ada4:       |     |  |         862a                 mv      a2,a0
d000ada6:       |     |  |         45a5                 li      a1,9
ast_check():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ast.c:53
  if (launder32(en) == kMultiBitBool4False) {
d000ada8:       |     |  |  /----- 00b61963             bne     a2,a1,d000adba <ast_check+0x9a>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ast.c:54
    HARDENED_CHECK_EQ(en, kMultiBitBool4False);
d000adac:       |     |  |  |  /-- 00b50663             beq     a0,a1,d000adb8 <ast_check+0x98>
d000adb0:       |     |  |  |  |   0000                 unimp
d000adb2:       |     |  |  |  |   0000                 unimp
d000adb4:       |     |  |  |  |   0000                 unimp
d000adb6:       |     |  |  |  |   0000                 unimp
d000adb8:       |     |  +--|--\-X a895                 j       d000ae2c <ast_check+0x10c>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ast.c:62

  // AST initialization may take up to 100us. It is most likely already complete
  // at this point but for resilience poll for up to 100us.
  uint32_t mcycle;
  rom_error_t res = kErrorAstInitNotDone;
  CSR_WRITE(CSR_REG_MCYCLE, 0);
d000adba:       |     |  |  \----> b0001073             csrw    mcycle,zero
d000adbe:       |     |  |         00004517             auipc   a0,0x4
d000adc2:       |     |  |         7ca50513             addi    a0,a0,1994 # d000f588 <kAstCheckPollCpuCycles>
d000adc6:       |     |  |         00052803             lw      a6,0(a0)
d000adca:       |     |  |         01415537             lui     a0,0x1415
d000adce:       |     |  |         30d50693             addi    a3,a0,781 # 141530d <WDOG_BARK_THOLD+0x13de425>
d000add2:       |     |  |         c0490637             lui     a2,0xc0490
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ast.c:64
  do {
    CSR_READ(CSR_REG_MCYCLE, &mcycle);
d000add6:       |     |  |  /----> b0002773             csrr    a4,mcycle
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000adda:       |     |  |  |      5248                 lw      a0,36(a2)
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
                               bitfield_bit32_to_field32(bit_index)) == 0x1u;
d000addc:       |     |  |  |      00157793             andi    a5,a0,1
d000ade0:       |     |  |  |      63100513             li      a0,1585
ast_init_done():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ast.c:90

  // The code below reads the AST_INIT_DONE bit twice and modifies `res` with
  // the result of each attempt. `res` should be `kHardenedBoolTrue` if all
  // attempts return true.
  hardened_bool_t res = 0x631;
  res |= done_bit_get() << 3;
d000ade4:       |     |  |  |  /-- c399                 beqz    a5,d000adea <ast_check+0xca>
d000ade6:       |     |  |  |  |   63900513             li      a0,1593
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000adea:       |     |  |  |  \-> 525c                 lw      a5,36(a2)
ast_init_done():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ast.c:91
  res |= done_bit_get() << 8;
d000adec:       |     |  |  |      07a2                 slli    a5,a5,0x8
d000adee:       |     |  |  |      1007f793             andi    a5,a5,256
d000adf2:       |     |  |  |      00f565b3             or      a1,a0,a5
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ast.c:93

  if (res != kHardenedBoolTrue) {
d000adf6:       |     |  |  |      8c758793             addi    a5,a1,-1849
d000adfa:       |     |  |  |      73900513             li      a0,1849
d000adfe:       |     |  |  |      00f037b3             snez    a5,a5
d000ae02:       |     |  |  |  /-- 00a58363             beq     a1,a0,d000ae08 <ast_check+0xe8>
d000ae06:       |     |  |  |  |   8536                 mv      a0,a3
d000ae08:       |     |  |  |  \-> 010735b3             sltu    a1,a4,a6
d000ae0c:       |     |  |  |      8dfd                 and     a1,a1,a5
d000ae0e:       |     |  |  |      86aa                 mv      a3,a0
d000ae10:       |     |  |  \----- f1f9                 bnez    a1,d000add6 <ast_check+0xb6>
d000ae12:       |     |  |     /-- a839                 j       d000ae30 <ast_check+0x110>
d000ae14:       \-----|--|-----|-> b2866637             lui     a2,0xb2866
d000ae18:             |  |     |   fbb60613             addi    a2,a2,-69 # b2865fbb <_stack_end+0xd2845fbb>
ast_check():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ast.c:30
  switch (launder32(lc_state)) {
d000ae1c:             +--|-----|-- 00c59d63             bne     a1,a2,d000ae36 <ast_check+0x116>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ast.c:32
      HARDENED_CHECK_EQ(lc_state, kLcStateTest);
d000ae20:             |  +-----|-- 00c50663             beq     a0,a2,d000ae2c <ast_check+0x10c>
d000ae24:             |  |     |   0000                 unimp
d000ae26:             |  |     |   0000                 unimp
d000ae28:             |  |     |   0000                 unimp
d000ae2a:             |  |     |   0000                 unimp
d000ae2c:             |  \-----|-> 73900513             li      a0,1849
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ast.c:75
}
d000ae30:             |        \-> 40b2                 lw      ra,12(sp)
d000ae32:             |            0141                 addi    sp,sp,16
d000ae34:             |            8082                 ret
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ast.c:47
      HARDENED_UNREACHABLE();
d000ae36:             \----------> 0000                 unimp
d000ae38:                          0000                 unimp
d000ae3a:                          0000                 unimp
d000ae3c:                          0000                 unimp

d000ae3e <flash_ctrl_init>:
flash_ctrl_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:295
  const info_cfg_regs_t regs = info_cfg_regs(info_page);
  sec_mmio_write32(regs.cfg_addr, 0);
  sec_mmio_write32(regs.cfg_wen_addr, 0);
}

void flash_ctrl_init(void) {
d000ae3e:       1101                    addi    sp,sp,-32
d000ae40:       ce06                    sw      ra,28(sp)
d000ae42:       cc22                    sw      s0,24(sp)
d000ae44:       ca26                    sw      s1,20(sp)
d000ae46:       c84a                    sw      s2,16(sp)
d000ae48:       c1000537                lui     a0,0xc1000
d000ae4c:       4585                    li      a1,1
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000ae4e:       cd0c                    sw      a1,24(a0)
flash_ctrl_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:305
  // Initialize the flash controller.
  abs_mmio_write32(kBase + FLASH_CTRL_INIT_REG_OFFSET,
                   bitfield_bit32_write(0, FLASH_CTRL_INIT_VAL_BIT, true));
  // Configure default scrambling, ECC, and HE settings for the data partition.
  uint32_t otp_val =
      otp_read32(OTP_CTRL_PARAM_CREATOR_SW_CFG_FLASH_DATA_DEFAULT_CFG_OFFSET);
d000ae50:       0f000513                li      a0,240
d000ae54:       6df020ef                jal     ra,d000dd32 <otp_read32>
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
  return (bitfield >> field.index) & field.mask;
d000ae58:       0ff57593                andi    a1,a0,255
d000ae5c:       00855613                srli    a2,a0,0x8
d000ae60:       0ff67613                andi    a2,a2,255
d000ae64:       8141                    srli    a0,a0,0x10
d000ae66:       0ff57513                andi    a0,a0,255
flash_ctrl_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:312
      .scrambling =
          bitfield_field32_read(otp_val, FLASH_CTRL_OTP_FIELD_SCRAMBLING),
      .ecc = bitfield_field32_read(otp_val, FLASH_CTRL_OTP_FIELD_ECC),
      .he = bitfield_field32_read(otp_val, FLASH_CTRL_OTP_FIELD_HE),
  };
  flash_ctrl_data_default_cfg_set(data_default_cfg);
d000ae6a:       c02e                    sw      a1,0(sp)
d000ae6c:       c232                    sw      a2,4(sp)
d000ae6e:       c42a                    sw      a0,8(sp)
d000ae70:       850a                    mv      a0,sp
d000ae72:       20b1                    jal     d000aebe <flash_ctrl_data_default_cfg_set>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:315
  // Configure scrambling, ECC, and HE for `boot_data` pages.
  otp_val =
      otp_read32(OTP_CTRL_PARAM_CREATOR_SW_CFG_FLASH_INFO_BOOT_DATA_CFG_OFFSET);
d000ae74:       0f400513                li      a0,244
d000ae78:       6bb020ef                jal     ra,d000dd32 <otp_read32>
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
d000ae7c:       0ff57913                andi    s2,a0,255
d000ae80:       00855593                srli    a1,a0,0x8
d000ae84:       0ff5f493                andi    s1,a1,255
d000ae88:       8141                    srli    a0,a0,0x10
d000ae8a:       0ff57413                andi    s0,a0,255
flash_ctrl_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:322
      .scrambling =
          bitfield_field32_read(otp_val, FLASH_CTRL_OTP_FIELD_SCRAMBLING),
      .ecc = bitfield_field32_read(otp_val, FLASH_CTRL_OTP_FIELD_ECC),
      .he = bitfield_field32_read(otp_val, FLASH_CTRL_OTP_FIELD_HE),
  };
  flash_ctrl_info_cfg_set(kFlashCtrlInfoPageBootData0, boot_data_cfg);
d000ae8e:       c04a                    sw      s2,0(sp)
d000ae90:       c226                    sw      s1,4(sp)
d000ae92:       c422                    sw      s0,8(sp)
d000ae94:       fa38d537                lui     a0,0xfa38d
d000ae98:       9f650513                addi    a0,a0,-1546 # fa38c9f6 <_stack_end+0x1a36c9f6>
d000ae9c:       858a                    mv      a1,sp
d000ae9e:       209d                    jal     d000af04 <flash_ctrl_info_cfg_set>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:323
  flash_ctrl_info_cfg_set(kFlashCtrlInfoPageBootData1, boot_data_cfg);
d000aea0:       c04a                    sw      s2,0(sp)
d000aea2:       c226                    sw      s1,4(sp)
d000aea4:       c422                    sw      s0,8(sp)
d000aea6:       389c4537                lui     a0,0x389c4
d000aeaa:       49e50513                addi    a0,a0,1182 # 389c449e <_epmp_stack_guard_na4+0x9bd49e>
d000aeae:       858a                    mv      a1,sp
d000aeb0:       2891                    jal     d000af04 <flash_ctrl_info_cfg_set>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:324
}
d000aeb2:       4942                    lw      s2,16(sp)
d000aeb4:       44d2                    lw      s1,20(sp)
d000aeb6:       4462                    lw      s0,24(sp)
d000aeb8:       40f2                    lw      ra,28(sp)
d000aeba:       6105                    addi    sp,sp,32
d000aebc:       8082                    ret

d000aebe <flash_ctrl_data_default_cfg_set>:
flash_ctrl_data_default_cfg_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:495
  reg = bitfield_field32_write(
      reg, FLASH_CTRL_BANK0_INFO0_PAGE_CFG_0_ERASE_EN_0_FIELD, perms.erase);
  sec_mmio_write32(cfg_addr, reg);
}

void flash_ctrl_data_default_cfg_set(flash_ctrl_cfg_t cfg) {
d000aebe:       1141                    addi    sp,sp,-16
d000aec0:       c606                    sw      ra,12(sp)
d000aec2:       c422                    sw      s0,8(sp)
d000aec4:       c226                    sw      s1,4(sp)
d000aec6:       842a                    mv      s0,a0
d000aec8:       c1000537                lui     a0,0xc1000
d000aecc:       09050493                addi    s1,a0,144 # c1000090 <_stack_end+0xe0fe0090>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:499
  SEC_MMIO_ASSERT_WRITE_INCREMENT(kFlashCtrlSecMmioDataDefaultCfgSet, 1);

  // Read first to preserve permission bits.
  uint32_t reg = sec_mmio_read32(kBase + FLASH_CTRL_DEFAULT_REGION_REG_OFFSET);
d000aed0:       8526                    mv      a0,s1
d000aed2:       6c3020ef                jal     ra,d000dd94 <sec_mmio_read32>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:501
  reg = bitfield_field32_write(reg, FLASH_CTRL_DEFAULT_REGION_SCRAMBLE_EN_FIELD,
                               cfg.scrambling);
d000aed6:       400c                    lw      a1,0(s0)
d000aed8:       ff001637                lui     a2,0xff001
d000aedc:       167d                    addi    a2,a2,-1
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:75
  bitfield &= ~(field.mask << field.index);
d000aede:       8d71                    and     a0,a0,a2
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
  bitfield |= (value & field.mask) << field.index;
d000aee0:       05f2                    slli    a1,a1,0x1c
flash_ctrl_data_default_cfg_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:503
  reg = bitfield_field32_write(reg, FLASH_CTRL_DEFAULT_REGION_ECC_EN_FIELD,
                               cfg.ecc);
d000aee2:       4050                    lw      a2,4(s0)
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
d000aee4:       81c1                    srli    a1,a1,0x10
d000aee6:       8d4d                    or      a0,a0,a1
flash_ctrl_data_default_cfg_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:505
  reg = bitfield_field32_write(reg, FLASH_CTRL_DEFAULT_REGION_HE_EN_FIELD,
                               cfg.he);
d000aee8:       440c                    lw      a1,8(s0)
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
d000aeea:       0672                    slli    a2,a2,0x1c
d000aeec:       8231                    srli    a2,a2,0xc
d000aeee:       8d51                    or      a0,a0,a2
d000aef0:       05f2                    slli    a1,a1,0x1c
d000aef2:       81a1                    srli    a1,a1,0x8
d000aef4:       8dc9                    or      a1,a1,a0
flash_ctrl_data_default_cfg_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:506
  sec_mmio_write32(kBase + FLASH_CTRL_DEFAULT_REGION_REG_OFFSET, reg);
d000aef6:       8526                    mv      a0,s1
d000aef8:       4492                    lw      s1,4(sp)
d000aefa:       4422                    lw      s0,8(sp)
d000aefc:       40b2                    lw      ra,12(sp)
d000aefe:       0141                    addi    sp,sp,16
d000af00:       7490206f                j       d000de48 <sec_mmio_write32>

d000af04 <flash_ctrl_info_cfg_set>:
flash_ctrl_info_cfg_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:510
}

void flash_ctrl_info_cfg_set(flash_ctrl_info_page_t info_page,
                             flash_ctrl_cfg_t cfg) {
d000af04:       1141                    addi    sp,sp,-16
d000af06:       c606                    sw      ra,12(sp)
d000af08:       c422                    sw      s0,8(sp)
d000af0a:       c226                    sw      s1,4(sp)
d000af0c:       842e                    mv      s0,a1
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:513
  SEC_MMIO_ASSERT_WRITE_INCREMENT(kFlashCtrlSecMmioInfoCfgSet, 1);

  const uint32_t cfg_addr = info_cfg_regs(info_page).cfg_addr;
d000af0e:       2d11                    jal     d000b522 <info_cfg_regs>
d000af10:       84ae                    mv      s1,a1
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:515
  // Read first to preserve permission bits.
  uint32_t reg = sec_mmio_read32(cfg_addr);
d000af12:       852e                    mv      a0,a1
d000af14:       681020ef                jal     ra,d000dd94 <sec_mmio_read32>
d000af18:       f00105b7                lui     a1,0xf0010
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:520
  reg = bitfield_field32_write(
      reg, FLASH_CTRL_BANK0_INFO0_PAGE_CFG_0_EN_0_FIELD, kMultiBitBool4True);
  reg = bitfield_field32_write(
      reg, FLASH_CTRL_BANK0_INFO0_PAGE_CFG_0_SCRAMBLE_EN_0_FIELD,
      cfg.scrambling);
d000af1c:       4010                    lw      a2,0(s0)
d000af1e:       15c1                    addi    a1,a1,-16
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:75
  bitfield &= ~(field.mask << field.index);
d000af20:       8d6d                    and     a0,a0,a1
flash_ctrl_info_cfg_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:522
  reg = bitfield_field32_write(
      reg, FLASH_CTRL_BANK0_INFO0_PAGE_CFG_0_ECC_EN_0_FIELD, cfg.ecc);
d000af22:       404c                    lw      a1,4(s0)
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
  bitfield |= (value & field.mask) << field.index;
d000af24:       0672                    slli    a2,a2,0x1c
flash_ctrl_info_cfg_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:524
  reg = bitfield_field32_write(
      reg, FLASH_CTRL_BANK0_INFO0_PAGE_CFG_0_HE_EN_0_FIELD, cfg.he);
d000af26:       4414                    lw      a3,8(s0)
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
d000af28:       8231                    srli    a2,a2,0xc
d000af2a:       05f2                    slli    a1,a1,0x1c
d000af2c:       81a1                    srli    a1,a1,0x8
d000af2e:       06f2                    slli    a3,a3,0x1c
d000af30:       8291                    srli    a3,a3,0x4
d000af32:       8d51                    or      a0,a0,a2
d000af34:       8d4d                    or      a0,a0,a1
d000af36:       8d55                    or      a0,a0,a3
d000af38:       00656593                ori     a1,a0,6
flash_ctrl_info_cfg_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:525
  sec_mmio_write32(cfg_addr, reg);
d000af3c:       8526                    mv      a0,s1
d000af3e:       4492                    lw      s1,4(sp)
d000af40:       4422                    lw      s0,8(sp)
d000af42:       40b2                    lw      ra,12(sp)
d000af44:       0141                    addi    sp,sp,16
d000af46:       7030206f                j       d000de48 <sec_mmio_write32>

d000af4a <transaction_start>:
transaction_start():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:87
  abs_mmio_write32(kBase + FLASH_CTRL_ADDR_REG_OFFSET, params.addr);
d000af4a:                 410c                  lw      a1,0(a0)
d000af4c:                 c1000637              lui     a2,0xc1000
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000af50:                 d24c                  sw      a1,36(a2)
transaction_start():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:94
  switch (launder32(params.erase_type)) {
d000af52:                 4510                  lw      a2,8(a0)
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:90
      bitfield_bit32_read(params.partition, FLASH_CTRL_PARTITION_BIT_IS_INFO);
d000af54:                 454c                  lw      a1,12(a0)
d000af56:                 af0eb6b7              lui     a3,0xaf0eb
d000af5a:                 b8b68693              addi    a3,a3,-1141 # af0eab8b <_stack_end+0xcf0cab8b>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:94
  switch (launder32(params.erase_type)) {
d000af5e:          /----- 00d61b63              bne     a2,a3,d000af74 <transaction_start+0x2a>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:100
      HARDENED_CHECK_EQ(params.erase_type, kFlashCtrlEraseTypePage);
d000af62:          |      4518                  lw      a4,8(a0)
d000af64:          |      4601                  li      a2,0
d000af66:          |  /-- 00d70663              beq     a4,a3,d000af72 <transaction_start+0x28>
d000af6a:          |  |   0000                  unimp
d000af6c:          |  |   0000                  unimp
d000af6e:          |  |   0000                  unimp
d000af70:          |  |   0000                  unimp
d000af72:       /--|--\-X a005                  j       d000af92 <transaction_start+0x48>
d000af74:       |  \----> 8032a6b7              lui     a3,0x8032a
d000af78:       |         be968693              addi    a3,a3,-1047 # 80329be9 <_stack_end+0xa0309be9>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:94
  switch (launder32(params.erase_type)) {
d000af7c:       |  /----- 04d61163              bne     a2,a3,d000afbe <transaction_start+0x74>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:96
      HARDENED_CHECK_EQ(params.erase_type, kFlashCtrlEraseTypeBank);
d000af80:       |  |      4510                  lw      a2,8(a0)
d000af82:       |  |  /-- 00d60663              beq     a2,a3,d000af8e <transaction_start+0x44>
d000af86:       |  |  |   0000                  unimp
d000af88:       |  |  |   0000                  unimp
d000af8a:       |  |  |   0000                  unimp
d000af8c:       |  |  |   0000                  unimp
d000af8e:       |  |  \-> 08000613              li      a2,128
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:108
      bitfield_field32_write(reg, FLASH_CTRL_CONTROL_OP_FIELD, params.op_type);
d000af92:       \--|----> 4154                  lw      a3,4(a0)
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:115
                               params.word_count - 1);
d000af94:          |      4908                  lw      a0,16(a0)
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
d000af96:          |      0692                  slli    a3,a3,0x4
d000af98:          |      0306f693              andi    a3,a3,48
d000af9c:          |      05a2                  slli    a1,a1,0x8
d000af9e:          |      0542                  slli    a0,a0,0x10
d000afa0:          |      0fff0737              lui     a4,0xfff0
d000afa4:          |      953a                  add     a0,a0,a4
d000afa6:          |      8d79                  and     a0,a0,a4
d000afa8:          |      7005f593              andi    a1,a1,1792
d000afac:          |      8dd1                  or      a1,a1,a2
d000afae:          |      8dd5                  or      a1,a1,a3
d000afb0:          |      8d4d                  or      a0,a0,a1
d000afb2:          |      00156513              ori     a0,a0,1
d000afb6:          |      c10005b7              lui     a1,0xc1000
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000afba:          |      d188                  sw      a0,32(a1)
transaction_start():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:117
}
d000afbc:          |      8082                  ret
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:104
      HARDENED_UNREACHABLE();
d000afbe:          \----> 0000                  unimp
d000afc0:                 0000                  unimp
d000afc2:                 0000                  unimp
d000afc4:                 0000                  unimp

d000afc6 <flash_ctrl_info_read>:
flash_ctrl_info_read():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:359
                                 void *data) {
d000afc6:              7179                     addi    sp,sp,-48
d000afc8:              d606                     sw      ra,44(sp)
d000afca:              d422                     sw      s0,40(sp)
d000afcc:              d226                     sw      s1,36(sp)
d000afce:              d04a                     sw      s2,32(sp)
d000afd0:              8436                     mv      s0,a3
d000afd2:              84b2                     mv      s1,a2
d000afd4:              892e                     mv      s2,a1
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:360
  const uint32_t addr = info_page_addr(info_page) + offset;
d000afd6:              208d                     jal     d000b038 <info_page_addr>
d000afd8:              954a                     add     a0,a0,s2
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:361
  transaction_start((transaction_params_t){
d000afda:              c42a                     sw      a0,8(sp)
d000afdc:              c602                     sw      zero,12(sp)
d000afde:              af0eb537                 lui     a0,0xaf0eb
d000afe2:              b8b50513                 addi    a0,a0,-1141 # af0eab8b <_stack_end+0xcf0cab8b>
d000afe6:              c82a                     sw      a0,16(sp)
d000afe8:              4505                     li      a0,1
d000afea:              ca2a                     sw      a0,20(sp)
d000afec:              cc26                     sw      s1,24(sp)
d000afee:              0028                     addi    a0,sp,8
d000aff0:              3fa9                     jal     d000af4a <transaction_start>
fifo_read():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:128
  for (size_t i = 0; i < word_count; ++i) {
d000aff2:       /----- c889                     beqz    s1,d000b004 <flash_ctrl_info_read+0x3e>
d000aff4:       |      c1000537                 lui     a0,0xc1000
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000aff8:       |  /-> 1b052583                 lw      a1,432(a0) # c10001b0 <_stack_end+0xe0fe01b0>
write_32():
/proc/self/cwd/./sw/device/lib/base/memory.h:146
d000affc:       |  |   c00c                     sw      a1,0(s0)
fifo_read():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:128
d000affe:       |  |   14fd                     addi    s1,s1,-1
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:130
    data = (char *)data + sizeof(uint32_t);
d000b000:       |  |   0411                     addi    s0,s0,4
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:128
  for (size_t i = 0; i < word_count; ++i) {
d000b002:       |  \-- f8fd                     bnez    s1,d000aff8 <flash_ctrl_info_read+0x32>
d000b004:       \----> c10005b7                 lui     a1,0xc1000
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000b008:          /-> 16c5a503                 lw      a0,364(a1) # c100016c <_stack_end+0xe0fe016c>
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
                               bitfield_bit32_to_field32(bit_index)) == 0x1u;
d000b00c:          |   00157613                 andi    a2,a0,1
wait_for_done():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:159
  } while (!bitfield_bit32_read(op_status, FLASH_CTRL_OP_STATUS_DONE_BIT));
d000b010:          \-- de65                     beqz    a2,d000b008 <flash_ctrl_info_read+0x42>
d000b012:              c10005b7                 lui     a1,0xc1000
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000b016:              1605a623                 sw      zero,364(a1) # c100016c <_stack_end+0xe0fe016c>
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
d000b01a:              00257593                 andi    a1,a0,2
d000b01e:              73900513                 li      a0,1849
d000b022:          /-- c589                     beqz    a1,d000b02c <flash_ctrl_info_read+0x66>
d000b024:          |   02464537                 lui     a0,0x2464
d000b028:          |   30d50513                 addi    a0,a0,781 # 246430d <WDOG_BARK_THOLD+0x242d425>
flash_ctrl_info_read():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:370
  return wait_for_done(kErrorFlashCtrlInfoRead);
d000b02c:          \-> 5902                     lw      s2,32(sp)
d000b02e:              5492                     lw      s1,36(sp)
d000b030:              5422                     lw      s0,40(sp)
d000b032:              50b2                     lw      ra,44(sp)
d000b034:              6145                     addi    sp,sp,48
d000b036:              8082                     ret

d000b038 <info_page_addr>:
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000b038:                                                        85aa                   mv      a1,a0
d000b03a:                                                        f56af637               lui     a2,0xf56af
d000b03e:                                                        4ba60613               addi    a2,a2,1210 # f56af4ba <_stack_end+0x1568f4ba>
info_page_addr():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:227
  switch (launder32(info_page)) {
d000b042:                                                 /----- 04b64063               blt     a2,a1,d000b082 <info_page_addr+0x4a>
d000b046:                                                 |      ad887637               lui     a2,0xad887
d000b04a:                                                 |      d3a60613               addi    a2,a2,-710 # ad886d3a <_stack_end+0xcd866d3a>
d000b04e:                                              /--|----- 06b64863               blt     a2,a1,d000b0be <info_page_addr+0x86>
d000b052:                                              |  |      a4f6f637               lui     a2,0xa4f6f
d000b056:                                              |  |      6c260693               addi    a3,a2,1730 # a4f6f6c2 <_stack_end+0xc4f4f6c2>
d000b05a:                                        /-----|--|----- 0cb6d263               bge     a3,a1,d000b11e <info_page_addr+0xe6>
d000b05e:                                        |     |  |      6c360613               addi    a2,a2,1731
d000b062:                            /-----------|-----|--|----- 12c58663               beq     a1,a2,d000b18e <info_page_addr+0x156>
d000b066:                            |           |     |  |      ad3b6637               lui     a2,0xad3b6
d000b06a:                            |           |     |  |      bee60613               addi    a2,a2,-1042 # ad3b5bee <_stack_end+0xcd395bee>
d000b06e:             /--------------|-----------|-----|--|----- 18c59063               bne     a1,a2,d000b1ee <info_page_addr+0x1b6>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:228
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_PAGE_ADDR_CASE_)
d000b072:             |              |           |     |  |  /-- 00c50663               beq     a0,a2,d000b07e <info_page_addr+0x46>
d000b076:             |              |           |     |  |  |   0000                   unimp
d000b078:             |              |           |     |  |  |   0000                   unimp
d000b07a:             |              |           |     |  |  |   0000                   unimp
d000b07c:             |              |           |     |  |  |   0000                   unimp
d000b07e:             |              |           |     |  |  \-> 6589                   lui     a1,0x2
d000b080:       /-----|--------------|-----------|-----|--|----- ac81                   j       d000b2d0 <info_page_addr+0x298>
d000b082:       |     |              |           |     |  \----> 238cf637               lui     a2,0x238cf
d000b086:       |     |              |           |     |         15b60613               addi    a2,a2,347 # 238cf15b <WDOG_BARK_THOLD+0x23898273>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:227
  switch (launder32(info_page)) {
d000b08a:       |     |              |           |     |  /----- 06b64263               blt     a2,a1,d000b0ee <info_page_addr+0xb6>
d000b08e:       |     |              |           |     |  |      fa38d637               lui     a2,0xfa38d
d000b092:       |     |              |           |     |  |      9f560693               addi    a3,a2,-1547 # fa38c9f5 <_stack_end+0x1a36c9f5>
d000b096:       |     |              |           |  /--|--|----- 0ab6d263               bge     a3,a1,d000b13a <info_page_addr+0x102>
d000b09a:       |     |              |           |  |  |  |      9f660613               addi    a2,a2,-1546
d000b09e:       |     |              |  /--------|--|--|--|----- 10c58463               beq     a1,a2,d000b1a6 <info_page_addr+0x16e>
d000b0a2:       |     |              |  |        |  |  |  |      10adc637               lui     a2,0x10adc
d000b0a6:       |     |              |  |        |  |  |  |      6aa60613               addi    a2,a2,1706 # 10adc6aa <WDOG_BARK_THOLD+0x10aa57c2>
d000b0aa:       |     |  /-----------|--|--------|--|--|--|----- 16c59063               bne     a1,a2,d000b20a <info_page_addr+0x1d2>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:228
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_PAGE_ADDR_CASE_)
d000b0ae:       |     |  |           |  |        |  |  |  |  /-- 00c50663               beq     a0,a2,d000b0ba <info_page_addr+0x82>
d000b0b2:       |     |  |           |  |        |  |  |  |  |   0000                   unimp
d000b0b4:       |     |  |           |  |        |  |  |  |  |   0000                   unimp
d000b0b6:       |     |  |           |  |        |  |  |  |  |   0000                   unimp
d000b0b8:       |     |  |           |  |        |  |  |  |  |   0000                   unimp
d000b0ba:       |     |  |           |  |        |  |  |  |  \-> 6585                   lui     a1,0x1
d000b0bc:       +-----|--|-----------|--|--------|--|--|--|----- ac11                   j       d000b2d0 <info_page_addr+0x298>
d000b0be:       |     |  |           |  |        |  |  \--|----> e3ffb637               lui     a2,0xe3ffb
d000b0c2:       |     |  |           |  |        |  |     |      c8560693               addi    a3,a2,-891 # e3ffac85 <_stack_end+0x3fdac85>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:227
  switch (launder32(info_page)) {
d000b0c6:       |     |  |           |  |        |  |  /--|----- 08b6d863               bge     a3,a1,d000b156 <info_page_addr+0x11e>
d000b0ca:       |     |  |           |  |        |  |  |  |      c8660613               addi    a2,a2,-890
d000b0ce:       |     |  |           |  |  /-----|--|--|--|----- 0ec58863               beq     a1,a2,d000b1be <info_page_addr+0x186>
d000b0d2:       |     |  |           |  |  |     |  |  |  |      ec309637               lui     a2,0xec309
d000b0d6:       |     |  |           |  |  |     |  |  |  |      46160613               addi    a2,a2,1121 # ec309461 <_stack_end+0xc2e9461>
d000b0da:       |     |  |  /--------|--|--|-----|--|--|--|----- 14c59663               bne     a1,a2,d000b226 <info_page_addr+0x1ee>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:228
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_PAGE_ADDR_CASE_)
d000b0de:       |     |  |  |        |  |  |     |  |  |  |  /-- 00c50663               beq     a0,a2,d000b0ea <info_page_addr+0xb2>
d000b0e2:       |     |  |  |        |  |  |     |  |  |  |  |   0000                   unimp
d000b0e4:       |     |  |  |        |  |  |     |  |  |  |  |   0000                   unimp
d000b0e6:       |     |  |  |        |  |  |     |  |  |  |  |   0000                   unimp
d000b0e8:       |     |  |  |        |  |  |     |  |  |  |  |   0000                   unimp
d000b0ea:       |     |  |  |        |  |  |     |  |  |  |  \-> 6535                   lui     a0,0xd
d000b0ec:       |  /--|--|--|--------|--|--|-----|--|--|--|----- a2c5                   j       d000b2cc <info_page_addr+0x294>
d000b0ee:       |  |  |  |  |        |  |  |     |  |  |  \----> 5f072637               lui     a2,0x5f072
d000b0f2:       |  |  |  |  |        |  |  |     |  |  |         77d60693               addi    a3,a2,1917 # 5f07277d <_epmp_stack_guard_na4+0x2706b77d>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:227
  switch (launder32(info_page)) {
d000b0f6:       |  |  |  |  |        |  |  |     |  |  |  /----- 06b6de63               bge     a3,a1,d000b172 <info_page_addr+0x13a>
d000b0fa:       |  |  |  |  |        |  |  |     |  |  |  |      77e60613               addi    a2,a2,1918
d000b0fe:       |  |  |  |  |        |  |  |  /--|--|--|--|----- 0cc58c63               beq     a1,a2,d000b1d6 <info_page_addr+0x19e>
d000b102:       |  |  |  |  |        |  |  |  |  |  |  |  |      6c86e637               lui     a2,0x6c86e
d000b106:       |  |  |  |  |        |  |  |  |  |  |  |  |      98060613               addi    a2,a2,-1664 # 6c86d980 <_epmp_stack_guard_na4+0x34866980>
d000b10a:       |  |  |  |  |     /--|--|--|--|--|--|--|--|----- 12c59c63               bne     a1,a2,d000b242 <info_page_addr+0x20a>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:228
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_PAGE_ADDR_CASE_)
d000b10e:       |  |  |  |  |     |  |  |  |  |  |  |  |  |  /-- 00c50663               beq     a0,a2,d000b11a <info_page_addr+0xe2>
d000b112:       |  |  |  |  |     |  |  |  |  |  |  |  |  |  |   0000                   unimp
d000b114:       |  |  |  |  |     |  |  |  |  |  |  |  |  |  |   0000                   unimp
d000b116:       |  |  |  |  |     |  |  |  |  |  |  |  |  |  |   0000                   unimp
d000b118:       |  |  |  |  |     |  |  |  |  |  |  |  |  |  |   0000                   unimp
d000b11a:       |  |  |  |  |     |  |  |  |  |  |  |  |  |  \-> 6511                   lui     a0,0x4
d000b11c:       |  +--|--|--|-----|--|--|--|--|--|--|--|--|----- aa45                   j       d000b2cc <info_page_addr+0x294>
d000b11e:       |  |  |  |  |     |  |  |  |  |  \--|--|--|----> 9dc42637               lui     a2,0x9dc42
d000b122:       |  |  |  |  |     |  |  |  |  |     |  |  |      c3360613               addi    a2,a2,-973 # 9dc41c33 <_stack_end+0xbdc21c33>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:227
  switch (launder32(info_page)) {
d000b126:       |  |  |  |  |     |  |  |  |  |  /--|--|--|----- 12c59c63               bne     a1,a2,d000b25e <info_page_addr+0x226>
d000b12a:       |  |  |  |  |     |  |  |  |  |  |  |  |  |      4581                   li      a1,0
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:228
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_PAGE_ADDR_CASE_)
d000b12c:       |  |  |  |  |     |  |  |  |  |  |  |  |  |  /-- 00c50663               beq     a0,a2,d000b138 <info_page_addr+0x100>
d000b130:       |  |  |  |  |     |  |  |  |  |  |  |  |  |  |   0000                   unimp
d000b132:       |  |  |  |  |     |  |  |  |  |  |  |  |  |  |   0000                   unimp
d000b134:       |  |  |  |  |     |  |  |  |  |  |  |  |  |  |   0000                   unimp
d000b136:       |  |  |  |  |     |  |  |  |  |  |  |  |  |  |   0000                   unimp
d000b138:       +--|--|--|--|-----|--|--|--|--|--|--|--|--|--\-X aa61                   j       d000b2d0 <info_page_addr+0x298>
d000b13a:       |  |  |  |  |     |  |  |  |  |  |  \--|--|----> f56af637               lui     a2,0xf56af
d000b13e:       |  |  |  |  |     |  |  |  |  |  |     |  |      4bb60613               addi    a2,a2,1211 # f56af4bb <_stack_end+0x1568f4bb>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:227
  switch (launder32(info_page)) {
d000b142:       |  |  |  |  |     |  |  |  |  |  |  /--|--|----- 12c59c63               bne     a1,a2,d000b27a <info_page_addr+0x242>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:228
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_PAGE_ADDR_CASE_)
d000b146:       |  |  |  |  |     |  |  |  |  |  |  |  |  |  /-- 00c50663               beq     a0,a2,d000b152 <info_page_addr+0x11a>
d000b14a:       |  |  |  |  |     |  |  |  |  |  |  |  |  |  |   0000                   unimp
d000b14c:       |  |  |  |  |     |  |  |  |  |  |  |  |  |  |   0000                   unimp
d000b14e:       |  |  |  |  |     |  |  |  |  |  |  |  |  |  |   0000                   unimp
d000b150:       |  |  |  |  |     |  |  |  |  |  |  |  |  |  |   0000                   unimp
d000b152:       |  |  |  |  |     |  |  |  |  |  |  |  |  |  \-> 6505                   lui     a0,0x1
d000b154:       |  +--|--|--|-----|--|--|--|--|--|--|--|--|----- aaa5                   j       d000b2cc <info_page_addr+0x294>
d000b156:       |  |  |  |  |     |  |  |  |  |  |  |  \--|----> ad887637               lui     a2,0xad887
d000b15a:       |  |  |  |  |     |  |  |  |  |  |  |     |      d3b60613               addi    a2,a2,-709 # ad886d3b <_stack_end+0xcd866d3b>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:227
  switch (launder32(info_page)) {
d000b15e:       |  |  |  |  |     |  |  |  |  |  |  |  /--|----- 12c59c63               bne     a1,a2,d000b296 <info_page_addr+0x25e>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:228
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_PAGE_ADDR_CASE_)
d000b162:       |  |  |  |  |     |  |  |  |  |  |  |  |  |  /-- 00c50663               beq     a0,a2,d000b16e <info_page_addr+0x136>
d000b166:       |  |  |  |  |     |  |  |  |  |  |  |  |  |  |   0000                   unimp
d000b168:       |  |  |  |  |     |  |  |  |  |  |  |  |  |  |   0000                   unimp
d000b16a:       |  |  |  |  |     |  |  |  |  |  |  |  |  |  |   0000                   unimp
d000b16c:       |  |  |  |  |     |  |  |  |  |  |  |  |  |  |   0000                   unimp
d000b16e:       |  |  |  |  |     |  |  |  |  |  |  |  |  |  \-> 6529                   lui     a0,0xa
d000b170:       |  +--|--|--|-----|--|--|--|--|--|--|--|--|----- aab1                   j       d000b2cc <info_page_addr+0x294>
d000b172:       |  |  |  |  |     |  |  |  |  |  |  |  |  \----> 238cf637               lui     a2,0x238cf
d000b176:       |  |  |  |  |     |  |  |  |  |  |  |  |         15c60613               addi    a2,a2,348 # 238cf15c <WDOG_BARK_THOLD+0x23898274>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:227
  switch (launder32(info_page)) {
d000b17a:       |  |  |  |  |  /--|--|--|--|--|--|--|--|-------- 12c59c63               bne     a1,a2,d000b2b2 <info_page_addr+0x27a>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:228
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_PAGE_ADDR_CASE_)
d000b17e:       |  |  |  |  |  |  |  |  |  |  |  |  |  |     /-- 00c50663               beq     a0,a2,d000b18a <info_page_addr+0x152>
d000b182:       |  |  |  |  |  |  |  |  |  |  |  |  |  |     |   0000                   unimp
d000b184:       |  |  |  |  |  |  |  |  |  |  |  |  |  |     |   0000                   unimp
d000b186:       |  |  |  |  |  |  |  |  |  |  |  |  |  |     |   0000                   unimp
d000b188:       |  |  |  |  |  |  |  |  |  |  |  |  |  |     |   0000                   unimp
d000b18a:       |  |  |  |  |  |  |  |  |  |  |  |  |  |     \-> 65a5                   lui     a1,0x9
d000b18c:       +--|--|--|--|--|--|--|--|--|--|--|--|--|-------- a291                   j       d000b2d0 <info_page_addr+0x298>
d000b18e:       |  |  |  |  |  |  |  \--|--|--|--|--|--|-------> a4f6f5b7               lui     a1,0xa4f6f
d000b192:       |  |  |  |  |  |  |     |  |  |  |  |  |         6c358593               addi    a1,a1,1731 # a4f6f6c3 <_stack_end+0xc4f4f6c3>
d000b196:       |  |  |  |  |  |  |     |  |  |  |  |  |     /-- 00b50663               beq     a0,a1,d000b1a2 <info_page_addr+0x16a>
d000b19a:       |  |  |  |  |  |  |     |  |  |  |  |  |     |   0000                   unimp
d000b19c:       |  |  |  |  |  |  |     |  |  |  |  |  |     |   0000                   unimp
d000b19e:       |  |  |  |  |  |  |     |  |  |  |  |  |     |   0000                   unimp
d000b1a0:       |  |  |  |  |  |  |     |  |  |  |  |  |     |   0000                   unimp
d000b1a2:       |  |  |  |  |  |  |     |  |  |  |  |  |     \-> 650d                   lui     a0,0x3
d000b1a4:       |  +--|--|--|--|--|-----|--|--|--|--|--|-------- a225                   j       d000b2cc <info_page_addr+0x294>
d000b1a6:       |  |  |  |  |  |  |     \--|--|--|--|--|-------> fa38d5b7               lui     a1,0xfa38d
d000b1aa:       |  |  |  |  |  |  |        |  |  |  |  |         9f658593               addi    a1,a1,-1546 # fa38c9f6 <_stack_end+0x1a36c9f6>
d000b1ae:       |  |  |  |  |  |  |        |  |  |  |  |     /-- 00b50663               beq     a0,a1,d000b1ba <info_page_addr+0x182>
d000b1b2:       |  |  |  |  |  |  |        |  |  |  |  |     |   0000                   unimp
d000b1b4:       |  |  |  |  |  |  |        |  |  |  |  |     |   0000                   unimp
d000b1b6:       |  |  |  |  |  |  |        |  |  |  |  |     |   0000                   unimp
d000b1b8:       |  |  |  |  |  |  |        |  |  |  |  |     |   0000                   unimp
d000b1ba:       |  |  |  |  |  |  |        |  |  |  |  |     \-> 65a1                   lui     a1,0x8
d000b1bc:       +--|--|--|--|--|--|--------|--|--|--|--|-------- aa11                   j       d000b2d0 <info_page_addr+0x298>
d000b1be:       |  |  |  |  |  |  |        \--|--|--|--|-------> e3ffb5b7               lui     a1,0xe3ffb
d000b1c2:       |  |  |  |  |  |  |           |  |  |  |         c8658593               addi    a1,a1,-890 # e3ffac86 <_stack_end+0x3fdac86>
d000b1c6:       |  |  |  |  |  |  |           |  |  |  |     /-- 00b50663               beq     a0,a1,d000b1d2 <info_page_addr+0x19a>
d000b1ca:       |  |  |  |  |  |  |           |  |  |  |     |   0000                   unimp
d000b1cc:       |  |  |  |  |  |  |           |  |  |  |     |   0000                   unimp
d000b1ce:       |  |  |  |  |  |  |           |  |  |  |     |   0000                   unimp
d000b1d0:       |  |  |  |  |  |  |           |  |  |  |     |   0000                   unimp
d000b1d2:       |  |  |  |  |  |  |           |  |  |  |     \-> 65ad                   lui     a1,0xb
d000b1d4:       +--|--|--|--|--|--|-----------|--|--|--|-------- a8f5                   j       d000b2d0 <info_page_addr+0x298>
d000b1d6:       |  |  |  |  |  |  |           \--|--|--|-------> 5f0725b7               lui     a1,0x5f072
d000b1da:       |  |  |  |  |  |  |              |  |  |         77e58593               addi    a1,a1,1918 # 5f07277e <_epmp_stack_guard_na4+0x2706b77e>
d000b1de:       |  |  |  |  |  |  |              |  |  |     /-- 00b50663               beq     a0,a1,d000b1ea <info_page_addr+0x1b2>
d000b1e2:       |  |  |  |  |  |  |              |  |  |     |   0000                   unimp
d000b1e4:       |  |  |  |  |  |  |              |  |  |     |   0000                   unimp
d000b1e6:       |  |  |  |  |  |  |              |  |  |     |   0000                   unimp
d000b1e8:       |  |  |  |  |  |  |              |  |  |     |   0000                   unimp
d000b1ea:       |  |  |  |  |  |  |              |  |  |     \-> 6515                   lui     a0,0x5
d000b1ec:       |  +--|--|--|--|--|--------------|--|--|-------- a0c5                   j       d000b2cc <info_page_addr+0x294>
d000b1ee:       |  |  \--|--|--|--|--------------|--|--|-------> ad5dd637               lui     a2,0xad5dd
d000b1f2:       |  |     |  |  |  |              |  |  |         31d60613               addi    a2,a2,797 # ad5dd31d <_stack_end+0xcd5bd31d>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:227
  switch (launder32(info_page)) {
d000b1f6:       |  |     |  |  |  |              |  |  |  /----- 0cc59f63               bne     a1,a2,d000b2d4 <info_page_addr+0x29c>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:228
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_PAGE_ADDR_CASE_)
d000b1fa:       |  |     |  |  |  |              |  |  |  |  /-- 00c50663               beq     a0,a2,d000b206 <info_page_addr+0x1ce>
d000b1fe:       |  |     |  |  |  |              |  |  |  |  |   0000                   unimp
d000b200:       |  |     |  |  |  |              |  |  |  |  |   0000                   unimp
d000b202:       |  |     |  |  |  |              |  |  |  |  |   0000                   unimp
d000b204:       |  |     |  |  |  |              |  |  |  |  |   0000                   unimp
d000b206:       |  |     |  |  |  |              |  |  |  |  \-> 652d                   lui     a0,0xb
d000b208:       |  +-----|--|--|--|--------------|--|--|--|----- a0d1                   j       d000b2cc <info_page_addr+0x294>
d000b20a:       |  |     \--|--|--|--------------|--|--|--|----> 118b6637               lui     a2,0x118b6
d000b20e:       |  |        |  |  |              |  |  |  |      dbb60613               addi    a2,a2,-581 # 118b5dbb <WDOG_BARK_THOLD+0x1187eed3>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:227
  switch (launder32(info_page)) {
d000b212:       |  |        |  |  |              |  |  |  +----- 0cc59163               bne     a1,a2,d000b2d4 <info_page_addr+0x29c>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:228
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_PAGE_ADDR_CASE_)
d000b216:       |  |        |  |  |              |  |  |  |  /-- 00c50663               beq     a0,a2,d000b222 <info_page_addr+0x1ea>
d000b21a:       |  |        |  |  |              |  |  |  |  |   0000                   unimp
d000b21c:       |  |        |  |  |              |  |  |  |  |   0000                   unimp
d000b21e:       |  |        |  |  |              |  |  |  |  |   0000                   unimp
d000b220:       |  |        |  |  |              |  |  |  |  |   0000                   unimp
d000b222:       |  |        |  |  |              |  |  |  |  \-> 6509                   lui     a0,0x2
d000b224:       |  +--------|--|--|--------------|--|--|--|----- a065                   j       d000b2cc <info_page_addr+0x294>
d000b226:       |  |        \--|--|--------------|--|--|--|----> f4f49637               lui     a2,0xf4f49
d000b22a:       |  |           |  |              |  |  |  |      c3d60613               addi    a2,a2,-963 # f4f48c3d <_stack_end+0x14f28c3d>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:227
  switch (launder32(info_page)) {
d000b22e:       |  |           |  |              |  |  |  +----- 0ac59363               bne     a1,a2,d000b2d4 <info_page_addr+0x29c>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:228
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_PAGE_ADDR_CASE_)
d000b232:       |  |           |  |              |  |  |  |  /-- 00c50663               beq     a0,a2,d000b23e <info_page_addr+0x206>
d000b236:       |  |           |  |              |  |  |  |  |   0000                   unimp
d000b238:       |  |           |  |              |  |  |  |  |   0000                   unimp
d000b23a:       |  |           |  |              |  |  |  |  |   0000                   unimp
d000b23c:       |  |           |  |              |  |  |  |  |   0000                   unimp
d000b23e:       |  |           |  |              |  |  |  |  \-> 6531                   lui     a0,0xc
d000b240:       |  +-----------|--|--------------|--|--|--|----- a071                   j       d000b2cc <info_page_addr+0x294>
d000b242:       |  |           |  \--------------|--|--|--|----> 7dfbe637               lui     a2,0x7dfbe
d000b246:       |  |           |                 |  |  |  |      f9b60613               addi    a2,a2,-101 # 7dfbdf9b <_epmp_stack_guard_na4+0x45fb6f9b>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:227
  switch (launder32(info_page)) {
d000b24a:       |  |           |                 |  |  |  +----- 08c59563               bne     a1,a2,d000b2d4 <info_page_addr+0x29c>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:228
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_PAGE_ADDR_CASE_)
d000b24e:       |  |           |                 |  |  |  |  /-- 00c50663               beq     a0,a2,d000b25a <info_page_addr+0x222>
d000b252:       |  |           |                 |  |  |  |  |   0000                   unimp
d000b254:       |  |           |                 |  |  |  |  |   0000                   unimp
d000b256:       |  |           |                 |  |  |  |  |   0000                   unimp
d000b258:       |  |           |                 |  |  |  |  |   0000                   unimp
d000b25a:       |  |           |                 |  |  |  |  \-> 65a9                   lui     a1,0xa
d000b25c:       +--|-----------|-----------------|--|--|--|----- a895                   j       d000b2d0 <info_page_addr+0x298>
d000b25e:       |  |           |                 \--|--|--|----> 9fbb8637               lui     a2,0x9fbb8
d000b262:       |  |           |                    |  |  |      40e60613               addi    a2,a2,1038 # 9fbb840e <_stack_end+0xbfb9840e>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:227
  switch (launder32(info_page)) {
d000b266:       |  |           |                    |  |  +----- 06c59763               bne     a1,a2,d000b2d4 <info_page_addr+0x29c>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:228
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_PAGE_ADDR_CASE_)
d000b26a:       |  |           |                    |  |  |  /-- 00c50663               beq     a0,a2,d000b276 <info_page_addr+0x23e>
d000b26e:       |  |           |                    |  |  |  |   0000                   unimp
d000b270:       |  |           |                    |  |  |  |   0000                   unimp
d000b272:       |  |           |                    |  |  |  |   0000                   unimp
d000b274:       |  |           |                    |  |  |  |   0000                   unimp
d000b276:       |  |           |                    |  |  |  \-> 65b1                   lui     a1,0xc
d000b278:       +--|-----------|--------------------|--|--|----- a8a1                   j       d000b2d0 <info_page_addr+0x298>
d000b27a:       |  |           |                    \--|--|----> f646f637               lui     a2,0xf646f
d000b27e:       |  |           |                       |  |      11b60613               addi    a2,a2,283 # f646f11b <_stack_end+0x1644f11b>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:227
  switch (launder32(info_page)) {
d000b282:       |  |           |                       |  +----- 04c59963               bne     a1,a2,d000b2d4 <info_page_addr+0x29c>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:228
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_PAGE_ADDR_CASE_)
d000b286:       |  |           |                       |  |  /-- 00c50663               beq     a0,a2,d000b292 <info_page_addr+0x25a>
d000b28a:       |  |           |                       |  |  |   0000                   unimp
d000b28c:       |  |           |                       |  |  |   0000                   unimp
d000b28e:       |  |           |                       |  |  |   0000                   unimp
d000b290:       |  |           |                       |  |  |   0000                   unimp
d000b292:       |  |           |                       |  |  \-> 658d                   lui     a1,0x3
d000b294:       +--|-----------|-----------------------|--|----- a835                   j       d000b2d0 <info_page_addr+0x298>
d000b296:       |  |           |                       \--|----> dd7f3637               lui     a2,0xdd7f3
d000b29a:       |  |           |                          |      4dc60613               addi    a2,a2,1244 # dd7f34dc <_stack_end+0xfd7d34dc>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:227
  switch (launder32(info_page)) {
d000b29e:       |  |           |                          +----- 02c59b63               bne     a1,a2,d000b2d4 <info_page_addr+0x29c>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:228
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_PAGE_ADDR_CASE_)
d000b2a2:       |  |           |                          |  /-- 00c50663               beq     a0,a2,d000b2ae <info_page_addr+0x276>
d000b2a6:       |  |           |                          |  |   0000                   unimp
d000b2a8:       |  |           |                          |  |   0000                   unimp
d000b2aa:       |  |           |                          |  |   0000                   unimp
d000b2ac:       |  |           |                          |  |   0000                   unimp
d000b2ae:       |  |           |                          |  \-> 6591                   lui     a1,0x4
d000b2b0:       +--|-----------|--------------------------|----- a005                   j       d000b2d0 <info_page_addr+0x298>
d000b2b2:       |  |           \--------------------------|----> 389c4637               lui     a2,0x389c4
d000b2b6:       |  |                                      |      49e60613               addi    a2,a2,1182 # 389c449e <_epmp_stack_guard_na4+0x9bd49e>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:227
  switch (launder32(info_page)) {
d000b2ba:       |  |                                      +----- 00c59d63               bne     a1,a2,d000b2d4 <info_page_addr+0x29c>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:228
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_PAGE_ADDR_CASE_)
d000b2be:       |  |                                      |  /-- 00c50663               beq     a0,a2,d000b2ca <info_page_addr+0x292>
d000b2c2:       |  |                                      |  |   0000                   unimp
d000b2c4:       |  |                                      |  |   0000                   unimp
d000b2c6:       |  |                                      |  |   0000                   unimp
d000b2c8:       |  |                                      |  |   0000                   unimp
d000b2ca:       |  |                                      |  \-> 6525                   lui     a0,0x9
d000b2cc:       |  \--------------------------------------|----> 80050593               addi    a1,a0,-2048 # 8800 <_rom_ext_virtual_size+0x800>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:234
}
d000b2d0:       \-----------------------------------------|----> 852e                   mv      a0,a1
d000b2d2:                                                 |      8082                   ret
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:230
      HARDENED_UNREACHABLE();
d000b2d4:                                                 \----> 0000                   unimp
d000b2d6:                                                        0000                   unimp
d000b2d8:                                                        0000                   unimp
d000b2da:                                                        0000                   unimp

d000b2dc <flash_ctrl_data_write>:
flash_ctrl_data_write():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:374
                                  const void *data) {
d000b2dc:       034646b7                lui     a3,0x3464
d000b2e0:       30d68713                addi    a4,a3,781 # 346430d <WDOG_BARK_THOLD+0x342d425>
d000b2e4:       86b2                    mv      a3,a2
d000b2e6:       862e                    mv      a2,a1
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:375
  return write(addr, kFlashCtrlPartitionData, word_count, data,
d000b2e8:       4581                    li      a1,0
d000b2ea:       a009                    j       d000b2ec <write>

d000b2ec <write>:
write():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:180
                         rom_error_t error) {
d000b2ec:                    7139                       addi    sp,sp,-64
d000b2ee:                    de06                       sw      ra,60(sp)
d000b2f0:                    dc22                       sw      s0,56(sp)
d000b2f2:                    da26                       sw      s1,52(sp)
d000b2f4:                    d84a                       sw      s2,48(sp)
d000b2f6:                    d64e                       sw      s3,44(sp)
d000b2f8:                    d452                       sw      s4,40(sp)
d000b2fa:                    d256                       sw      s5,36(sp)
d000b2fc:                    d05a                       sw      s6,32(sp)
d000b2fe:                    ce5e                       sw      s7,28(sp)
d000b300:                    cc62                       sw      s8,24(sp)
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:188
  while (word_count > 0) {
d000b302:       /----------- ce35                       beqz    a2,d000b37e <write+0x92>
d000b304:       |            893a                       mv      s2,a4
d000b306:       |            8a36                       mv      s4,a3
d000b308:       |            8432                       mv      s0,a2
d000b30a:       |            89ae                       mv      s3,a1
d000b30c:       |            8baa                       mv      s7,a0
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:187
      kWindowWordCount - ((addr / sizeof(uint32_t)) % kWindowWordCount);
d000b30e:       |            8109                       srli    a0,a0,0x2
d000b310:       |            893d                       andi    a0,a0,15
d000b312:       |            45c1                       li      a1,16
d000b314:       |            40a58533           sub     a0,a1,a0
d000b318:       |            4a85                       li      s5,1
d000b31a:       |            af0eb5b7           lui     a1,0xaf0eb
d000b31e:       |            b8b58b13           addi    s6,a1,-1141 # af0eab8b <_stack_end+0xcf0cab8b>
d000b322:       |            c10004b7           lui     s1,0xc1000
d000b326:       |  /-------> 8c22                       mv      s8,s0
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:191
        word_count < window_word_count ? word_count : window_word_count;
d000b328:       |  |     /-- 00a46363           bltu    s0,a0,d000b32e <write+0x42>
d000b32c:       |  |     |   8c2a                       mv      s8,a0
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:193
    transaction_start((transaction_params_t){
d000b32e:       |  |     \-> c05e                       sw      s7,0(sp)
d000b330:       |  |         c256                       sw      s5,4(sp)
d000b332:       |  |         c45a                       sw      s6,8(sp)
d000b334:       |  |         c64e                       sw      s3,12(sp)
d000b336:       |  |         c862                       sw      s8,16(sp)
d000b338:       |  |         850a                       mv      a0,sp
d000b33a:       |  |         3901                       jal     d000af4a <transaction_start>
d000b33c:       |  |         8562                       mv      a0,s8
d000b33e:       |  |         85d2                       mv      a1,s4
read_32():
/proc/self/cwd/./sw/device/lib/base/memory.h:88
  __builtin_memcpy(&val, ptr, sizeof(uint32_t));
d000b340:       |  |     /-> 4190                       lw      a2,0(a1)
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000b342:       |  |     |   1ac4a623           sw      a2,428(s1) # c10001ac <_stack_end+0xe0fe01ac>
fifo_write():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:143
  for (size_t i = 0; i < word_count; ++i) {
d000b346:       |  |     |   157d                       addi    a0,a0,-1
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:145
    data = (const char *)data + sizeof(uint32_t);
d000b348:       |  |     |   0591                       addi    a1,a1,4
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:143
  for (size_t i = 0; i < word_count; ++i) {
d000b34a:       |  |     \-- f97d                       bnez    a0,d000b340 <write+0x54>
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000b34c:       |  |     /-> 16c4a503           lw      a0,364(s1)
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
d000b350:       |  |     |   00157593           andi    a1,a0,1
wait_for_done():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:159
  } while (!bitfield_bit32_read(op_status, FLASH_CTRL_OP_STATUS_DONE_BIT));
d000b354:       |  |     \-- dde5                       beqz    a1,d000b34c <write+0x60>
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000b356:       |  |         1604a623           sw      zero,364(s1)
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
d000b35a:       |  |         00257613           andi    a2,a0,2
d000b35e:       |  |         73900593           li      a1,1849
d000b362:       |  |         73900513           li      a0,1849
d000b366:       |  |     /-- c211                       beqz    a2,d000b36a <write+0x7e>
d000b368:       |  |     |   854a                       mv      a0,s2
d000b36a:       |  |  /--\-X 00b51c63           bne     a0,a1,d000b382 <write+0x96>
write():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:205
    addr += window_word_count * sizeof(uint32_t);
d000b36e:       |  |  |      002c1513           slli    a0,s8,0x2
d000b372:       |  |  |      9baa                       add     s7,s7,a0
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:206
    data = (const char *)data + window_word_count * sizeof(uint32_t);
d000b374:       |  |  |      9a2a                       add     s4,s4,a0
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:207
    word_count -= window_word_count;
d000b376:       |  |  |      41840433           sub     s0,s0,s8
d000b37a:       |  |  |      4541                       li      a0,16
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:188
  while (word_count > 0) {
d000b37c:       |  \--|----- f44d                       bnez    s0,d000b326 <write+0x3a>
d000b37e:       \-----|----> 73900513           li      a0,1849
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:212
}
d000b382:             \----> 4c62                       lw      s8,24(sp)
d000b384:                    4bf2                       lw      s7,28(sp)
d000b386:                    5b02                       lw      s6,32(sp)
d000b388:                    5a92                       lw      s5,36(sp)
d000b38a:                    5a22                       lw      s4,40(sp)
d000b38c:                    59b2                       lw      s3,44(sp)
d000b38e:                    5942                       lw      s2,48(sp)
d000b390:                    54d2                       lw      s1,52(sp)
d000b392:                    5462                       lw      s0,56(sp)
d000b394:                    50f2                       lw      ra,60(sp)
d000b396:                    6121                       addi    sp,sp,64
d000b398:                    8082                       ret

d000b39a <flash_ctrl_data_erase>:
flash_ctrl_data_erase():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:388
                                  flash_ctrl_erase_type_t erase_type) {
d000b39a:           1101                        addi    sp,sp,-32
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:389
  transaction_start((transaction_params_t){
d000b39c:           ce06                        sw      ra,28(sp)
d000b39e:           c42a                        sw      a0,8(sp)
d000b3a0:           4509                        li      a0,2
d000b3a2:           c62a                        sw      a0,12(sp)
d000b3a4:           c82e                        sw      a1,16(sp)
d000b3a6:           ca02                        sw      zero,20(sp)
d000b3a8:           4505                        li      a0,1
d000b3aa:           cc2a                        sw      a0,24(sp)
d000b3ac:           0028                        addi    a0,sp,8
d000b3ae:           3e71                        jal     d000af4a <transaction_start>
d000b3b0:           c10005b7            lui     a1,0xc1000
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000b3b4:       /-> 16c5a503            lw      a0,364(a1) # c100016c <_stack_end+0xe0fe016c>
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
d000b3b8:       |   00157613            andi    a2,a0,1
wait_for_done():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:159
  } while (!bitfield_bit32_read(op_status, FLASH_CTRL_OP_STATUS_DONE_BIT));
d000b3bc:       \-- de65                        beqz    a2,d000b3b4 <flash_ctrl_data_erase+0x1a>
d000b3be:           c10005b7            lui     a1,0xc1000
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000b3c2:           1605a623            sw      zero,364(a1) # c100016c <_stack_end+0xe0fe016c>
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
d000b3c6:           00257593            andi    a1,a0,2
d000b3ca:           73900513            li      a0,1849
d000b3ce:       /-- c589                        beqz    a1,d000b3d8 <flash_ctrl_data_erase+0x3e>
d000b3d0:       |   05464537            lui     a0,0x5464
d000b3d4:       |   30d50513            addi    a0,a0,781 # 546430d <WDOG_BARK_THOLD+0x542d425>
flash_ctrl_data_erase():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:397
  return wait_for_done(kErrorFlashCtrlDataErase);
d000b3d8:       \-> 40f2                        lw      ra,28(sp)
d000b3da:           6105                        addi    sp,sp,32
d000b3dc:           8082                        ret

d000b3de <flash_ctrl_data_erase_verify>:
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000b3de:                    862e                       mv      a2,a1
d000b3e0:                    af0eb6b7           lui     a3,0xaf0eb
d000b3e4:                    b8b68693           addi    a3,a3,-1141 # af0eab8b <_stack_end+0xcf0cab8b>
flash_ctrl_data_erase_verify():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:409
  switch (launder32(erase_type)) {
d000b3e8:             /----- 00d61e63           bne     a2,a3,d000b404 <flash_ctrl_data_erase_verify+0x26>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:416
      HARDENED_CHECK_EQ(erase_type, kFlashCtrlEraseTypePage);
d000b3ec:             |  /-- 00d58663           beq     a1,a3,d000b3f8 <flash_ctrl_data_erase_verify+0x1a>
d000b3f0:             |  |   0000                       unimp
d000b3f2:             |  |   0000                       unimp
d000b3f4:             |  |   0000                       unimp
d000b3f6:             |  |   0000                       unimp
d000b3f8:             |  \-> 0c600593           li      a1,198
d000b3fc:             |      6605                       lui     a2,0x1
d000b3fe:             |      80060893           addi    a7,a2,-2048 # 800 <_epmp_reset_rx_size>
d000b402:          /--|----- a005                       j       d000b422 <flash_ctrl_data_erase_verify+0x44>
d000b404:          |  \----> 8032a6b7           lui     a3,0x8032a
d000b408:          |         be968693           addi    a3,a3,-1047 # 80329be9 <_stack_end+0xa0309be9>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:409
  switch (launder32(erase_type)) {
d000b40c:       /--|-------- 06d61c63           bne     a2,a3,d000b484 <flash_ctrl_data_erase_verify+0xa6>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:411
      HARDENED_CHECK_EQ(erase_type, kFlashCtrlEraseTypeBank);
d000b410:       |  |     /-- 00d58663           beq     a1,a3,d000b41c <flash_ctrl_data_erase_verify+0x3e>
d000b414:       |  |     |   0000                       unimp
d000b416:       |  |     |   0000                       unimp
d000b418:       |  |     |   0000                       unimp
d000b41a:       |  |     |   0000                       unimp
d000b41c:       |  |     \-> 68a1                       lui     a7,0x8
d000b41e:       |  |         8c688593           addi    a1,a7,-1850 # 78c6 <_stack_size+0x38c6>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000b422:       |  \-------> 4701                       li      a4,0
d000b424:       |            587d                       li      a6,-1
flash_ctrl_data_erase_verify():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:428
  for (; launder32(i) < byte_count; i += sizeof(uint32_t)) {
d000b426:       |     /----- 03177463           bgeu    a4,a7,d000b44e <flash_ctrl_data_erase_verify+0x70>
d000b42a:       |     |      4701                       li      a4,0
d000b42c:       |     |      411007b3           neg     a5,a7
d000b430:       |     |      8d7d                       and     a0,a0,a5
d000b432:       |     |      f00007b7           lui     a5,0xf0000
d000b436:       |     |      97aa                       add     a5,a5,a0
d000b438:       |     |      557d                       li      a0,-1
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000b43a:       |     |  /-> 00e786b3           add     a3,a5,a4
d000b43e:       |     |  |   4294                       lw      a3,0(a3)
flash_ctrl_data_erase_verify():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:428
d000b440:       |     |  |   0711                       addi    a4,a4,4
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:431
    mask &= word;
d000b442:       |     |  |   8d75                       and     a0,a0,a3
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000b444:       |     |  |   863a                       mv      a2,a4
flash_ctrl_data_erase_verify():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:432
    error &= word;
d000b446:       |     |  |   8df5                       and     a1,a1,a3
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:428
  for (; launder32(i) < byte_count; i += sizeof(uint32_t)) {
d000b448:       |     |  \-- ff1669e3           bltu    a2,a7,d000b43a <flash_ctrl_data_erase_verify+0x5c>
d000b44c:       |     |  /-- a019                       j       d000b452 <flash_ctrl_data_erase_verify+0x74>
d000b44e:       |     \--|-> 4701                       li      a4,0
d000b450:       |        |   557d                       li      a0,-1
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:434
  HARDENED_CHECK_EQ(i, byte_count);
d000b452:       |     /--\-X 01170663           beq     a4,a7,d000b45e <flash_ctrl_data_erase_verify+0x80>
d000b456:       |     |      0000                       unimp
d000b458:       |     |      0000                       unimp
d000b45a:       |     |      0000                       unimp
d000b45c:       |     |      0000                       unimp
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000b45e:       |     \----> 862a                       mv      a2,a0
flash_ctrl_data_erase_verify():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:436
  if (launder32(mask) == kFlashCtrlErasedWord) {
d000b460:       |        /-- 01060763           beq     a2,a6,d000b46e <flash_ctrl_data_erase_verify+0x90>
d000b464:       |        |   07464537           lui     a0,0x7464
d000b468:       |        |   30d50513           addi    a0,a0,781 # 746430d <WDOG_BARK_THOLD+0x742d425>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:442
}
d000b46c:       |        |   8082                       ret
d000b46e:       |        \-> 567d                       li      a2,-1
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:437
    HARDENED_CHECK_EQ(mask, kFlashCtrlErasedWord);
d000b470:       |        /-- 00c50663           beq     a0,a2,d000b47c <flash_ctrl_data_erase_verify+0x9e>
d000b474:       |        |   0000                       unimp
d000b476:       |        |   0000                       unimp
d000b478:       |        |   0000                       unimp
d000b47a:       |        |   0000                       unimp
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:438
    return error ^ (byte_count - 1);
d000b47c:       |        \-> fff88513           addi    a0,a7,-1
d000b480:       |            8d2d                       xor     a0,a0,a1
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:442
}
d000b482:       |            8082                       ret
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:421
      HARDENED_UNREACHABLE();
d000b484:       \----------> 0000                       unimp
d000b486:                    0000                       unimp
d000b488:                    0000                       unimp
d000b48a:                    0000                       unimp

d000b48c <flash_ctrl_exec_set>:
flash_ctrl_exec_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:458
void flash_ctrl_exec_set(uint32_t exec_val) {
d000b48c:       c10005b7                lui     a1,0xc1000
d000b490:       05d1                    addi    a1,a1,20
d000b492:       862a                    mv      a2,a0
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:460
  sec_mmio_write32(kBase + FLASH_CTRL_EXEC_REG_OFFSET, exec_val);
d000b494:       852e                    mv      a0,a1
d000b496:       85b2                    mv      a1,a2
d000b498:       1b10206f                j       d000de48 <sec_mmio_write32>

d000b49c <flash_ctrl_data_default_perms_set>:
flash_ctrl_data_default_perms_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:463
void flash_ctrl_data_default_perms_set(flash_ctrl_perms_t perms) {
d000b49c:       1141                    addi    sp,sp,-16
d000b49e:       c606                    sw      ra,12(sp)
d000b4a0:       c422                    sw      s0,8(sp)
d000b4a2:       c226                    sw      s1,4(sp)
d000b4a4:       842a                    mv      s0,a0
d000b4a6:       c1000537                lui     a0,0xc1000
d000b4aa:       09050493                addi    s1,a0,144 # c1000090 <_stack_end+0xe0fe0090>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:467
  uint32_t reg = sec_mmio_read32(kBase + FLASH_CTRL_DEFAULT_REGION_REG_OFFSET);
d000b4ae:       8526                    mv      a0,s1
d000b4b0:       0e5020ef                jal     ra,d000dd94 <sec_mmio_read32>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:469
                               perms.read);
d000b4b4:       400c                    lw      a1,0(s0)
d000b4b6:       767d                    lui     a2,0xfffff
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:75
  bitfield &= ~(field.mask << field.index);
d000b4b8:       8d71                    and     a0,a0,a2
flash_ctrl_data_default_perms_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:471
                               perms.write);
d000b4ba:       4050                    lw      a2,4(s0)
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
  bitfield |= (value & field.mask) << field.index;
d000b4bc:       89bd                    andi    a1,a1,15
d000b4be:       8d4d                    or      a0,a0,a1
flash_ctrl_data_default_perms_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:473
                               perms.erase);
d000b4c0:       440c                    lw      a1,8(s0)
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
d000b4c2:       0612                    slli    a2,a2,0x4
d000b4c4:       0f067613                andi    a2,a2,240
d000b4c8:       8d51                    or      a0,a0,a2
d000b4ca:       05f2                    slli    a1,a1,0x1c
d000b4cc:       81d1                    srli    a1,a1,0x14
d000b4ce:       8dc9                    or      a1,a1,a0
flash_ctrl_data_default_perms_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:474
  sec_mmio_write32(kBase + FLASH_CTRL_DEFAULT_REGION_REG_OFFSET, reg);
d000b4d0:       8526                    mv      a0,s1
d000b4d2:       4492                    lw      s1,4(sp)
d000b4d4:       4422                    lw      s0,8(sp)
d000b4d6:       40b2                    lw      ra,12(sp)
d000b4d8:       0141                    addi    sp,sp,16
d000b4da:       16f0206f                j       d000de48 <sec_mmio_write32>

d000b4de <flash_ctrl_info_perms_set>:
flash_ctrl_info_perms_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:478
                               flash_ctrl_perms_t perms) {
d000b4de:       1141                    addi    sp,sp,-16
d000b4e0:       c606                    sw      ra,12(sp)
d000b4e2:       c422                    sw      s0,8(sp)
d000b4e4:       c226                    sw      s1,4(sp)
d000b4e6:       842e                    mv      s0,a1
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:481
  const uint32_t cfg_addr = info_cfg_regs(info_page).cfg_addr;
d000b4e8:       282d                    jal     d000b522 <info_cfg_regs>
d000b4ea:       84ae                    mv      s1,a1
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:483
  uint32_t reg = sec_mmio_read32(cfg_addr);
d000b4ec:       852e                    mv      a0,a1
d000b4ee:       0a7020ef                jal     ra,d000dd94 <sec_mmio_read32>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:487
      reg, FLASH_CTRL_BANK0_INFO0_PAGE_CFG_0_RD_EN_0_FIELD, perms.read);
d000b4f2:       400c                    lw      a1,0(s0)
d000b4f4:       7641                    lui     a2,0xffff0
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:75
  bitfield &= ~(field.mask << field.index);
d000b4f6:       8d71                    and     a0,a0,a2
flash_ctrl_info_perms_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:489
      reg, FLASH_CTRL_BANK0_INFO0_PAGE_CFG_0_PROG_EN_0_FIELD, perms.write);
d000b4f8:       4050                    lw      a2,4(s0)
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
  bitfield |= (value & field.mask) << field.index;
d000b4fa:       0592                    slli    a1,a1,0x4
flash_ctrl_info_perms_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:491
      reg, FLASH_CTRL_BANK0_INFO0_PAGE_CFG_0_ERASE_EN_0_FIELD, perms.erase);
d000b4fc:       4414                    lw      a3,8(s0)
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
d000b4fe:       0f05f593                andi    a1,a1,240
d000b502:       0672                    slli    a2,a2,0x1c
d000b504:       8251                    srli    a2,a2,0x14
d000b506:       06f2                    slli    a3,a3,0x1c
d000b508:       82c1                    srli    a3,a3,0x10
d000b50a:       8d4d                    or      a0,a0,a1
d000b50c:       8d51                    or      a0,a0,a2
d000b50e:       8d55                    or      a0,a0,a3
d000b510:       00656593                ori     a1,a0,6
flash_ctrl_info_perms_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:492
  sec_mmio_write32(cfg_addr, reg);
d000b514:       8526                    mv      a0,s1
d000b516:       4492                    lw      s1,4(sp)
d000b518:       4422                    lw      s0,8(sp)
d000b51a:       40b2                    lw      ra,12(sp)
d000b51c:       0141                    addi    sp,sp,16
d000b51e:       12b0206f                j       d000de48 <sec_mmio_write32>

d000b522 <info_cfg_regs>:
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000b522:                                                  85aa                 mv      a1,a0
d000b524:                                                  f56af637             lui     a2,0xf56af
d000b528:                                                  4ba60613             addi    a2,a2,1210 # f56af4ba <_stack_end+0x1568f4ba>
info_cfg_regs():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:272
  switch (launder32(info_page)) {
d000b52c:                                           /----- 04b64563             blt     a2,a1,d000b576 <info_cfg_regs+0x54>
d000b530:                                           |      ad887637             lui     a2,0xad887
d000b534:                                           |      d3a60613             addi    a2,a2,-710 # ad886d3a <_stack_end+0xcd866d3a>
d000b538:                                        /--|----- 08b64263             blt     a2,a1,d000b5bc <info_cfg_regs+0x9a>
d000b53c:                                        |  |      a4f6f637             lui     a2,0xa4f6f
d000b540:                                        |  |      6c260693             addi    a3,a2,1730 # a4f6f6c2 <_stack_end+0xc4f4f6c2>
d000b544:                                  /-----|--|----- 0eb6d663             bge     a3,a1,d000b630 <info_cfg_regs+0x10e>
d000b548:                                  |     |  |      6c360613             addi    a2,a2,1731
d000b54c:                      /-----------|-----|--|----- 16c58e63             beq     a1,a2,d000b6c8 <info_cfg_regs+0x1a6>
d000b550:                      |           |     |  |      ad3b6637             lui     a2,0xad3b6
d000b554:                      |           |     |  |      bee60613             addi    a2,a2,-1042 # ad3b5bee <_stack_end+0xcd395bee>
d000b558:       /--------------|-----------|-----|--|----- 1ec59c63             bne     a1,a2,d000b750 <info_cfg_regs+0x22e>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:273
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_CFG_REGS_CASE_)
d000b55c:       |              |           |     |  |  /-- 00c50663             beq     a0,a2,d000b568 <info_cfg_regs+0x46>
d000b560:       |              |           |     |  |  |   0000                 unimp
d000b562:       |              |           |     |  |  |   0000                 unimp
d000b564:       |              |           |     |  |  |   0000                 unimp
d000b566:       |              |           |     |  |  |   0000                 unimp
d000b568:       |              |           |     |  |  \-> c1000537             lui     a0,0xc1000
d000b56c:       |              |           |     |  |      0cc50593             addi    a1,a0,204 # c10000cc <_stack_end+0xe0fe00cc>
d000b570:       |              |           |     |  |      0a450513             addi    a0,a0,164
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:279
}
d000b574:       |              |           |     |  |      8082                 ret
d000b576:       |              |           |     |  \----> 238cf637             lui     a2,0x238cf
d000b57a:       |              |           |     |         15b60613             addi    a2,a2,347 # 238cf15b <WDOG_BARK_THOLD+0x23898273>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:272
  switch (launder32(info_page)) {
d000b57e:       |              |           |     |  /----- 06b64c63             blt     a2,a1,d000b5f6 <info_cfg_regs+0xd4>
d000b582:       |              |           |     |  |      fa38d637             lui     a2,0xfa38d
d000b586:       |              |           |     |  |      9f560693             addi    a3,a2,-1547 # fa38c9f5 <_stack_end+0x1a36c9f5>
d000b58a:       |              |           |  /--|--|----- 0cb6d663             bge     a3,a1,d000b656 <info_cfg_regs+0x134>
d000b58e:       |              |           |  |  |  |      9f660613             addi    a2,a2,-1546
d000b592:       |              |  /--------|--|--|--|----- 14c58c63             beq     a1,a2,d000b6ea <info_cfg_regs+0x1c8>
d000b596:       |              |  |        |  |  |  |      10adc637             lui     a2,0x10adc
d000b59a:       |              |  |        |  |  |  |      6aa60613             addi    a2,a2,1706 # 10adc6aa <WDOG_BARK_THOLD+0x10aa57c2>
d000b59e:       |  /-----------|--|--------|--|--|--|----- 1cc59c63             bne     a1,a2,d000b776 <info_cfg_regs+0x254>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:273
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_CFG_REGS_CASE_)
d000b5a2:       |  |           |  |        |  |  |  |  /-- 00c50663             beq     a0,a2,d000b5ae <info_cfg_regs+0x8c>
d000b5a6:       |  |           |  |        |  |  |  |  |   0000                 unimp
d000b5a8:       |  |           |  |        |  |  |  |  |   0000                 unimp
d000b5aa:       |  |           |  |        |  |  |  |  |   0000                 unimp
d000b5ac:       |  |           |  |        |  |  |  |  |   0000                 unimp
d000b5ae:       |  |           |  |        |  |  |  |  \-> c1000537             lui     a0,0xc1000
d000b5b2:       |  |           |  |        |  |  |  |      0c450593             addi    a1,a0,196 # c10000c4 <_stack_end+0xe0fe00c4>
d000b5b6:       |  |           |  |        |  |  |  |      09c50513             addi    a0,a0,156
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:279
}
d000b5ba:       |  |           |  |        |  |  |  |      8082                 ret
d000b5bc:       |  |           |  |        |  |  \--|----> e3ffb637             lui     a2,0xe3ffb
d000b5c0:       |  |           |  |        |  |     |      c8560693             addi    a3,a2,-891 # e3ffac85 <_stack_end+0x3fdac85>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:272
  switch (launder32(info_page)) {
d000b5c4:       |  |           |  |        |  |  /--|----- 0ab6dc63             bge     a3,a1,d000b67c <info_cfg_regs+0x15a>
d000b5c8:       |  |           |  |        |  |  |  |      c8660613             addi    a2,a2,-890
d000b5cc:       |  |           |  |  /-----|--|--|--|----- 14c58063             beq     a1,a2,d000b70c <info_cfg_regs+0x1ea>
d000b5d0:       |  |           |  |  |     |  |  |  |      ec309637             lui     a2,0xec309
d000b5d4:       |  |           |  |  |     |  |  |  |      46160613             addi    a2,a2,1121 # ec309461 <_stack_end+0xc2e9461>
d000b5d8:       |  |  /--------|--|--|-----|--|--|--|----- 1cc59263             bne     a1,a2,d000b79c <info_cfg_regs+0x27a>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:273
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_CFG_REGS_CASE_)
d000b5dc:       |  |  |        |  |  |     |  |  |  |  /-- 00c50663             beq     a0,a2,d000b5e8 <info_cfg_regs+0xc6>
d000b5e0:       |  |  |        |  |  |     |  |  |  |  |   0000                 unimp
d000b5e2:       |  |  |        |  |  |     |  |  |  |  |   0000                 unimp
d000b5e4:       |  |  |        |  |  |     |  |  |  |  |   0000                 unimp
d000b5e6:       |  |  |        |  |  |     |  |  |  |  |   0000                 unimp
d000b5e8:       |  |  |        |  |  |     |  |  |  |  \-> c1000537             lui     a0,0xc1000
d000b5ec:       |  |  |        |  |  |     |  |  |  |      14850593             addi    a1,a0,328 # c1000148 <_stack_end+0xe0fe0148>
d000b5f0:       |  |  |        |  |  |     |  |  |  |      12050513             addi    a0,a0,288
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:279
}
d000b5f4:       |  |  |        |  |  |     |  |  |  |      8082                 ret
d000b5f6:       |  |  |        |  |  |     |  |  |  \----> 5f072637             lui     a2,0x5f072
d000b5fa:       |  |  |        |  |  |     |  |  |         77d60693             addi    a3,a2,1917 # 5f07277d <_epmp_stack_guard_na4+0x2706b77d>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:272
  switch (launder32(info_page)) {
d000b5fe:       |  |  |        |  |  |     |  |  |  /----- 0ab6d263             bge     a3,a1,d000b6a2 <info_cfg_regs+0x180>
d000b602:       |  |  |        |  |  |     |  |  |  |      77e60613             addi    a2,a2,1918
d000b606:       |  |  |        |  |  |  /--|--|--|--|----- 12c58463             beq     a1,a2,d000b72e <info_cfg_regs+0x20c>
d000b60a:       |  |  |        |  |  |  |  |  |  |  |      6c86e637             lui     a2,0x6c86e
d000b60e:       |  |  |        |  |  |  |  |  |  |  |      98060613             addi    a2,a2,-1664 # 6c86d980 <_epmp_stack_guard_na4+0x34866980>
d000b612:       |  |  |     /--|--|--|--|--|--|--|--|----- 1ac59863             bne     a1,a2,d000b7c2 <info_cfg_regs+0x2a0>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:273
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_CFG_REGS_CASE_)
d000b616:       |  |  |     |  |  |  |  |  |  |  |  |  /-- 00c50663             beq     a0,a2,d000b622 <info_cfg_regs+0x100>
d000b61a:       |  |  |     |  |  |  |  |  |  |  |  |  |   0000                 unimp
d000b61c:       |  |  |     |  |  |  |  |  |  |  |  |  |   0000                 unimp
d000b61e:       |  |  |     |  |  |  |  |  |  |  |  |  |   0000                 unimp
d000b620:       |  |  |     |  |  |  |  |  |  |  |  |  |   0000                 unimp
d000b622:       |  |  |     |  |  |  |  |  |  |  |  |  \-> c1000537             lui     a0,0xc1000
d000b626:       |  |  |     |  |  |  |  |  |  |  |  |      0d850593             addi    a1,a0,216 # c10000d8 <_stack_end+0xe0fe00d8>
d000b62a:       |  |  |     |  |  |  |  |  |  |  |  |      0b050513             addi    a0,a0,176
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:279
}
d000b62e:       |  |  |     |  |  |  |  |  |  |  |  |      8082                 ret
d000b630:       |  |  |     |  |  |  |  |  \--|--|--|----> 9dc42637             lui     a2,0x9dc42
d000b634:       |  |  |     |  |  |  |  |     |  |  |      c3360613             addi    a2,a2,-973 # 9dc41c33 <_stack_end+0xbdc21c33>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:272
  switch (launder32(info_page)) {
d000b638:       |  |  |     |  |  |  |  |  /--|--|--|----- 1ac59863             bne     a1,a2,d000b7e8 <info_cfg_regs+0x2c6>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:273
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_CFG_REGS_CASE_)
d000b63c:       |  |  |     |  |  |  |  |  |  |  |  |  /-- 00c50663             beq     a0,a2,d000b648 <info_cfg_regs+0x126>
d000b640:       |  |  |     |  |  |  |  |  |  |  |  |  |   0000                 unimp
d000b642:       |  |  |     |  |  |  |  |  |  |  |  |  |   0000                 unimp
d000b644:       |  |  |     |  |  |  |  |  |  |  |  |  |   0000                 unimp
d000b646:       |  |  |     |  |  |  |  |  |  |  |  |  |   0000                 unimp
d000b648:       |  |  |     |  |  |  |  |  |  |  |  |  \-> c1000537             lui     a0,0xc1000
d000b64c:       |  |  |     |  |  |  |  |  |  |  |  |      0bc50593             addi    a1,a0,188 # c10000bc <_stack_end+0xe0fe00bc>
d000b650:       |  |  |     |  |  |  |  |  |  |  |  |      09450513             addi    a0,a0,148
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:279
}
d000b654:       |  |  |     |  |  |  |  |  |  |  |  |      8082                 ret
d000b656:       |  |  |     |  |  |  |  |  |  \--|--|----> f56af637             lui     a2,0xf56af
d000b65a:       |  |  |     |  |  |  |  |  |     |  |      4bb60613             addi    a2,a2,1211 # f56af4bb <_stack_end+0x1568f4bb>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:272
  switch (launder32(info_page)) {
d000b65e:       |  |  |     |  |  |  |  |  |  /--|--|----- 1ac59863             bne     a1,a2,d000b80e <info_cfg_regs+0x2ec>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:273
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_CFG_REGS_CASE_)
d000b662:       |  |  |     |  |  |  |  |  |  |  |  |  /-- 00c50663             beq     a0,a2,d000b66e <info_cfg_regs+0x14c>
d000b666:       |  |  |     |  |  |  |  |  |  |  |  |  |   0000                 unimp
d000b668:       |  |  |     |  |  |  |  |  |  |  |  |  |   0000                 unimp
d000b66a:       |  |  |     |  |  |  |  |  |  |  |  |  |   0000                 unimp
d000b66c:       |  |  |     |  |  |  |  |  |  |  |  |  |   0000                 unimp
d000b66e:       |  |  |     |  |  |  |  |  |  |  |  |  \-> c1000537             lui     a0,0xc1000
d000b672:       |  |  |     |  |  |  |  |  |  |  |  |      0c050593             addi    a1,a0,192 # c10000c0 <_stack_end+0xe0fe00c0>
d000b676:       |  |  |     |  |  |  |  |  |  |  |  |      09850513             addi    a0,a0,152
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:279
}
d000b67a:       |  |  |     |  |  |  |  |  |  |  |  |      8082                 ret
d000b67c:       |  |  |     |  |  |  |  |  |  |  \--|----> ad887637             lui     a2,0xad887
d000b680:       |  |  |     |  |  |  |  |  |  |     |      d3b60613             addi    a2,a2,-709 # ad886d3b <_stack_end+0xcd866d3b>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:272
  switch (launder32(info_page)) {
d000b684:       |  |  |     |  |  |  |  |  |  |  /--|----- 1ac59863             bne     a1,a2,d000b834 <info_cfg_regs+0x312>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:273
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_CFG_REGS_CASE_)
d000b688:       |  |  |     |  |  |  |  |  |  |  |  |  /-- 00c50663             beq     a0,a2,d000b694 <info_cfg_regs+0x172>
d000b68c:       |  |  |     |  |  |  |  |  |  |  |  |  |   0000                 unimp
d000b68e:       |  |  |     |  |  |  |  |  |  |  |  |  |   0000                 unimp
d000b690:       |  |  |     |  |  |  |  |  |  |  |  |  |   0000                 unimp
d000b692:       |  |  |     |  |  |  |  |  |  |  |  |  |   0000                 unimp
d000b694:       |  |  |     |  |  |  |  |  |  |  |  |  \-> c1000537             lui     a0,0xc1000
d000b698:       |  |  |     |  |  |  |  |  |  |  |  |      13050593             addi    a1,a0,304 # c1000130 <_stack_end+0xe0fe0130>
d000b69c:       |  |  |     |  |  |  |  |  |  |  |  |      10850513             addi    a0,a0,264
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:279
}
d000b6a0:       |  |  |     |  |  |  |  |  |  |  |  |      8082                 ret
d000b6a2:       |  |  |     |  |  |  |  |  |  |  |  \----> 238cf637             lui     a2,0x238cf
d000b6a6:       |  |  |     |  |  |  |  |  |  |  |         15c60613             addi    a2,a2,348 # 238cf15c <WDOG_BARK_THOLD+0x23898274>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:272
  switch (launder32(info_page)) {
d000b6aa:       |  |  |  /--|--|--|--|--|--|--|--|-------- 1ac59863             bne     a1,a2,d000b85a <info_cfg_regs+0x338>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:273
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_CFG_REGS_CASE_)
d000b6ae:       |  |  |  |  |  |  |  |  |  |  |  |     /-- 00c50663             beq     a0,a2,d000b6ba <info_cfg_regs+0x198>
d000b6b2:       |  |  |  |  |  |  |  |  |  |  |  |     |   0000                 unimp
d000b6b4:       |  |  |  |  |  |  |  |  |  |  |  |     |   0000                 unimp
d000b6b6:       |  |  |  |  |  |  |  |  |  |  |  |     |   0000                 unimp
d000b6b8:       |  |  |  |  |  |  |  |  |  |  |  |     |   0000                 unimp
d000b6ba:       |  |  |  |  |  |  |  |  |  |  |  |     \-> c1000537             lui     a0,0xc1000
d000b6be:       |  |  |  |  |  |  |  |  |  |  |  |         12c50593             addi    a1,a0,300 # c100012c <_stack_end+0xe0fe012c>
d000b6c2:       |  |  |  |  |  |  |  |  |  |  |  |         10450513             addi    a0,a0,260
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:279
}
d000b6c6:       |  |  |  |  |  |  |  |  |  |  |  |         8082                 ret
d000b6c8:       |  |  |  |  |  \--|--|--|--|--|--|-------> a4f6f5b7             lui     a1,0xa4f6f
d000b6cc:       |  |  |  |  |     |  |  |  |  |  |         6c358593             addi    a1,a1,1731 # a4f6f6c3 <_stack_end+0xc4f4f6c3>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:273
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_CFG_REGS_CASE_)
d000b6d0:       |  |  |  |  |     |  |  |  |  |  |     /-- 00b50663             beq     a0,a1,d000b6dc <info_cfg_regs+0x1ba>
d000b6d4:       |  |  |  |  |     |  |  |  |  |  |     |   0000                 unimp
d000b6d6:       |  |  |  |  |     |  |  |  |  |  |     |   0000                 unimp
d000b6d8:       |  |  |  |  |     |  |  |  |  |  |     |   0000                 unimp
d000b6da:       |  |  |  |  |     |  |  |  |  |  |     |   0000                 unimp
d000b6dc:       |  |  |  |  |     |  |  |  |  |  |     \-> c1000537             lui     a0,0xc1000
d000b6e0:       |  |  |  |  |     |  |  |  |  |  |         0d050593             addi    a1,a0,208 # c10000d0 <_stack_end+0xe0fe00d0>
d000b6e4:       |  |  |  |  |     |  |  |  |  |  |         0a850513             addi    a0,a0,168
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:279
}
d000b6e8:       |  |  |  |  |     |  |  |  |  |  |         8082                 ret
d000b6ea:       |  |  |  |  |     \--|--|--|--|--|-------> fa38d5b7             lui     a1,0xfa38d
d000b6ee:       |  |  |  |  |        |  |  |  |  |         9f658593             addi    a1,a1,-1546 # fa38c9f6 <_stack_end+0x1a36c9f6>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:273
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_CFG_REGS_CASE_)
d000b6f2:       |  |  |  |  |        |  |  |  |  |     /-- 00b50663             beq     a0,a1,d000b6fe <info_cfg_regs+0x1dc>
d000b6f6:       |  |  |  |  |        |  |  |  |  |     |   0000                 unimp
d000b6f8:       |  |  |  |  |        |  |  |  |  |     |   0000                 unimp
d000b6fa:       |  |  |  |  |        |  |  |  |  |     |   0000                 unimp
d000b6fc:       |  |  |  |  |        |  |  |  |  |     |   0000                 unimp
d000b6fe:       |  |  |  |  |        |  |  |  |  |     \-> c1000537             lui     a0,0xc1000
d000b702:       |  |  |  |  |        |  |  |  |  |         12450593             addi    a1,a0,292 # c1000124 <_stack_end+0xe0fe0124>
d000b706:       |  |  |  |  |        |  |  |  |  |         0fc50513             addi    a0,a0,252
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:279
}
d000b70a:       |  |  |  |  |        |  |  |  |  |         8082                 ret
d000b70c:       |  |  |  |  |        \--|--|--|--|-------> e3ffb5b7             lui     a1,0xe3ffb
d000b710:       |  |  |  |  |           |  |  |  |         c8658593             addi    a1,a1,-890 # e3ffac86 <_stack_end+0x3fdac86>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:273
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_CFG_REGS_CASE_)
d000b714:       |  |  |  |  |           |  |  |  |     /-- 00b50663             beq     a0,a1,d000b720 <info_cfg_regs+0x1fe>
d000b718:       |  |  |  |  |           |  |  |  |     |   0000                 unimp
d000b71a:       |  |  |  |  |           |  |  |  |     |   0000                 unimp
d000b71c:       |  |  |  |  |           |  |  |  |     |   0000                 unimp
d000b71e:       |  |  |  |  |           |  |  |  |     |   0000                 unimp
d000b720:       |  |  |  |  |           |  |  |  |     \-> c1000537             lui     a0,0xc1000
d000b724:       |  |  |  |  |           |  |  |  |         13c50593             addi    a1,a0,316 # c100013c <_stack_end+0xe0fe013c>
d000b728:       |  |  |  |  |           |  |  |  |         11450513             addi    a0,a0,276
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:279
}
d000b72c:       |  |  |  |  |           |  |  |  |         8082                 ret
d000b72e:       |  |  |  |  |           \--|--|--|-------> 5f0725b7             lui     a1,0x5f072
d000b732:       |  |  |  |  |              |  |  |         77e58593             addi    a1,a1,1918 # 5f07277e <_epmp_stack_guard_na4+0x2706b77e>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:273
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_CFG_REGS_CASE_)
d000b736:       |  |  |  |  |              |  |  |     /-- 00b50663             beq     a0,a1,d000b742 <info_cfg_regs+0x220>
d000b73a:       |  |  |  |  |              |  |  |     |   0000                 unimp
d000b73c:       |  |  |  |  |              |  |  |     |   0000                 unimp
d000b73e:       |  |  |  |  |              |  |  |     |   0000                 unimp
d000b740:       |  |  |  |  |              |  |  |     |   0000                 unimp
d000b742:       |  |  |  |  |              |  |  |     \-> c1000537             lui     a0,0xc1000
d000b746:       |  |  |  |  |              |  |  |         0e050593             addi    a1,a0,224 # c10000e0 <_stack_end+0xe0fe00e0>
d000b74a:       |  |  |  |  |              |  |  |         0b850513             addi    a0,a0,184
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:279
}
d000b74e:       |  |  |  |  |              |  |  |         8082                 ret
d000b750:       \--|--|--|--|--------------|--|--|-------> ad5dd637             lui     a2,0xad5dd
d000b754:          |  |  |  |              |  |  |         31d60613             addi    a2,a2,797 # ad5dd31d <_stack_end+0xcd5bd31d>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:272
  switch (launder32(info_page)) {
d000b758:          |  |  |  |              |  |  |  /----- 12c59463             bne     a1,a2,d000b880 <info_cfg_regs+0x35e>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:273
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_CFG_REGS_CASE_)
d000b75c:          |  |  |  |              |  |  |  |  /-- 00c50663             beq     a0,a2,d000b768 <info_cfg_regs+0x246>
d000b760:          |  |  |  |              |  |  |  |  |   0000                 unimp
d000b762:          |  |  |  |              |  |  |  |  |   0000                 unimp
d000b764:          |  |  |  |              |  |  |  |  |   0000                 unimp
d000b766:          |  |  |  |              |  |  |  |  |   0000                 unimp
d000b768:          |  |  |  |              |  |  |  |  \-> c1000537             lui     a0,0xc1000
d000b76c:          |  |  |  |              |  |  |  |      13850593             addi    a1,a0,312 # c1000138 <_stack_end+0xe0fe0138>
d000b770:          |  |  |  |              |  |  |  |      11050513             addi    a0,a0,272
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:279
}
d000b774:          |  |  |  |              |  |  |  |      8082                 ret
d000b776:          \--|--|--|--------------|--|--|--|----> 118b6637             lui     a2,0x118b6
d000b77a:             |  |  |              |  |  |  |      dbb60613             addi    a2,a2,-581 # 118b5dbb <WDOG_BARK_THOLD+0x1187eed3>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:272
  switch (launder32(info_page)) {
d000b77e:             |  |  |              |  |  |  +----- 10c59163             bne     a1,a2,d000b880 <info_cfg_regs+0x35e>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:273
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_CFG_REGS_CASE_)
d000b782:             |  |  |              |  |  |  |  /-- 00c50663             beq     a0,a2,d000b78e <info_cfg_regs+0x26c>
d000b786:             |  |  |              |  |  |  |  |   0000                 unimp
d000b788:             |  |  |              |  |  |  |  |   0000                 unimp
d000b78a:             |  |  |              |  |  |  |  |   0000                 unimp
d000b78c:             |  |  |              |  |  |  |  |   0000                 unimp
d000b78e:             |  |  |              |  |  |  |  \-> c1000537             lui     a0,0xc1000
d000b792:             |  |  |              |  |  |  |      0c850593             addi    a1,a0,200 # c10000c8 <_stack_end+0xe0fe00c8>
d000b796:             |  |  |              |  |  |  |      0a050513             addi    a0,a0,160
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:279
}
d000b79a:             |  |  |              |  |  |  |      8082                 ret
d000b79c:             \--|--|--------------|--|--|--|----> f4f49637             lui     a2,0xf4f49
d000b7a0:                |  |              |  |  |  |      c3d60613             addi    a2,a2,-963 # f4f48c3d <_stack_end+0x14f28c3d>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:272
  switch (launder32(info_page)) {
d000b7a4:                |  |              |  |  |  +----- 0cc59e63             bne     a1,a2,d000b880 <info_cfg_regs+0x35e>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:273
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_CFG_REGS_CASE_)
d000b7a8:                |  |              |  |  |  |  /-- 00c50663             beq     a0,a2,d000b7b4 <info_cfg_regs+0x292>
d000b7ac:                |  |              |  |  |  |  |   0000                 unimp
d000b7ae:                |  |              |  |  |  |  |   0000                 unimp
d000b7b0:                |  |              |  |  |  |  |   0000                 unimp
d000b7b2:                |  |              |  |  |  |  |   0000                 unimp
d000b7b4:                |  |              |  |  |  |  \-> c1000537             lui     a0,0xc1000
d000b7b8:                |  |              |  |  |  |      14050593             addi    a1,a0,320 # c1000140 <_stack_end+0xe0fe0140>
d000b7bc:                |  |              |  |  |  |      11850513             addi    a0,a0,280
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:279
}
d000b7c0:                |  |              |  |  |  |      8082                 ret
d000b7c2:                |  \--------------|--|--|--|----> 7dfbe637             lui     a2,0x7dfbe
d000b7c6:                |                 |  |  |  |      f9b60613             addi    a2,a2,-101 # 7dfbdf9b <_epmp_stack_guard_na4+0x45fb6f9b>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:272
  switch (launder32(info_page)) {
d000b7ca:                |                 |  |  |  +----- 0ac59b63             bne     a1,a2,d000b880 <info_cfg_regs+0x35e>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:273
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_CFG_REGS_CASE_)
d000b7ce:                |                 |  |  |  |  /-- 00c50663             beq     a0,a2,d000b7da <info_cfg_regs+0x2b8>
d000b7d2:                |                 |  |  |  |  |   0000                 unimp
d000b7d4:                |                 |  |  |  |  |   0000                 unimp
d000b7d6:                |                 |  |  |  |  |   0000                 unimp
d000b7d8:                |                 |  |  |  |  |   0000                 unimp
d000b7da:                |                 |  |  |  |  \-> c1000537             lui     a0,0xc1000
d000b7de:                |                 |  |  |  |      13450593             addi    a1,a0,308 # c1000134 <_stack_end+0xe0fe0134>
d000b7e2:                |                 |  |  |  |      10c50513             addi    a0,a0,268
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:279
}
d000b7e6:                |                 |  |  |  |      8082                 ret
d000b7e8:                |                 \--|--|--|----> 9fbb8637             lui     a2,0x9fbb8
d000b7ec:                |                    |  |  |      40e60613             addi    a2,a2,1038 # 9fbb840e <_stack_end+0xbfb9840e>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:272
  switch (launder32(info_page)) {
d000b7f0:                |                    |  |  +----- 08c59863             bne     a1,a2,d000b880 <info_cfg_regs+0x35e>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:273
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_CFG_REGS_CASE_)
d000b7f4:                |                    |  |  |  /-- 00c50663             beq     a0,a2,d000b800 <info_cfg_regs+0x2de>
d000b7f8:                |                    |  |  |  |   0000                 unimp
d000b7fa:                |                    |  |  |  |   0000                 unimp
d000b7fc:                |                    |  |  |  |   0000                 unimp
d000b7fe:                |                    |  |  |  |   0000                 unimp
d000b800:                |                    |  |  |  \-> c1000537             lui     a0,0xc1000
d000b804:                |                    |  |  |      14450593             addi    a1,a0,324 # c1000144 <_stack_end+0xe0fe0144>
d000b808:                |                    |  |  |      11c50513             addi    a0,a0,284
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:279
}
d000b80c:                |                    |  |  |      8082                 ret
d000b80e:                |                    \--|--|----> f646f637             lui     a2,0xf646f
d000b812:                |                       |  |      11b60613             addi    a2,a2,283 # f646f11b <_stack_end+0x1644f11b>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:272
  switch (launder32(info_page)) {
d000b816:                |                       |  +----- 06c59563             bne     a1,a2,d000b880 <info_cfg_regs+0x35e>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:273
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_CFG_REGS_CASE_)
d000b81a:                |                       |  |  /-- 00c50663             beq     a0,a2,d000b826 <info_cfg_regs+0x304>
d000b81e:                |                       |  |  |   0000                 unimp
d000b820:                |                       |  |  |   0000                 unimp
d000b822:                |                       |  |  |   0000                 unimp
d000b824:                |                       |  |  |   0000                 unimp
d000b826:                |                       |  |  \-> c1000537             lui     a0,0xc1000
d000b82a:                |                       |  |      0d450593             addi    a1,a0,212 # c10000d4 <_stack_end+0xe0fe00d4>
d000b82e:                |                       |  |      0ac50513             addi    a0,a0,172
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:279
}
d000b832:                |                       |  |      8082                 ret
d000b834:                |                       \--|----> dd7f3637             lui     a2,0xdd7f3
d000b838:                |                          |      4dc60613             addi    a2,a2,1244 # dd7f34dc <_stack_end+0xfd7d34dc>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:272
  switch (launder32(info_page)) {
d000b83c:                |                          +----- 04c59263             bne     a1,a2,d000b880 <info_cfg_regs+0x35e>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:273
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_CFG_REGS_CASE_)
d000b840:                |                          |  /-- 00c50663             beq     a0,a2,d000b84c <info_cfg_regs+0x32a>
d000b844:                |                          |  |   0000                 unimp
d000b846:                |                          |  |   0000                 unimp
d000b848:                |                          |  |   0000                 unimp
d000b84a:                |                          |  |   0000                 unimp
d000b84c:                |                          |  \-> c1000537             lui     a0,0xc1000
d000b850:                |                          |      0dc50593             addi    a1,a0,220 # c10000dc <_stack_end+0xe0fe00dc>
d000b854:                |                          |      0b450513             addi    a0,a0,180
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:279
}
d000b858:                |                          |      8082                 ret
d000b85a:                \--------------------------|----> 389c4637             lui     a2,0x389c4
d000b85e:                                           |      49e60613             addi    a2,a2,1182 # 389c449e <_epmp_stack_guard_na4+0x9bd49e>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:272
  switch (launder32(info_page)) {
d000b862:                                           +----- 00c59f63             bne     a1,a2,d000b880 <info_cfg_regs+0x35e>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:273
    FLASH_CTRL_INFO_PAGES_DEFINE(INFO_CFG_REGS_CASE_)
d000b866:                                           |  /-- 00c50663             beq     a0,a2,d000b872 <info_cfg_regs+0x350>
d000b86a:                                           |  |   0000                 unimp
d000b86c:                                           |  |   0000                 unimp
d000b86e:                                           |  |   0000                 unimp
d000b870:                                           |  |   0000                 unimp
d000b872:                                           |  \-> c1000537             lui     a0,0xc1000
d000b876:                                           |      12850593             addi    a1,a0,296 # c1000128 <_stack_end+0xe0fe0128>
d000b87a:                                           |      10050513             addi    a0,a0,256
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:279
}
d000b87e:                                           |      8082                 ret
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:275
      HARDENED_UNREACHABLE();
d000b880:                                           \----> 0000                 unimp
d000b882:                                                  0000                 unimp
d000b884:                                                  0000                 unimp
d000b886:                                                  0000                 unimp

d000b888 <flash_ctrl_bank_erase_perms_set>:
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000b888:                 85aa                  mv      a1,a0
d000b88a:                 1d400613              li      a2,468
flash_ctrl_bank_erase_perms_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:530
}

void flash_ctrl_bank_erase_perms_set(hardened_bool_t enable) {
  uint32_t reg;
  switch (launder32(enable)) {
d000b88e:          /----- 00c59a63              bne     a1,a2,d000b8a2 <flash_ctrl_bank_erase_perms_set+0x1a>
d000b892:          |      4581                  li      a1,0
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:539
          0, FLASH_CTRL_MP_BANK_CFG_SHADOWED_ERASE_EN_0_BIT, true);
      reg = bitfield_bit32_write(
          reg, FLASH_CTRL_MP_BANK_CFG_SHADOWED_ERASE_EN_1_BIT, true);
      break;
    case kHardenedBoolFalse:
      HARDENED_CHECK_EQ(enable, kHardenedBoolFalse);
d000b894:          |  /-- 00c50663              beq     a0,a2,d000b8a0 <flash_ctrl_bank_erase_perms_set+0x18>
d000b898:          |  |   0000                  unimp
d000b89a:          |  |   0000                  unimp
d000b89c:          |  |   0000                  unimp
d000b89e:          |  |   0000                  unimp
d000b8a0:       /--|--\-X a821                  j       d000b8b8 <flash_ctrl_bank_erase_perms_set+0x30>
d000b8a2:       |  \----> 73900613              li      a2,1849
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:530
  switch (launder32(enable)) {
d000b8a6:       |  /----- 00c59f63              bne     a1,a2,d000b8c4 <flash_ctrl_bank_erase_perms_set+0x3c>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:532
      HARDENED_CHECK_EQ(enable, kHardenedBoolTrue);
d000b8aa:       |  |  /-- 00c50663              beq     a0,a2,d000b8b6 <flash_ctrl_bank_erase_perms_set+0x2e>
d000b8ae:       |  |  |   0000                  unimp
d000b8b0:       |  |  |   0000                  unimp
d000b8b2:       |  |  |   0000                  unimp
d000b8b4:       |  |  |   0000                  unimp
d000b8b6:       |  |  \-> 458d                  li      a1,3
d000b8b8:       \--|----> c1000537              lui     a0,0xc1000
d000b8bc:          |      16850513              addi    a0,a0,360 # c1000168 <_stack_end+0xe0fe0168>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:545
      reg = 0;
      break;
    default:
      HARDENED_UNREACHABLE();
  }
  sec_mmio_write32_shadowed(kBase + FLASH_CTRL_MP_BANK_CFG_SHADOWED_REG_OFFSET,
d000b8c0:          |      5d40206f              j       d000de94 <sec_mmio_write32_shadowed>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/flash_ctrl.c:543
      HARDENED_UNREACHABLE();
d000b8c4:          \----> 0000                  unimp
d000b8c6:                 0000                  unimp
d000b8c8:                 0000                  unimp
d000b8ca:                 0000                  unimp

d000b8cc <ibex_addr_remap_0_set>:
ibex_addr_remap_0_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ibex.c:23
uint32_t ibex_fpga_version(void) {
  return abs_mmio_read32(kBase + RV_CORE_IBEX_FPGA_INFO_REG_OFFSET);
}

void ibex_addr_remap_0_set(uint32_t matching_addr, uint32_t remap_addr,
                           size_t size) {
d000b8cc:       1141                    addi    sp,sp,-16
d000b8ce:       c606                    sw      ra,12(sp)
d000b8d0:       c422                    sw      s0,8(sp)
d000b8d2:       c226                    sw      s1,4(sp)
d000b8d4:       c04a                    sw      s2,0(sp)
d000b8d6:       892e                    mv      s2,a1
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ibex.c:24
  uint32_t mask = matching_addr | ((size - 1) >> 1);
d000b8d8:       fff60593                addi    a1,a2,-1
d000b8dc:       8185                    srli    a1,a1,0x1
d000b8de:       00a5e4b3                or      s1,a1,a0
d000b8e2:       c11f0437                lui     s0,0xc11f0
d000b8e6:       01c40513                addi    a0,s0,28 # c11f001c <_stack_end+0xe11d001c>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ibex.c:25
  sec_mmio_write32(kBase + RV_CORE_IBEX_IBUS_ADDR_MATCHING_0_REG_OFFSET, mask);
d000b8ea:       85a6                    mv      a1,s1
d000b8ec:       55c020ef                jal     ra,d000de48 <sec_mmio_write32>
d000b8f0:       03c40513                addi    a0,s0,60
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ibex.c:26
  sec_mmio_write32(kBase + RV_CORE_IBEX_DBUS_ADDR_MATCHING_0_REG_OFFSET, mask);
d000b8f4:       85a6                    mv      a1,s1
d000b8f6:       552020ef                jal     ra,d000de48 <sec_mmio_write32>
d000b8fa:       02440513                addi    a0,s0,36
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ibex.c:28

  sec_mmio_write32(kBase + RV_CORE_IBEX_IBUS_REMAP_ADDR_0_REG_OFFSET,
d000b8fe:       85ca                    mv      a1,s2
d000b900:       548020ef                jal     ra,d000de48 <sec_mmio_write32>
d000b904:       04440513                addi    a0,s0,68
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ibex.c:30
                   remap_addr);
  sec_mmio_write32(kBase + RV_CORE_IBEX_DBUS_REMAP_ADDR_0_REG_OFFSET,
d000b908:       85ca                    mv      a1,s2
d000b90a:       53e020ef                jal     ra,d000de48 <sec_mmio_write32>
d000b90e:       01440513                addi    a0,s0,20
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ibex.c:33
                   remap_addr);

  sec_mmio_write32(kBase + RV_CORE_IBEX_IBUS_ADDR_EN_0_REG_OFFSET, 1);
d000b912:       4585                    li      a1,1
d000b914:       534020ef                jal     ra,d000de48 <sec_mmio_write32>
d000b918:       03440513                addi    a0,s0,52
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ibex.c:34
  sec_mmio_write32(kBase + RV_CORE_IBEX_DBUS_ADDR_EN_0_REG_OFFSET, 1);
d000b91c:       4585                    li      a1,1
d000b91e:       52a020ef                jal     ra,d000de48 <sec_mmio_write32>
icache_invalidate():
/proc/self/cwd/./sw/device/lib/runtime/hart.h:38
/**
 * Invalidates the instruction cache.
 */
inline void icache_invalidate(void) {
#ifdef OT_PLATFORM_RV32
  asm volatile("fence.i");
d000b922:       0000100f                fence.i
ibex_addr_remap_0_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/ibex.c:36
  icache_invalidate();
}
d000b926:       4902                    lw      s2,0(sp)
d000b928:       4492                    lw      s1,4(sp)
d000b92a:       4422                    lw      s0,8(sp)
d000b92c:       40b2                    lw      ra,12(sp)
d000b92e:       0141                    addi    sp,sp,16
d000b930:       8082                    ret

d000b932 <expected_state_check>:
expected_state_check():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/keymgr.c:39
 * This function reads and clears the status and error code registers.
 *
 * @return `kErrorOk` if the key manager is at the `expected_state` and the
 * status is idle or success.
 */
static rom_error_t expected_state_check(uint32_t expected_state) {
d000b932:           1141                        addi    sp,sp,-16
d000b934:           c606                        sw      ra,12(sp)
d000b936:           c422                        sw      s0,8(sp)
d000b938:           c226                        sw      s1,4(sp)
d000b93a:           c04a                        sw      s2,0(sp)
d000b93c:           892a                        mv      s2,a0
d000b93e:           c1140537            lui     a0,0xc1140
d000b942:           4589                        li      a1,2
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000b944:       /-> 0ec52603            lw      a2,236(a0) # c11400ec <_stack_end+0xe11200ec>
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
  return (bitfield >> field.index) & field.mask;
d000b948:       |   00367493            andi    s1,a2,3
expected_state_check():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/keymgr.c:49
  do {
    op_status = abs_mmio_read32(kBase + KEYMGR_OP_STATUS_REG_OFFSET);
    abs_mmio_write32(kBase + KEYMGR_OP_STATUS_REG_OFFSET, op_status);
    op_status_field =
        bitfield_field32_read(op_status, KEYMGR_OP_STATUS_STATUS_FIELD);
  } while (op_status_field == KEYMGR_OP_STATUS_STATUS_VALUE_WIP ||
d000b94c:       |   fff48693            addi    a3,s1,-1
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000b950:       |   0ec52623            sw      a2,236(a0)
expected_state_check():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/keymgr.c:49
d000b954:       \-- feb6e8e3            bltu    a3,a1,d000b944 <expected_state_check+0x12>
d000b958:           c1140537            lui     a0,0xc1140
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000b95c:           0f052403            lw      s0,240(a0) # c11400f0 <_stack_end+0xe11200f0>
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000b960:           0e852823            sw      s0,240(a0)
d000b964:           0e850513            addi    a0,a0,232
expected_state_check():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/keymgr.c:58
  uint32_t error_code = abs_mmio_read32(kBase + KEYMGR_ERR_CODE_REG_OFFSET);
  abs_mmio_write32(kBase + KEYMGR_ERR_CODE_REG_OFFSET, error_code);

  // Read the working state with sec_mmio so that we can check the expected
  // value periodically.
  uint32_t got_state = sec_mmio_read32(kBase + KEYMGR_WORKING_STATE_REG_OFFSET);
d000b968:           42c020ef            jal     ra,d000dd94 <sec_mmio_read32>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/keymgr.c:59
  if (op_status_field == KEYMGR_OP_STATUS_STATUS_VALUE_IDLE &&
d000b96c:           0084e5b3            or      a1,s1,s0
d000b970:           01254533            xor     a0,a0,s2
d000b974:           8dc9                        or      a1,a1,a0
d000b976:           73900513            li      a0,1849
d000b97a:       /-- c589                        beqz    a1,d000b984 <expected_state_check+0x52>
d000b97c:       |   014b5537            lui     a0,0x14b5
d000b980:       |   d0d50513            addi    a0,a0,-755 # 14b4d0d <WDOG_BARK_THOLD+0x147de25>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/keymgr.c:64
      error_code == 0u && got_state == expected_state) {
    return kErrorOk;
  }
  return kErrorKeymgrInternal;
}
d000b984:       \-> 4902                        lw      s2,0(sp)
d000b986:           4492                        lw      s1,4(sp)
d000b988:           4422                        lw      s0,8(sp)
d000b98a:           40b2                        lw      ra,12(sp)
d000b98c:           0141                        addi    sp,sp,16
d000b98e:           8082                        ret

d000b990 <keymgr_sw_binding_set>:
keymgr_sw_binding_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/keymgr.c:78
  return kErrorOk;
}

void keymgr_sw_binding_set(
    const keymgr_binding_value_t *binding_value_sealing,
    const keymgr_binding_value_t *binding_value_attestation) {
d000b990:           1101                        addi    sp,sp,-32
d000b992:           ce06                        sw      ra,28(sp)
d000b994:           cc22                        sw      s0,24(sp)
d000b996:           ca26                        sw      s1,20(sp)
d000b998:           c84a                        sw      s2,16(sp)
d000b99a:           c64e                        sw      s3,12(sp)
d000b99c:           c452                        sw      s4,8(sp)
d000b99e:           892e                        mv      s2,a1
d000b9a0:           89aa                        mv      s3,a0
d000b9a2:           4481                        li      s1,0
d000b9a4:           c1140537            lui     a0,0xc1140
d000b9a8:           02c50413            addi    s0,a0,44 # c114002c <_stack_end+0xe112002c>
d000b9ac:           02000a13            li      s4,32
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/keymgr.c:86
  // Write and lock (rw0c) the software binding value. This register is unlocked
  // by hardware upon a successful state transition.
  for (size_t i = 0; i < ARRAYSIZE(binding_value_sealing->data); ++i) {
    sec_mmio_write32(
        kBase + KEYMGR_SEALING_SW_BINDING_0_REG_OFFSET + i * sizeof(uint32_t),
        binding_value_sealing->data[i]);
d000b9b0:       /-> 00998533            add     a0,s3,s1
d000b9b4:       |   410c                        lw      a1,0(a0)
d000b9b6:       |   00848533            add     a0,s1,s0
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/keymgr.c:84
    sec_mmio_write32(
d000b9ba:       |   48e020ef            jal     ra,d000de48 <sec_mmio_write32>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/keymgr.c:83
  for (size_t i = 0; i < ARRAYSIZE(binding_value_sealing->data); ++i) {
d000b9be:       |   0491                        addi    s1,s1,4
d000b9c0:       \-- ff4498e3            bne     s1,s4,d000b9b0 <keymgr_sw_binding_set+0x20>
d000b9c4:           4481                        li      s1,0
d000b9c6:           02000993            li      s3,32
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/keymgr.c:91
  }
  for (size_t i = 0; i < ARRAYSIZE(binding_value_attestation->data); ++i) {
    sec_mmio_write32(
        kBase + KEYMGR_ATTEST_SW_BINDING_0_REG_OFFSET + i * sizeof(uint32_t),
        binding_value_attestation->data[i]);
d000b9ca:       /-> 00990533            add     a0,s2,s1
d000b9ce:       |   410c                        lw      a1,0(a0)
d000b9d0:       |   00940533            add     a0,s0,s1
d000b9d4:       |   02050513            addi    a0,a0,32
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/keymgr.c:89
    sec_mmio_write32(
d000b9d8:       |   470020ef            jal     ra,d000de48 <sec_mmio_write32>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/keymgr.c:88
  for (size_t i = 0; i < ARRAYSIZE(binding_value_attestation->data); ++i) {
d000b9dc:       |   0491                        addi    s1,s1,4
d000b9de:       \-- ff3496e3            bne     s1,s3,d000b9ca <keymgr_sw_binding_set+0x3a>
d000b9e2:           c1140537            lui     a0,0xc1140
d000b9e6:           02850513            addi    a0,a0,40 # c1140028 <_stack_end+0xe1120028>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/keymgr.c:93
  }
  sec_mmio_write32(kBase + KEYMGR_SW_BINDING_REGWEN_REG_OFFSET, 0);
d000b9ea:           4581                        li      a1,0
d000b9ec:           4a22                        lw      s4,8(sp)
d000b9ee:           49b2                        lw      s3,12(sp)
d000b9f0:           4942                        lw      s2,16(sp)
d000b9f2:           44d2                        lw      s1,20(sp)
d000b9f4:           4462                        lw      s0,24(sp)
d000b9f6:           40f2                        lw      ra,28(sp)
d000b9f8:           6105                        addi    sp,sp,32
d000b9fa:           44e0206f            j       d000de48 <sec_mmio_write32>

d000b9fe <keymgr_creator_max_ver_set>:
keymgr_creator_max_ver_set():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/keymgr.c:102
  while (!abs_mmio_read32(kBase + KEYMGR_SW_BINDING_REGWEN_REG_OFFSET)) {
  }
  sec_mmio_read32(kBase + KEYMGR_SW_BINDING_REGWEN_REG_OFFSET);
}

void keymgr_creator_max_ver_set(uint32_t max_key_ver) {
d000b9fe:       1141                    addi    sp,sp,-16
d000ba00:       c606                    sw      ra,12(sp)
d000ba02:       c422                    sw      s0,8(sp)
d000ba04:       85aa                    mv      a1,a0
d000ba06:       c1140437                lui     s0,0xc1140
d000ba0a:       09440513                addi    a0,s0,148 # c1140094 <_stack_end+0xe1120094>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/keymgr.c:105
  SEC_MMIO_ASSERT_WRITE_INCREMENT(kKeymgrSecMmioCreatorMaxVerSet, 2);
  // Write and lock (rw0c) the max key version.
  sec_mmio_write32_shadowed(
d000ba0e:       486020ef                jal     ra,d000de94 <sec_mmio_write32_shadowed>
d000ba12:       09040513                addi    a0,s0,144
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/keymgr.c:107
      kBase + KEYMGR_MAX_CREATOR_KEY_VER_SHADOWED_REG_OFFSET, max_key_ver);
  sec_mmio_write32(kBase + KEYMGR_MAX_CREATOR_KEY_VER_REGWEN_REG_OFFSET, 0);
d000ba16:       4581                    li      a1,0
d000ba18:       4422                    lw      s0,8(sp)
d000ba1a:       40b2                    lw      ra,12(sp)
d000ba1c:       0141                    addi    sp,sp,16
d000ba1e:       42a0206f                j       d000de48 <sec_mmio_write32>

d000ba22 <keymgr_state_check>:
keymgr_state_check():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/keymgr.c:130

  abs_mmio_write32(kBase + KEYMGR_START_REG_OFFSET, 1);
}

rom_error_t keymgr_state_check(keymgr_state_t expected_state) {
  return expected_state_check(expected_state);
d000ba22:       bf01                    j       d000b932 <expected_state_check>

d000ba24 <pinmux_init>:
pinmux_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/pinmux.c:127
  abs_mmio_write32(
      kBase + PINMUX_MIO_OUTSEL_0_REG_OFFSET + output.mio * sizeof(uint32_t),
      output.outsel);
}

void pinmux_init(void) {
d000ba24:              1141                     addi    sp,sp,-16
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/pinmux.c:129
  uint32_t bootstrap_en =
      otp_read32(OTP_CTRL_PARAM_OWNER_SW_CFG_ROM_BOOTSTRAP_EN_OFFSET);
d000ba26:              c606                     sw      ra,12(sp)
d000ba28:              36400513                 li      a0,868
d000ba2c:              306020ef                 jal     ra,d000dd32 <otp_read32>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000ba30:              862a                     mv      a2,a0
d000ba32:              73900593                 li      a1,1849
pinmux_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/pinmux.c:130
  if (launder32(bootstrap_en) == kHardenedBoolTrue) {
d000ba36:       /----- 02b61b63                 bne     a2,a1,d000ba6c <pinmux_init+0x48>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/pinmux.c:131
    HARDENED_CHECK_EQ(bootstrap_en, kHardenedBoolTrue);
d000ba3a:       |  /-- 00b50663                 beq     a0,a1,d000ba46 <pinmux_init+0x22>
d000ba3e:       |  |   0000                     unimp
d000ba40:       |  |   0000                     unimp
d000ba42:       |  |   0000                     unimp
d000ba44:       |  |   0000                     unimp
d000ba46:       |  \-> c0460537                 lui     a0,0xc0460
d000ba4a:       |      4591                     li      a1,4
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000ba4c:       |      44b52c23                 sw      a1,1112(a0) # c0460458 <_stack_end+0xe0440458>
d000ba50:       |      44b52e23                 sw      a1,1116(a0)
d000ba54:       |      46b52023                 sw      a1,1120(a0)
d000ba58:       |      45e1                     li      a1,24
d000ba5a:       |      14b52023                 sw      a1,320(a0)
d000ba5e:       |      45e5                     li      a1,25
d000ba60:       |      14b52223                 sw      a1,324(a0)
d000ba64:       |      14850513                 addi    a0,a0,328
d000ba68:       |      45e9                     li      a1,26
d000ba6a:       |      c10c                     sw      a1,0(a0)
d000ba6c:       \----> c0460537                 lui     a0,0xc0460
d000ba70:              45ed                     li      a1,27
d000ba72:              18b52823                 sw      a1,400(a0) # c0460190 <_stack_end+0xe0440190>
d000ba76:              02d00593                 li      a1,45
d000ba7a:              2eb52823                 sw      a1,752(a0)
pinmux_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/pinmux.c:144
    configure_input(kInputSwStrap2);
  }

  configure_input(kInputUart0);
  configure_output(kOutputUart0);
}
d000ba7e:              40b2                     lw      ra,12(sp)
d000ba80:              0141                     addi    sp,sp,16
d000ba82:              8082                     ret

d000ba84 <retention_sram_get>:
retention_sram_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/retention_sram.c:25
};

retention_sram_t *retention_sram_get(void) {
  static_assert(sizeof(retention_sram_t) == TOP_EARLGREY_RAM_RET_AON_SIZE_BYTES,
                "Unexpected retention SRAM size.");
  return (retention_sram_t *)TOP_EARLGREY_RAM_RET_AON_BASE_ADDR;
d000ba84:       c0600537                lui     a0,0xc0600
d000ba88:       8082                    ret

d000ba8a <retention_sram_init>:
retention_sram_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/retention_sram.c:32

void retention_sram_clear(void) {
  memset(retention_sram_get(), 0, sizeof(retention_sram_t));
}

void retention_sram_init(void) {
d000ba8a:       c0500537                lui     a0,0xc0500
d000ba8e:       4589                    li      a1,2
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000ba90:       c94c                    sw      a1,20(a0)
retention_sram_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/retention_sram.c:35
  uint32_t reg = bitfield_bit32_write(0, SRAM_CTRL_CTRL_INIT_BIT, true);
  abs_mmio_write32(kBase + SRAM_CTRL_CTRL_REG_OFFSET, reg);
}
d000ba92:       8082                    ret

d000ba94 <rstmgr_reason_get>:
rstmgr_reason_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/rstmgr.c:41
    rstmgr_alert_info.info[i] =
        abs_mmio_read32(kBase + RSTMGR_ALERT_INFO_REG_OFFSET);
  }
}

uint32_t rstmgr_reason_get(void) {
d000ba94:              c0410537                 lui     a0,0xc0410
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000ba98:              494c                     lw      a1,20(a0)
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
d000ba9a:              00f5f613                 andi    a2,a1,15
rstmgr_alert_info_collect():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/rstmgr.c:29
  rstmgr_alert_info.length = bitfield_field32_read(
d000ba9e:              c7018593                 addi    a1,gp,-912 # e00024b8 <rstmgr_alert_info>
d000baa2:              c190                     sw      a2,0(a1)
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/rstmgr.c:32
  for (uint32_t i = 0; i < rstmgr_alert_info.length; ++i) {
d000baa4:       /----- c205                     beqz    a2,d000bac4 <rstmgr_reason_get+0x30>
d000baa6:       |      4601                     li      a2,0
d000baa8:       |      4681                     li      a3,0
d000baaa:       |      00458713                 addi    a4,a1,4
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
  bitfield |= (value & field.mask) << field.index;
d000baae:       |  /-> 0f067793                 andi    a5,a2,240
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000bab2:       |  |   c91c                     sw      a5,16(a0)
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000bab4:       |  |   4d1c                     lw      a5,24(a0)
rstmgr_alert_info_collect():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/rstmgr.c:36
    rstmgr_alert_info.info[i] =
d000bab6:       |  |   c31c                     sw      a5,0(a4)
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/rstmgr.c:32
  for (uint32_t i = 0; i < rstmgr_alert_info.length; ++i) {
d000bab8:       |  |   419c                     lw      a5,0(a1)
d000baba:       |  |   0685                     addi    a3,a3,1
d000babc:       |  |   0711                     addi    a4,a4,4
d000babe:       |  |   0641                     addi    a2,a2,16
d000bac0:       |  \-- fef6e7e3                 bltu    a3,a5,d000baae <rstmgr_reason_get+0x1a>
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000bac4:       \----> 4508                     lw      a0,8(a0)
rstmgr_reason_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/rstmgr.c:72
      "kRstmgrReasonLast value incorrect.");

#undef REASON_ASSERT

  rstmgr_alert_info_collect();
  return abs_mmio_read32(kBase + RSTMGR_RESET_INFO_REG_OFFSET);
d000bac6:              8082                     ret

d000bac8 <rstmgr_reason_clear>:
rstmgr_reason_clear():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/rstmgr.c:75
}

void rstmgr_reason_clear(uint32_t reasons) {
d000bac8:       c04105b7                lui     a1,0xc0410
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000bacc:       c588                    sw      a0,8(a1)
rstmgr_reason_clear():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/rstmgr.c:77
  abs_mmio_write32(kBase + RSTMGR_RESET_INFO_REG_OFFSET, reasons);
}
d000bace:       8082                    ret

d000bad0 <rstmgr_reset>:
rstmgr_reset():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/rstmgr.c:83

void rstmgr_alert_info_enable(void) {
  abs_mmio_write32(kBase + RSTMGR_ALERT_INFO_CTRL_REG_OFFSET, 1);
}

void rstmgr_reset(void) {
d000bad0:           c0410537            lui     a0,0xc0410
d000bad4:           0511                        addi    a0,a0,4
d000bad6:           4599                        li      a1,6
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000bad8:           c10c                        sw      a1,0(a0)
wait_for_interrupt():
/proc/self/cwd/./sw/device/lib/runtime/hart.h:29
  asm volatile("wfi");
d000bada:       /-> 10500073            wfi
rstmgr_reset():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/rstmgr.c:87
  abs_mmio_write32(kBase + RSTMGR_RESET_REQ_REG_OFFSET, kMultiBitBool4True);
#ifdef OT_PLATFORM_RV32
  // Wait until the chip resets.
  while (true) {
d000bade:       \-- bff5                        j       d000bada <rstmgr_reset+0xa>

d000bae0 <uart_init>:
uart_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/uart.c:37
                   0u);
  abs_mmio_write32(TOP_EARLGREY_UART0_BASE_ADDR + UART_INTR_STATE_REG_OFFSET,
                   UINT32_MAX);
}

rom_error_t uart_init(uint32_t precalculated_nco) {
d000bae0:       c00005b7                lui     a1,0xc0000
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000bae4:       0005a823                sw      zero,16(a1) # c0000010 <_stack_end+0xdffe0010>
d000bae8:       460d                    li      a2,3
d000baea:       d190                    sw      a2,32(a1)
d000baec:       0205a423                sw      zero,40(a1)
d000baf0:       0205a823                sw      zero,48(a1)
d000baf4:       0005a223                sw      zero,4(a1)
d000baf8:       567d                    li      a2,-1
d000bafa:       c190                    sw      a2,0(a1)
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
d000bafc:       0542                    slli    a0,a0,0x10
d000bafe:       00156513                ori     a0,a0,1
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000bb02:       c988                    sw      a0,16(a1)
uart_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/uart.c:51
  abs_mmio_write32(TOP_EARLGREY_UART0_BASE_ADDR + UART_CTRL_REG_OFFSET, reg);

  // Disable interrupts.
  abs_mmio_write32(TOP_EARLGREY_UART0_BASE_ADDR + UART_INTR_ENABLE_REG_OFFSET,
                   0u);
  return kErrorOk;
d000bb04:       73900513                li      a0,1849
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000bb08:       0005a223                sw      zero,4(a1)
uart_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/uart.c:51
d000bb0c:       8082                    ret

d000bb0e <watchdog_init>:
watchdog_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:25

  kCtrlEnable = 1 << AON_TIMER_WDOG_CTRL_ENABLE_BIT,
  kCtrlDisable = 0 << AON_TIMER_WDOG_CTRL_ENABLE_BIT,
};

void watchdog_init(lifecycle_state_t lc_state) {
d000bb0e:                          1101                 addi    sp,sp,-32
d000bb10:                          ce06                 sw      ra,28(sp)
d000bb12:                          cc22                 sw      s0,24(sp)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000bb14:                          85aa                 mv      a1,a0
d000bb16:                          cf8d0637             lui     a2,0xcf8d0
d000bb1a:                          aaa60693             addi    a3,a2,-1366 # cf8cfaaa <_stack_end+0xef8afaaa>
watchdog_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:30
  SEC_MMIO_ASSERT_WRITE_INCREMENT(kWatchdogSecMmioInit,
                                  kWatchdogSecMmioConfigure);
  // Disable the watchdog bite when in test and RMA lifecycle states.
  hardened_bool_t enable = kHardenedBoolTrue;
  switch (launder32(lc_state)) {
d000bb1e:                   /----- 02b6d363             bge     a3,a1,d000bb44 <watchdog_init+0x36>
d000bb22:                   |      aab60613             addi    a2,a2,-1365
d000bb26:                /--|----- 02c58c63             beq     a1,a2,d000bb5e <watchdog_init+0x50>
d000bb2a:                |  |      0b5a7637             lui     a2,0xb5a7
d000bb2e:                |  |      5e060613             addi    a2,a2,1504 # b5a75e0 <WDOG_BARK_THOLD+0xb5706f8>
d000bb32:             /--|--|----- 04c59163             bne     a1,a2,d000bb74 <watchdog_init+0x66>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:36
    case kLcStateTest:
      HARDENED_CHECK_EQ(lc_state, kLcStateTest);
      enable = kHardenedBoolFalse;
      break;
    case kLcStateDev:
      HARDENED_CHECK_EQ(lc_state, kLcStateDev);
d000bb36:             |  |  |  /-- 00c50663             beq     a0,a2,d000bb42 <watchdog_init+0x34>
d000bb3a:             |  |  |  |   0000                 unimp
d000bb3c:             |  |  |  |   0000                 unimp
d000bb3e:             |  |  |  |   0000                 unimp
d000bb40:             |  |  |  |   0000                 unimp
d000bb42:       /-----|--|--|--\-X a0a9                 j       d000bb8c <watchdog_init+0x7e>
d000bb44:       |     |  |  \----> 91b9b637             lui     a2,0x91b9b
d000bb48:       |     |  |         68a60613             addi    a2,a2,1674 # 91b9b68a <_stack_end+0xb1b7b68a>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:30
  switch (launder32(lc_state)) {
d000bb4c:       |  /--|--|-------- 04c59363             bne     a1,a2,d000bb92 <watchdog_init+0x84>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:44
    case kLcStateProd:
      HARDENED_CHECK_EQ(lc_state, kLcStateProd);
      enable = kHardenedBoolTrue;
      break;
    case kLcStateProdEnd:
      HARDENED_CHECK_EQ(lc_state, kLcStateProdEnd);
d000bb50:       |  |  |  |     /-- 00c50663             beq     a0,a2,d000bb5c <watchdog_init+0x4e>
d000bb54:       |  |  |  |     |   0000                 unimp
d000bb56:       |  |  |  |     |   0000                 unimp
d000bb58:       |  |  |  |     |   0000                 unimp
d000bb5a:       |  |  |  |     |   0000                 unimp
d000bb5c:       +--|--|--|-----\-X a805                 j       d000bb8c <watchdog_init+0x7e>
d000bb5e:       |  |  |  \-------> cf8d05b7             lui     a1,0xcf8d0
d000bb62:       |  |  |            aab58593             addi    a1,a1,-1365 # cf8cfaab <_stack_end+0xef8afaab>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:48
      enable = kHardenedBoolTrue;
      break;
    case kLcStateRma:
      HARDENED_CHECK_EQ(lc_state, kLcStateRma);
d000bb66:       |  |  |        /-- 00b50663             beq     a0,a1,d000bb72 <watchdog_init+0x64>
d000bb6a:       |  |  |        |   0000                 unimp
d000bb6c:       |  |  |        |   0000                 unimp
d000bb6e:       |  |  |        |   0000                 unimp
d000bb70:       |  |  |        |   0000                 unimp
d000bb72:       |  |  |     /--\-X a825                 j       d000bbaa <watchdog_init+0x9c>
d000bb74:       |  |  \-----|----> 65f25637             lui     a2,0x65f25
d000bb78:       |  |        |      20f60613             addi    a2,a2,527 # 65f2520f <_epmp_stack_guard_na4+0x2df1e20f>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:30
  switch (launder32(lc_state)) {
d000bb7c:       |  |     /--|----- 06c59563             bne     a1,a2,d000bbe6 <watchdog_init+0xd8>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:40
      HARDENED_CHECK_EQ(lc_state, kLcStateProd);
d000bb80:       +--|-----|--|----- 00c50663             beq     a0,a2,d000bb8c <watchdog_init+0x7e>
d000bb84:       |  |     |  |      0000                 unimp
d000bb86:       |  |     |  |      0000                 unimp
d000bb88:       |  |     |  |      0000                 unimp
d000bb8a:       |  |     |  |      0000                 unimp
d000bb8c:       \--|-----|--|----> 73900413             li      s0,1849
d000bb90:          |     |  |  /-- a839                 j       d000bbae <watchdog_init+0xa0>
d000bb92:          \-----|--|--|-> b2866637             lui     a2,0xb2866
d000bb96:                |  |  |   fbb60613             addi    a2,a2,-69 # b2865fbb <_stack_end+0xd2845fbb>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:30
  switch (launder32(lc_state)) {
d000bb9a:                +--|--|-- 04c59663             bne     a1,a2,d000bbe6 <watchdog_init+0xd8>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:32
      HARDENED_CHECK_EQ(lc_state, kLcStateTest);
d000bb9e:                |  +--|-- 00c50663             beq     a0,a2,d000bbaa <watchdog_init+0x9c>
d000bba2:                |  |  |   0000                 unimp
d000bba4:                |  |  |   0000                 unimp
d000bba6:                |  |  |   0000                 unimp
d000bba8:                |  |  |   0000                 unimp
d000bbaa:                |  \--|-> 1d400413             li      s0,468
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:55
      break;
    default:
      HARDENED_UNREACHABLE();
  }

  uint32_t threshold = otp_read32(
d000bbae:                |     \-> 56000513             li      a0,1376
d000bbb2:                |         180020ef             jal     ra,d000dd32 <otp_read32>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000bbb6:                |         85aa                 mv      a1,a0
watchdog_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:59
      OTP_CTRL_PARAM_OWNER_SW_CFG_ROM_WATCHDOG_BITE_THRESHOLD_CYCLES_OFFSET);

  // Disable watchdog if `threshold` is less than minimum.
  if (launder32(threshold) < kWatchdogMinThreshold) {
d000bbb8:                |  /----- e991                 bnez    a1,d000bbcc <watchdog_init+0xbe>
d000bbba:                |  |      4585                 li      a1,1
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:60
    HARDENED_CHECK_LT(threshold, kWatchdogMinThreshold);
d000bbbc:                |  |  /-- 00b56663             bltu    a0,a1,d000bbc8 <watchdog_init+0xba>
d000bbc0:                |  |  |   0000                 unimp
d000bbc2:                |  |  |   0000                 unimp
d000bbc4:                |  |  |   0000                 unimp
d000bbc6:                |  |  |   0000                 unimp
d000bbc8:                |  |  \-> 1d400413             li      s0,468
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:66
    enable = kHardenedBoolFalse;
  }

  watchdog_configure((watchdog_config_t){
      // 1.125 x bite_threshold
      .bark_threshold = (9 * threshold) / 8,
d000bbcc:                |  \----> 00351593             slli    a1,a0,0x3
d000bbd0:                |         95aa                 add     a1,a1,a0
d000bbd2:                |         818d                 srli    a1,a1,0x3
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:64
  watchdog_configure((watchdog_config_t){
d000bbd4:                |         c42e                 sw      a1,8(sp)
d000bbd6:                |         c62a                 sw      a0,12(sp)
d000bbd8:                |         c822                 sw      s0,16(sp)
d000bbda:                |         0028                 addi    a0,sp,8
d000bbdc:                |         2809                 jal     d000bbee <watchdog_configure>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:70
      .bite_threshold = threshold,
      .enable = enable,
  });
}
d000bbde:                |         4462                 lw      s0,24(sp)
d000bbe0:                |         40f2                 lw      ra,28(sp)
d000bbe2:                |         6105                 addi    sp,sp,32
d000bbe4:                |         8082                 ret
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:52
      HARDENED_UNREACHABLE();
d000bbe6:                \-------> 0000                 unimp
d000bbe8:                          0000                 unimp
d000bbea:                          0000                 unimp
d000bbec:                          0000                 unimp

d000bbee <watchdog_configure>:
watchdog_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:72

void watchdog_configure(watchdog_config_t config) {
d000bbee:                 1141                  addi    sp,sp,-16
d000bbf0:                 c606                  sw      ra,12(sp)
d000bbf2:                 c422                  sw      s0,8(sp)
d000bbf4:                 c226                  sw      s1,4(sp)
d000bbf6:                 842a                  mv      s0,a0
d000bbf8:                 c04004b7              lui     s1,0xc0400
d000bbfc:                 02c48513              addi    a0,s1,44 # c040002c <_stack_end+0xe03e002c>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:75
  SEC_MMIO_ASSERT_WRITE_INCREMENT(kWatchdogSecMmioConfigure, 4);
  // Tell pwrmgr we want watchdog reset events to reset the chip.
  sec_mmio_write32(
d000bc00:                 4589                  li      a1,2
d000bc02:                 246020ef              jal     ra,d000de48 <sec_mmio_write32>
d000bc06:                 4505                  li      a0,1
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000bc08:                 cc88                  sw      a0,24(s1)
d000bc0a:                 c04704b7              lui     s1,0xc0470
d000bc0e:                 01448513              addi    a0,s1,20 # c0470014 <_stack_end+0xe0450014>
watchdog_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:83
          0, kTopEarlgreyPowerManagerResetRequestsAonTimerAonAonTimerRstReq,
          true));
  abs_mmio_write32(kPwrMgrBase + PWRMGR_CFG_CDC_SYNC_REG_OFFSET, 1);

  // Set the watchdog bite and bark thresholds.
  sec_mmio_write32(kBase + AON_TIMER_WDOG_CTRL_REG_OFFSET, kCtrlDisable);
d000bc12:                 4581                  li      a1,0
d000bc14:                 234020ef              jal     ra,d000de48 <sec_mmio_write32>
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000bc18:                 0204a023              sw      zero,32(s1)
watchdog_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:86
  abs_mmio_write32(kBase + AON_TIMER_WDOG_COUNT_REG_OFFSET, 0);
  abs_mmio_write32(kBase + AON_TIMER_WDOG_BARK_THOLD_REG_OFFSET,
                   config.bark_threshold);
d000bc1c:                 4008                  lw      a0,0(s0)
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000bc1e:                 cc88                  sw      a0,24(s1)
watchdog_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:88
  sec_mmio_write32(kBase + AON_TIMER_WDOG_BITE_THOLD_REG_OFFSET,
                   config.bite_threshold);
d000bc20:                 404c                  lw      a1,4(s0)
d000bc22:                 01c48513              addi    a0,s1,28
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:87
  sec_mmio_write32(kBase + AON_TIMER_WDOG_BITE_THOLD_REG_OFFSET,
d000bc26:                 222020ef              jal     ra,d000de48 <sec_mmio_write32>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:92

  // Enable or disable the watchdog as requested.
  uint32_t ctrl = kCtrlEnable;
  switch (launder32(config.enable)) {
d000bc2a:                 4408                  lw      a0,8(s0)
d000bc2c:                 1d400613              li      a2,468
d000bc30:          /----- 00c51b63              bne     a0,a2,d000bc46 <watchdog_configure+0x58>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:98
    case kHardenedBoolTrue:
      HARDENED_CHECK_EQ(config.enable, kHardenedBoolTrue);
      ctrl = kCtrlEnable;
      break;
    case kHardenedBoolFalse:
      HARDENED_CHECK_EQ(config.enable, kHardenedBoolFalse);
d000bc34:          |      4408                  lw      a0,8(s0)
d000bc36:          |      4581                  li      a1,0
d000bc38:          |  /-- 00c50663              beq     a0,a2,d000bc44 <watchdog_configure+0x56>
d000bc3c:          |  |   0000                  unimp
d000bc3e:          |  |   0000                  unimp
d000bc40:          |  |   0000                  unimp
d000bc42:          |  |   0000                  unimp
d000bc44:       /--|--\-X a829                  j       d000bc5e <watchdog_configure+0x70>
d000bc46:       |  \----> 73900593              li      a1,1849
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:92
  switch (launder32(config.enable)) {
d000bc4a:       |  /----- 02b51863              bne     a0,a1,d000bc7a <watchdog_configure+0x8c>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:94
      HARDENED_CHECK_EQ(config.enable, kHardenedBoolTrue);
d000bc4e:       |  |      4408                  lw      a0,8(s0)
d000bc50:       |  |  /-- 00b50663              beq     a0,a1,d000bc5c <watchdog_configure+0x6e>
d000bc54:       |  |  |   0000                  unimp
d000bc56:       |  |  |   0000                  unimp
d000bc58:       |  |  |   0000                  unimp
d000bc5a:       |  |  |   0000                  unimp
d000bc5c:       |  |  \-> 4585                  li      a1,1
d000bc5e:       \--|----> c0470537              lui     a0,0xc0470
d000bc62:          |      0551                  addi    a0,a0,20
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:104
      ctrl = kCtrlDisable;
      break;
    default:
      HARDENED_UNREACHABLE();
  }
  sec_mmio_write32(kBase + AON_TIMER_WDOG_CTRL_REG_OFFSET, ctrl);
d000bc64:          |      1e4020ef              jal     ra,d000de48 <sec_mmio_write32>
d000bc68:          |      c0400537              lui     a0,0xc0400
d000bc6c:          |      4585                  li      a1,1
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000bc6e:          |      cd0c                  sw      a1,24(a0)
watchdog_configure():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:109

  // Redundantly re-request the pwrmgr configuration sync since it isn't
  // possible to use sec_mmio for it.
  abs_mmio_write32(kPwrMgrBase + PWRMGR_CFG_CDC_SYNC_REG_OFFSET, 1);
}
d000bc70:          |      4492                  lw      s1,4(sp)
d000bc72:          |      4422                  lw      s0,8(sp)
d000bc74:          |      40b2                  lw      ra,12(sp)
d000bc76:          |      0141                  addi    sp,sp,16
d000bc78:          |      8082                  ret
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:102
      HARDENED_UNREACHABLE();
d000bc7a:          \----> 0000                  unimp
d000bc7c:                 0000                  unimp
d000bc7e:                 0000                  unimp
d000bc80:                 0000                  unimp

d000bc82 <watchdog_disable>:
watchdog_disable():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:111

void watchdog_disable(void) {
d000bc82:       c0470537                lui     a0,0xc0470
d000bc86:       0551                    addi    a0,a0,20
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/watchdog.c:113
  SEC_MMIO_ASSERT_WRITE_INCREMENT(kWatchdogSecMmioDisable, 1);
  sec_mmio_write32(kBase + AON_TIMER_WDOG_CTRL_REG_OFFSET, kCtrlDisable);
d000bc88:       4581                    li      a1,0
d000bc8a:       1be0206f                j       d000de48 <sec_mmio_write32>

d000bc8e <dif_spi_host_init>:
dif_spi_host_init():
/proc/self/cwd/sw/device/lib/dif/autogen/dif_spi_host_autogen.c:19
#include "spi_host_regs.h"  // Generated.

OT_WARN_UNUSED_RESULT
dif_result_t dif_spi_host_init(mmio_region_t base_addr,
                               dif_spi_host_t *spi_host) {
  if (spi_host == NULL) {
d000bc8e:       /----- c581                     beqz    a1,d000bc96 <dif_spi_host_init+0x8>
d000bc90:       |      4601                     li      a2,0
/proc/self/cwd/sw/device/lib/dif/autogen/dif_spi_host_autogen.c:23
    return kDifBadArg;
  }

  spi_host->base_addr = base_addr;
d000bc92:       |      c188                     sw      a0,0(a1)
d000bc94:       |  /-- a011                     j       d000bc98 <dif_spi_host_init+0xa>
d000bc96:       \--|-> 460d                     li      a2,3
/proc/self/cwd/sw/device/lib/dif/autogen/dif_spi_host_autogen.c:26

  return kDifOk;
}
d000bc98:          \-> 8532                     mv      a0,a2
d000bc9a:              8082                     ret

d000bc9c <dif_spi_host_fifo_write>:
dif_spi_host_fifo_write():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:156
  uint32_t val = read_32((const void *)srcaddr);
  mmio_region_write32(spi_host->base_addr, SPI_HOST_TXDATA_REG_OFFSET, val);
}

dif_result_t dif_spi_host_fifo_write(const dif_spi_host_t *spi_host,
                                     const void *src, uint16_t len) {
d000bc9c:                    468d                       li      a3,3
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:158
  uintptr_t ptr = (uintptr_t)src;
  if (spi_host == NULL || (src == NULL && len > 0)) {
d000bc9e:       /----------- cd45                       beqz    a0,d000bd56 <dif_spi_host_fifo_write+0xba>
d000bca0:       |            00b03733           snez    a4,a1
d000bca4:       |            00163793           seqz    a5,a2
d000bca8:       |            8f5d                       or      a4,a4,a5
d000bcaa:       +----------- c755                       beqz    a4,d000bd56 <dif_spi_host_fifo_write+0xba>
misalignment32_of():
/proc/self/cwd/./sw/device/lib/base/memory.h:57
  return addr % alignof(uint32_t);
d000bcac:       |            0035f693           andi    a3,a1,3
dif_spi_host_fifo_write():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:163
    return kDifBadArg;
  }

  // If the pointer starts mis-aligned, write until we are aligned.
  while (misalignment32_of(ptr) && len > 0) {
d000bcb0:       |            00d036b3           snez    a3,a3
d000bcb4:       |            00c03733           snez    a4,a2
d000bcb8:       |            8ef9                       and     a3,a3,a4
d000bcba:       |  /-------- ce8d                       beqz    a3,d000bcf4 <dif_spi_host_fifo_write+0x58>
d000bcbc:       |  |         04800693           li      a3,72
d000bcc0:       |  |         6741                       lui     a4,0x10
d000bcc2:       |  |         fff70813           addi    a6,a4,-1 # ffff <_rom_ext_virtual_size+0x7fff>
d000bcc6:       |  |  /----> 411c                       lw      a5,0(a0)
mmio_region_read32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:96
 * @param offset the offset to read at, in bytes.
 * @return the read value.
 */
OT_WARN_UNUSED_RESULT
inline uint32_t mmio_region_read32(mmio_region_t base, ptrdiff_t offset) {
  return ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)];
d000bcc8:       |  |  |  /-> 4bd8                       lw      a4,20(a5)
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
  return (bitfield >> field.index) & field.mask;
d000bcca:       |  |  |  |   0ff77713           andi    a4,a4,255
d000bcce:       |  |  |  \-- fed70de3           beq     a4,a3,d000bcc8 <dif_spi_host_fifo_write+0x2c>
tx_fifo_write8():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:145
  mmio_region_write8(spi_host->base_addr, SPI_HOST_TXDATA_REG_OFFSET, *src);
d000bcd2:       |  |  |      00058883           lb      a7,0(a1)
dif_spi_host_fifo_write():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:165
    tx_fifo_write8(spi_host, ptr);
    ptr += 1;
d000bcd6:       |  |  |      0585                       addi    a1,a1,1
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:166
    len -= 1;
d000bcd8:       |  |  |      167d                       addi    a2,a2,-1
d000bcda:       |  |  |      010672b3           and     t0,a2,a6
misalignment32_of():
/proc/self/cwd/./sw/device/lib/base/memory.h:57
d000bcde:       |  |  |      0035f713           andi    a4,a1,3
dif_spi_host_fifo_write():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:163
  while (misalignment32_of(ptr) && len > 0) {
d000bce2:       |  |  |      00e03333           snez    t1,a4
d000bce6:       |  |  |      00503733           snez    a4,t0
d000bcea:       |  |  |      00e37733           and     a4,t1,a4
mmio_region_write8():
/proc/self/cwd/./sw/device/lib/base/mmio.h:112
 * @param offset the offset to write at, in bytes.
 * @param value the value to write.
 */
inline void mmio_region_write8(mmio_region_t base, ptrdiff_t offset,
                               uint8_t value) {
  ((volatile uint8_t *)base.base)[offset / sizeof(uint8_t)] = value;
d000bcee:       |  |  |      03178423           sb      a7,40(a5)
dif_spi_host_fifo_write():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:163
d000bcf2:       |  |  \----- fb71                       bnez    a4,d000bcc6 <dif_spi_host_fifo_write+0x2a>
d000bcf4:       |  \-------> 66c1                       lui     a3,0x10
d000bcf6:       |            fff68893           addi    a7,a3,-1 # ffff <_rom_ext_virtual_size+0x7fff>
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:170
  }

  // Write complete 32-bit words to the fifo.
  while (len > 3) {
d000bcfa:       |            01167733           and     a4,a2,a7
d000bcfe:       |            4791                       li      a5,4
d000bd00:       |  /-------- 02f76363           bltu    a4,a5,d000bd26 <dif_spi_host_fifo_write+0x8a>
d000bd04:       |  |         04800713           li      a4,72
d000bd08:       |  |         480d                       li      a6,3
d000bd0a:       |  |  /----> 411c                       lw      a5,0(a0)
mmio_region_read32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:96
  return ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)];
d000bd0c:       |  |  |  /-> 4bd4                       lw      a3,20(a5)
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
d000bd0e:       |  |  |  |   0ff6f693           andi    a3,a3,255
d000bd12:       |  |  |  \-- fee68de3           beq     a3,a4,d000bd0c <dif_spi_host_fifo_write+0x70>
read_32():
/proc/self/cwd/./sw/device/lib/base/memory.h:88
  __builtin_memcpy(&val, ptr, sizeof(uint32_t));
d000bd16:       |  |  |      4194                       lw      a3,0(a1)
mmio_region_write32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:145
 * @param offset the offset to write at, in bytes.
 * @param value the value to write.
 */
inline void mmio_region_write32(mmio_region_t base, ptrdiff_t offset,
                                uint32_t value) {
  ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)] = value;
d000bd18:       |  |  |      d794                       sw      a3,40(a5)
dif_spi_host_fifo_write():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:173
    tx_fifo_write32(spi_host, ptr);
    ptr += 4;
    len -= 4;
d000bd1a:       |  |  |      1671                       addi    a2,a2,-4
d000bd1c:       |  |  |      011676b3           and     a3,a2,a7
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:172
    ptr += 4;
d000bd20:       |  |  |      0591                       addi    a1,a1,4
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:170
  while (len > 3) {
d000bd22:       |  |  \----- fed864e3           bltu    a6,a3,d000bd0a <dif_spi_host_fifo_write+0x6e>
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:177
  }

  // Clean up any leftover bytes.
  while (len > 0) {
d000bd26:       |  \-------> 011676b3           and     a3,a2,a7
d000bd2a:       |  /-------- c68d                       beqz    a3,d000bd54 <dif_spi_host_fifo_write+0xb8>
d000bd2c:       |  |         04800693           li      a3,72
d000bd30:       |  |         6741                       lui     a4,0x10
d000bd32:       |  |         fff70813           addi    a6,a4,-1 # ffff <_rom_ext_virtual_size+0x7fff>
d000bd36:       |  |  /----> 411c                       lw      a5,0(a0)
mmio_region_read32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:96
  return ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)];
d000bd38:       |  |  |  /-> 4bd8                       lw      a4,20(a5)
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
d000bd3a:       |  |  |  |   0ff77713           andi    a4,a4,255
wait_tx_fifo():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:129
  } while (txqd == SPI_HOST_PARAM_TX_DEPTH);
d000bd3e:       |  |  |  \-- fed70de3           beq     a4,a3,d000bd38 <dif_spi_host_fifo_write+0x9c>
tx_fifo_write8():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:145
  mmio_region_write8(spi_host->base_addr, SPI_HOST_TXDATA_REG_OFFSET, *src);
d000bd42:       |  |  |      00058703           lb      a4,0(a1)
mmio_region_write8():
/proc/self/cwd/./sw/device/lib/base/mmio.h:112
  ((volatile uint8_t *)base.base)[offset / sizeof(uint8_t)] = value;
d000bd46:       |  |  |      02e78423           sb      a4,40(a5)
dif_spi_host_fifo_write():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:180
    tx_fifo_write8(spi_host, ptr);
    ptr += 1;
    len -= 1;
d000bd4a:       |  |  |      167d                       addi    a2,a2,-1
d000bd4c:       |  |  |      01067733           and     a4,a2,a6
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:179
    ptr += 1;
d000bd50:       |  |  |      0585                       addi    a1,a1,1
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:177
  while (len > 0) {
d000bd52:       |  |  \----- f375                       bnez    a4,d000bd36 <dif_spi_host_fifo_write+0x9a>
d000bd54:       |  \-------> 4681                       li      a3,0
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:184
  }

  return kDifOk;
}
d000bd56:       \----------> 8536                       mv      a0,a3
d000bd58:                    8082                       ret

d000bd5a <dif_spi_host_fifo_read>:
dif_spi_host_fifo_read():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:223
  queue->length -= 4;
  return val;
}

dif_result_t dif_spi_host_fifo_read(const dif_spi_host_t *spi_host, void *dst,
                                    uint16_t len) {
d000bd5a:                       7179                    addi    sp,sp,-48
d000bd5c:                       d606                    sw      ra,44(sp)
d000bd5e:                       d422                    sw      s0,40(sp)
d000bd60:                       d226                    sw      s1,36(sp)
d000bd62:                       d04a                    sw      s2,32(sp)
d000bd64:                       ce4e                    sw      s3,28(sp)
d000bd66:                       cc52                    sw      s4,24(sp)
d000bd68:                       ca56                    sw      s5,20(sp)
d000bd6a:                       892a                    mv      s2,a0
d000bd6c:                       450d                    li      a0,3
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:224
  if (spi_host == NULL || (dst == NULL && len > 0)) {
d000bd6e:       /-------------- 12090963                beqz    s2,d000bea0 <dif_spi_host_fifo_read+0x146>
d000bd72:       |               89b2                    mv      s3,a2
d000bd74:       |               84ae                    mv      s1,a1
d000bd76:       |               00b035b3                snez    a1,a1
d000bd7a:       |               00163613                seqz    a2,a2
d000bd7e:       |               8dd1                    or      a1,a1,a2
d000bd80:       +-------------- 12058063                beqz    a1,d000bea0 <dif_spi_host_fifo_read+0x146>
d000bd84:       |               00003517                auipc   a0,0x3
d000bd88:       |               a9450513                addi    a0,a0,-1388 # d000e818 <kSpiDeviceSfdpTable+0xa8>
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:231
  }

  uintptr_t ptr = (uintptr_t)dst;
  // We always have to read from the RXFIFO as a 32-bit word.  We use a
  // two-word queue to handle destination and length mis-alignments.
  queue_t queue = {0};
d000bd8c:       |               454c                    lw      a1,12(a0)
d000bd8e:       |               4510                    lw      a2,8(a0)
d000bd90:       |               4154                    lw      a3,4(a0)
d000bd92:       |               c62e                    sw      a1,12(sp)
d000bd94:       |               6a41                    lui     s4,0x10
d000bd96:       |               c432                    sw      a2,8(sp)
d000bd98:       |               c236                    sw      a3,4(sp)
d000bd9a:       |               4108                    lw      a0,0(a0)
misalignment32_of():
/proc/self/cwd/./sw/device/lib/base/memory.h:57
  return addr % alignof(uint32_t);
d000bd9c:       |               0034f593                andi    a1,s1,3
dif_spi_host_fifo_read():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:235

  // If the buffer is misaligned, write a byte at a time until we reach
  // alignment.
  while (misalignment32_of(ptr) && len > 0) {
d000bda0:       |               00b035b3                snez    a1,a1
d000bda4:       |               01303633                snez    a2,s3
d000bda8:       |               8df1                    and     a1,a1,a2
d000bdaa:       |               f00a0413                addi    s0,s4,-256 # ff00 <_rom_ext_virtual_size+0x7f00>
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:231
  queue_t queue = {0};
d000bdae:       |               c02a                    sw      a0,0(sp)
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:235
  while (misalignment32_of(ptr) && len > 0) {
d000bdb0:       |  /----------- cdb1                    beqz    a1,d000be0c <dif_spi_host_fifo_read+0xb2>
d000bdb2:       |  |            4501                    li      a0,0
d000bdb4:       |  |            fffa0a93                addi    s5,s4,-1
d000bdb8:       |  |     /----- 00a04b63                bgtz    a0,d000bdce <dif_spi_host_fifo_read+0x74>
d000bdbc:       |  |  /--|----> 00092503                lw      a0,0(s2)
mmio_region_read32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:96
  return ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)];
d000bdc0:       |  |  |  |  /-> 494c                    lw      a1,20(a0)
wait_rx_fifo():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:138
  } while (rxqd == 0);
d000bdc2:       |  |  |  |  |   8de1                    and     a1,a1,s0
d000bdc4:       |  |  |  |  \-- ddf5                    beqz    a1,d000bdc0 <dif_spi_host_fifo_read+0x66>
mmio_region_read32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:96
d000bdc6:       |  |  |  |      514c                    lw      a1,36(a0)
dif_spi_host_fifo_read():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:238
    if (queue.length < 1) {
      wait_rx_fifo(spi_host);
      enqueue_word(&queue, mmio_region_read32(spi_host->base_addr,
d000bdc8:       |  |  |  |      850a                    mv      a0,sp
d000bdca:       |  |  |  |      2259                    jal     d000bf50 <enqueue_word>
dequeue_byte():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:211
  queue->length -= 1;
d000bdcc:       |  |  |  |      4502                    lw      a0,0(sp)
read_64():
/proc/self/cwd/./sw/device/lib/base/memory.h:120
  __builtin_memcpy(&val, ptr, sizeof(uint64_t));
d000bdce:       |  |  |  >----> 45b2                    lw      a1,12(sp)
d000bdd0:       |  |  |  |      4622                    lw      a2,8(sp)
dequeue_byte():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:208
  uint8_t val = queue->data[0];
d000bdd2:       |  |  |  |      00810683                lb      a3,8(sp)
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:210
  write_64(qword >> 8, queue->data);
d000bdd6:       |  |  |  |      01859713                slli    a4,a1,0x18
d000bdda:       |  |  |  |      8221                    srli    a2,a2,0x8
d000bddc:       |  |  |  |      8e59                    or      a2,a2,a4
d000bdde:       |  |  |  |      81a1                    srli    a1,a1,0x8
write_64():
/proc/self/cwd/./sw/device/lib/base/memory.h:172
inline void write_64(uint64_t value, void *ptr) {
  // Both GCC and Clang optimize the code below into a single word-store on most
  // platforms. See the comment in `read_64()` for more implementation-private
  // information.
  ptr = __builtin_assume_aligned(ptr, alignof(uint64_t));
  __builtin_memcpy(ptr, &value, sizeof(uint64_t));
d000bde0:       |  |  |  |      c62e                    sw      a1,12(sp)
d000bde2:       |  |  |  |      c432                    sw      a2,8(sp)
dequeue_byte():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:211
  queue->length -= 1;
d000bde4:       |  |  |  |      157d                    addi    a0,a0,-1
d000bde6:       |  |  |  |      c02a                    sw      a0,0(sp)
dif_spi_host_fifo_read():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:242
                                              SPI_HOST_RXDATA_REG_OFFSET));
    }
    uint8_t *p = (uint8_t *)ptr;
    *p = dequeue_byte(&queue);
d000bde8:       |  |  |  |      00d48023                sb      a3,0(s1)
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:243
    ptr += 1;
d000bdec:       |  |  |  |      0485                    addi    s1,s1,1
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:244
    len -= 1;
d000bdee:       |  |  |  |      19fd                    addi    s3,s3,-1
d000bdf0:       |  |  |  |      0159f533                and     a0,s3,s5
misalignment32_of():
/proc/self/cwd/./sw/device/lib/base/memory.h:57
  return addr % alignof(uint32_t);
d000bdf4:       |  |  |  |      0034f593                andi    a1,s1,3
dif_spi_host_fifo_read():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:235
  while (misalignment32_of(ptr) && len > 0) {
d000bdf8:       |  |  |  |      00b035b3                snez    a1,a1
d000bdfc:       |  |  |  |      00a03533                snez    a0,a0
d000be00:       |  |  |  |      8d6d                    and     a0,a0,a1
d000be02:       |  +--|--|----- c509                    beqz    a0,d000be0c <dif_spi_host_fifo_read+0xb2>
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:236
    if (queue.length < 1) {
d000be04:       |  |  |  |      4502                    lw      a0,0(sp)
d000be06:       |  |  |  \----- fca044e3                bgtz    a0,d000bdce <dif_spi_host_fifo_read+0x74>
d000be0a:       |  |  \-------- bf4d                    j       d000bdbc <dif_spi_host_fifo_read+0x62>
d000be0c:       |  \----------> fffa0513                addi    a0,s4,-1
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:248
  }

  // While we can write complete words to memory, operate on 4 bytes at a time.
  while (len > 3) {
d000be10:       |               00a9f533                and     a0,s3,a0
d000be14:       |               4591                    li      a1,4
d000be16:       |  /----------- 02b56e63                bltu    a0,a1,d000be52 <dif_spi_host_fifo_read+0xf8>
d000be1a:       |  |            4a0d                    li      s4,3
d000be1c:       |  |            6541                    lui     a0,0x10
d000be1e:       |  |            fff50a93                addi    s5,a0,-1 # ffff <_rom_ext_virtual_size+0x7fff>
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:249
    if (queue.length < 4) {
d000be22:       |  |  /-------> 4502                    lw      a0,0(sp)
d000be24:       |  |  |  /----- 00aa4b63                blt     s4,a0,d000be3a <dif_spi_host_fifo_read+0xe0>
d000be28:       |  |  |  |      00092503                lw      a0,0(s2)
mmio_region_read32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:96
d000be2c:       |  |  |  |  /-> 494c                    lw      a1,20(a0)
wait_rx_fifo():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:138
  } while (rxqd == 0);
d000be2e:       |  |  |  |  |   8de1                    and     a1,a1,s0
d000be30:       |  |  |  |  \-- ddf5                    beqz    a1,d000be2c <dif_spi_host_fifo_read+0xd2>
mmio_region_read32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:96
d000be32:       |  |  |  |      514c                    lw      a1,36(a0)
dif_spi_host_fifo_read():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:251
      wait_rx_fifo(spi_host);
      enqueue_word(&queue, mmio_region_read32(spi_host->base_addr,
d000be34:       |  |  |  |      850a                    mv      a0,sp
d000be36:       |  |  |  |      2a29                    jal     d000bf50 <enqueue_word>
dequeue_word():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:218
  queue->length -= 4;
d000be38:       |  |  |  |      4502                    lw      a0,0(sp)
read_32():
/proc/self/cwd/./sw/device/lib/base/memory.h:88
  __builtin_memcpy(&val, ptr, sizeof(uint32_t));
d000be3a:       |  |  |  \----> 45b2                    lw      a1,12(sp)
d000be3c:       |  |  |         4622                    lw      a2,8(sp)
write_32():
/proc/self/cwd/./sw/device/lib/base/memory.h:146
  __builtin_memcpy(ptr, &value, sizeof(uint32_t));
d000be3e:       |  |  |         c42e                    sw      a1,8(sp)
dequeue_word():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:218
d000be40:       |  |  |         1571                    addi    a0,a0,-4
d000be42:       |  |  |         c02a                    sw      a0,0(sp)
write_32():
/proc/self/cwd/./sw/device/lib/base/memory.h:146
d000be44:       |  |  |         c090                    sw      a2,0(s1)
dif_spi_host_fifo_read():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:256
                                              SPI_HOST_RXDATA_REG_OFFSET));
    }
    write_32(dequeue_word(&queue), (void *)ptr);
    ptr += 4;
    len -= 4;
d000be46:       |  |  |         19f1                    addi    s3,s3,-4
d000be48:       |  |  |         0159f533                and     a0,s3,s5
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:255
    ptr += 4;
d000be4c:       |  |  |         0491                    addi    s1,s1,4
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:248
  while (len > 3) {
d000be4e:       |  |  \-------- fcaa6ae3                bltu    s4,a0,d000be22 <dif_spi_host_fifo_read+0xc8>
d000be52:       |  \----------> 6541                    lui     a0,0x10
d000be54:       |               fff50a13                addi    s4,a0,-1 # ffff <_rom_ext_virtual_size+0x7fff>
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:260
  }

  // Finish up any left over buffer a byte at a time.
  while (len > 0) {
d000be58:       |               0149f533                and     a0,s3,s4
d000be5c:       |  /----------- c129                    beqz    a0,d000be9e <dif_spi_host_fifo_read+0x144>
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:261
    if (queue.length < 1) {
d000be5e:       |  |  /-------> 4502                    lw      a0,0(sp)
d000be60:       |  |  |  /----- 00a04b63                bgtz    a0,d000be76 <dif_spi_host_fifo_read+0x11c>
d000be64:       |  |  |  |      00092503                lw      a0,0(s2)
mmio_region_read32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:96
d000be68:       |  |  |  |  /-> 494c                    lw      a1,20(a0)
wait_rx_fifo():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:138
  } while (rxqd == 0);
d000be6a:       |  |  |  |  |   8de1                    and     a1,a1,s0
d000be6c:       |  |  |  |  \-- ddf5                    beqz    a1,d000be68 <dif_spi_host_fifo_read+0x10e>
mmio_region_read32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:96
d000be6e:       |  |  |  |      514c                    lw      a1,36(a0)
dif_spi_host_fifo_read():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:263
      wait_rx_fifo(spi_host);
      enqueue_word(&queue, mmio_region_read32(spi_host->base_addr,
d000be70:       |  |  |  |      850a                    mv      a0,sp
d000be72:       |  |  |  |      28f9                    jal     d000bf50 <enqueue_word>
dequeue_byte():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:211
  queue->length -= 1;
d000be74:       |  |  |  |      4502                    lw      a0,0(sp)
read_64():
/proc/self/cwd/./sw/device/lib/base/memory.h:120
  __builtin_memcpy(&val, ptr, sizeof(uint64_t));
d000be76:       |  |  |  \----> 45b2                    lw      a1,12(sp)
d000be78:       |  |  |         4622                    lw      a2,8(sp)
dequeue_byte():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:208
  uint8_t val = queue->data[0];
d000be7a:       |  |  |         00810683                lb      a3,8(sp)
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:210
  write_64(qword >> 8, queue->data);
d000be7e:       |  |  |         01859713                slli    a4,a1,0x18
d000be82:       |  |  |         8221                    srli    a2,a2,0x8
d000be84:       |  |  |         8e59                    or      a2,a2,a4
d000be86:       |  |  |         81a1                    srli    a1,a1,0x8
write_64():
/proc/self/cwd/./sw/device/lib/base/memory.h:172
  __builtin_memcpy(ptr, &value, sizeof(uint64_t));
d000be88:       |  |  |         c62e                    sw      a1,12(sp)
d000be8a:       |  |  |         c432                    sw      a2,8(sp)
dequeue_byte():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:211
  queue->length -= 1;
d000be8c:       |  |  |         157d                    addi    a0,a0,-1
d000be8e:       |  |  |         c02a                    sw      a0,0(sp)
dif_spi_host_fifo_read():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:267
                                              SPI_HOST_RXDATA_REG_OFFSET));
    }
    uint8_t *p = (uint8_t *)ptr;
    *p = dequeue_byte(&queue);
d000be90:       |  |  |         00d48023                sb      a3,0(s1)
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:269
    ptr += 1;
    len -= 1;
d000be94:       |  |  |         19fd                    addi    s3,s3,-1
d000be96:       |  |  |         0149f533                and     a0,s3,s4
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:268
    ptr += 1;
d000be9a:       |  |  |         0485                    addi    s1,s1,1
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:260
  while (len > 0) {
d000be9c:       |  |  \-------- f169                    bnez    a0,d000be5e <dif_spi_host_fifo_read+0x104>
d000be9e:       |  \----------> 4501                    li      a0,0
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:273
  }

  return kDifOk;
}
d000bea0:       \-------------> 4ad2                    lw      s5,20(sp)
d000bea2:                       4a62                    lw      s4,24(sp)
d000bea4:                       49f2                    lw      s3,28(sp)
d000bea6:                       5902                    lw      s2,32(sp)
d000bea8:                       5492                    lw      s1,36(sp)
d000beaa:                       5422                    lw      s0,40(sp)
d000beac:                       50b2                    lw      ra,44(sp)
d000beae:                       6145                    addi    sp,sp,48
d000beb0:                       8082                    ret

d000beb2 <dif_spi_host_configure>:
dif_spi_host_configure():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:66
                                    dif_spi_host_config_t config) {
d000beb2:              460d                     li      a2,3
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:67
  if (spi_host == NULL) {
d000beb4:       /----- cd35                     beqz    a0,d000bf30 <dif_spi_host_configure+0x7e>
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:70
  if (config.peripheral_clock_freq_hz == 0 || config.spi_clock == 0) {
d000beb6:       |      41d4                     lw      a3,4(a1)
d000beb8:       +----- cea5                     beqz    a3,d000bf30 <dif_spi_host_configure+0x7e>
d000beba:       |      4198                     lw      a4,0(a1)
d000bebc:       +----- cb35                     beqz    a4,d000bf30 <dif_spi_host_configure+0x7e>
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:75
      ((config.peripheral_clock_freq_hz / config.spi_clock) / 2) - 1;
d000bebe:       |      02e6d6b3                 divu    a3,a3,a4
d000bec2:       |      8285                     srli    a3,a3,0x1
d000bec4:       |      16fd                     addi    a3,a3,-1
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:76
  if (divider & ~SPI_HOST_CONFIGOPTS_CLKDIV_0_MASK) {
d000bec6:       |      0106d713                 srli    a4,a3,0x10
d000beca:       +----- e33d                     bnez    a4,d000bf30 <dif_spi_host_configure+0x7e>
spi_host_reset():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:32
  mmio_region_write32(
d000becc:       |      4110                     lw      a2,0(a0)
d000bece:       |      40000737                 lui     a4,0x40000
mmio_region_write32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:145
  ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)] = value;
d000bed2:       |      ca18                     sw      a4,16(a2)
d000bed4:       |      4110                     lw      a2,0(a0)
mmio_region_read32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:96
  return ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)];
d000bed6:       |  /-> 4a5c                     lw      a5,20(a2)
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
                               bitfield_bit32_to_field32(bit_index)) == 0x1u;
d000bed8:       |  |   8ff9                     and     a5,a5,a4
spi_host_reset():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:42
  } while (active);
d000beda:       |  \-- fff5                     bnez    a5,d000bed6 <dif_spi_host_configure+0x24>
d000bedc:       |      6741                     lui     a4,0x10
d000bede:       |      177d                     addi    a4,a4,-1
mmio_region_read32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:96
d000bee0:       |  /-> 4a5c                     lw      a5,20(a2)
spi_host_reset():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:51
  } while (txqd != 0 || rxqd != 0);
d000bee2:       |  |   8ff9                     and     a5,a5,a4
d000bee4:       |  \-- fff5                     bnez    a5,d000bee0 <dif_spi_host_configure+0x2e>
mmio_region_write32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:145
  ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)] = value;
d000bee6:       |      00062823                 sw      zero,16(a2)
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
  bitfield |= (value & field.mask) << field.index;
d000beea:       |      00858603                 lb      a2,8(a1) # 80000008 <_stack_end+0x9ffe0008>
d000beee:       |      8ef9                     and     a3,a3,a4
/proc/self/cwd/./sw/device/lib/base/bitfield.h:75
  bitfield &= ~(field.mask << field.index);
d000bef0:       |      0672                     slli    a2,a2,0x1c
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
  bitfield |= (value & field.mask) << field.index;
d000bef2:       |      00958703                 lb      a4,9(a1)
/proc/self/cwd/./sw/device/lib/base/bitfield.h:75
  bitfield &= ~(field.mask << field.index);
d000bef6:       |      8231                     srli    a2,a2,0xc
d000bef8:       |      8e55                     or      a2,a2,a3
dif_spi_host_configure():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:89
                               config.chip_select.lead);
d000befa:       |      00a5c683                 lbu     a3,10(a1)
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:75
d000befe:       |      0772                     slli    a4,a4,0x1c
d000bf00:       |      8321                     srli    a4,a4,0x8
d000bf02:       |      8e59                     or      a2,a2,a4
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
  bitfield |= (value & field.mask) << field.index;
d000bf04:       |      8abd                     andi    a3,a3,15
bitfield_bit32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:138
                                value ? 0x1u : 0x0u);
d000bf06:       |      00b58703                 lb      a4,11(a1)
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
  bitfield |= (value & field.mask) << field.index;
d000bf0a:       |      06e2                     slli    a3,a3,0x18
d000bf0c:       |      8e55                     or      a2,a2,a3
bitfield_bit32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:138
                                value ? 0x1u : 0x0u);
d000bf0e:       |      00c58683                 lb      a3,12(a1)
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
  bitfield |= (value & field.mask) << field.index;
d000bf12:       |      0776                     slli    a4,a4,0x1d
d000bf14:       |      8e59                     or      a2,a2,a4
bitfield_bit32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:138
                                value ? 0x1u : 0x0u);
d000bf16:       |      00d58583                 lb      a1,13(a1)
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
  bitfield |= (value & field.mask) << field.index;
d000bf1a:       |      06fa                     slli    a3,a3,0x1e
dif_spi_host_configure():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:94
  mmio_region_write32(spi_host->base_addr, SPI_HOST_CONFIGOPTS_REG_OFFSET, reg);
d000bf1c:       |      4118                     lw      a4,0(a0)
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:75
  bitfield &= ~(field.mask << field.index);
d000bf1e:       |      8e55                     or      a2,a2,a3
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
  bitfield |= (value & field.mask) << field.index;
d000bf20:       |      05fe                     slli    a1,a1,0x1f
d000bf22:       |      8dd1                     or      a1,a1,a2
mmio_region_write32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:145
d000bf24:       |      cf0c                     sw      a1,24(a4)
spi_host_enable():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:60
  mmio_region_write32(
d000bf26:       |      4108                     lw      a0,0(a0)
d000bf28:       |      4601                     li      a2,0
d000bf2a:       |      800005b7                 lui     a1,0x80000
mmio_region_write32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:145
d000bf2e:       |      c90c                     sw      a1,16(a0)
dif_spi_host_configure():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:97
}
d000bf30:       \----> 8532                     mv      a0,a2
d000bf32:              8082                     ret

d000bf34 <dif_spi_host_output_set_enabled>:
dif_spi_host_output_set_enabled():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:101
  if (spi_host == NULL) {
d000bf34:       /-- cd01                        beqz    a0,d000bf4c <dif_spi_host_output_set_enabled+0x18>
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:106
      mmio_region_read32(spi_host->base_addr, SPI_HOST_CONTROL_REG_OFFSET);
d000bf36:       |   4110                        lw      a2,0(a0)
mmio_region_read32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:96
  return ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)];
d000bf38:       |   4a14                        lw      a3,16(a2)
d000bf3a:       |   4501                        li      a0,0
d000bf3c:       |   e0000737            lui     a4,0xe0000
d000bf40:       |   177d                        addi    a4,a4,-1
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:75
  bitfield &= ~(field.mask << field.index);
d000bf42:       |   8ef9                        and     a3,a3,a4
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
  bitfield |= (value & field.mask) << field.index;
d000bf44:       |   05f6                        slli    a1,a1,0x1d
d000bf46:       |   8dd5                        or      a1,a1,a3
mmio_region_write32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:145
  ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)] = value;
d000bf48:       |   ca0c                        sw      a1,16(a2)
dif_spi_host_output_set_enabled():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:112
}
d000bf4a:       |   8082                        ret
d000bf4c:       \-> 450d                        li      a0,3
d000bf4e:           8082                        ret

d000bf50 <enqueue_word>:
enqueue_word():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:196
  if (queue->length % sizeof(uint32_t) == 0) {
d000bf50:              4110                     lw      a2,0(a0)
d000bf52:              00367693                 andi    a3,a2,3
d000bf56:       /----- c29d                     beqz    a3,d000bf7c <enqueue_word+0x2c>
enqueue_byte():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:192
  queue->data[queue->length++] = data;
d000bf58:       |      00160693                 addi    a3,a2,1
d000bf5c:       |      c114                     sw      a3,0(a0)
d000bf5e:       |      962a                     add     a2,a2,a0
d000bf60:       |      00b60423                 sb      a1,8(a2)
d000bf64:       |      460d                     li      a2,3
d000bf66:       |  /-> 4114                     lw      a3,0(a0)
enqueue_word():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:202
      data >>= 8;
d000bf68:       |  |   81a1                     srli    a1,a1,0x8
enqueue_byte():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:192
  queue->data[queue->length++] = data;
d000bf6a:       |  |   00168713                 addi    a4,a3,1
d000bf6e:       |  |   c118                     sw      a4,0(a0)
d000bf70:       |  |   96aa                     add     a3,a3,a0
enqueue_word():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:200
    for (size_t i = 0; i < sizeof(uint32_t); ++i) {
d000bf72:       |  |   167d                     addi    a2,a2,-1
enqueue_byte():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:192
  queue->data[queue->length++] = data;
d000bf74:       |  |   00b68423                 sb      a1,8(a3)
enqueue_word():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:200
    for (size_t i = 0; i < sizeof(uint32_t); ++i) {
d000bf78:       |  \-- f67d                     bnez    a2,d000bf66 <enqueue_word+0x16>
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:205
}
d000bf7a:       |      8082                     ret
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:197
    write_32(data, queue->data + queue->length);
d000bf7c:       \----> 962a                     add     a2,a2,a0
write_32():
/proc/self/cwd/./sw/device/lib/base/memory.h:146
  __builtin_memcpy(ptr, &value, sizeof(uint32_t));
d000bf7e:              c60c                     sw      a1,8(a2)
enqueue_word():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:198
    queue->length += 4;
d000bf80:              410c                     lw      a1,0(a0)
d000bf82:              0591                     addi    a1,a1,4
d000bf84:              c10c                     sw      a1,0(a0)
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:205
}
d000bf86:              8082                     ret

d000bf88 <dif_spi_host_transaction>:
dif_spi_host_transaction():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:362
}

dif_result_t dif_spi_host_transaction(const dif_spi_host_t *spi_host,
                                      uint32_t csid,
                                      dif_spi_host_segment_t *segments,
                                      size_t length) {
d000bf88:                          7139                 addi    sp,sp,-64
d000bf8a:                          de06                 sw      ra,60(sp)
d000bf8c:                          dc22                 sw      s0,56(sp)
d000bf8e:                          da26                 sw      s1,52(sp)
d000bf90:                          d84a                 sw      s2,48(sp)
d000bf92:                          d64e                 sw      s3,44(sp)
d000bf94:                          d452                 sw      s4,40(sp)
d000bf96:                          d256                 sw      s5,36(sp)
d000bf98:                          d05a                 sw      s6,32(sp)
d000bf9a:                          ce5e                 sw      s7,28(sp)
d000bf9c:                          cc62                 sw      s8,24(sp)
d000bf9e:                          ca66                 sw      s9,20(sp)
d000bfa0:                          c86a                 sw      s10,16(sp)
d000bfa2:                          c66e                 sw      s11,12(sp)
d000bfa4:                          8a2a                 mv      s4,a0
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:364
  // Write to chip select ID.
  mmio_region_write32(spi_host->base_addr, SPI_HOST_CSID_REG_OFFSET, csid);
d000bfa6:                          4108                 lw      a0,0(a0)
mmio_region_write32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:145
d000bfa8:                          cd4c                 sw      a1,28(a0)
dif_spi_host_transaction():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:368

  // For each segment, write the segment information to the
  // COMMAND register and transmit FIFO.
  for (size_t i = 0; i < length; ++i) {
d000bfaa:       /----------------- 1a068463             beqz    a3,d000c152 <dif_spi_host_transaction+0x1ca>
d000bfae:       |                  8d36                 mv      s10,a3
d000bfb0:       |                  8932                 mv      s2,a2
d000bfb2:       |                  4401                 li      s0,0
d000bfb4:       |                  fff68a93             addi    s5,a3,-1
d000bfb8:       |                  0016b513             seqz    a0,a3
d000bfbc:       |                  c02a                 sw      a0,0(sp)
d000bfbe:       |                  6505                 lui     a0,0x1
d000bfc0:       |                  c0050b13             addi    s6,a0,-1024 # c00 <_epmp_reset_rx_size+0x400>
d000bfc4:       |                  4851                 li      a6,20
d000bfc6:       |                  4c15                 li      s8,5
d000bfc8:       |                  00003c97             auipc   s9,0x3
d000bfcc:       |                  834c8c93             addi    s9,s9,-1996 # d000e7fc <kSpiDeviceSfdpTable+0x8c>
d000bfd0:       |                  04800493             li      s1,72
d000bfd4:       |                  6541                 lui     a0,0x10
d000bfd6:       |                  f0050593             addi    a1,a0,-256 # ff00 <_rom_ext_virtual_size+0x7f00>
d000bfda:       |                  c22e                 sw      a1,4(sp)
d000bfdc:       |                  157d                 addi    a0,a0,-1
d000bfde:       |                  c42a                 sw      a0,8(sp)
d000bfe0:       |        /-------> 000a2503             lw      a0,0(s4)
mmio_region_read32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:96
  return ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)];
d000bfe4:       |        |     /-> 494c                 lw      a1,20(a0)
wait_ready():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:120
  } while (!ready);
d000bfe6:       |        |     \-- fe05dfe3             bgez    a1,d000bfe4 <dif_spi_host_transaction+0x5c>
dif_spi_host_transaction():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:372
    bool last_segment = i == length - 1;
    wait_ready(spi_host);
    dif_spi_host_segment_t *segment = &segments[i];
    switch (segment->type) {
d000bfea:       |        |         030405b3             mul     a1,s0,a6
d000bfee:       |        |         95ca                 add     a1,a1,s2
d000bff0:       |        |         4190                 lw      a2,0(a1)
d000bff2:       |  /-----|-------- 18cc6063             bltu    s8,a2,d000c172 <dif_spi_host_transaction+0x1ea>
d000bff6:       |  |     |         060a                 slli    a2,a2,0x2
d000bff8:       |  |     |         9666                 add     a2,a2,s9
d000bffa:       |  |     |         4210                 lw      a2,0(a2)
d000bffc:       |  |     |         015446b3             xor     a3,s0,s5
d000c000:       |  |     |         0016bd93             seqz    s11,a3
d000c004:       |  |     |         8602                 jr      a2
mmio_region_read32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:96
d000c006:       |  |     |     /-> 4950                 lw      a2,20(a0)
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
  return (bitfield >> field.index) & field.mask;
d000c008:       |  |     |     |   0ff67613             andi    a2,a2,255
wait_tx_fifo():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:129
  } while (txqd == SPI_HOST_PARAM_TX_DEPTH);
d000c00c:       |  |     |     \-- fe960de3             beq     a2,s1,d000c006 <dif_spi_host_transaction+0x7e>
issue_opcode():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:292
                     segment->opcode);
d000c010:       |  |     |         00458583             lb      a1,4(a1) # 3004 <_static_critical_size+0x1040>
mmio_region_write8():
/proc/self/cwd/./sw/device/lib/base/mmio.h:112
  ((volatile uint8_t *)base.base)[offset / sizeof(uint8_t)] = value;
d000c014:       |  |     |         02b50423             sb      a1,40(a0)
d000c018:       |  |     |         6589                 lui     a1,0x2
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
  bitfield |= (value & field.mask) << field.index;
d000c01a:       |  |     |     /-- 000d9463             bnez    s11,d000c022 <dif_spi_host_transaction+0x9a>
d000c01e:       |  |     |     |   20058593             addi    a1,a1,512 # 2200 <_static_critical_size+0x23c>
write_command_reg():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:285
  mmio_region_write32(spi_host->base_addr, SPI_HOST_COMMAND_REG_OFFSET, reg);
d000c022:       |  |     |     \-> 000a2503             lw      a0,0(s4)
d000c026:       |  |     |  /----- a0c5                 j       d000c106 <dif_spi_host_transaction+0x17e>
mmio_region_read32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:96
  return ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)];
d000c028:       |  |     |  |  /-> 4950                 lw      a2,20(a0)
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
  return (bitfield >> field.index) & field.mask;
d000c02a:       |  |     |  |  |   0ff67613             andi    a2,a2,255
wait_tx_fifo():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:129
  } while (txqd == SPI_HOST_PARAM_TX_DEPTH);
d000c02e:       |  |     |  |  \-- fe960de3             beq     a2,s1,d000c028 <dif_spi_host_transaction+0xa0>
issue_address():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:301
  uint32_t address = bitfield_byteswap32(segment->address.address);
d000c032:       |  |     |  |      45d4                 lw      a3,12(a1)
bitfield_byteswap32():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:293
  return __builtin_bswap32(bitfield);
d000c034:       |  |     |  |      0086d613             srli    a2,a3,0x8
d000c038:       |  |     |  |      4712                 lw      a4,4(sp)
d000c03a:       |  |     |  |      8e79                 and     a2,a2,a4
d000c03c:       |  |     |  |      0186d713             srli    a4,a3,0x18
d000c040:       |  |     |  |      8f51                 or      a4,a4,a2
d000c042:       |  |     |  |      00869793             slli    a5,a3,0x8
issue_address():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:303
  if (segment->address.mode == kDifSpiHostAddrMode4b) {
d000c046:       |  |     |  |      0085a883             lw      a7,8(a1)
bitfield_byteswap32():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:293
d000c04a:       |  |     |  |      00ff0637             lui     a2,0xff0
d000c04e:       |  |     |  |      8ff1                 and     a5,a5,a2
d000c050:       |  |     |  |      06e2                 slli    a3,a3,0x18
d000c052:       |  |     |  |      8edd                 or      a3,a3,a5
d000c054:       |  |     |  |      8ed9                 or      a3,a3,a4
issue_address():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:303
d000c056:       |  |     |  |      4605                 li      a2,1
d000c058:       |  |     |  |  /-- 00c88363             beq     a7,a2,d000c05e <dif_spi_host_transaction+0xd6>
d000c05c:       |  |     |  |  |   82a1                 srli    a3,a3,0x8
d000c05e:       |  |     |  |  \-> 6709                 lui     a4,0x2
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
  bitfield |= (value & field.mask) << field.index;
d000c060:       |  |     |  |  /-- 000d9463             bnez    s11,d000c068 <dif_spi_host_transaction+0xe0>
d000c064:       |  |     |  |  |   20070713             addi    a4,a4,512 # 2200 <_static_critical_size+0x23c>
d000c068:       |  |     |  |  \-> d514                 sw      a3,40(a0)
issue_address():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:313
  write_command_reg(spi_host, length, segment->address.width,
d000c06a:       |  |     |  |      41c8                 lw      a0,4(a1)
d000c06c:       |  |     |  |      fff88593             addi    a1,a7,-1
d000c070:       |  |     |  |      0015b593             seqz    a1,a1
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:303
  if (segment->address.mode == kDifSpiHostAddrMode4b) {
d000c074:       |  |     |  |      8dd9                 or      a1,a1,a4
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
d000c076:       |  |     |  |      00a51613             slli    a2,a0,0xa
write_command_reg():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:285
  mmio_region_write32(spi_host->base_addr, SPI_HOST_COMMAND_REG_OFFSET, reg);
d000c07a:       |  |     |  |      000a2503             lw      a0,0(s4)
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
d000c07e:       |  |     |  |      01667633             and     a2,a2,s6
d000c082:       |  |     |  |      8dd1                 or      a1,a1,a2
d000c084:       |  |     |  |      0025e593             ori     a1,a1,2
d000c088:       |  |     |  +----- a8bd                 j       d000c106 <dif_spi_host_transaction+0x17e>
issue_dummy():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:319
  write_command_reg(spi_host, segment->dummy.length, segment->dummy.width,
d000c08a:       |  |     |  |      4590                 lw      a2,8(a1)
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
d000c08c:       |  |     |  |      167d                 addi    a2,a2,-1
d000c08e:       |  |     |  |      1ff67613             andi    a2,a2,511
d000c092:       |  |     |  |  /-- 000d9463             bnez    s11,d000c09a <dif_spi_host_transaction+0x112>
d000c096:       |  |     |  |  |   20066613             ori     a2,a2,512
d000c09a:       |  |     |  |  \-> 41cc                 lw      a1,4(a1)
d000c09c:       |  |     |  |      05aa                 slli    a1,a1,0xa
d000c09e:       |  |     |  |      0165f5b3             and     a1,a1,s6
d000c0a2:       |  |     |  |      8dd1                 or      a1,a1,a2
d000c0a4:       |  |     |  +----- a08d                 j       d000c106 <dif_spi_host_transaction+0x17e>
issue_data_phase():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:332
      width = segment->tx.width;
d000c0a6:       |  |     |  |      0045a983             lw      s3,4(a1)
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:333
      length = segment->tx.length;
d000c0aa:       |  |     |  |      00c5ab83             lw      s7,12(a1)
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:335
      spi_host_fifo_write_alias(spi_host, segment->tx.buf, segment->tx.length);
d000c0ae:       |  |     |  |      458c                 lw      a1,8(a1)
d000c0b0:       |  |     |  |      4522                 lw      a0,8(sp)
d000c0b2:       |  |     |  |      00abf633             and     a2,s7,a0
d000c0b6:       |  |     |  |      8552                 mv      a0,s4
d000c0b8:       |  |     |  |      be5ff0ef             jal     ra,d000bc9c <dif_spi_host_fifo_write>
d000c0bc:       |  |     |  |      6589                 lui     a1,0x2
d000c0be:       |  |     |  |  /-- a01d                 j       d000c0e4 <dif_spi_host_transaction+0x15c>
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:345
      width = segment->rx.width;
d000c0c0:       |  |     |  |  |   0045a983             lw      s3,4(a1) # 2004 <_static_critical_size+0x40>
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:346
      length = segment->rx.length;
d000c0c4:       |  |     |  |  |   00c5ab83             lw      s7,12(a1)
d000c0c8:       |  |     |  |  |   6585                 lui     a1,0x1
d000c0ca:       |  |     |  |  +-- a829                 j       d000c0e4 <dif_spi_host_transaction+0x15c>
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:338
      width = segment->bidir.width;
d000c0cc:       |  |     |  |  |   0045a983             lw      s3,4(a1) # 1004 <_epmp_reset_rx_size+0x804>
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:339
      length = segment->bidir.length;
d000c0d0:       |  |     |  |  |   0105ab83             lw      s7,16(a1)
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:341
      spi_host_fifo_write_alias(spi_host, segment->bidir.txbuf,
d000c0d4:       |  |     |  |  |   458c                 lw      a1,8(a1)
d000c0d6:       |  |     |  |  |   4522                 lw      a0,8(sp)
d000c0d8:       |  |     |  |  |   00abf633             and     a2,s7,a0
d000c0dc:       |  |     |  |  |   8552                 mv      a0,s4
d000c0de:       |  |     |  |  |   bbfff0ef             jal     ra,d000bc9c <dif_spi_host_fifo_write>
d000c0e2:       |  |     |  |  |   658d                 lui     a1,0x3
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
d000c0e4:       |  |     |  |  \-> fffb8513             addi    a0,s7,-1
d000c0e8:       |  |     |  |      1ff57613             andi    a2,a0,511
d000c0ec:       |  |     |  |  /-- 000d9463             bnez    s11,d000c0f4 <dif_spi_host_transaction+0x16c>
d000c0f0:       |  |     |  |  |   20066613             ori     a2,a2,512
d000c0f4:       |  |     |  |  \-> 4851                 li      a6,20
d000c0f6:       |  |     |  |      00a99693             slli    a3,s3,0xa
write_command_reg():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:285
  mmio_region_write32(spi_host->base_addr, SPI_HOST_COMMAND_REG_OFFSET, reg);
d000c0fa:       |  |     |  |      000a2503             lw      a0,0(s4)
d000c0fe:       |  |     |  |      0166f6b3             and     a3,a3,s6
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
d000c102:       |  |     |  |      8dd1                 or      a1,a1,a2
d000c104:       |  |     |  |      8dd5                 or      a1,a1,a3
dif_spi_host_transaction():
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:368
  for (size_t i = 0; i < length; ++i) {
d000c106:       |  |     |  \----> 0405                 addi    s0,s0,1
d000c108:       |  |     |         d10c                 sw      a1,32(a0)
d000c10a:       |  |     \-------- eda41be3             bne     s0,s10,d000bfe0 <dif_spi_host_transaction+0x58>
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:397
        return kDifBadArg;
    }
  }

  // For each segment which receives data, read from the receive FIFO.
  for (size_t i = 0; i < length; ++i) {
d000c10e:       |  |               4502                 lw      a0,0(sp)
d000c110:       +--|-------------- e129                 bnez    a0,d000c152 <dif_spi_host_transaction+0x1ca>
d000c112:       |  |               4401                 li      s0,0
d000c114:       |  |               00c90493             addi    s1,s2,12
d000c118:       |  |               4995                 li      s3,5
d000c11a:       |  |               4a91                 li      s5,4
d000c11c:       |  |               4b51                 li      s6,20
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:399
    dif_spi_host_segment_t *segment = &segments[i];
    switch (segment->type) {
d000c11e:       |  |  /----------> ff44a503             lw      a0,-12(s1)
d000c122:       |  |  |     /----- 01350b63             beq     a0,s3,d000c138 <dif_spi_host_transaction+0x1b0>
d000c126:       |  |  |  /--|----- 03551163             bne     a0,s5,d000c148 <dif_spi_host_transaction+0x1c0>
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:401
      case kDifSpiHostSegmentTypeRx:
        spi_host_fifo_read_alias(spi_host, segment->rx.buf, segment->rx.length);
d000c12a:       |  |  |  |  |      03640533             mul     a0,s0,s6
d000c12e:       |  |  |  |  |      954a                 add     a0,a0,s2
d000c130:       |  |  |  |  |      00850593             addi    a1,a0,8
d000c134:       |  |  |  |  |      0531                 addi    a0,a0,12
d000c136:       |  |  |  |  |  /-- a021                 j       d000c13e <dif_spi_host_transaction+0x1b6>
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:406
        break;
      case kDifSpiHostSegmentTypeBidirectional:
        spi_host_fifo_read_alias(spi_host, segment->bidir.rxbuf,
                                 segment->bidir.length);
        break;
d000c138:       |  |  |  |  \--|-> 00448513             addi    a0,s1,4
d000c13c:       |  |  |  |     |   85a6                 mv      a1,s1
d000c13e:       |  |  |  |     \-> 418c                 lw      a1,0(a1)
d000c140:       |  |  |  |         00055603             lhu     a2,0(a0)
d000c144:       |  |  |  |         8552                 mv      a0,s4
d000c146:       |  |  |  |         3911                 jal     d000bd5a <dif_spi_host_fifo_read>
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:397
  for (size_t i = 0; i < length; ++i) {
d000c148:       |  |  |  \-------> 0405                 addi    s0,s0,1
d000c14a:       |  |  |            1d7d                 addi    s10,s10,-1
d000c14c:       |  |  |            04d1                 addi    s1,s1,20
d000c14e:       |  |  \----------- fc0d18e3             bnez    s10,d000c11e <dif_spi_host_transaction+0x196>
d000c152:       \--|-------------> 4501                 li      a0,0
/proc/self/cwd/sw/device/lib/dif/dif_spi_host.c:412
      default:
          /* do nothing */;
    }
  }
  return kDifOk;
}
d000c154:          |           /-> 4db2                 lw      s11,12(sp)
d000c156:          |           |   4d42                 lw      s10,16(sp)
d000c158:          |           |   4cd2                 lw      s9,20(sp)
d000c15a:          |           |   4c62                 lw      s8,24(sp)
d000c15c:          |           |   4bf2                 lw      s7,28(sp)
d000c15e:          |           |   5b02                 lw      s6,32(sp)
d000c160:          |           |   5a92                 lw      s5,36(sp)
d000c162:          |           |   5a22                 lw      s4,40(sp)
d000c164:          |           |   59b2                 lw      s3,44(sp)
d000c166:          |           |   5942                 lw      s2,48(sp)
d000c168:          |           |   54d2                 lw      s1,52(sp)
d000c16a:          |           |   5462                 lw      s0,56(sp)
d000c16c:          |           |   50f2                 lw      ra,60(sp)
d000c16e:          |           |   6121                 addi    sp,sp,64
d000c170:          |           |   8082                 ret
d000c172:          \-----------|-> 450d                 li      a0,3
d000c174:                      \-- b7c5                 j       d000c154 <dif_spi_host_transaction+0x1cc>

d000c176 <alsaqr_periph_padframe_periphs_ot_spi_00_mux_set>:
alsaqr_periph_padframe_periphs_ot_spi_00_mux_set():
/proc/self/cwd/sw/device/silicon_creator/rom/alsaqr-padframe/alsaqr_periph_padframe.c:7347

void alsaqr_periph_padframe_periphs_ot_spi_00_mux_set(alsaqr_periph_padframe_periphs_ot_spi_00_mux_sel_t mux_sel) {
  const uint32_t address = ALSAQR_PERIPH_PADFRAME_BASE_ADDRESS + ALSAQR_PERIPH_PADFRAME_PERIPHS_CONFIG_OT_SPI_00_MUX_SEL_REG_OFFSET;
  const uint32_t sel_size = 1;
  uint32_t field_mask = (1<<sel_size)-1;
  REG_WRITE32(address, mux_sel & field_mask);
d000c176:       8905                    andi    a0,a0,1
d000c178:       1a1045b7                lui     a1,0x1a104
d000c17c:       26a5aa23                sw      a0,628(a1) # 1a104274 <WDOG_BARK_THOLD+0x1a0cd38c>
/proc/self/cwd/sw/device/silicon_creator/rom/alsaqr-padframe/alsaqr_periph_padframe.c:7348
}
d000c180:       8082                    ret

d000c182 <alsaqr_periph_padframe_periphs_ot_spi_01_mux_set>:
alsaqr_periph_padframe_periphs_ot_spi_01_mux_set():
/proc/self/cwd/sw/device/silicon_creator/rom/alsaqr-padframe/alsaqr_periph_padframe.c:7440

void alsaqr_periph_padframe_periphs_ot_spi_01_mux_set(alsaqr_periph_padframe_periphs_ot_spi_01_mux_sel_t mux_sel) {
  const uint32_t address = ALSAQR_PERIPH_PADFRAME_BASE_ADDRESS + ALSAQR_PERIPH_PADFRAME_PERIPHS_CONFIG_OT_SPI_01_MUX_SEL_REG_OFFSET;
  const uint32_t sel_size = 1;
  uint32_t field_mask = (1<<sel_size)-1;
  REG_WRITE32(address, mux_sel & field_mask);
d000c182:       8905                    andi    a0,a0,1
d000c184:       1a1045b7                lui     a1,0x1a104
d000c188:       26a5ae23                sw      a0,636(a1) # 1a10427c <WDOG_BARK_THOLD+0x1a0cd394>
/proc/self/cwd/sw/device/silicon_creator/rom/alsaqr-padframe/alsaqr_periph_padframe.c:7441
}
d000c18c:       8082                    ret

d000c18e <alsaqr_periph_padframe_periphs_ot_spi_02_mux_set>:
alsaqr_periph_padframe_periphs_ot_spi_02_mux_set():
/proc/self/cwd/sw/device/silicon_creator/rom/alsaqr-padframe/alsaqr_periph_padframe.c:7533

void alsaqr_periph_padframe_periphs_ot_spi_02_mux_set(alsaqr_periph_padframe_periphs_ot_spi_02_mux_sel_t mux_sel) {
  const uint32_t address = ALSAQR_PERIPH_PADFRAME_BASE_ADDRESS + ALSAQR_PERIPH_PADFRAME_PERIPHS_CONFIG_OT_SPI_02_MUX_SEL_REG_OFFSET;
  const uint32_t sel_size = 1;
  uint32_t field_mask = (1<<sel_size)-1;
  REG_WRITE32(address, mux_sel & field_mask);
d000c18e:       8905                    andi    a0,a0,1
d000c190:       1a1045b7                lui     a1,0x1a104
d000c194:       28a5a223                sw      a0,644(a1) # 1a104284 <WDOG_BARK_THOLD+0x1a0cd39c>
/proc/self/cwd/sw/device/silicon_creator/rom/alsaqr-padframe/alsaqr_periph_padframe.c:7534
}
d000c198:       8082                    ret

d000c19a <alsaqr_periph_padframe_periphs_ot_spi_03_mux_set>:
alsaqr_periph_padframe_periphs_ot_spi_03_mux_set():
/proc/self/cwd/sw/device/silicon_creator/rom/alsaqr-padframe/alsaqr_periph_padframe.c:7626

void alsaqr_periph_padframe_periphs_ot_spi_03_mux_set(alsaqr_periph_padframe_periphs_ot_spi_03_mux_sel_t mux_sel) {
  const uint32_t address = ALSAQR_PERIPH_PADFRAME_BASE_ADDRESS + ALSAQR_PERIPH_PADFRAME_PERIPHS_CONFIG_OT_SPI_03_MUX_SEL_REG_OFFSET;
  const uint32_t sel_size = 1;
  uint32_t field_mask = (1<<sel_size)-1;
  REG_WRITE32(address, mux_sel & field_mask);
d000c19a:       8905                    andi    a0,a0,1
d000c19c:       1a1045b7                lui     a1,0x1a104
d000c1a0:       28a5a623                sw      a0,652(a1) # 1a10428c <WDOG_BARK_THOLD+0x1a0cd3a4>
/proc/self/cwd/sw/device/silicon_creator/rom/alsaqr-padframe/alsaqr_periph_padframe.c:7627
}
d000c1a4:       8082                    ret

d000c1a6 <test_status_set>:
test_status_set():
/proc/self/cwd/sw/device/lib/testing/test_framework/status.c:25
        mmio_region_from_addr(kDeviceTestStatusAddress);
    mmio_region_write32(test_status_device_addr, 0x0, (uint32_t)test_status);
  }
}

void test_status_set(test_status_t test_status) {
d000c1a6:                    1101                       addi    sp,sp,-32
d000c1a8:                    ce06                       sw      ra,28(sp)
d000c1aa:                    65b1                       lui     a1,0xc
d000c1ac:                    aad58593           addi    a1,a1,-1363 # baad <_rom_ext_virtual_size+0x3aad>
/proc/self/cwd/sw/device/lib/testing/test_framework/status.c:26
  switch (test_status) {
d000c1b0:             /----- 02b50063           beq     a0,a1,d000c1d0 <test_status_set+0x2a>
d000c1b4:             |      65a5                       lui     a1,0x9
d000c1b6:             |      05b5                       addi    a1,a1,13
d000c1b8:          /--|----- 02b50d63           beq     a0,a1,d000c1f2 <test_status_set+0x4c>
test_status_device_write():
/proc/self/cwd/sw/device/lib/testing/test_framework/status.c:18
  if (kDeviceTestStatusAddress != 0) {
d000c1bc:          |  |      00003597           auipc   a1,0x3
d000c1c0:          |  |      3d058593           addi    a1,a1,976 # d000f58c <kDeviceTestStatusAddress>
d000c1c4:          |  |      418c                       lw      a1,0(a1)
d000c1c6:          |  |  /-- c191                       beqz    a1,d000c1ca <test_status_set+0x24>
mmio_region_write32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:145
  ((volatile uint32_t *)base.base)[offset / sizeof(uint32_t)] = value;
d000c1c8:          |  |  |   c188                       sw      a0,0(a1)
test_status_set():
/proc/self/cwd/sw/device/lib/testing/test_framework/status.c:44
    default: {
      test_status_device_write(test_status);
      break;
    }
  }
}
d000c1ca:          |  |  \-> 40f2                       lw      ra,28(sp)
d000c1cc:          |  |      6105                       addi    sp,sp,32
d000c1ce:          |  |      8082                       ret
/proc/self/cwd/sw/device/lib/testing/test_framework/status.c:34
      LOG_INFO("FAIL!");
d000c1d0:          |  \----> 00003517           auipc   a0,0x3
d000c1d4:          |         3c050513           addi    a0,a0,960 # d000f590 <kDeviceLogBypassUartAddress>
d000c1d8:          |         4108                       lw      a0,0(a0)
d000c1da:          |  /----- ed0d                       bnez    a0,d000c214 <test_status_set+0x6e>
d000c1dc:          |  |      00002597           auipc   a1,0x2
d000c1e0:          |  |      69c58593           addi    a1,a1,1692 # d000e878 <kSpiDeviceSfdpTable+0x108>
d000c1e4:          |  |      0028                       addi    a0,sp,8
d000c1e6:          |  |      4651                       li      a2,20
d000c1e8:          |  |      5b7010ef           jal     ra,d000df9e <memcpy>
d000c1ec:          |  |      0028                       addi    a0,sp,8
d000c1ee:          |  |      2095                       jal     d000c252 <base_log_internal_core>
d000c1f0:          |  |  /-- a035                       j       d000c21c <test_status_set+0x76>
/proc/self/cwd/sw/device/lib/testing/test_framework/status.c:28
      LOG_INFO("PASS!");
d000c1f2:          \--|--|-> 00003517           auipc   a0,0x3
d000c1f6:             |  |   39e50513           addi    a0,a0,926 # d000f590 <kDeviceLogBypassUartAddress>
d000c1fa:             |  |   4108                       lw      a0,0(a0)
d000c1fc:       /-----|--|-- e915                       bnez    a0,d000c230 <test_status_set+0x8a>
d000c1fe:       |     |  |   00002597           auipc   a1,0x2
d000c202:       |     |  |   66658593           addi    a1,a1,1638 # d000e864 <kSpiDeviceSfdpTable+0xf4>
d000c206:       |     |  |   0028                       addi    a0,sp,8
d000c208:       |     |  |   4651                       li      a2,20
d000c20a:       |     |  |   595010ef           jal     ra,d000df9e <memcpy>
d000c20e:       |     |  |   0028                       addi    a0,sp,8
d000c210:       |     |  |   2089                       jal     d000c252 <base_log_internal_core>
d000c212:       |  /--|--|-- a01d                       j       d000c238 <test_status_set+0x92>
/proc/self/cwd/sw/device/lib/testing/test_framework/status.c:34
      LOG_INFO("FAIL!");
d000c214:       |  |  \--|-> 07800513           li      a0,120
d000c218:       |  |     |   4581                       li      a1,0
d000c21a:       |  |     |   28e9                       jal     d000c2f4 <base_log_internal_dv>
test_status_device_write():
/proc/self/cwd/sw/device/lib/testing/test_framework/status.c:18
  if (kDeviceTestStatusAddress != 0) {
d000c21c:       |  |     \-> 00003517           auipc   a0,0x3
d000c220:       |  |         37050513           addi    a0,a0,880 # d000f58c <kDeviceTestStatusAddress>
d000c224:       |  |         4108                       lw      a0,0(a0)
d000c226:       |  |  /----- c115                       beqz    a0,d000c24a <test_status_set+0xa4>
d000c228:       |  |  |      65b1                       lui     a1,0xc
d000c22a:       |  |  |      aad58593           addi    a1,a1,-1363 # baad <_rom_ext_virtual_size+0x3aad>
d000c22e:       |  |  |  /-- a829                       j       d000c248 <test_status_set+0xa2>
test_status_set():
/proc/self/cwd/sw/device/lib/testing/test_framework/status.c:28
      LOG_INFO("PASS!");
d000c230:       \--|--|--|-> 06400513           li      a0,100
d000c234:          |  |  |   4581                       li      a1,0
d000c236:          |  |  |   287d                       jal     d000c2f4 <base_log_internal_dv>
test_status_device_write():
/proc/self/cwd/sw/device/lib/testing/test_framework/status.c:18
  if (kDeviceTestStatusAddress != 0) {
d000c238:          \--|--|-> 00003517           auipc   a0,0x3
d000c23c:             |  |   35450513           addi    a0,a0,852 # d000f58c <kDeviceTestStatusAddress>
d000c240:             |  |   4108                       lw      a0,0(a0)
d000c242:             +--|-- c501                       beqz    a0,d000c24a <test_status_set+0xa4>
d000c244:             |  |   65a5                       lui     a1,0x9
d000c246:             |  |   05b5                       addi    a1,a1,13
d000c248:             |  \-> c10c                       sw      a1,0(a0)
d000c24a:             \----> 2009                       jal     d000c24c <abort>

d000c24c <abort>:
wait_for_interrupt():
/proc/self/cwd/./sw/device/lib/runtime/hart.h:29
d000c24c:       /-> 10500073            wfi
abort():
/proc/self/cwd/sw/device/lib/runtime/hart.c:21
  while ((ibex_mcycle_read() - start) < cycles) {
  }
}

noreturn void abort(void) {
  while (true) {
d000c250:       \-- bff5                        j       d000c24c <abort>

d000c252 <base_log_internal_core>:
base_log_internal_core():
/proc/self/cwd/sw/device/lib/runtime/log.c:47
 * Logs `log` and the values that follow to stdout.
 *
 * @param log the log data to log.
 * @param ... format parameters matching the format string.
 */
void base_log_internal_core(log_fields_t log, ...) {
d000c252:              7179                     addi    sp,sp,-48
d000c254:              c606                     sw      ra,12(sp)
d000c256:              c422                     sw      s0,8(sp)
d000c258:              c226                     sw      s1,4(sp)
d000c25a:              842a                     mv      s0,a0
d000c25c:              d646                     sw      a7,44(sp)
d000c25e:              d442                     sw      a6,40(sp)
d000c260:              d23e                     sw      a5,36(sp)
d000c262:              d03a                     sw      a4,32(sp)
d000c264:              ce36                     sw      a3,28(sp)
d000c266:              cc32                     sw      a2,24(sp)
d000c268:              ca2e                     sw      a1,20(sp)
/proc/self/cwd/sw/device/lib/runtime/log.c:49
  size_t file_name_len =
      ((char *)memchr(log.file_name, '\0', PTRDIFF_MAX)) - log.file_name;
d000c26a:              4148                     lw      a0,4(a0)
d000c26c:              800005b7                 lui     a1,0x80000
d000c270:              fff58613                 addi    a2,a1,-1 # 7fffffff <_stack_end+0x9ffdffff>
d000c274:              4581                     li      a1,0
d000c276:              6bd010ef                 jal     ra,d000e132 <memchr>
d000c27a:              4054                     lw      a3,4(s0)
d000c27c:              40d50633                 sub     a2,a0,a3
/proc/self/cwd/sw/device/lib/runtime/log.c:50
  const char *base_name = memrchr(log.file_name, '/', file_name_len);
d000c280:              02f00593                 li      a1,47
d000c284:              8536                     mv      a0,a3
d000c286:              75b010ef                 jal     ra,d000e1e0 <memrchr>
/proc/self/cwd/sw/device/lib/runtime/log.c:51
  if (base_name == NULL) {
d000c28a:       /----- c501                     beqz    a0,d000c292 <base_log_internal_core+0x40>
/proc/self/cwd/sw/device/lib/runtime/log.c:54
    base_name = log.file_name;
  } else {
    ++base_name;  // Remove the final '/'.
d000c28c:       |      00150693                 addi    a3,a0,1
d000c290:       |  /-- a011                     j       d000c294 <base_log_internal_core+0x42>
/proc/self/cwd/sw/device/lib/runtime/log.c:52
    base_name = log.file_name;
d000c292:       \--|-> 4054                     lw      a3,4(s0)
/proc/self/cwd/sw/device/lib/runtime/log.c:62
  // A small global counter that increments with each log line. This can be
  // useful for seeing how many times this function has been called, even if
  // nothing was printed for some time.
  static uint16_t global_log_counter = 0;

  base_printf("%s%05d %s:%d] ", stringify_severity(log.severity),
d000c294:          \-> 4008                     lw      a0,0(s0)
d000c296:              458d                     li      a1,3
stringify_severity():
/proc/self/cwd/sw/device/lib/runtime/log.c:27
  switch (severity) {
d000c298:       /----- 00a5ea63                 bltu    a1,a0,d000c2ac <base_log_internal_core+0x5a>
d000c29c:       |      050a                     slli    a0,a0,0x2
d000c29e:       |      00002597                 auipc   a1,0x2
d000c2a2:       |      60a58593                 addi    a1,a1,1546 # d000e8a8 <kSpiDeviceSfdpTable+0x138>
d000c2a6:       |      952e                     add     a0,a0,a1
d000c2a8:       |      410c                     lw      a1,0(a0)
d000c2aa:       |  /-- a029                     j       d000c2b4 <base_log_internal_core+0x62>
d000c2ac:       \--|-> 00002597                 auipc   a1,0x2
d000c2b0:          |   5fa58593                 addi    a1,a1,1530 # d000e8a6 <kSpiDeviceSfdpTable+0x136>
base_log_internal_core():
/proc/self/cwd/sw/device/lib/runtime/log.c:63
              global_log_counter, base_name, log.line);
d000c2b4:          \-> 0fff6497                 auipc   s1,0xfff6
d000c2b8:              d9c48493                 addi    s1,s1,-612 # e0002050 <base_log_internal_core.global_log_counter>
d000c2bc:              0004d603                 lhu     a2,0(s1)
d000c2c0:              4418                     lw      a4,8(s0)
/proc/self/cwd/sw/device/lib/runtime/log.c:62
  base_printf("%s%05d %s:%d] ", stringify_severity(log.severity),
d000c2c2:              00002517                 auipc   a0,0x2
d000c2c6:              5ca50513                 addi    a0,a0,1482 # d000e88c <kSpiDeviceSfdpTable+0x11c>
d000c2ca:              208d                     jal     d000c32c <base_printf>
/proc/self/cwd/sw/device/lib/runtime/log.c:64
  ++global_log_counter;
d000c2cc:              00049503                 lh      a0,0(s1)
d000c2d0:              0505                     addi    a0,a0,1
d000c2d2:              00a49023                 sh      a0,0(s1)
d000c2d6:              0848                     addi    a0,sp,20
/proc/self/cwd/sw/device/lib/runtime/log.c:67

  va_list args;
  va_start(args, log);
d000c2d8:              c02a                     sw      a0,0(sp)
/proc/self/cwd/sw/device/lib/runtime/log.c:68
  base_vprintf(log.format, args);
d000c2da:              4808                     lw      a0,16(s0)
d000c2dc:              084c                     addi    a1,sp,20
d000c2de:              2041                     jal     d000c35e <base_vprintf>
/proc/self/cwd/sw/device/lib/runtime/log.c:71
  va_end(args);

  base_printf("\r\n");
d000c2e0:              00002517                 auipc   a0,0x2
d000c2e4:              5bb50513                 addi    a0,a0,1467 # d000e89b <kSpiDeviceSfdpTable+0x12b>
d000c2e8:              2091                     jal     d000c32c <base_printf>
/proc/self/cwd/sw/device/lib/runtime/log.c:72
}
d000c2ea:              4492                     lw      s1,4(sp)
d000c2ec:              4422                     lw      s0,8(sp)
d000c2ee:              40b2                     lw      ra,12(sp)
d000c2f0:              6145                     addi    sp,sp,48
d000c2f2:              8082                     ret

d000c2f4 <base_log_internal_dv>:
base_log_internal_dv():
/proc/self/cwd/sw/device/lib/runtime/log.c:84
 *        be invalid at runtime, since the pointed-to data will have been
 *        stripped from the binary.
 * @param nargs the number of arguments passed to the format string.
 * @param ... format parameters matching the format string.
 */
void base_log_internal_dv(const log_fields_t *log, uint32_t nargs, ...) {
d000c2f4:              1101                     addi    sp,sp,-32
d000c2f6:              ce46                     sw      a7,28(sp)
d000c2f8:              cc42                     sw      a6,24(sp)
d000c2fa:              ca3e                     sw      a5,20(sp)
/proc/self/cwd/sw/device/lib/runtime/log.c:85
  mmio_region_t log_device = mmio_region_from_addr(kDeviceLogBypassUartAddress);
d000c2fc:              00003797                 auipc   a5,0x3
d000c300:              29478793                 addi    a5,a5,660 # d000f590 <kDeviceLogBypassUartAddress>
d000c304:              439c                     lw      a5,0(a5)
d000c306:              c83a                     sw      a4,16(sp)
d000c308:              c636                     sw      a3,12(sp)
d000c30a:              c432                     sw      a2,8(sp)
mmio_region_write32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:145
d000c30c:              c388                     sw      a0,0(a5)
d000c30e:              0028                     addi    a0,sp,8
base_log_internal_dv():
/proc/self/cwd/sw/device/lib/runtime/log.c:89
  mmio_region_write32(log_device, 0x0, (uintptr_t)log);

  va_list args;
  va_start(args, nargs);
d000c310:              c22a                     sw      a0,4(sp)
/proc/self/cwd/sw/device/lib/runtime/log.c:90
  for (int i = 0; i < nargs; ++i) {
d000c312:       /----- c989                     beqz    a1,d000c324 <base_log_internal_dv+0x30>
/proc/self/cwd/sw/device/lib/runtime/log.c:91
    mmio_region_write32(log_device, 0x0, va_arg(args, uint32_t));
d000c314:       |  /-> 4512                     lw      a0,4(sp)
d000c316:       |  |   00450613                 addi    a2,a0,4
d000c31a:       |  |   c232                     sw      a2,4(sp)
d000c31c:       |  |   4108                     lw      a0,0(a0)
/proc/self/cwd/sw/device/lib/runtime/log.c:90
  for (int i = 0; i < nargs; ++i) {
d000c31e:       |  |   15fd                     addi    a1,a1,-1
mmio_region_write32():
/proc/self/cwd/./sw/device/lib/base/mmio.h:145
d000c320:       |  |   c388                     sw      a0,0(a5)
base_log_internal_dv():
/proc/self/cwd/sw/device/lib/runtime/log.c:90
d000c322:       |  \-- f9ed                     bnez    a1,d000c314 <base_log_internal_dv+0x20>
/proc/self/cwd/sw/device/lib/runtime/log.c:94
  }
  va_end(args);
}
d000c324:       \----> 6105                     addi    sp,sp,32
d000c326:              8082                     ret

d000c328 <base_dev_null>:
base_dev_null():
/proc/self/cwd/sw/device/lib/runtime/print.c:52

static const char kErrorNul[17] = "%<unexpected nul>";
static const char kUnknownSpec[15] = "%<unknown spec>";
static const char kErrorTooWide[12] = "%<bad width>";

static size_t base_dev_null(void *data, const char *buf, size_t len) {
d000c328:       8532                    mv      a0,a2
/proc/self/cwd/sw/device/lib/runtime/print.c:53
  return len;
d000c32a:       8082                    ret

d000c32c <base_printf>:
base_printf():
/proc/self/cwd/sw/device/lib/runtime/print.c:84
void base_uart_stdout(const dif_uart_t *uart) {
  base_set_stdout(
      (buffer_sink_t){.data = (void *)uart, .sink = &base_dev_uart});
}

size_t base_printf(const char *format, ...) {
d000c32c:       7179                    addi    sp,sp,-48
d000c32e:       c606                    sw      ra,12(sp)
d000c330:       d646                    sw      a7,44(sp)
d000c332:       d442                    sw      a6,40(sp)
d000c334:       d23e                    sw      a5,36(sp)
d000c336:       d03a                    sw      a4,32(sp)
d000c338:       ce36                    sw      a3,28(sp)
d000c33a:       cc32                    sw      a2,24(sp)
d000c33c:       ca2e                    sw      a1,20(sp)
d000c33e:       0fff6597                auipc   a1,0xfff6
d000c342:       d1658593                addi    a1,a1,-746 # e0002054 <base_stdout>
base_vprintf():
/proc/self/cwd/sw/device/lib/runtime/print.c:93
  va_end(args);
  return bytes_left;
}

size_t base_vprintf(const char *format, va_list args) {
  return base_vfprintf(base_stdout, format, args);
d000c346:       4190                    lw      a2,0(a1)
d000c348:       41cc                    lw      a1,4(a1)
d000c34a:       872a                    mv      a4,a0
d000c34c:       0848                    addi    a0,sp,20
base_printf():
/proc/self/cwd/sw/device/lib/runtime/print.c:86
  va_start(args, format);
d000c34e:       c42a                    sw      a0,8(sp)
base_vprintf():
/proc/self/cwd/sw/device/lib/runtime/print.c:93
  return base_vfprintf(base_stdout, format, args);
d000c350:       0854                    addi    a3,sp,20
d000c352:       8532                    mv      a0,a2
d000c354:       863a                    mv      a2,a4
d000c356:       200d                    jal     d000c378 <base_vfprintf>
base_printf():
/proc/self/cwd/sw/device/lib/runtime/print.c:89
  return bytes_left;
d000c358:       40b2                    lw      ra,12(sp)
d000c35a:       6145                    addi    sp,sp,48
d000c35c:       8082                    ret

d000c35e <base_vprintf>:
base_vprintf():
/proc/self/cwd/sw/device/lib/runtime/print.c:92
size_t base_vprintf(const char *format, va_list args) {
d000c35e:       0fff6697                auipc   a3,0xfff6
d000c362:       cf668693                addi    a3,a3,-778 # e0002054 <base_stdout>
/proc/self/cwd/sw/device/lib/runtime/print.c:93
  return base_vfprintf(base_stdout, format, args);
d000c366:       4290                    lw      a2,0(a3)
d000c368:       42d4                    lw      a3,4(a3)
d000c36a:       872e                    mv      a4,a1
d000c36c:       87aa                    mv      a5,a0
d000c36e:       8532                    mv      a0,a2
d000c370:       85b6                    mv      a1,a3
d000c372:       863e                    mv      a2,a5
d000c374:       86ba                    mv      a3,a4
d000c376:       a009                    j       d000c378 <base_vfprintf>

d000c378 <base_vfprintf>:
base_vfprintf():
/proc/self/cwd/sw/device/lib/runtime/print.c:532
      *bytes_written += out.sink(out.data, kUnknownSpec, sizeof(kUnknownSpec));
    }
  }
}

size_t base_vfprintf(buffer_sink_t out, const char *format, va_list args) {
d000c378:                                                                    715d                       addi    sp,sp,-80
d000c37a:                                                                    c686                       sw      ra,76(sp)
d000c37c:                                                                    c4a2                       sw      s0,72(sp)
d000c37e:                                                                    c2a6                       sw      s1,68(sp)
d000c380:                                                                    c0ca                       sw      s2,64(sp)
d000c382:                                                                    de4e                       sw      s3,60(sp)
d000c384:                                                                    dc52                       sw      s4,56(sp)
d000c386:                                                                    da56                       sw      s5,52(sp)
d000c388:                                                                    d85a                       sw      s6,48(sp)
d000c38a:                                                                    d65e                       sw      s7,44(sp)
d000c38c:                                                                    d462                       sw      s8,40(sp)
d000c38e:                                                                    d266                       sw      s9,36(sp)
d000c390:                                                                    d06a                       sw      s10,32(sp)
d000c392:                                                                    ce6e                       sw      s11,28(sp)
d000c394:                                                                    8cb2                       mv      s9,a2
d000c396:                                                                    892a                       mv      s2,a0
d000c398:                                                                    c436                       sw      a3,8(sp)
/proc/self/cwd/sw/device/lib/runtime/print.c:533
  if (out.sink == NULL) {
d000c39a:                                                                /-- c199                       beqz    a1,d000c3a0 <base_vfprintf+0x28>
d000c39c:                                                                |   89ae                       mv      s3,a1
d000c39e:                                                             /--|-- a029                       j       d000c3a8 <base_vfprintf+0x30>
d000c3a0:                                                             |  \-> 00000997           auipc   s3,0x0
d000c3a4:                                                             |      f8898993           addi    s3,s3,-120 # d000c328 <base_dev_null>
/proc/self/cwd/sw/device/lib/runtime/print.c:542
  // NOTE: This copy is necessary on amd64 and other platforms, where
  // `va_list` is a fixed array type (and, as such, decays to a pointer in
  // an argument list). On PSABI RV32IMC, however, `va_list` is a `void*`, so
  // this is a copy of the pointer, not the array.
  va_list args_copy;
  va_copy(args_copy, args);
d000c3a8:                                                             \----> c236                       sw      a3,4(sp)
/proc/self/cwd/sw/device/lib/runtime/print.c:545

  size_t bytes_written = 0;
  while (format[0] != '\0') {
d000c3aa:                                                                    000cc503           lbu     a0,0(s9)
d000c3ae:       /----------------------------------------------------------- 42050563           beqz    a0,d000c7d8 <base_vfprintf+0x460>
d000c3b2:       |                                                            4a81                       li      s5,0
d000c3b4:       |                                                            02500c13           li      s8,37
d000c3b8:       |                                                            4d25                       li      s10,9
d000c3ba:       |                                                            4a29                       li      s4,10
d000c3bc:       |                                                            658d                       lui     a1,0x3
d000c3be:       |                                                            c2258593           addi    a1,a1,-990 # 2c22 <_static_critical_size+0xc5e>
d000c3c2:       |                                                            c02e                       sw      a1,0(sp)
d000c3c4:       |        /-------------------------------------------------> 4481                       li      s1,0
consume_until_percent():
/proc/self/cwd/sw/device/lib/runtime/print.c:155
    if (c == '\0' || c == kPercent) {
d000c3c6:       |        |                                               /-> 0ff57413           andi    s0,a0,255
d000c3ca:       |        |                                            /--|-- 01840963           beq     s0,s8,d000c3dc <base_vfprintf+0x64>
d000c3ce:       |        |                                            +--|-- c419                       beqz    s0,d000c3dc <base_vfprintf+0x64>
/proc/self/cwd/sw/device/lib/runtime/print.c:154
    char c = (*format)[text_len];
d000c3d0:       |        |                                            |  |   009c8533           add     a0,s9,s1
d000c3d4:       |        |                                            |  |   00154503           lbu     a0,1(a0)
/proc/self/cwd/sw/device/lib/runtime/print.c:162
    ++text_len;
d000c3d8:       |        |                                            |  |   0485                       addi    s1,s1,1
d000c3da:       |        |                                            |  \-- b7f5                       j       d000c3c6 <base_vfprintf+0x4e>
/proc/self/cwd/sw/device/lib/runtime/print.c:156
      if (text_len > 0) {
d000c3dc:       |        |                                            \--/-X c491                       beqz    s1,d000c3e8 <base_vfprintf+0x70>
/proc/self/cwd/sw/device/lib/runtime/print.c:157
        *bytes_written += out.sink(out.data, *format, text_len);
d000c3de:       |        |                                               |   854a                       mv      a0,s2
d000c3e0:       |        |                                               |   85e6                       mv      a1,s9
d000c3e2:       |        |                                               |   8626                       mv      a2,s1
d000c3e4:       |        |                                               |   9982                       jalr    s3
d000c3e6:       |        |                                               |   9aaa                       add     s5,s5,a0
base_vfprintf():
/proc/self/cwd/sw/device/lib/runtime/print.c:546
    if (!consume_until_percent(out, &format, &bytes_written)) {
d000c3e8:       |  /-----|-----------------------------------------------\-X 3e040963           beqz    s0,d000c7da <base_vfprintf+0x462>
consume_format_specifier():
/proc/self/cwd/sw/device/lib/runtime/print.c:195
  if ((*format)[0] == '!') {
d000c3ec:       |  |     |                                                   009c8533           add     a0,s9,s1
d000c3f0:       |  |     |                                                   00154603           lbu     a2,1(a0)
d000c3f4:       |  |     |                                                   02100713           li      a4,33
d000c3f8:       |  |     |                                            /----- 00e61863           bne     a2,a4,d000c408 <base_vfprintf+0x90>
/proc/self/cwd/sw/device/lib/runtime/print.c:208
    char c = (*format)[spec_len];
d000c3fc:       |  |     |                                            |      00254583           lbu     a1,2(a0)
d000c400:       |  |     |                                            |      00250693           addi    a3,a0,2
d000c404:       |  |     |                                            |      4b05                       li      s6,1
d000c406:       |  |     |                                            |  /-- a029                       j       d000c410 <base_vfprintf+0x98>
d000c408:       |  |     |                                            \--|-> 4b01                       li      s6,0
d000c40a:       |  |     |                                               |   00150693           addi    a3,a0,1
d000c40e:       |  |     |                                               |   85b2                       mv      a1,a2
/proc/self/cwd/sw/device/lib/runtime/print.c:209
    if (c == '\0') {
d000c410:       |  |  /--|-----------------------------------------------\-X 3a058b63           beqz    a1,d000c7c6 <base_vfprintf+0x44e>
d000c414:       |  |  |  |                                                   4481                       li      s1,0
d000c416:       |  |  |  |                                                   4b81                       li      s7,0
d000c418:       |  |  |  |                                                   4501                       li      a0,0
d000c41a:       |  |  |  |                                                   fdf60613           addi    a2,a2,-33
d000c41e:       |  |  |  |                                                   00163d93           seqz    s11,a2
/proc/self/cwd/sw/device/lib/runtime/print.c:213
    if (c < '0' || c > '9') {
d000c422:       |  |  |  |                                                   00168c93           addi    s9,a3,1
d000c426:       |  |  |  |                                      /----------> fd058613           addi    a2,a1,-48
d000c42a:       |  |  |  |                                      |            0ff67613           andi    a2,a2,255
/proc/self/cwd/sw/device/lib/runtime/print.c:209
    if (c == '\0') {
d000c42e:       |  |  |  |                                      |            0ff5f593           andi    a1,a1,255
d000c432:       |  |  |  |                                   /--|----------- 02cd6b63           bltu    s10,a2,d000c468 <base_vfprintf+0xf0>
/proc/self/cwd/sw/device/lib/runtime/print.c:216
    if (spec->padding == 0) {
d000c436:       |  |  |  |                                   |  |            0ff57613           andi    a2,a0,255
d000c43a:       |  |  |  |                                   |  |        /-- ca19                       beqz    a2,d000c450 <base_vfprintf+0xd8>
/proc/self/cwd/sw/device/lib/runtime/print.c:224
    spec->width *= 10;
d000c43c:       |  |  |  |                                   |  |     /--|-> 03448633           mul     a2,s1,s4
/proc/self/cwd/sw/device/lib/runtime/print.c:225
    spec->width += (c - '0');
d000c440:       |  |  |  |                                   |  |     |  |   95b2                       add     a1,a1,a2
d000c442:       |  |  |  |                                   |  |     |  |   fd058493           addi    s1,a1,-48
/proc/self/cwd/sw/device/lib/runtime/print.c:208
    char c = (*format)[spec_len];
d000c446:       |  |  |  |                                   |  |  /--|--|-> 000cc583           lbu     a1,0(s9)
/proc/self/cwd/sw/device/lib/runtime/print.c:209
    if (c == '\0') {
d000c44a:       |  |  |  |                                   |  |  |  |  |   0c85                       addi    s9,s9,1
d000c44c:       |  |  |  |                                   |  \--|--|--|-- fde9                       bnez    a1,d000c426 <base_vfprintf+0xae>
d000c44e:       |  |  +--|-----------------------------------|-----|--|--|-- aea5                       j       d000c7c6 <base_vfprintf+0x44e>
d000c450:       |  |  |  |                                   |     |  |  \-> 02000b93           li      s7,32
d000c454:       |  |  |  |                                   |     |  |      03000613           li      a2,48
d000c458:       |  |  |  |                                   |     |  |      02000513           li      a0,32
d000c45c:       |  |  |  |                                   |     |  \----- fec590e3           bne     a1,a2,d000c43c <base_vfprintf+0xc4>
d000c460:       |  |  |  |                                   |     |         03000513           li      a0,48
d000c464:       |  |  |  |                                   |     |         8bb2                       mv      s7,a2
d000c466:       |  |  |  |                                   |     \-------- b7c5                       j       d000c446 <base_vfprintf+0xce>
/proc/self/cwd/sw/device/lib/runtime/print.c:229
  if ((spec->width == 0 && spec->padding != 0) || spec->width > 32) {
d000c468:       |  |  |  |                                   \-----------/-X c481                       beqz    s1,d000c470 <base_vfprintf+0xf8>
d000c46a:       |  |  |  |                                            /--|-- 00e4e763           bltu    s1,a4,d000c478 <base_vfprintf+0x100>
d000c46e:       |  |  |  |  /-----------------------------------------|--|-- a671                       j       d000c7fa <base_vfprintf+0x482>
d000c470:       |  |  |  |  |                                         |  \-> 0ff57513           andi    a0,a0,255
d000c474:       |  |  |  |  +-----------------------------------------|----- 38051363           bnez    a0,d000c7fa <base_vfprintf+0x482>
process_specifier():
/proc/self/cwd/sw/device/lib/runtime/print.c:374
  switch (spec.type) {
d000c478:       |  |  |  |  |                                         \----> fa858513           addi    a0,a1,-88
d000c47c:       |  |  |  |  |                                         /----- 04a76963           bltu    a4,a0,d000c4ce <base_vfprintf+0x156>
d000c480:       |  |  |  |  |                                         |      050a                       slli    a0,a0,0x2
d000c482:       |  |  |  |  |                                         |      00002597           auipc   a1,0x2
d000c486:       |  |  |  |  |                                         |      43658593           addi    a1,a1,1078 # d000e8b8 <kSpiDeviceSfdpTable+0x148>
d000c48a:       |  |  |  |  |                                         |      952e                       add     a0,a0,a1
d000c48c:       |  |  |  |  |                                         |      4108                       lw      a0,0(a0)
d000c48e:       |  |  |  |  |                                         |      8502                       jr      a0
/proc/self/cwd/sw/device/lib/runtime/print.c:408
      if (spec.is_nonstd) {
d000c490:       |  |  |  |  |  /--------------------------------------|----- 2a0d9c63           bnez    s11,d000c748 <base_vfprintf+0x3d0>
/proc/self/cwd/sw/device/lib/runtime/print.c:411
      uint32_t value = va_arg(*args, uint32_t);
d000c494:       |  |  |  |  |  |                                      |      4512                       lw      a0,4(sp)
d000c496:       |  |  |  |  |  |                                      |      00450593           addi    a1,a0,4
d000c49a:       |  |  |  |  |  |                                      |      c22e                       sw      a1,4(sp)
d000c49c:       |  |  |  |  |  |                                      |      00052b03           lw      s6,0(a0)
/proc/self/cwd/sw/device/lib/runtime/print.c:412
      if (((int32_t)value) < 0) {
d000c4a0:       |  |  |  |  |  |                                      |  /-- 000b5c63           bgez    s6,d000c4b8 <base_vfprintf+0x140>
/proc/self/cwd/sw/device/lib/runtime/print.c:413
        *bytes_written += out.sink(out.data, "-", 1);
d000c4a4:       |  |  |  |  |  |                                      |  |   00002597           auipc   a1,0x2
d000c4a8:       |  |  |  |  |  |                                      |  |   4ab58593           addi    a1,a1,1195 # d000e94f <kSpiDeviceSfdpTable+0x1df>
d000c4ac:       |  |  |  |  |  |                                      |  |   4605                       li      a2,1
d000c4ae:       |  |  |  |  |  |                                      |  |   854a                       mv      a0,s2
d000c4b0:       |  |  |  |  |  |                                      |  |   9982                       jalr    s3
d000c4b2:       |  |  |  |  |  |                                      |  |   9aaa                       add     s5,s5,a0
/proc/self/cwd/sw/device/lib/runtime/print.c:414
        value = -value;
d000c4b4:       |  |  |  |  |  |                                      |  |   41600b33           neg     s6,s6
/proc/self/cwd/sw/device/lib/runtime/print.c:417
          write_digits(out, value, spec.width, spec.padding, 10, kDigitsLow);
d000c4b8:       |  |  |  |  |  |                                      |  \-> 0ffbf713           andi    a4,s7,255
d000c4bc:       |  |  |  |  |  |                                      |      00002817           auipc   a6,0x2
d000c4c0:       |  |  |  |  |  |                                      |      4ac80813           addi    a6,a6,1196 # d000e968 <kDigitsLow>
d000c4c4:       |  |  |  |  |  |                                      |      47a9                       li      a5,10
d000c4c6:       |  |  |  |  |  |                                      |      854a                       mv      a0,s2
d000c4c8:       |  |  |  |  |  |                                      |      85ce                       mv      a1,s3
d000c4ca:       |  |  |  |  |  |                                      |      865a                       mv      a2,s6
d000c4cc:       |  |  |  |  |  |        /-----------------------------|----- a4a1                       j       d000c714 <base_vfprintf+0x39c>
/proc/self/cwd/sw/device/lib/runtime/print.c:374
  switch (spec.type) {
d000c4ce:       |  |  |  |  |  |        |                             \----> 04800513           li      a0,72
d000c4d2:       |  |  |  |  |  |        |                                /-- 02a58d63           beq     a1,a0,d000c50c <base_vfprintf+0x194>
d000c4d6:       |  |  |  |  |  +--------|--------------------------------|-- 27859963           bne     a1,s8,d000c748 <base_vfprintf+0x3d0>
d000c4da:       |  |  |  |  |  +--------|--------------------------------|-- 260d9763           bnez    s11,d000c748 <base_vfprintf+0x3d0>
/proc/self/cwd/sw/device/lib/runtime/print.c:379
      *bytes_written += out.sink(out.data, "%", 1);
d000c4de:       |  |  |  |  |  |        |                                |   00002597           auipc   a1,0x2
d000c4e2:       |  |  |  |  |  |        |                                |   46f58593           addi    a1,a1,1135 # d000e94d <kSpiDeviceSfdpTable+0x1dd>
d000c4e6:       |  |  |  |  |  |        |                             /--|-- a851                       j       d000c57a <base_vfprintf+0x202>
/proc/self/cwd/sw/device/lib/runtime/print.c:461
      if (spec.is_nonstd) {
d000c4e8:       |  |  |  |  |  |        |                             |  +-- 020d8263           beqz    s11,d000c50c <base_vfprintf+0x194>
/proc/self/cwd/sw/device/lib/runtime/print.c:462
        size_t len = va_arg(*args, size_t);
d000c4ec:       |  |  |  |  |  |        |                             |  |   4512                       lw      a0,4(sp)
d000c4ee:       |  |  |  |  |  |        |                             |  |   00450593           addi    a1,a0,4
d000c4f2:       |  |  |  |  |  |        |                             |  |   c22e                       sw      a1,4(sp)
d000c4f4:       |  |  |  |  |  |        |                             |  |   4114                       lw      a3,0(a0)
/proc/self/cwd/sw/device/lib/runtime/print.c:463
        char *value = va_arg(*args, char *);
d000c4f6:       |  |  |  |  |  |        |                             |  |   00850593           addi    a1,a0,8
d000c4fa:       |  |  |  |  |  |        |                             |  |   c22e                       sw      a1,4(sp)
d000c4fc:       |  |  |  |  |  |        |                             |  |   4150                       lw      a2,4(a0)
/proc/self/cwd/sw/device/lib/runtime/print.c:464
        *bytes_written += hex_dump(out, value, len, spec.width, spec.padding,
d000c4fe:       |  |  |  |  |  |        |                             |  |   0ffbf793           andi    a5,s7,255
d000c502:       |  |  |  |  |  |        |                             |  |   00002897           auipc   a7,0x2
d000c506:       |  |  |  |  |  |        |                             |  |   49388893           addi    a7,a7,1171 # d000e995 <kDigitsHigh>
d000c50a:       |  |  |  |  |  |        |           /-----------------|--|-- a2d5                       j       d000c6ee <base_vfprintf+0x376>
/proc/self/cwd/sw/device/lib/runtime/print.c:470
      uint32_t value = va_arg(*args, uint32_t);
d000c50c:       |  |  |  |  |  |        |           |                 |  \-> 4512                       lw      a0,4(sp)
d000c50e:       |  |  |  |  |  |        |           |                 |      00450593           addi    a1,a0,4
d000c512:       |  |  |  |  |  |        |           |                 |      c22e                       sw      a1,4(sp)
d000c514:       |  |  |  |  |  |        |           |                 |      4110                       lw      a2,0(a0)
/proc/self/cwd/sw/device/lib/runtime/print.c:472
          write_digits(out, value, spec.width, spec.padding, 16, kDigitsHigh);
d000c516:       |  |  |  |  |  |        |           |                 |      0ffbf713           andi    a4,s7,255
d000c51a:       |  |  |  |  |  |        |           |                 |      00002817           auipc   a6,0x2
d000c51e:       |  |  |  |  |  |        |           |                 |      47b80813           addi    a6,a6,1147 # d000e995 <kDigitsHigh>
d000c522:       |  |  |  |  |  |        |        /--|-----------------|----- a2f5                       j       d000c70e <base_vfprintf+0x396>
/proc/self/cwd/sw/device/lib/runtime/print.c:486
      if (!spec.is_nonstd) {
d000c524:       |  |  |  |  |  +--------|--------|--|-----------------|----- 220d8263           beqz    s11,d000c748 <base_vfprintf+0x3d0>
/proc/self/cwd/sw/device/lib/runtime/print.c:489
      size_t len = va_arg(*args, size_t);
d000c528:       |  |  |  |  |  |        |        |  |                 |      4512                       lw      a0,4(sp)
d000c52a:       |  |  |  |  |  |        |        |  |                 |      00450593           addi    a1,a0,4
d000c52e:       |  |  |  |  |  |        |        |  |                 |      c22e                       sw      a1,4(sp)
d000c530:       |  |  |  |  |  |        |        |  |                 |      4114                       lw      a3,0(a0)
/proc/self/cwd/sw/device/lib/runtime/print.c:490
      char *value = va_arg(*args, char *);
d000c532:       |  |  |  |  |  |        |        |  |                 |      00850593           addi    a1,a0,8
d000c536:       |  |  |  |  |  |        |        |  |                 |      c22e                       sw      a1,4(sp)
d000c538:       |  |  |  |  |  |        |        |  |                 |      4150                       lw      a2,4(a0)
/proc/self/cwd/sw/device/lib/runtime/print.c:491
      *bytes_written += hex_dump(out, value, len, spec.width, spec.padding,
d000c53a:       |  |  |  |  |  |        |        |  |                 |      0ffbf793           andi    a5,s7,255
d000c53e:       |  |  |  |  |  |        |        |  |                 |      00002897           auipc   a7,0x2
d000c542:       |  |  |  |  |  |        |        |  |                 |      45788893           addi    a7,a7,1111 # d000e995 <kDigitsHigh>
d000c546:       |  |  |  |  |  |        |     /--|--|-----------------|----- aadd                       j       d000c73c <base_vfprintf+0x3c4>
d000c548:       |  |  |  |  |  |        |     |  |  |                 |      4512                       lw      a0,4(sp)
d000c54a:       |  |  |  |  |  |        |     |  |  |                 |      00450593           addi    a1,a0,4
d000c54e:       |  |  |  |  |  |        |     |  |  |                 |      c22e                       sw      a1,4(sp)
d000c550:       |  |  |  |  |  |        |     |  |  |                 |      4110                       lw      a2,0(a0)
/proc/self/cwd/sw/device/lib/runtime/print.c:505
      if (spec.is_nonstd) {
d000c552:       |  |  |  |  |  |        |  /--|--|--|-----------------|----- 200d8863           beqz    s11,d000c762 <base_vfprintf+0x3ea>
/proc/self/cwd/sw/device/lib/runtime/print.c:508
        if (va_arg(*args, int) != 0) {
d000c556:       |  |  |  |  |  |  /-----|--|--|--|--|-----------------|----- 26060263           beqz    a2,d000c7ba <base_vfprintf+0x442>
/proc/self/cwd/sw/device/lib/runtime/print.c:509
          *bytes_written += out.sink(out.data, "true", 4);
d000c55a:       |  |  |  |  |  |  |     |  |  |  |  |                 |      00002597           auipc   a1,0x2
d000c55e:       |  |  |  |  |  |  |     |  |  |  |  |                 |      3fa58593           addi    a1,a1,1018 # d000e954 <kSpiDeviceSfdpTable+0x1e4>
d000c562:       |  |  |  |  |  |  |     |  |  |  |  |                 |      4611                       li      a2,4
d000c564:       |  |  |  |  |  |  |  /--|--|--|--|--|-----------------|----- a2fd                       j       d000c752 <base_vfprintf+0x3da>
/proc/self/cwd/sw/device/lib/runtime/print.c:383
      if (spec.is_nonstd) {
d000c566:       |  |  |  |  |  +--|--|--|--|--|--|--|-----------------|----- 1e0d9163           bnez    s11,d000c748 <base_vfprintf+0x3d0>
/proc/self/cwd/sw/device/lib/runtime/print.c:386
      char value = (char)va_arg(*args, uint32_t);
d000c56a:       |  |  |  |  |  |  |  |  |  |  |  |  |                 |      4512                       lw      a0,4(sp)
d000c56c:       |  |  |  |  |  |  |  |  |  |  |  |  |                 |      00450593           addi    a1,a0,4
d000c570:       |  |  |  |  |  |  |  |  |  |  |  |  |                 |      c22e                       sw      a1,4(sp)
d000c572:       |  |  |  |  |  |  |  |  |  |  |  |  |                 |      4108                       lw      a0,0(a0)
d000c574:       |  |  |  |  |  |  |  |  |  |  |  |  |                 |      00a10a23           sb      a0,20(sp)
/proc/self/cwd/sw/device/lib/runtime/print.c:387
      *bytes_written += out.sink(out.data, &value, 1);
d000c578:       |  |  |  |  |  |  |  |  |  |  |  |  |                 |      084c                       addi    a1,sp,20
d000c57a:       |  |  |  |  |  |  |  |  |  |  |  |  |                 \----> 4605                       li      a2,1
d000c57c:       |  |  |  |  |  |  |  +--|--|--|--|--|----------------------- aad9                       j       d000c752 <base_vfprintf+0x3da>
/proc/self/cwd/sw/device/lib/runtime/print.c:421
      if (spec.is_nonstd) {
d000c57e:       |  |  |  |  |  +--|--|--|--|--|--|--|----------------------- 1c0d9563           bnez    s11,d000c748 <base_vfprintf+0x3d0>
/proc/self/cwd/sw/device/lib/runtime/print.c:424
      uint32_t value = va_arg(*args, uint32_t);
d000c582:       |  |  |  |  |  |  |  |  |  |  |  |  |                        4512                       lw      a0,4(sp)
d000c584:       |  |  |  |  |  |  |  |  |  |  |  |  |                        00450593           addi    a1,a0,4
d000c588:       |  |  |  |  |  |  |  |  |  |  |  |  |                        c22e                       sw      a1,4(sp)
d000c58a:       |  |  |  |  |  |  |  |  |  |  |  |  |                        4110                       lw      a2,0(a0)
/proc/self/cwd/sw/device/lib/runtime/print.c:426
          write_digits(out, value, spec.width, spec.padding, 8, kDigitsLow);
d000c58c:       |  |  |  |  |  |  |  |  |  |  |  |  |                        0ffbf713           andi    a4,s7,255
d000c590:       |  |  |  |  |  |  |  |  |  |  |  |  |                        00002817           auipc   a6,0x2
d000c594:       |  |  |  |  |  |  |  |  |  |  |  |  |                        3d880813           addi    a6,a6,984 # d000e968 <kDigitsLow>
d000c598:       |  |  |  |  |  |  |  |  |  |  |  |  |                        47a1                       li      a5,8
d000c59a:       |  |  |  |  |  |  |  |  |  |  |  |  |  /-------------------- aa9d                       j       d000c710 <base_vfprintf+0x398>
/proc/self/cwd/sw/device/lib/runtime/print.c:430
      if (spec.is_nonstd) {
d000c59c:       |  |  |  |  |  +--|--|--|--|--|--|--|--|-------------------- 1a0d9663           bnez    s11,d000c748 <base_vfprintf+0x3d0>
/proc/self/cwd/sw/device/lib/runtime/print.c:439
      *bytes_written += out.sink(out.data, "0x", 2);
d000c5a0:       |  |  |  |  |  |  |  |  |  |  |  |  |  |                     00002597           auipc   a1,0x2
d000c5a4:       |  |  |  |  |  |  |  |  |  |  |  |  |  |                     3b158593           addi    a1,a1,945 # d000e951 <kSpiDeviceSfdpTable+0x1e1>
d000c5a8:       |  |  |  |  |  |  |  |  |  |  |  |  |  |                     4609                       li      a2,2
d000c5aa:       |  |  |  |  |  |  |  |  |  |  |  |  |  |                     854a                       mv      a0,s2
d000c5ac:       |  |  |  |  |  |  |  |  |  |  |  |  |  |                     9982                       jalr    s3
/proc/self/cwd/sw/device/lib/runtime/print.c:440
      uintptr_t value = va_arg(*args, uintptr_t);
d000c5ae:       |  |  |  |  |  |  |  |  |  |  |  |  |  |                     4592                       lw      a1,4(sp)
d000c5b0:       |  |  |  |  |  |  |  |  |  |  |  |  |  |                     00458613           addi    a2,a1,4
d000c5b4:       |  |  |  |  |  |  |  |  |  |  |  |  |  |                     c232                       sw      a2,4(sp)
d000c5b6:       |  |  |  |  |  |  |  |  |  |  |  |  |  |                     4190                       lw      a2,0(a1)
/proc/self/cwd/sw/device/lib/runtime/print.c:439
      *bytes_written += out.sink(out.data, "0x", 2);
d000c5b8:       |  |  |  |  |  |  |  |  |  |  |  |  |  |                     01550433           add     s0,a0,s5
/proc/self/cwd/sw/device/lib/runtime/print.c:442
          write_digits(out, value, sizeof(uintptr_t) * 2, '0', 16, kDigitsLow);
d000c5bc:       |  |  |  |  |  |  |  |  |  |  |  |  |  |                     00002817           auipc   a6,0x2
d000c5c0:       |  |  |  |  |  |  |  |  |  |  |  |  |  |                     3ac80813           addi    a6,a6,940 # d000e968 <kDigitsLow>
d000c5c4:       |  |  |  |  |  |  |  |  |  |  |  |  |  |                     46a1                       li      a3,8
d000c5c6:       |  |  |  |  |  |  |  |  |  |  |  |  |  |                     03000713           li      a4,48
d000c5ca:       |  |  |  |  |  |  |  |  |  |  |  |  |  |                     47c1                       li      a5,16
d000c5cc:       |  |  |  |  |  |  |  |  |  |  |  |  |  |                     854a                       mv      a0,s2
d000c5ce:       |  |  |  |  |  |  |  |  |  |  |  |  |  |                     85ce                       mv      a1,s3
d000c5d0:       |  |  |  |  |  |  |  |  |  |  |  |  |  |                     2e31                       jal     d000c8ec <write_digits>
/proc/self/cwd/sw/device/lib/runtime/print.c:441
      *bytes_written +=
d000c5d2:       |  |  |  |  |  |  |  |  |  |  |  |  |  |                     00a40ab3           add     s5,s0,a0
d000c5d6:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  /----------------- a249                       j       d000c758 <base_vfprintf+0x3e0>
/proc/self/cwd/sw/device/lib/runtime/print.c:521
      status_t value = va_arg(*args, status_t);
d000c5d8:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  4512                       lw      a0,4(sp)
d000c5da:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  00450593           addi    a1,a0,4
d000c5de:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  c22e                       sw      a1,4(sp)
d000c5e0:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  4108                       lw      a0,0(a0)
write_status():
/proc/self/cwd/sw/device/lib/runtime/print.c:280
  char mod[] = {'"', 0, 0, 0, '"', ','};
d000c5e2:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  4582                       lw      a1,0(sp)
d000c5e4:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  00b11c23           sh      a1,24(sp)
d000c5e8:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  02200593           li      a1,34
d000c5ec:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  ca2e                       sw      a1,20(sp)
/proc/self/cwd/sw/device/lib/runtime/print.c:283
  bool err = status_extract(value, &start, &arg, &mod[1]);
d000c5ee:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  006c                       addi    a1,sp,12
d000c5f0:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  0810                       addi    a2,sp,16
d000c5f2:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  01510693           addi    a3,sp,21
d000c5f6:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  2e95                       jal     d000c96a <status_extract>
/proc/self/cwd/sw/device/lib/runtime/print.c:286
  const char *end = start;
d000c5f8:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  45b2                       lw      a1,12(sp)
/proc/self/cwd/sw/device/lib/runtime/print.c:283
  bool err = status_extract(value, &start, &arg, &mod[1]);
d000c5fa:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  8baa                       mv      s7,a0
/proc/self/cwd/sw/device/lib/runtime/print.c:287
  while (*end)
d000c5fc:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  fff58413           addi    s0,a1,-1
d000c600:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |              /-> 0005c503           lbu     a0,0(a1)
/proc/self/cwd/sw/device/lib/runtime/print.c:288
    end++;
d000c604:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |              |   0585                       addi    a1,a1,1
/proc/self/cwd/sw/device/lib/runtime/print.c:287
  while (*end)
d000c606:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |              |   0405                       addi    s0,s0,1
d000c608:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |              \-- fd65                       bnez    a0,d000c600 <base_vfprintf+0x288>
/proc/self/cwd/sw/device/lib/runtime/print.c:291
  len += out.sink(out.data, "{\"", as_json ? 2 : 0);
d000c60a:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  001d9613           slli    a2,s11,0x1
d000c60e:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  00002597           auipc   a1,0x2
d000c612:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  35158593           addi    a1,a1,849 # d000e95f <kSpiDeviceSfdpTable+0x1ef>
d000c616:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  854a                       mv      a0,s2
d000c618:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  9982                       jalr    s3
/proc/self/cwd/sw/device/lib/runtime/print.c:292
  len += out.sink(out.data, start, end - start);
d000c61a:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  45b2                       lw      a1,12(sp)
/proc/self/cwd/sw/device/lib/runtime/print.c:291
  len += out.sink(out.data, "{\"", as_json ? 2 : 0);
d000c61c:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  84aa                       mv      s1,a0
/proc/self/cwd/sw/device/lib/runtime/print.c:292
  len += out.sink(out.data, start, end - start);
d000c61e:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  40b40633           sub     a2,s0,a1
d000c622:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  854a                       mv      a0,s2
d000c624:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  9982                       jalr    s3
d000c626:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  00950433           add     s0,a0,s1
/proc/self/cwd/sw/device/lib/runtime/print.c:293
  len += out.sink(out.data, "\"", as_json ? 1 : 0);
d000c62a:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  00002597           auipc   a1,0x2
d000c62e:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  33658593           addi    a1,a1,822 # d000e960 <kSpiDeviceSfdpTable+0x1f0>
d000c632:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  854a                       mv      a0,s2
d000c634:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  865a                       mv      a2,s6
d000c636:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  9982                       jalr    s3
d000c638:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  942a                       add     s0,s0,a0
/proc/self/cwd/sw/device/lib/runtime/print.c:295
  len += out.sink(out.data, ":", 1);
d000c63a:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  00002597           auipc   a1,0x2
d000c63e:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  30a58593           addi    a1,a1,778 # d000e944 <kSpiDeviceSfdpTable+0x1d4>
d000c642:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  4605                       li      a2,1
d000c644:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  854a                       mv      a0,s2
d000c646:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  9982                       jalr    s3
d000c648:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |                  00a404b3           add     s1,s0,a0
/proc/self/cwd/sw/device/lib/runtime/print.c:296
  if (err) {
d000c64c:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  /-------------- 120b8363           beqz    s7,d000c772 <base_vfprintf+0x3fa>
/proc/self/cwd/sw/device/lib/runtime/print.c:298
    len += out.sink(out.data, "[", 1);
d000c650:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               00002597           auipc   a1,0x2
d000c654:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               31258593           addi    a1,a1,786 # d000e962 <kSpiDeviceSfdpTable+0x1f2>
d000c658:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               4605                       li      a2,1
d000c65a:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               854a                       mv      a0,s2
d000c65c:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               9982                       jalr    s3
d000c65e:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               00950433           add     s0,a0,s1
/proc/self/cwd/sw/device/lib/runtime/print.c:299
    len += out.sink(out.data, mod, sizeof(mod));
d000c662:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               084c                       addi    a1,sp,20
d000c664:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               4619                       li      a2,6
d000c666:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               854a                       mv      a0,s2
d000c668:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               9982                       jalr    s3
/proc/self/cwd/sw/device/lib/runtime/print.c:300
    len += write_digits(out, arg, 0, 0, 10, kDigitsLow);
d000c66a:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               4642                       lw      a2,16(sp)
/proc/self/cwd/sw/device/lib/runtime/print.c:299
    len += out.sink(out.data, mod, sizeof(mod));
d000c66c:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               942a                       add     s0,s0,a0
/proc/self/cwd/sw/device/lib/runtime/print.c:300
    len += write_digits(out, arg, 0, 0, 10, kDigitsLow);
d000c66e:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               00002817           auipc   a6,0x2
d000c672:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               2fa80813           addi    a6,a6,762 # d000e968 <kDigitsLow>
d000c676:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               47a9                       li      a5,10
d000c678:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               854a                       mv      a0,s2
d000c67a:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               85ce                       mv      a1,s3
d000c67c:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               4681                       li      a3,0
d000c67e:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               4701                       li      a4,0
d000c680:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               24b5                       jal     d000c8ec <write_digits>
d000c682:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               942a                       add     s0,s0,a0
/proc/self/cwd/sw/device/lib/runtime/print.c:301
    len += out.sink(out.data, "]", 1);
d000c684:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               00002597           auipc   a1,0x2
d000c688:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               2e058593           addi    a1,a1,736 # d000e964 <kSpiDeviceSfdpTable+0x1f4>
d000c68c:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               4605                       li      a2,1
d000c68e:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               854a                       mv      a0,s2
d000c690:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               9982                       jalr    s3
d000c692:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |               942a                       add     s0,s0,a0
d000c694:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |     /-------- a8e5                       j       d000c78c <base_vfprintf+0x414>
d000c696:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |     |         4512                       lw      a0,4(sp)
d000c698:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |     |         00450593           addi    a1,a0,4
d000c69c:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |     |         c22e                       sw      a1,4(sp)
process_specifier():
/proc/self/cwd/sw/device/lib/runtime/print.c:392
      if (spec.is_nonstd) {
d000c69e:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  /--|-------- 100d8363           beqz    s11,d000c7a4 <base_vfprintf+0x42c>
/proc/self/cwd/sw/device/lib/runtime/print.c:394
        len = va_arg(*args, size_t);
d000c6a2:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |         4110                       lw      a2,0(a0)
/proc/self/cwd/sw/device/lib/runtime/print.c:397
      char *value = va_arg(*args, char *);
d000c6a4:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |         00850593           addi    a1,a0,8
d000c6a8:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |         c22e                       sw      a1,4(sp)
d000c6aa:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |         414c                       lw      a1,4(a0)
d000c6ac:       |  |  |  |  |  |  |  +--|--|--|--|--|--|--|--|--|--|-------- a05d                       j       d000c752 <base_vfprintf+0x3da>
/proc/self/cwd/sw/device/lib/runtime/print.c:496
      if (spec.is_nonstd) {
d000c6ae:       |  |  |  |  |  +--|--|--|--|--|--|--|--|--|--|--|--|-------- 080d9d63           bnez    s11,d000c748 <base_vfprintf+0x3d0>
/proc/self/cwd/sw/device/lib/runtime/print.c:499
      uint32_t value = va_arg(*args, uint32_t);
d000c6b2:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |         4512                       lw      a0,4(sp)
d000c6b4:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |         00450593           addi    a1,a0,4
d000c6b8:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |         c22e                       sw      a1,4(sp)
d000c6ba:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |         4110                       lw      a2,0(a0)
/proc/self/cwd/sw/device/lib/runtime/print.c:501
          write_digits(out, value, spec.width, spec.padding, 10, kDigitsLow);
d000c6bc:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |         0ffbf713           andi    a4,s7,255
d000c6c0:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |         00002817           auipc   a6,0x2
d000c6c4:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |         2a880813           addi    a6,a6,680 # d000e968 <kDigitsLow>
d000c6c8:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |         47a9                       li      a5,10
d000c6ca:       |  |  |  |  |  |  |  |  |  |  |  |  |  +--|--|--|--|-------- a099                       j       d000c710 <base_vfprintf+0x398>
/proc/self/cwd/sw/device/lib/runtime/print.c:446
      if (spec.is_nonstd) {
d000c6cc:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |     /-- 020d8663           beqz    s11,d000c6f8 <base_vfprintf+0x380>
/proc/self/cwd/sw/device/lib/runtime/print.c:447
        size_t len = va_arg(*args, size_t);
d000c6d0:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |     |   4512                       lw      a0,4(sp)
d000c6d2:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |     |   00450593           addi    a1,a0,4
d000c6d6:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |     |   c22e                       sw      a1,4(sp)
d000c6d8:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |     |   4114                       lw      a3,0(a0)
/proc/self/cwd/sw/device/lib/runtime/print.c:448
        char *value = va_arg(*args, char *);
d000c6da:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |     |   00850593           addi    a1,a0,8
d000c6de:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |     |   c22e                       sw      a1,4(sp)
d000c6e0:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |     |   4150                       lw      a2,4(a0)
/proc/self/cwd/sw/device/lib/runtime/print.c:449
        *bytes_written += hex_dump(out, value, len, spec.width, spec.padding,
d000c6e2:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |     |   0ffbf793           andi    a5,s7,255
d000c6e6:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |     |   00002897           auipc   a7,0x2
d000c6ea:       |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |  |     |   28288893           addi    a7,a7,642 # d000e968 <kDigitsLow>
d000c6ee:       |  |  |  |  |  |  |  |  |  |  |  |  \--|--|--|--|--|-----|-> 4805                       li      a6,1
d000c6f0:       |  |  |  |  |  |  |  |  |  |  |  |     |  |  |  |  |     |   854a                       mv      a0,s2
d000c6f2:       |  |  |  |  |  |  |  |  |  |  |  |     |  |  |  |  |     |   85ce                       mv      a1,s3
d000c6f4:       |  |  |  |  |  |  |  |  |  |  |  |     |  |  |  |  |     |   8726                       mv      a4,s1
d000c6f6:       |  |  |  |  |  |  |  |  |  |  |  |     |  |  |  |  |  /--|-- a0b9                       j       d000c744 <base_vfprintf+0x3cc>
/proc/self/cwd/sw/device/lib/runtime/print.c:455
      uint32_t value = va_arg(*args, uint32_t);
d000c6f8:       |  |  |  |  |  |  |  |  |  |  |  |     |  |  |  |  |  |  \-> 4512                       lw      a0,4(sp)
d000c6fa:       |  |  |  |  |  |  |  |  |  |  |  |     |  |  |  |  |  |      00450593           addi    a1,a0,4
d000c6fe:       |  |  |  |  |  |  |  |  |  |  |  |     |  |  |  |  |  |      c22e                       sw      a1,4(sp)
d000c700:       |  |  |  |  |  |  |  |  |  |  |  |     |  |  |  |  |  |      4110                       lw      a2,0(a0)
/proc/self/cwd/sw/device/lib/runtime/print.c:457
          write_digits(out, value, spec.width, spec.padding, 16, kDigitsLow);
d000c702:       |  |  |  |  |  |  |  |  |  |  |  |     |  |  |  |  |  |      0ffbf713           andi    a4,s7,255
d000c706:       |  |  |  |  |  |  |  |  |  |  |  |     |  |  |  |  |  |      00002817           auipc   a6,0x2
d000c70a:       |  |  |  |  |  |  |  |  |  |  |  |     |  |  |  |  |  |      26280813           addi    a6,a6,610 # d000e968 <kDigitsLow>
d000c70e:       |  |  |  |  |  |  |  |  |  |  |  \-----|--|--|--|--|--|----> 47c1                       li      a5,16
d000c710:       |  |  |  |  |  |  |  |  |  |  |        >--|--|--|--|--|----> 854a                       mv      a0,s2
d000c712:       |  |  |  |  |  |  |  |  |  |  |        |  |  |  |  |  |      85ce                       mv      a1,s3
d000c714:       |  |  |  |  |  |  |  |  \--|--|--------|--|--|--|--|--|----> 86a6                       mv      a3,s1
d000c716:       |  |  |  |  |  |  |  |     |  |        |  |  |  |  |  |      2ad9                       jal     d000c8ec <write_digits>
d000c718:       |  |  |  |  |  |  |  |     |  |        |  |  |  |  |  |  /-- a83d                       j       d000c756 <base_vfprintf+0x3de>
/proc/self/cwd/sw/device/lib/runtime/print.c:476
      if (!spec.is_nonstd) {
d000c71a:       |  |  |  |  |  +--|--|-----|--|--------|--|--|--|--|--|--|-- 020d8763           beqz    s11,d000c748 <base_vfprintf+0x3d0>
/proc/self/cwd/sw/device/lib/runtime/print.c:479
      size_t len = va_arg(*args, size_t);
d000c71e:       |  |  |  |  |  |  |  |     |  |        |  |  |  |  |  |  |   4512                       lw      a0,4(sp)
d000c720:       |  |  |  |  |  |  |  |     |  |        |  |  |  |  |  |  |   00450593           addi    a1,a0,4
d000c724:       |  |  |  |  |  |  |  |     |  |        |  |  |  |  |  |  |   c22e                       sw      a1,4(sp)
d000c726:       |  |  |  |  |  |  |  |     |  |        |  |  |  |  |  |  |   4114                       lw      a3,0(a0)
/proc/self/cwd/sw/device/lib/runtime/print.c:480
      char *value = va_arg(*args, char *);
d000c728:       |  |  |  |  |  |  |  |     |  |        |  |  |  |  |  |  |   00850593           addi    a1,a0,8
d000c72c:       |  |  |  |  |  |  |  |     |  |        |  |  |  |  |  |  |   c22e                       sw      a1,4(sp)
d000c72e:       |  |  |  |  |  |  |  |     |  |        |  |  |  |  |  |  |   4150                       lw      a2,4(a0)
/proc/self/cwd/sw/device/lib/runtime/print.c:481
      *bytes_written += hex_dump(out, value, len, spec.width, spec.padding,
d000c730:       |  |  |  |  |  |  |  |     |  |        |  |  |  |  |  |  |   0ffbf793           andi    a5,s7,255
d000c734:       |  |  |  |  |  |  |  |     |  |        |  |  |  |  |  |  |   00002897           auipc   a7,0x2
d000c738:       |  |  |  |  |  |  |  |     |  |        |  |  |  |  |  |  |   23488893           addi    a7,a7,564 # d000e968 <kDigitsLow>
d000c73c:       |  |  |  |  |  |  |  |     |  \--------|--|--|--|--|--|--|-> 854a                       mv      a0,s2
d000c73e:       |  |  |  |  |  |  |  |     |           |  |  |  |  |  |  |   85ce                       mv      a1,s3
d000c740:       |  |  |  |  |  |  |  |     |           |  |  |  |  |  |  |   8726                       mv      a4,s1
d000c742:       |  |  |  |  |  |  |  |     |           |  |  |  |  |  |  |   4801                       li      a6,0
d000c744:       |  |  |  |  |  |  |  |     |           |  |  |  |  |  \--|-> 20c9                       jal     d000c806 <hex_dump>
d000c746:       |  |  |  |  |  |  |  |     |           |  |  |  |  |     +-- a801                       j       d000c756 <base_vfprintf+0x3de>
/proc/self/cwd/sw/device/lib/runtime/print.c:527
      *bytes_written += out.sink(out.data, kUnknownSpec, sizeof(kUnknownSpec));
d000c748:       |  |  |  |  |  \--|--|-----|-----------|--|--|--|--|-----|-> 00002597           auipc   a1,0x2
d000c74c:       |  |  |  |  |     |  |     |           |  |  |  |  |     |   25d58593           addi    a1,a1,605 # d000e9a5 <kUnknownSpec>
d000c750:       |  |  |  |  |     |  |     |           |  |  |  |  |     |   463d                       li      a2,15
d000c752:       |  |  |  |  |     |  >-----|-----------|--|--|--|--|-----|-> 854a                       mv      a0,s2
d000c754:       |  |  |  |  |     |  |     |           |  |  |  |  |     |   9982                       jalr    s3
d000c756:       |  |  |  |  |     |  |     |           |  |  |  |  |     \-> 9aaa                       add     s5,s5,a0
base_vfprintf():
/proc/self/cwd/sw/device/lib/runtime/print.c:545
  while (format[0] != '\0') {
d000c758:       |  |  |  |  |     |  |     |           |  >--|--|--|-------> 000cc503           lbu     a0,0(s9)
d000c75c:       |  |  |  \--|-----|--|-----|-----------|--|--|--|--|-------- c60514e3           bnez    a0,d000c3c4 <base_vfprintf+0x4c>
d000c760:       |  +--|-----|-----|--|-----|-----------|--|--|--|--|-------- a8ad                       j       d000c7da <base_vfprintf+0x462>
process_specifier():
/proc/self/cwd/sw/device/lib/runtime/print.c:517
          write_digits(out, value, spec.width, spec.padding, 2, kDigitsLow);
d000c762:       |  |  |     |     |  |     \-----------|--|--|--|--|-------> 0ffbf713           andi    a4,s7,255
d000c766:       |  |  |     |     |  |                 |  |  |  |  |         00002817           auipc   a6,0x2
d000c76a:       |  |  |     |     |  |                 |  |  |  |  |         20280813           addi    a6,a6,514 # d000e968 <kDigitsLow>
d000c76e:       |  |  |     |     |  |                 |  |  |  |  |         4789                       li      a5,2
d000c770:       |  |  |     |     |  |                 \--|--|--|--|-------- b745                       j       d000c710 <base_vfprintf+0x398>
write_status():
/proc/self/cwd/sw/device/lib/runtime/print.c:304
    len += write_digits(out, arg, 0, 0, 10, kDigitsLow);
d000c772:       |  |  |     |     |  |                    |  \--|--|-------> 4642                       lw      a2,16(sp)
d000c774:       |  |  |     |     |  |                    |     |  |         00002817           auipc   a6,0x2
d000c778:       |  |  |     |     |  |                    |     |  |         1f480813           addi    a6,a6,500 # d000e968 <kDigitsLow>
d000c77c:       |  |  |     |     |  |                    |     |  |         47a9                       li      a5,10
d000c77e:       |  |  |     |     |  |                    |     |  |         854a                       mv      a0,s2
d000c780:       |  |  |     |     |  |                    |     |  |         85ce                       mv      a1,s3
d000c782:       |  |  |     |     |  |                    |     |  |         4681                       li      a3,0
d000c784:       |  |  |     |     |  |                    |     |  |         4701                       li      a4,0
d000c786:       |  |  |     |     |  |                    |     |  |         229d                       jal     d000c8ec <write_digits>
d000c788:       |  |  |     |     |  |                    |     |  |         00950433           add     s0,a0,s1
/proc/self/cwd/sw/device/lib/runtime/print.c:306
  len += out.sink(out.data, "}", as_json ? 1 : 0);
d000c78c:       |  |  |     |     |  |                    |     |  \-------> 00002597           auipc   a1,0x2
d000c790:       |  |  |     |     |  |                    |     |            1da58593           addi    a1,a1,474 # d000e966 <kSpiDeviceSfdpTable+0x1f6>
d000c794:       |  |  |     |     |  |                    |     |            854a                       mv      a0,s2
d000c796:       |  |  |     |     |  |                    |     |            865a                       mv      a2,s6
d000c798:       |  |  |     |     |  |                    |     |            9982                       jalr    s3
d000c79a:       |  |  |     |     |  |                    |     |            015405b3           add     a1,s0,s5
process_specifier():
/proc/self/cwd/sw/device/lib/runtime/print.c:522
      *bytes_written += write_status(out, value, spec.is_nonstd);
d000c79e:       |  |  |     |     |  |                    |     |            00a58ab3           add     s5,a1,a0
d000c7a2:       |  |  |     |     |  |                    \-----|----------- bf5d                       j       d000c758 <base_vfprintf+0x3e0>
/proc/self/cwd/sw/device/lib/runtime/print.c:397
      char *value = va_arg(*args, char *);
d000c7a4:       |  |  |     |     |  |                          \----------> 410c                       lw      a1,0(a0)
d000c7a6:       |  |  |     |     |  |                                       4501                       li      a0,0
/proc/self/cwd/sw/device/lib/runtime/print.c:398
      while (!spec.is_nonstd && value[len] != '\0') {
d000c7a8:       |  |  |     |     |  |                                   /-> 00a58633           add     a2,a1,a0
d000c7ac:       |  |  |     |     |  |                                   |   00064603           lbu     a2,0(a2)
/proc/self/cwd/sw/device/lib/runtime/print.c:400
        ++len;
d000c7b0:       |  |  |     |     |  |                                   |   0505                       addi    a0,a0,1
/proc/self/cwd/sw/device/lib/runtime/print.c:398
      while (!spec.is_nonstd && value[len] != '\0') {
d000c7b2:       |  |  |     |     |  |                                   \-- fa7d                       bnez    a2,d000c7a8 <base_vfprintf+0x430>
/proc/self/cwd/sw/device/lib/runtime/print.c:403
      *bytes_written += out.sink(out.data, value, len);
d000c7b4:       |  |  |     |     |  |                                       fff50613           addi    a2,a0,-1
d000c7b8:       |  |  |     |     |  +-------------------------------------- bf69                       j       d000c752 <base_vfprintf+0x3da>
/proc/self/cwd/sw/device/lib/runtime/print.c:511
          *bytes_written += out.sink(out.data, "false", 5);
d000c7ba:       |  |  |     |     \--|-------------------------------------> 00002597           auipc   a1,0x2
d000c7be:       |  |  |     |        |                                       19f58593           addi    a1,a1,415 # d000e959 <kSpiDeviceSfdpTable+0x1e9>
d000c7c2:       |  |  |     |        |                                       4615                       li      a2,5
d000c7c4:       |  |  |     |        \-------------------------------------- b779                       j       d000c752 <base_vfprintf+0x3da>
consume_format_specifier():
/proc/self/cwd/sw/device/lib/runtime/print.c:210
      *bytes_written += out.sink(out.data, kErrorNul, sizeof(kErrorNul));
d000c7c6:       |  |  \-----|----------------------------------------------> 00002597           auipc   a1,0x2
d000c7ca:       |  |        |                                                1b258593           addi    a1,a1,434 # d000e978 <kErrorNul>
d000c7ce:       |  |        |                                                4645                       li      a2,17
d000c7d0:       |  |        |                                            /-> 854a                       mv      a0,s2
d000c7d2:       |  |        |                                            |   9982                       jalr    s3
d000c7d4:       |  |        |                                            |   9aaa                       add     s5,s5,a0
d000c7d6:       |  +--------|--------------------------------------------|-- a011                       j       d000c7da <base_vfprintf+0x462>
d000c7d8:       \--|--------|--------------------------------------------|-> 4a81                       li      s5,0
base_vfprintf():
/proc/self/cwd/sw/device/lib/runtime/print.c:558

    process_specifier(out, spec, &bytes_written, &args_copy);
  }

  va_end(args_copy);
  return bytes_written;
d000c7da:          \--------|--------------------------------------------|-> 8556                       mv      a0,s5
d000c7dc:                   |                                            |   4df2                       lw      s11,28(sp)
d000c7de:                   |                                            |   5d02                       lw      s10,32(sp)
d000c7e0:                   |                                            |   5c92                       lw      s9,36(sp)
d000c7e2:                   |                                            |   5c22                       lw      s8,40(sp)
d000c7e4:                   |                                            |   5bb2                       lw      s7,44(sp)
d000c7e6:                   |                                            |   5b42                       lw      s6,48(sp)
d000c7e8:                   |                                            |   5ad2                       lw      s5,52(sp)
d000c7ea:                   |                                            |   5a62                       lw      s4,56(sp)
d000c7ec:                   |                                            |   59f2                       lw      s3,60(sp)
d000c7ee:                   |                                            |   4906                       lw      s2,64(sp)
d000c7f0:                   |                                            |   4496                       lw      s1,68(sp)
d000c7f2:                   |                                            |   4426                       lw      s0,72(sp)
d000c7f4:                   |                                            |   40b6                       lw      ra,76(sp)
d000c7f6:                   |                                            |   6161                       addi    sp,sp,80
d000c7f8:                   |                                            |   8082                       ret
consume_format_specifier():
/proc/self/cwd/sw/device/lib/runtime/print.c:230
    *bytes_written += out.sink(out.data, kErrorTooWide, sizeof(kErrorTooWide));
d000c7fa:                   \--------------------------------------------|-> 00002597           auipc   a1,0x2
d000c7fe:                                                                |   18f58593           addi    a1,a1,399 # d000e989 <kErrorTooWide>
d000c802:                                                                |   4631                       li      a2,12
d000c804:                                                                \-- b7f1                       j       d000c7d0 <base_vfprintf+0x458>

d000c806 <hex_dump>:
hex_dump():
/proc/self/cwd/sw/device/lib/runtime/print.c:326
                       const char *glyphs) {
d000c806:                    715d                       addi    sp,sp,-80
d000c808:                    c686                       sw      ra,76(sp)
d000c80a:                    c4a2                       sw      s0,72(sp)
d000c80c:                    c2a6                       sw      s1,68(sp)
d000c80e:                    c0ca                       sw      s2,64(sp)
d000c810:                    de4e                       sw      s3,60(sp)
d000c812:                    dc52                       sw      s4,56(sp)
d000c814:                    da56                       sw      s5,52(sp)
d000c816:                    d85a                       sw      s6,48(sp)
d000c818:                    d65e                       sw      s7,44(sp)
d000c81a:                    d462                       sw      s8,40(sp)
d000c81c:                    d266                       sw      s9,36(sp)
d000c81e:                    d06a                       sw      s10,32(sp)
d000c820:                    8bc6                       mv      s7,a7
d000c822:                    8a42                       mv      s4,a6
d000c824:                    8b36                       mv      s6,a3
d000c826:                    8ab2                       mv      s5,a2
d000c828:                    892e                       mv      s2,a1
d000c82a:                    89aa                       mv      s3,a0
/proc/self/cwd/sw/device/lib/runtime/print.c:330
  if (len < width) {
d000c82c:          /-------- 02e6fd63           bgeu    a3,a4,d000c866 <hex_dump+0x60>
/proc/self/cwd/sw/device/lib/runtime/print.c:331
    width -= len;
d000c830:          |         416704b3           sub     s1,a4,s6
/proc/self/cwd/sw/device/lib/runtime/print.c:332
    memset(buf, padding, sizeof(buf));
d000c834:          |         850a                       mv      a0,sp
d000c836:          |         02000613           li      a2,32
d000c83a:          |         85be                       mv      a1,a5
d000c83c:          |         7ea010ef           jal     ra,d000e026 <memset>
/proc/self/cwd/sw/device/lib/runtime/print.c:333
    while (width > 0) {
d000c840:          +-------- c09d                       beqz    s1,d000c866 <hex_dump+0x60>
d000c842:          |         4c01                       li      s8,0
d000c844:          |  /----> 02000513           li      a0,32
d000c848:          |  |      8426                       mv      s0,s1
/proc/self/cwd/sw/device/lib/runtime/print.c:334
      size_t to_write = width > ARRAYSIZE(buf) ? 32 : width;
d000c84a:          |  |  /-- 00a4e463           bltu    s1,a0,d000c852 <hex_dump+0x4c>
d000c84e:          |  |  |   02000413           li      s0,32
/proc/self/cwd/sw/device/lib/runtime/print.c:335
      bytes_written += out.sink(out.data, buf, to_write);
d000c852:          |  |  \-> 858a                       mv      a1,sp
d000c854:          |  |      854e                       mv      a0,s3
d000c856:          |  |      8622                       mv      a2,s0
d000c858:          |  |      9902                       jalr    s2
/proc/self/cwd/sw/device/lib/runtime/print.c:336
      width -= to_write;
d000c85a:          |  |      8c81                       sub     s1,s1,s0
/proc/self/cwd/sw/device/lib/runtime/print.c:335
      bytes_written += out.sink(out.data, buf, to_write);
d000c85c:          |  |      9c2a                       add     s8,s8,a0
/proc/self/cwd/sw/device/lib/runtime/print.c:333
    while (width > 0) {
d000c85e:          |  \----- f0fd                       bnez    s1,d000c844 <hex_dump+0x3e>
/proc/self/cwd/sw/device/lib/runtime/print.c:340
  for (size_t i = 0; i < len; ++i) {
d000c860:          |     /-- 000b1663           bnez    s6,d000c86c <hex_dump+0x66>
d000c864:       /--|-----|-- a0ad                       j       d000c8ce <hex_dump+0xc8>
d000c866:       |  \-----|-> 4c01                       li      s8,0
d000c868:       +--------|-- 060b0363           beqz    s6,d000c8ce <hex_dump+0xc8>
d000c86c:       |        \-> 4401                       li      s0,0
d000c86e:       |            4601                       li      a2,0
d000c870:       |            fffb0493           addi    s1,s6,-1
d000c874:       |            8b0a                       mv      s6,sp
d000c876:       |            02000c93           li      s9,32
d000c87a:       |            5d7d                       li      s10,-1
d000c87c:       |     /----> 8526                       mv      a0,s1
d000c87e:       |     |  /-- 000a1363           bnez    s4,d000c884 <hex_dump+0x7e>
d000c882:       |     |  |   8522                       mv      a0,s0
/proc/self/cwd/sw/device/lib/runtime/print.c:342
    buf[buffered] = glyphs[(bytes[idx] >> 4) & 0xf];
d000c884:       |     |  \-> 9556                       add     a0,a0,s5
d000c886:       |     |      00054503           lbu     a0,0(a0)
d000c88a:       |     |      00455593           srli    a1,a0,0x4
d000c88e:       |     |      95de                       add     a1,a1,s7
d000c890:       |     |      00058583           lb      a1,0(a1)
d000c894:       |     |      00cb06b3           add     a3,s6,a2
d000c898:       |     |      00b68023           sb      a1,0(a3)
/proc/self/cwd/sw/device/lib/runtime/print.c:343
    buf[buffered + 1] = glyphs[bytes[idx] & 0xf];
d000c89c:       |     |      893d                       andi    a0,a0,15
d000c89e:       |     |      955e                       add     a0,a0,s7
d000c8a0:       |     |      00050503           lb      a0,0(a0)
/proc/self/cwd/sw/device/lib/runtime/print.c:344
    buffered += 2;
d000c8a4:       |     |      0609                       addi    a2,a2,2
/proc/self/cwd/sw/device/lib/runtime/print.c:343
    buf[buffered + 1] = glyphs[bytes[idx] & 0xf];
d000c8a6:       |     |      00a680a3           sb      a0,1(a3)
d000c8aa:       |     |  /-- 01961963           bne     a2,s9,d000c8bc <hex_dump+0xb6>
/proc/self/cwd/sw/device/lib/runtime/print.c:347
      bytes_written += out.sink(out.data, buf, buffered);
d000c8ae:       |     |  |   858a                       mv      a1,sp
d000c8b0:       |     |  |   02000613           li      a2,32
d000c8b4:       |     |  |   854e                       mv      a0,s3
d000c8b6:       |     |  |   9902                       jalr    s2
d000c8b8:       |     |  |   4601                       li      a2,0
d000c8ba:       |     |  |   9c2a                       add     s8,s8,a0
/proc/self/cwd/sw/device/lib/runtime/print.c:340
  for (size_t i = 0; i < len; ++i) {
d000c8bc:       |     |  \-> 14fd                       addi    s1,s1,-1
d000c8be:       |     |      0405                       addi    s0,s0,1
d000c8c0:       |     \----- fba49ee3           bne     s1,s10,d000c87c <hex_dump+0x76>
/proc/self/cwd/sw/device/lib/runtime/print.c:352
  if (buffered != 0) {
d000c8c4:       +----------- c609                       beqz    a2,d000c8ce <hex_dump+0xc8>
/proc/self/cwd/sw/device/lib/runtime/print.c:353
    bytes_written += out.sink(out.data, buf, buffered);
d000c8c6:       |            858a                       mv      a1,sp
d000c8c8:       |            854e                       mv      a0,s3
d000c8ca:       |            9902                       jalr    s2
d000c8cc:       |            9c2a                       add     s8,s8,a0
/proc/self/cwd/sw/device/lib/runtime/print.c:355
  return bytes_written;
d000c8ce:       \----------> 8562                       mv      a0,s8
d000c8d0:                    5d02                       lw      s10,32(sp)
d000c8d2:                    5c92                       lw      s9,36(sp)
d000c8d4:                    5c22                       lw      s8,40(sp)
d000c8d6:                    5bb2                       lw      s7,44(sp)
d000c8d8:                    5b42                       lw      s6,48(sp)
d000c8da:                    5ad2                       lw      s5,52(sp)
d000c8dc:                    5a62                       lw      s4,56(sp)
d000c8de:                    59f2                       lw      s3,60(sp)
d000c8e0:                    4906                       lw      s2,64(sp)
d000c8e2:                    4496                       lw      s1,68(sp)
d000c8e4:                    4426                       lw      s0,72(sp)
d000c8e6:                    40b6                       lw      ra,76(sp)
d000c8e8:                    6161                       addi    sp,sp,80
d000c8ea:                    8082                       ret

d000c8ec <write_digits>:
write_digits():
/proc/self/cwd/sw/device/lib/runtime/print.c:252
                           char padding, uint32_t base, const char *glyphs) {
d000c8ec:              7179                     addi    sp,sp,-48
d000c8ee:              d606                     sw      ra,44(sp)
d000c8f0:              88ae                     mv      a7,a1
/proc/self/cwd/sw/device/lib/runtime/print.c:259
  if (value == 0) {
d000c8f2:       /----- ca05                     beqz    a2,d000c922 <write_digits+0x36>
d000c8f4:       |      4381                     li      t2,0
/proc/self/cwd/sw/device/lib/runtime/print.c:263
  while (value > 0) {
d000c8f6:       |      02b10293                 addi    t0,sp,43
d000c8fa:       |  /-> 8332                     mv      t1,a2
/proc/self/cwd/sw/device/lib/runtime/print.c:265
    value /= base;
d000c8fc:       |  |   02f65633                 divu    a2,a2,a5
d000c900:       |  |   02f605b3                 mul     a1,a2,a5
d000c904:       |  |   40b305b3                 sub     a1,t1,a1
/proc/self/cwd/sw/device/lib/runtime/print.c:266
    buffer[kWordBits - 1 - len] = glyphs[digit];
d000c908:       |  |   95c2                     add     a1,a1,a6
d000c90a:       |  |   00058e03                 lb      t3,0(a1)
d000c90e:       |  |   007285b3                 add     a1,t0,t2
d000c912:       |  |   01c58023                 sb      t3,0(a1)
/proc/self/cwd/sw/device/lib/runtime/print.c:263
  while (value > 0) {
d000c916:       |  |   13fd                     addi    t2,t2,-1
d000c918:       |  \-- fef371e3                 bgeu    t1,a5,d000c8fa <write_digits+0xe>
/proc/self/cwd/sw/device/lib/runtime/print.c:269
  width = width == 0 ? 1 : width;
d000c91c:       |      40700633                 neg     a2,t2
d000c920:       |  /-- a031                     j       d000c92c <write_digits+0x40>
/proc/self/cwd/sw/device/lib/runtime/print.c:260
    buffer[kWordBits - 1] = glyphs[0];
d000c922:       \--|-> 00080583                 lb      a1,0(a6)
d000c926:          |   02b105a3                 sb      a1,43(sp)
d000c92a:          |   4605                     li      a2,1
d000c92c:          \-> 4585                     li      a1,1
/proc/self/cwd/sw/device/lib/runtime/print.c:269
  width = width == 0 ? 1 : width;
d000c92e:          /-- c291                     beqz    a3,d000c932 <write_digits+0x46>
d000c930:          |   85b6                     mv      a1,a3
d000c932:          \-> 02000693                 li      a3,32
/proc/self/cwd/sw/device/lib/runtime/print.c:270
  width = width > kWordBits ? kWordBits : width;
d000c936:          /-- 00d5e463                 bltu    a1,a3,d000c93e <write_digits+0x52>
d000c93a:          |   02000593                 li      a1,32
/proc/self/cwd/sw/device/lib/runtime/print.c:271
  while (len < width) {
d000c93e:       /--\-X 00b67e63                 bgeu    a2,a1,d000c95a <write_digits+0x6e>
d000c942:       |      40c586b3                 sub     a3,a1,a2
d000c946:       |      007c                     addi    a5,sp,12
d000c948:       |      40c78633                 sub     a2,a5,a2
d000c94c:       |      067d                     addi    a2,a2,31
/proc/self/cwd/sw/device/lib/runtime/print.c:272
    buffer[kWordBits - len - 1] = padding;
d000c94e:       |  /-> 00e60023                 sb      a4,0(a2)
/proc/self/cwd/sw/device/lib/runtime/print.c:271
  while (len < width) {
d000c952:       |  |   16fd                     addi    a3,a3,-1
d000c954:       |  |   167d                     addi    a2,a2,-1
d000c956:       |  \-- fee5                     bnez    a3,d000c94e <write_digits+0x62>
d000c958:       |      862e                     mv      a2,a1
d000c95a:       \----> 006c                     addi    a1,sp,12
/proc/self/cwd/sw/device/lib/runtime/print.c:275
  return out.sink(out.data, buffer + (kWordBits - len), len);
d000c95c:              8d91                     sub     a1,a1,a2
d000c95e:              02058593                 addi    a1,a1,32
d000c962:              9882                     jalr    a7
/proc/self/cwd/sw/device/lib/runtime/print.c:276
}
d000c964:              50b2                     lw      ra,44(sp)
d000c966:              6145                     addi    sp,sp,48
d000c968:              8082                     ret

d000c96a <status_extract>:
status_err():
/proc/self/cwd/./sw/device/lib/base/status.h:150
 *
 * @param s The status code.
 * @return `absl_status_t` contained within the status_t.
 */
OT_ALWAYS_INLINE absl_status_t status_err(status_t s) {
  return s.value < 0
d000c96a:              00052813                 slti    a6,a0,0
d000c96e:              41f55793                 srai    a5,a0,0x1f
d000c972:              8fe9                     and     a5,a5,a0
d000c974:              8bfd                     andi    a5,a5,31
d000c976:              0017b713                 seqz    a4,a5
status_extract():
/proc/self/cwd/sw/device/lib/base/status.c:103
    "ErrorError",
};

bool status_extract(status_t s, const char **code, int32_t *arg, char *mod_id) {
  size_t err = (size_t)status_err(s);
  if (s.value < 0 && err == 0) {
d000c97a:              00e87833                 and     a6,a6,a4
d000c97e:              02000713                 li      a4,32
d000c982:          /-- 00081363                 bnez    a6,d000c988 <status_extract+0x1e>
d000c986:          |   873e                     mv      a4,a5
/proc/self/cwd/sw/device/lib/base/status.c:106
    err = sizeof(status_codes) / sizeof(status_codes[0]) - 1;
  }
  *code = status_codes[err];
d000c988:          \-> 00271813                 slli    a6,a4,0x2
d000c98c:              0fff5797                 auipc   a5,0xfff5
d000c990:              63878793                 addi    a5,a5,1592 # e0001fc4 <status_codes>
d000c994:              97c2                     add     a5,a5,a6
d000c996:              439c                     lw      a5,0(a5)
d000c998:              c19c                     sw      a5,0(a1)
/proc/self/cwd/sw/device/lib/base/status.c:107
  if (err) {
d000c99a:              00173593                 seqz    a1,a4
d000c99e:       /----- cb1d                     beqz    a4,d000c9d4 <status_extract+0x6a>
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
  return (bitfield >> field.index) & field.mask;
d000c9a0:       |      00555713                 srli    a4,a0,0x5
d000c9a4:       |      7ff77713                 andi    a4,a4,2047
status_extract():
/proc/self/cwd/sw/device/lib/base/status.c:108
    *arg = (int32_t)bitfield_field32_read((uint32_t)s.value, STATUS_FIELD_ARG);
d000c9a8:       |      c218                     sw      a4,0(a2)
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
d000c9aa:       |      01055613                 srli    a2,a0,0x10
status_extract():
/proc/self/cwd/sw/device/lib/base/status.c:111
    uint32_t module_id =
        bitfield_field32_read((uint32_t)s.value, STATUS_FIELD_MODULE_ID);
    *mod_id++ = '@' + ((module_id >> 0) & 0x1F);
d000c9ae:       |      8a7d                     andi    a2,a2,31
d000c9b0:       |      04066613                 ori     a2,a2,64
d000c9b4:       |      00c68023                 sb      a2,0(a3)
/proc/self/cwd/sw/device/lib/base/status.c:112
    *mod_id++ = '@' + ((module_id >> 5) & 0x1F);
d000c9b8:       |      01555613                 srli    a2,a0,0x15
d000c9bc:       |      8a7d                     andi    a2,a2,31
d000c9be:       |      04066613                 ori     a2,a2,64
d000c9c2:       |      00c680a3                 sb      a2,1(a3)
/proc/self/cwd/sw/device/lib/base/status.c:113
    *mod_id++ = '@' + ((module_id >> 10) & 0x1F);
d000c9c6:       |      8169                     srli    a0,a0,0x1a
d000c9c8:       |      897d                     andi    a0,a0,31
d000c9ca:       |      04056513                 ori     a0,a0,64
d000c9ce:       |      00a68123                 sb      a0,2(a3)
d000c9d2:       |  /-- a011                     j       d000c9d6 <status_extract+0x6c>
/proc/self/cwd/sw/device/lib/base/status.c:116
    return true;
  } else {
    *arg = s.value;
d000c9d4:       \--|-> c208                     sw      a0,0(a2)
/proc/self/cwd/sw/device/lib/base/status.c:119
    return false;
  }
}
d000c9d6:          \-> 0015c513                 xori    a0,a1,1
d000c9da:              8082                     ret

d000c9dc <rom_epmp_state_init>:
rom_epmp_state_init():
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:33
                          TOP_EARLGREY_SRAM_CTRL_RET_AON_RAM_SIZE_BYTES <
                      TOP_EARLGREY_MMIO_BASE_ADDR +
                          TOP_EARLGREY_MMIO_SIZE_BYTES,
              "Retention SRAM must be in the MMIO address space.");

void rom_epmp_state_init(lifecycle_state_t lc_state) {
d000c9dc:                          1141                 addi    sp,sp,-16
d000c9de:                          c606                 sw      ra,12(sp)
d000c9e0:                          c422                 sw      s0,8(sp)
d000c9e2:                          c226                 sw      s1,4(sp)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000c9e4:                          85aa                 mv      a1,a0
d000c9e6:                          cf8d0637             lui     a2,0xcf8d0
d000c9ea:                          aaa60693             addi    a3,a2,-1366 # cf8cfaaa <_stack_end+0xef8afaaa>
rom_epmp_state_init():
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:59
  const epmp_region_t ram = {.start = TOP_EARLGREY_RAM_MAIN_BASE_ADDR,
                             .end = TOP_EARLGREY_RAM_MAIN_BASE_ADDR +
                                    TOP_EARLGREY_RAM_MAIN_SIZE_BYTES};

  epmp_perm_t debug_rom_access = kEpmpPermLockedNoAccess;
  switch (launder32(lc_state)) {
d000c9ee:                   /----- 02b6d363             bge     a3,a1,d000ca14 <rom_epmp_state_init+0x38>
d000c9f2:                   |      aab60613             addi    a2,a2,-1365
d000c9f6:                /--|----- 02c58c63             beq     a1,a2,d000ca2e <rom_epmp_state_init+0x52>
d000c9fa:                |  |      0b5a7637             lui     a2,0xb5a7
d000c9fe:                |  |      5e060613             addi    a2,a2,1504 # b5a75e0 <WDOG_BARK_THOLD+0xb5706f8>
d000ca02:             /--|--|----- 04c59163             bne     a1,a2,d000ca44 <rom_epmp_state_init+0x68>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:65
    case kLcStateTest:
      HARDENED_CHECK_EQ(lc_state, kLcStateTest);
      debug_rom_access = kEpmpPermLockedReadWriteExecute;
      break;
    case kLcStateDev:
      HARDENED_CHECK_EQ(lc_state, kLcStateDev);
d000ca06:             |  |  |  /-- 00c50663             beq     a0,a2,d000ca12 <rom_epmp_state_init+0x36>
d000ca0a:             |  |  |  |   0000                 unimp
d000ca0c:             |  |  |  |   0000                 unimp
d000ca0e:             |  |  |  |   0000                 unimp
d000ca10:             |  |  |  |   0000                 unimp
d000ca12:       /-----|--|--|--\-X a0ad                 j       d000ca7c <rom_epmp_state_init+0xa0>
d000ca14:       |     |  |  \----> 91b9b637             lui     a2,0x91b9b
d000ca18:       |     |  |         68a60613             addi    a2,a2,1674 # 91b9b68a <_stack_end+0xb1b7b68a>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:59
  switch (launder32(lc_state)) {
d000ca1c:       |  /--|--|-------- 04c59463             bne     a1,a2,d000ca64 <rom_epmp_state_init+0x88>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:73
    case kLcStateProd:
      HARDENED_CHECK_EQ(lc_state, kLcStateProd);
      debug_rom_access = kEpmpPermLockedNoAccess;
      break;
    case kLcStateProdEnd:
      HARDENED_CHECK_EQ(lc_state, kLcStateProdEnd);
d000ca20:       |  |  |  |     /-- 00c50663             beq     a0,a2,d000ca2c <rom_epmp_state_init+0x50>
d000ca24:       |  |  |  |     |   0000                 unimp
d000ca26:       |  |  |  |     |   0000                 unimp
d000ca28:       |  |  |  |     |   0000                 unimp
d000ca2a:       |  |  |  |     |   0000                 unimp
d000ca2c:       |  |  |  |  /--\-X a805                 j       d000ca5c <rom_epmp_state_init+0x80>
d000ca2e:       |  |  |  \--|----> cf8d05b7             lui     a1,0xcf8d0
d000ca32:       |  |  |     |      aab58593             addi    a1,a1,-1365 # cf8cfaab <_stack_end+0xef8afaab>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:77
      debug_rom_access = kEpmpPermLockedNoAccess;
      break;
    case kLcStateRma:
      HARDENED_CHECK_EQ(lc_state, kLcStateRma);
d000ca36:       |  |  |     |  /-- 00b50663             beq     a0,a1,d000ca42 <rom_epmp_state_init+0x66>
d000ca3a:       |  |  |     |  |   0000                 unimp
d000ca3c:       |  |  |     |  |   0000                 unimp
d000ca3e:       |  |  |     |  |   0000                 unimp
d000ca40:       |  |  |     |  |   0000                 unimp
d000ca42:       +--|--|-----|--\-X a82d                 j       d000ca7c <rom_epmp_state_init+0xa0>
d000ca44:       |  |  \-----|----> 65f25637             lui     a2,0x65f25
d000ca48:       |  |        |      20f60613             addi    a2,a2,527 # 65f2520f <_epmp_stack_guard_na4+0x2df1e20f>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:59
  switch (launder32(lc_state)) {
d000ca4c:       |  |     /--|----- 0cc59e63             bne     a1,a2,d000cb28 <rom_epmp_state_init+0x14c>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:69
      HARDENED_CHECK_EQ(lc_state, kLcStateProd);
d000ca50:       |  |     |  +----- 00c50663             beq     a0,a2,d000ca5c <rom_epmp_state_init+0x80>
d000ca54:       |  |     |  |      0000                 unimp
d000ca56:       |  |     |  |      0000                 unimp
d000ca58:       |  |     |  |      0000                 unimp
d000ca5a:       |  |     |  |      0000                 unimp
d000ca5c:       |  |     |  \----> 6529                 lui     a0,0xa
d000ca5e:       |  |     |         80050493             addi    s1,a0,-2048 # 9800 <_rom_ext_virtual_size+0x1800>
d000ca62:       |  |     |     /-- a005                 j       d000ca82 <rom_epmp_state_init+0xa6>
d000ca64:       |  \-----|-----|-> b2866637             lui     a2,0xb2866
d000ca68:       |        |     |   fbb60613             addi    a2,a2,-69 # b2865fbb <_stack_end+0xd2845fbb>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:59
  switch (launder32(lc_state)) {
d000ca6c:       |        +-----|-- 0ac59e63             bne     a1,a2,d000cb28 <rom_epmp_state_init+0x14c>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:61
      HARDENED_CHECK_EQ(lc_state, kLcStateTest);
d000ca70:       +--------|-----|-- 00c50663             beq     a0,a2,d000ca7c <rom_epmp_state_init+0xa0>
d000ca74:       |        |     |   0000                 unimp
d000ca76:       |        |     |   0000                 unimp
d000ca78:       |        |     |   0000                 unimp
d000ca7a:       |        |     |   0000                 unimp
d000ca7c:       \--------|-----|-> 6529                 lui     a0,0xa
d000ca7e:                |     |   f0050493             addi    s1,a0,-256 # 9f00 <_rom_ext_virtual_size+0x1f00>
d000ca82:                |     \-> 0fff3417             auipc   s0,0xfff3
d000ca86:                |         59e40413             addi    s0,s0,1438 # e0000020 <epmp_state>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:89
  // Initialize in-memory copy of ePMP register state.
  //
  // The actual hardware configuration is performed separately, either by reset
  // logic or in assembly. This code must be kept in sync with any changes
  // to the hardware configuration.
  memset(&epmp_state, 0, sizeof(epmp_state));
d000ca8a:                |         05400613             li      a2,84
d000ca8e:                |         8522                 mv      a0,s0
d000ca90:                |         4581                 li      a1,0
d000ca92:                |         594010ef             jal     ra,d000e026 <memset>
epmp_state_configure_tor():
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:160
 */
inline void epmp_state_configure_tor(uint32_t entry, epmp_region_t region,
                                     epmp_perm_t perm) {
  // Set address registers.
  if (entry > 0) {
    epmp_state.pmpaddr[entry - 1] = region.start >> 2;
d000ca96:                |         ffffb517             auipc   a0,0xffffb
d000ca9a:                |         56a50513             addi    a0,a0,1386 # d0008000 <_rom_interrupt_vector_asm>
d000ca9e:                |         8109                 srli    a0,a0,0x2
d000caa0:                |         c808                 sw      a0,16(s0)
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:162
  }
  epmp_state.pmpaddr[entry] = region.end >> 2;
d000caa2:                |         00002517             auipc   a0,0x2
d000caa6:                |         a9a50513             addi    a0,a0,-1382 # d000e53c <_text_end>
d000caaa:                |         8109                 srli    a0,a0,0x2
d000caac:                |         c848                 sw      a0,20(s0)
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:167

  // Set configuration register.
  bitfield_field32_t field = {.mask = 0xff, .index = (entry % 4) * 8};
  epmp_state.pmpcfg[entry / 4] = bitfield_field32_write(
      epmp_state.pmpcfg[entry / 4], field, kEpmpModeTor | perm);
d000caae:                |         4008                 lw      a0,0(s0)
d000cab0:                |         340035b7             lui     a1,0x34003
d000cab4:                |         15fd                 addi    a1,a1,-1
epmp_state_configure_napot():
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:203
 */
inline void epmp_state_configure_napot(uint32_t entry, epmp_region_t region,
                                       epmp_perm_t perm) {
  // Set address register.
  uint32_t len = (region.end - region.start - 1) >> 3;
  epmp_state.pmpaddr[entry] = (region.start >> 2) | len;
d000cab6:                |         cc0c                 sw      a1,24(s0)
d000cab8:                |         ff0005b7             lui     a1,0xff000
d000cabc:                |         0ff58593             addi    a1,a1,255 # ff0000ff <_stack_end+0x1efe00ff>
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:75
  bitfield &= ~(field.mask << field.index);
d000cac0:                |         8d6d                 and     a0,a0,a1
d000cac2:                |         009995b7             lui     a1,0x999
d000cac6:                |         d0058593             addi    a1,a1,-768 # 998d00 <WDOG_BARK_THOLD+0x961e18>
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
  bitfield |= (value & field.mask) << field.index;
d000caca:                |         8d4d                 or      a0,a0,a1
epmp_state_configure_napot():
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:207

  // Set configuration register.
  bitfield_field32_t field = {.mask = 0xff, .index = (entry % 4) * 8};
  epmp_state.pmpcfg[entry / 4] = bitfield_field32_write(
d000cacc:                |         c008                 sw      a0,0(s0)
d000cace:                |         3c002537             lui     a0,0x3c002
d000cad2:                |         157d                 addi    a0,a0,-1
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:203
  epmp_state.pmpaddr[entry] = (region.start >> 2) | len;
d000cad4:                |         d048                 sw      a0,36(s0)
d000cad6:                |         09900513             li      a0,153
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:207
  epmp_state.pmpcfg[entry / 4] = bitfield_field32_write(
d000cada:                |         00a402a3             sb      a0,5(s0)
d000cade:                |         6511                 lui     a0,0x4
epmp_state_configure_tor():
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:160
    epmp_state.pmpaddr[entry - 1] = region.start >> 2;
d000cae0:                |         dc08                 sw      a0,56(s0)
d000cae2:                |         34000537             lui     a0,0x34000
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:162
  epmp_state.pmpaddr[entry] = region.end >> 2;
d000cae6:                |         dc48                 sw      a0,60(s0)
d000cae8:                |         08b00513             li      a0,139
epmp_state_configure_napot():
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:208
      epmp_state.pmpcfg[entry / 4], field, kEpmpModeNapot | perm);
d000caec:                |         00c44583             lbu     a1,12(s0)
epmp_state_configure_tor():
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:166
  epmp_state.pmpcfg[entry / 4] = bitfield_field32_write(
d000caf0:                |         00a405a3             sb      a0,11(s0)
d000caf4:                |         1ff00513             li      a0,511
epmp_state_configure_napot():
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:203
  epmp_state.pmpaddr[entry] = (region.start >> 2) | len;
d000caf8:                |         c068                 sw      a0,68(s0)
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
d000cafa:                |         0095e533             or      a0,a1,s1
epmp_state_configure_na4():
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:182
  epmp_state.pmpaddr[entry] = region.start >> 2;
d000cafe:                |         1000f597             auipc   a1,0x1000f
d000cb02:                |         50258593             addi    a1,a1,1282 # e001c000 <_stack_start>
d000cb06:                |         8189                 srli    a1,a1,0x2
d000cb08:                |         c42c                 sw      a1,72(s0)
d000cb0a:                |         380045b7             lui     a1,0x38004
d000cb0e:                |         15fd                 addi    a1,a1,-1
epmp_state_configure_napot():
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:203
  epmp_state.pmpaddr[entry] = (region.start >> 2) | len;
d000cb10:                |         c46c                 sw      a1,76(s0)
d000cb12:                |         9b9005b7             lui     a1,0x9b900
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
d000cb16:                |         8d4d                 or      a0,a0,a1
epmp_state_configure_napot():
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:207
  epmp_state.pmpcfg[entry / 4] = bitfield_field32_write(
d000cb18:                |         c448                 sw      a0,12(s0)
rom_epmp_state_init():
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:97
  epmp_state_configure_napot(5, eflash, kEpmpPermLockedReadOnly);
  epmp_state_configure_tor(11, mmio, kEpmpPermLockedReadWrite);
  epmp_state_configure_napot(13, debug_rom, debug_rom_access);
  epmp_state_configure_na4(14, stack_guard, kEpmpPermLockedNoAccess);
  epmp_state_configure_napot(15, ram, kEpmpPermLockedReadWrite);
  epmp_state.mseccfg = 0x0; //EPMP_MSECCFG_MMWP | EPMP_MSECCFG_RLB;
d000cb1a:                |         04042823             sw      zero,80(s0)
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:98
}
d000cb1e:                |         4492                 lw      s1,4(sp)
d000cb20:                |         4422                 lw      s0,8(sp)
d000cb22:                |         40b2                 lw      ra,12(sp)
d000cb24:                |         0141                 addi    sp,sp,16
d000cb26:                |         8082                 ret
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:81
      HARDENED_UNREACHABLE();
d000cb28:                \-------> 0000                 unimp
d000cb2a:                          0000                 unimp
d000cb2c:                          0000                 unimp
d000cb2e:                          0000                 unimp

d000cb30 <rom_epmp_unlock_rom_ext_rx>:
epmp_state_configure_tor():
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:160
    epmp_state.pmpaddr[entry - 1] = region.start >> 2;
d000cb30:       8109                    srli    a0,a0,0x2
d000cb32:       0fff3617                auipc   a2,0xfff3
d000cb36:       4ee60613                addi    a2,a2,1262 # e0000020 <epmp_state>
d000cb3a:       ce48                    sw      a0,28(a2)
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:162
  epmp_state.pmpaddr[entry] = region.end >> 2;
d000cb3c:       8189                    srli    a1,a1,0x2
d000cb3e:       d20c                    sw      a1,32(a2)
d000cb40:       08d00693                li      a3,141
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:166
  epmp_state.pmpcfg[entry / 4] = bitfield_field32_write(
d000cb44:       00d60223                sb      a3,4(a2)
rom_epmp_unlock_rom_ext_rx():
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:116
  //
  //            32          24          16           8           0
  //             +-----------+-----------+-----------+-----------+
  // `pmpcfg1` = | `pmp7cfg` | `pmp6cfg` | `pmp5cfg` | `pmp4cfg` |
  //             +-----------+-----------+-----------+-----------+
  CSR_WRITE(CSR_REG_PMPADDR3, region.start >> 2);
d000cb48:       3b351073                csrw    pmpaddr3,a0
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:117
  CSR_WRITE(CSR_REG_PMPADDR4, region.end >> 2);
d000cb4c:       3b459073                csrw    pmpaddr4,a1
d000cb50:       0ff00513                li      a0,255
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:118
  CSR_CLEAR_BITS(CSR_REG_PMPCFG1, 0xff);
d000cb54:       3a153073                csrc    pmpcfg1,a0
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:119
  CSR_SET_BITS(CSR_REG_PMPCFG1, kEpmpModeTor | kEpmpPermLockedReadExecute);
d000cb58:       3a16a073                csrs    pmpcfg1,a3
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:120
}
d000cb5c:       8082                    ret

d000cb5e <rom_epmp_unlock_rom_ext_r>:
epmp_state_configure_napot():
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:202
  uint32_t len = (region.end - region.start - 1) >> 3;
d000cb5e:       fff54613                not     a2,a0
d000cb62:       95b2                    add     a1,a1,a2
d000cb64:       818d                    srli    a1,a1,0x3
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:203
  epmp_state.pmpaddr[entry] = (region.start >> 2) | len;
d000cb66:       8109                    srli    a0,a0,0x2
d000cb68:       8d4d                    or      a0,a0,a1
d000cb6a:       0fff3597                auipc   a1,0xfff3
d000cb6e:       4b658593                addi    a1,a1,1206 # e0000020 <epmp_state>
d000cb72:       d588                    sw      a0,40(a1)
d000cb74:       09900613                li      a2,153
/proc/self/cwd/./sw/device/silicon_creator/lib/epmp_state.h:207
  epmp_state.pmpcfg[entry / 4] = bitfield_field32_write(
d000cb78:       00c58323                sb      a2,6(a1)
rom_epmp_unlock_rom_ext_r():
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:138
  //            32          24          16           8           0
  //             +-----------+-----------+-----------+-----------+
  // `pmpcfg1` = | `pmp7cfg` | `pmp6cfg` | `pmp5cfg` | `pmp4cfg` |
  //             +-----------+-----------+-----------+-----------+

  CSR_WRITE(CSR_REG_PMPADDR6,
d000cb7c:       3b651073                csrw    pmpaddr6,a0
d000cb80:       00ff0537                lui     a0,0xff0
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:140
            region.start >> 2 | (region.end - region.start - 1) >> 3);
  CSR_CLEAR_BITS(CSR_REG_PMPCFG1, 0xff << 16);
d000cb84:       3a153073                csrc    pmpcfg1,a0
d000cb88:       00990537                lui     a0,0x990
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:141
  CSR_SET_BITS(CSR_REG_PMPCFG1,
d000cb8c:       3a152073                csrs    pmpcfg1,a0
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:143
               ((kEpmpModeNapot | kEpmpPermLockedReadOnly) << 16));
}
d000cb90:       8082                    ret

d000cb92 <rom_epmp_config_debug_rom>:
rom_epmp_config_debug_rom():
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:145

void rom_epmp_config_debug_rom(lifecycle_state_t lc_state) {
d000cb92:                          1ff00593             li      a1,511
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:159
  //
  //            32          24          16           8           0
  //             +------------+------------+------------+------------+
  // `pmpcfg3` = | `pmp15cfg` | `pmp14cfg` | `pmp13cfg` | `pmp12cfg` |
  //             +------------+------------+------------+------------+
  CSR_WRITE(CSR_REG_PMPADDR13, pmpaddr);
d000cb96:                          3bd59073             csrw    pmpaddr13,a1
d000cb9a:                          65c1                 lui     a1,0x10
d000cb9c:                          f0058593             addi    a1,a1,-256 # ff00 <_rom_ext_virtual_size+0x7f00>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:160
  CSR_CLEAR_BITS(CSR_REG_PMPCFG3, 0xff00);
d000cba0:                          3a35b073             csrc    pmpcfg3,a1
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000cba4:                          85aa                 mv      a1,a0
d000cba6:                          cf8d0637             lui     a2,0xcf8d0
d000cbaa:                          aaa60693             addi    a3,a2,-1366 # cf8cfaaa <_stack_end+0xef8afaaa>
rom_epmp_config_debug_rom():
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:162
  uint32_t pmpcfg;
  switch (launder32(lc_state)) {
d000cbae:                   /----- 02b6d363             bge     a3,a1,d000cbd4 <rom_epmp_config_debug_rom+0x42>
d000cbb2:                   |      aab60613             addi    a2,a2,-1365
d000cbb6:                /--|----- 02c58c63             beq     a1,a2,d000cbee <rom_epmp_config_debug_rom+0x5c>
d000cbba:                |  |      0b5a7637             lui     a2,0xb5a7
d000cbbe:                |  |      5e060613             addi    a2,a2,1504 # b5a75e0 <WDOG_BARK_THOLD+0xb5706f8>
d000cbc2:             /--|--|----- 04c59163             bne     a1,a2,d000cc04 <rom_epmp_config_debug_rom+0x72>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:168
    case kLcStateTest:
      HARDENED_CHECK_EQ(lc_state, kLcStateTest);
      pmpcfg = (kEpmpModeNapot | kEpmpPermLockedReadWriteExecute) << 8;
      break;
    case kLcStateDev:
      HARDENED_CHECK_EQ(lc_state, kLcStateDev);
d000cbc6:             |  |  |  /-- 00c50663             beq     a0,a2,d000cbd2 <rom_epmp_config_debug_rom+0x40>
d000cbca:             |  |  |  |   0000                 unimp
d000cbcc:             |  |  |  |   0000                 unimp
d000cbce:             |  |  |  |   0000                 unimp
d000cbd0:             |  |  |  |   0000                 unimp
d000cbd2:       /-----|--|--|--\-X a0ad                 j       d000cc3c <rom_epmp_config_debug_rom+0xaa>
d000cbd4:       |     |  |  \----> 91b9b637             lui     a2,0x91b9b
d000cbd8:       |     |  |         68a60613             addi    a2,a2,1674 # 91b9b68a <_stack_end+0xb1b7b68a>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:162
  switch (launder32(lc_state)) {
d000cbdc:       |  /--|--|-------- 04c59463             bne     a1,a2,d000cc24 <rom_epmp_config_debug_rom+0x92>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:176
    case kLcStateProd:
      HARDENED_CHECK_EQ(lc_state, kLcStateProd);
      pmpcfg = (kEpmpModeNapot | kEpmpPermLockedNoAccess) << 8;
      break;
    case kLcStateProdEnd:
      HARDENED_CHECK_EQ(lc_state, kLcStateProdEnd);
d000cbe0:       |  |  |  |     /-- 00c50663             beq     a0,a2,d000cbec <rom_epmp_config_debug_rom+0x5a>
d000cbe4:       |  |  |  |     |   0000                 unimp
d000cbe6:       |  |  |  |     |   0000                 unimp
d000cbe8:       |  |  |  |     |   0000                 unimp
d000cbea:       |  |  |  |     |   0000                 unimp
d000cbec:       |  |  |  |  /--\-X a805                 j       d000cc1c <rom_epmp_config_debug_rom+0x8a>
d000cbee:       |  |  |  \--|----> cf8d05b7             lui     a1,0xcf8d0
d000cbf2:       |  |  |     |      aab58593             addi    a1,a1,-1365 # cf8cfaab <_stack_end+0xef8afaab>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:180
      pmpcfg = (kEpmpModeNapot | kEpmpPermLockedNoAccess) << 8;
      break;
    case kLcStateRma:
      HARDENED_CHECK_EQ(lc_state, kLcStateRma);
d000cbf6:       |  |  |     |  /-- 00b50663             beq     a0,a1,d000cc02 <rom_epmp_config_debug_rom+0x70>
d000cbfa:       |  |  |     |  |   0000                 unimp
d000cbfc:       |  |  |     |  |   0000                 unimp
d000cbfe:       |  |  |     |  |   0000                 unimp
d000cc00:       |  |  |     |  |   0000                 unimp
d000cc02:       +--|--|-----|--\-X a82d                 j       d000cc3c <rom_epmp_config_debug_rom+0xaa>
d000cc04:       |  |  \-----|----> 65f25637             lui     a2,0x65f25
d000cc08:       |  |        |      20f60613             addi    a2,a2,527 # 65f2520f <_epmp_stack_guard_na4+0x2df1e20f>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:162
  switch (launder32(lc_state)) {
d000cc0c:       |  |     /--|----- 02c59e63             bne     a1,a2,d000cc48 <rom_epmp_config_debug_rom+0xb6>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:172
      HARDENED_CHECK_EQ(lc_state, kLcStateProd);
d000cc10:       |  |     |  +----- 00c50663             beq     a0,a2,d000cc1c <rom_epmp_config_debug_rom+0x8a>
d000cc14:       |  |     |  |      0000                 unimp
d000cc16:       |  |     |  |      0000                 unimp
d000cc18:       |  |     |  |      0000                 unimp
d000cc1a:       |  |     |  |      0000                 unimp
d000cc1c:       |  |     |  \----> 6529                 lui     a0,0xa
d000cc1e:       |  |     |         80050513             addi    a0,a0,-2048 # 9800 <_rom_ext_virtual_size+0x1800>
d000cc22:       |  |     |     /-- a005                 j       d000cc42 <rom_epmp_config_debug_rom+0xb0>
d000cc24:       |  \-----|-----|-> b2866637             lui     a2,0xb2866
d000cc28:       |        |     |   fbb60613             addi    a2,a2,-69 # b2865fbb <_stack_end+0xd2845fbb>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:162
  switch (launder32(lc_state)) {
d000cc2c:       |        +-----|-- 00c59e63             bne     a1,a2,d000cc48 <rom_epmp_config_debug_rom+0xb6>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:164
      HARDENED_CHECK_EQ(lc_state, kLcStateTest);
d000cc30:       +--------|-----|-- 00c50663             beq     a0,a2,d000cc3c <rom_epmp_config_debug_rom+0xaa>
d000cc34:       |        |     |   0000                 unimp
d000cc36:       |        |     |   0000                 unimp
d000cc38:       |        |     |   0000                 unimp
d000cc3a:       |        |     |   0000                 unimp
d000cc3c:       \--------|-----|-> 6529                 lui     a0,0xa
d000cc3e:                |     |   f0050513             addi    a0,a0,-256 # 9f00 <_rom_ext_virtual_size+0x1f00>
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:186
      pmpcfg = (kEpmpModeNapot | kEpmpPermLockedReadWriteExecute) << 8;
      break;
    default:
      HARDENED_UNREACHABLE();
  }
  CSR_SET_BITS(CSR_REG_PMPCFG3, pmpcfg);
d000cc42:                |     \-> 3a352073             csrs    pmpcfg3,a0
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:187
}
d000cc46:                |         8082                 ret
/proc/self/cwd/sw/device/silicon_creator/rom/rom_epmp.c:184
      HARDENED_UNREACHABLE();
d000cc48:                \-------> 0000                 unimp
d000cc4a:                          0000                 unimp
d000cc4c:                          0000                 unimp
d000cc4e:                          0000                 unimp

d000cc50 <sigverify_rsa_verify>:
sigverify_rsa_verify():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:199

rom_error_t sigverify_rsa_verify(const sigverify_rsa_buffer_t *signature,
                                 const sigverify_rsa_key_t *key,
                                 const hmac_digest_t *act_digest,
                                 lifecycle_state_t lc_state,
                                 uint32_t *flash_exec) {
d000cc50:                             7125                      addi    sp,sp,-416
d000cc52:                             18112e23                  sw      ra,412(sp)
d000cc56:                             18812c23                  sw      s0,408(sp)
d000cc5a:                             18912a23                  sw      s1,404(sp)
d000cc5e:                             19212823                  sw      s2,400(sp)
d000cc62:                             19312623                  sw      s3,396(sp)
d000cc66:                             19412423                  sw      s4,392(sp)
d000cc6a:                             19512223                  sw      s5,388(sp)
d000cc6e:                             8aba                      mv      s5,a4
d000cc70:                             577d                      li      a4,-1
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:200
  *flash_exec = UINT32_MAX;
d000cc72:                             00eaa023                  sw      a4,0(s5)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000cc76:                             8736                      mv      a4,a3
d000cc78:                             cf8d0837                  lui     a6,0xcf8d0
d000cc7c:                             aaa80793                  addi    a5,a6,-1366 # cf8cfaaa <_stack_end+0xef8afaaa>
d000cc80:                             84b2                      mv      s1,a2
d000cc82:                             89ae                      mv      s3,a1
d000cc84:                             892a                      mv      s2,a0
sigverify_use_sw_rsa_verify():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:172
  switch (launder32(lc_state)) {
d000cc86:                      /----- 02e7d363                  bge     a5,a4,d000ccac <sigverify_rsa_verify+0x5c>
d000cc8a:                      |      aab80513                  addi    a0,a6,-1365
d000cc8e:                   /--|----- 02a70c63                  beq     a4,a0,d000ccc6 <sigverify_rsa_verify+0x76>
d000cc92:                   |  |      0b5a7537                  lui     a0,0xb5a7
d000cc96:                   |  |      5e050513                  addi    a0,a0,1504 # b5a75e0 <WDOG_BARK_THOLD+0xb5706f8>
d000cc9a:                /--|--|----- 04a71163                  bne     a4,a0,d000ccdc <sigverify_rsa_verify+0x8c>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:179
      HARDENED_CHECK_EQ(lc_state, kLcStateDev);
d000cc9e:                |  |  |  /-- 00a68663                  beq     a3,a0,d000ccaa <sigverify_rsa_verify+0x5a>
d000cca2:                |  |  |  |   0000                      unimp
d000cca4:                |  |  |  |   0000                      unimp
d000cca6:                |  |  |  |   0000                      unimp
d000cca8:                |  |  |  |   0000                      unimp
d000ccaa:             /--|--|--|--\-X a0a9                      j       d000ccf4 <sigverify_rsa_verify+0xa4>
d000ccac:             |  |  |  \----> 91b9b537                  lui     a0,0x91b9b
d000ccb0:             |  |  |         68a50513                  addi    a0,a0,1674 # 91b9b68a <_stack_end+0xb1b7b68a>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:172
  switch (launder32(lc_state)) {
d000ccb4:          /--|--|--|-------- 06a71363                  bne     a4,a0,d000cd1a <sigverify_rsa_verify+0xca>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:185
      HARDENED_CHECK_EQ(lc_state, kLcStateProdEnd);
d000ccb8:          |  |  |  |     /-- 00a68663                  beq     a3,a0,d000ccc4 <sigverify_rsa_verify+0x74>
d000ccbc:          |  |  |  |     |   0000                      unimp
d000ccbe:          |  |  |  |     |   0000                      unimp
d000ccc0:          |  |  |  |     |   0000                      unimp
d000ccc2:          |  |  |  |     |   0000                      unimp
d000ccc4:          |  +--|--|-----\-X a805                      j       d000ccf4 <sigverify_rsa_verify+0xa4>
d000ccc6:          |  |  |  \-------> cf8d0537                  lui     a0,0xcf8d0
d000ccca:          |  |  |            aab50513                  addi    a0,a0,-1365 # cf8cfaab <_stack_end+0xef8afaab>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:188
      HARDENED_CHECK_EQ(lc_state, kLcStateRma);
d000ccce:          |  |  |        /-- 00a68663                  beq     a3,a0,d000ccda <sigverify_rsa_verify+0x8a>
d000ccd2:          |  |  |        |   0000                      unimp
d000ccd4:          |  |  |        |   0000                      unimp
d000ccd6:          |  |  |        |   0000                      unimp
d000ccd8:          |  |  |        |   0000                      unimp
d000ccda:          |  +--|--------\-X a829                      j       d000ccf4 <sigverify_rsa_verify+0xa4>
d000ccdc:          |  |  \----------> 65f25537                  lui     a0,0x65f25
d000cce0:          |  |               20f50513                  addi    a0,a0,527 # 65f2520f <_epmp_stack_guard_na4+0x2df1e20f>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:172
  switch (launder32(lc_state)) {
d000cce4:       /--|--|-------------- 1ea71963                  bne     a4,a0,d000ced6 <sigverify_rsa_verify+0x286>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:182
      HARDENED_CHECK_EQ(lc_state, kLcStateProd);
d000cce8:       |  |  +-------------- 00a68663                  beq     a3,a0,d000ccf4 <sigverify_rsa_verify+0xa4>
d000ccec:       |  |  |               0000                      unimp
d000ccee:       |  |  |               0000                      unimp
d000ccf0:       |  |  |               0000                      unimp
d000ccf2:       |  |  |               0000                      unimp
d000ccf4:       |  |  \-------------> 0e400513                  li      a0,228
d000ccf8:       |  |                  03a010ef                  jal     ra,d000dd32 <otp_read32>
d000ccfc:       |  |                  1d400593                  li      a1,468
sigverify_rsa_verify():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:203
  hardened_bool_t use_sw = sigverify_use_sw_rsa_verify(lc_state);
  sigverify_rsa_buffer_t enc_msg;
  switch (use_sw) {
d000cd00:       |  |           /----- 02b50963                  beq     a0,a1,d000cd32 <sigverify_rsa_verify+0xe2>
d000cd04:       |  |           |      73900a13                  li      s4,1849
d000cd08:       |  |     /-----|----- 1d451363                  bne     a0,s4,d000cece <sigverify_rsa_verify+0x27e>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:205
    case kHardenedBoolTrue:
      RETURN_IF_ERROR(sigverify_mod_exp_ibex(key, signature, &enc_msg));
d000cd0c:       |  |     |     |      860a                      mv      a2,sp
d000cd0e:       |  |     |     |      854e                      mv      a0,s3
d000cd10:       |  |     |     |      85ca                      mv      a1,s2
d000cd12:       |  |     |     |      249d                      jal     d000cf78 <sigverify_mod_exp_ibex>
d000cd14:       |  |     |     |  /-- 03450763                  beq     a0,s4,d000cd42 <sigverify_rsa_verify+0xf2>
d000cd18:       |  |     |  /--|--|-- aa59                      j       d000ceae <sigverify_rsa_verify+0x25e>
d000cd1a:       |  \-----|--|--|--|-> b2866537                  lui     a0,0xb2866
d000cd1e:       |        |  |  |  |   fbb50513                  addi    a0,a0,-69 # b2865fbb <_stack_end+0xd2845fbb>
sigverify_use_sw_rsa_verify():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:172
  switch (launder32(lc_state)) {
d000cd22:       +--------|--|--|--|-- 1aa71a63                  bne     a4,a0,d000ced6 <sigverify_rsa_verify+0x286>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:174
      HARDENED_CHECK_EQ(lc_state, kLcStateTest);
d000cd26:       |        |  |  +--|-- 00a68663                  beq     a3,a0,d000cd32 <sigverify_rsa_verify+0xe2>
d000cd2a:       |        |  |  |  |   0000                      unimp
d000cd2c:       |        |  |  |  |   0000                      unimp
d000cd2e:       |        |  |  |  |   0000                      unimp
d000cd30:       |        |  |  |  |   0000                      unimp
sigverify_rsa_verify():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:208
      break;
    case kHardenedBoolFalse:
      RETURN_IF_ERROR(sigverify_mod_exp_otbn(key, signature, &enc_msg));
d000cd32:       |        |  |  \--|-> 860a                      mv      a2,sp
d000cd34:       |        |  |     |   854e                      mv      a0,s3
d000cd36:       |        |  |     |   85ca                      mv      a1,s2
d000cd38:       |        |  |     |   2d7d                      jal     d000d3f6 <sigverify_mod_exp_otbn>
d000cd3a:       |        |  |     |   73900593                  li      a1,1849
d000cd3e:       |        |  +-----|-- 16b51863                  bne     a0,a1,d000ceae <sigverify_rsa_verify+0x25e>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000cd42:       |        |  |     \-> 4581                      li      a1,0
d000cd44:       |        |  |         461d                      li      a2,7
d000cd46:       |        |  |         4501                      li      a0,0
sigverify_encoded_message_check():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:108
  for (size_t j = 0; launder32(j) < kHmacDigestNumWords; ++j, ++i) {
d000cd48:       |        |  |  /----- 02b66663                  bltu    a2,a1,d000cd74 <sigverify_rsa_verify+0x124>
d000cd4c:       |        |  |  |      4501                      li      a0,0
d000cd4e:       |        |  |  |      858a                      mv      a1,sp
d000cd50:       |        |  |  |      00002617                  auipc   a2,0x2
d000cd54:       |        |  |  |      2ec60613                  addi    a2,a2,748 # d000f03c <kSigverifyShares>
d000cd58:       |        |  |  |      46a1                      li      a3,8
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:109
    enc_msg_ptr[i] ^= act_digest->digest[j] ^ kSigverifyShares[i];
d000cd5a:       |        |  |  |  /-> 4098                      lw      a4,0(s1)
d000cd5c:       |        |  |  |  |   421c                      lw      a5,0(a2)
d000cd5e:       |        |  |  |  |   4180                      lw      s0,0(a1)
d000cd60:       |        |  |  |  |   8f3d                      xor     a4,a4,a5
d000cd62:       |        |  |  |  |   8f21                      xor     a4,a4,s0
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:108
  for (size_t j = 0; launder32(j) < kHmacDigestNumWords; ++j, ++i) {
d000cd64:       |        |  |  |  |   0505                      addi    a0,a0,1
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:109
    enc_msg_ptr[i] ^= act_digest->digest[j] ^ kSigverifyShares[i];
d000cd66:       |        |  |  |  |   c198                      sw      a4,0(a1)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000cd68:       |        |  |  |  |   872a                      mv      a4,a0
sigverify_encoded_message_check():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:108
  for (size_t j = 0; launder32(j) < kHmacDigestNumWords; ++j, ++i) {
d000cd6a:       |        |  |  |  |   0591                      addi    a1,a1,4
d000cd6c:       |        |  |  |  |   0611                      addi    a2,a2,4
d000cd6e:       |        |  |  |  |   0491                      addi    s1,s1,4
d000cd70:       |        |  |  |  \-- fed765e3                  bltu    a4,a3,d000cd5a <sigverify_rsa_verify+0x10a>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000cd74:       |        |  |  \----> 4581                      li      a1,0
d000cd76:       |        |  |         4611                      li      a2,4
sigverify_encoded_message_check():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:115
  for (size_t j = 0; launder32(j) < ARRAYSIZE(kEncodedSha256); ++j, ++i) {
d000cd78:       |        |  |  /----- 04b66063                  bltu    a2,a1,d000cdb8 <sigverify_rsa_verify+0x168>
d000cd7c:       |        |  |  |      00251613                  slli    a2,a0,0x2
d000cd80:       |        |  |  |      858a                      mv      a1,sp
d000cd82:       |        |  |  |      95b2                      add     a1,a1,a2
d000cd84:       |        |  |  |      00002697                  auipc   a3,0x2
d000cd88:       |        |  |  |      2b868693                  addi    a3,a3,696 # d000f03c <kSigverifyShares>
d000cd8c:       |        |  |  |      96b2                      add     a3,a3,a2
d000cd8e:       |        |  |  |      4605                      li      a2,1
d000cd90:       |        |  |  |      00002717                  auipc   a4,0x2
d000cd94:       |        |  |  |      42c70713                  addi    a4,a4,1068 # d000f1bc <sigverify_encoded_message_check.kEncodedSha256>
d000cd98:       |        |  |  |      4815                      li      a6,5
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:116
    enc_msg_ptr[i] ^= kEncodedSha256[j] ^ kSigverifyShares[i];
d000cd9a:       |        |  |  |  /-> 4304                      lw      s1,0(a4)
d000cd9c:       |        |  |  |  |   4280                      lw      s0,0(a3)
d000cd9e:       |        |  |  |  |   419c                      lw      a5,0(a1)
d000cda0:       |        |  |  |  |   8ca1                      xor     s1,s1,s0
d000cda2:       |        |  |  |  |   8fa5                      xor     a5,a5,s1
d000cda4:       |        |  |  |  |   c19c                      sw      a5,0(a1)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000cda6:       |        |  |  |  |   87b2                      mv      a5,a2
sigverify_encoded_message_check():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:115
  for (size_t j = 0; launder32(j) < ARRAYSIZE(kEncodedSha256); ++j, ++i) {
d000cda8:       |        |  |  |  |   0605                      addi    a2,a2,1
d000cdaa:       |        |  |  |  |   0711                      addi    a4,a4,4
d000cdac:       |        |  |  |  |   0591                      addi    a1,a1,4
d000cdae:       |        |  |  |  |   0691                      addi    a3,a3,4
d000cdb0:       |        |  |  |  \-- ff07e5e3                  bltu    a5,a6,d000cd9a <sigverify_rsa_verify+0x14a>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000cdb4:       |        |  |  |      9532                      add     a0,a0,a2
d000cdb6:       |        |  |  |      157d                      addi    a0,a0,-1
d000cdb8:       |        |  |  \----> 4601                      li      a2,0
d000cdba:       |        |  |         05100693                  li      a3,81
d000cdbe:       |        |  |         00002597                  auipc   a1,0x2
d000cdc2:       |        |  |         27e58593                  addi    a1,a1,638 # d000f03c <kSigverifyShares>
sigverify_encoded_message_check():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:123
  for (size_t j = 0; launder32(j) < kPsLen; ++j, ++i) {
d000cdc6:       |        |  |  /----- 02c6ec63                  bltu    a3,a2,d000cdfe <sigverify_rsa_verify+0x1ae>
d000cdca:       |        |  |  |      00251693                  slli    a3,a0,0x2
d000cdce:       |        |  |  |      860a                      mv      a2,sp
d000cdd0:       |        |  |  |      9636                      add     a2,a2,a3
d000cdd2:       |        |  |  |      00002717                  auipc   a4,0x2
d000cdd6:       |        |  |  |      26a70713                  addi    a4,a4,618 # d000f03c <kSigverifyShares>
d000cdda:       |        |  |  |      9736                      add     a4,a4,a3
d000cddc:       |        |  |  |      4685                      li      a3,1
d000cdde:       |        |  |  |      05200793                  li      a5,82
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:124
    enc_msg_ptr[i] ^= 0xffffffff ^ kSigverifyShares[i];
d000cde2:       |        |  |  |  /-> 4304                      lw      s1,0(a4)
d000cde4:       |        |  |  |  |   4200                      lw      s0,0(a2)
d000cde6:       |        |  |  |  |   8ca1                      xor     s1,s1,s0
d000cde8:       |        |  |  |  |   fff4c493                  not     s1,s1
d000cdec:       |        |  |  |  |   c204                      sw      s1,0(a2)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000cdee:       |        |  |  |  |   84b6                      mv      s1,a3
sigverify_encoded_message_check():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:123
  for (size_t j = 0; launder32(j) < kPsLen; ++j, ++i) {
d000cdf0:       |        |  |  |  |   0685                      addi    a3,a3,1
d000cdf2:       |        |  |  |  |   0611                      addi    a2,a2,4
d000cdf4:       |        |  |  |  |   0711                      addi    a4,a4,4
d000cdf6:       |        |  |  |  \-- fef4e6e3                  bltu    s1,a5,d000cde2 <sigverify_rsa_verify+0x192>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:127
  enc_msg_ptr[i] ^= 0x0001ffff ^ kSigverifyShares[i];
d000cdfa:       |        |  |  |      9536                      add     a0,a0,a3
d000cdfc:       |        |  |  |      157d                      addi    a0,a0,-1
d000cdfe:       |        |  |  \----> 00251693                  slli    a3,a0,0x2
d000ce02:       |        |  |         00b68633                  add     a2,a3,a1
d000ce06:       |        |  |         4218                      lw      a4,0(a2)
d000ce08:       |        |  |         860a                      mv      a2,sp
d000ce0a:       |        |  |         96b2                      add     a3,a3,a2
d000ce0c:       |        |  |         429c                      lw      a5,0(a3)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000ce0e:       |        |  |         4481                      li      s1,0
sigverify_encoded_message_check():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:127
d000ce10:       |        |  |         8f3d                      xor     a4,a4,a5
d000ce12:       |        |  |         000207b7                  lui     a5,0x20
d000ce16:       |        |  |         17fd                      addi    a5,a5,-1
d000ce18:       |        |  |         8f3d                      xor     a4,a4,a5
d000ce1a:       |        |  |         c298                      sw      a4,0(a3)
d000ce1c:       |        |  |         05f00693                  li      a3,95
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:128
  HARDENED_CHECK_EQ(i, kSigVerifyRsaNumWords - 1);
d000ce20:       |        |  |     /-- 00d50663                  beq     a0,a3,d000ce2c <sigverify_rsa_verify+0x1dc>
d000ce24:       |        |  |     |   0000                      unimp
d000ce26:       |        |  |     |   0000                      unimp
d000ce28:       |        |  |     |   0000                      unimp
d000ce2a:       |        |  |     |   0000                      unimp
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:132
  *flash_exec = 0;
d000ce2c:       |        |  |     \-> 000aa023                  sw      zero,0(s5)
d000ce30:       |        |  |         4501                      li      a0,0
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:134
  for (i = 0; launder32(i) < kSigVerifyRsaNumWords; ++i) {
d000ce32:       |        |  |  /----- 0296ec63                  bltu    a3,s1,d000ce6a <sigverify_rsa_verify+0x21a>
d000ce36:       |        |  |  |      4701                      li      a4,0
d000ce38:       |        |  |  |      4501                      li      a0,0
d000ce3a:       |        |  |  |      06000693                  li      a3,96
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:137
    diff |= enc_msg_ptr[i] ^ kSigverifyShares[i];
d000ce3e:       |        |  |  |  /-> 421c                      lw      a5,0(a2)
d000ce40:       |        |  |  |  |   4184                      lw      s1,0(a1)
d000ce42:       |        |  |  |  |   8cbd                      xor     s1,s1,a5
d000ce44:       |        |  |  |  |   8f45                      or      a4,a4,s1
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:138
    diff |= ~diff + 1;          // Set upper bits to 1 if not 0, no change o/w.
d000ce46:       |        |  |  |  |   40e004b3                  neg     s1,a4
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:141
    *flash_exec ^= enc_msg_ptr[i];
d000ce4a:       |        |  |  |  |   000aa403                  lw      s0,0(s5)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:138
    diff |= ~diff + 1;          // Set upper bits to 1 if not 0, no change o/w.
d000ce4e:       |        |  |  |  |   8f45                      or      a4,a4,s1
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:139
    diff |= ~(diff >> 31) + 1;  // Set to all 1s if MSB is set, no change o/w.
d000ce50:       |        |  |  |  |   41f75493                  srai    s1,a4,0x1f
d000ce54:       |        |  |  |  |   8f45                      or      a4,a4,s1
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:141
    *flash_exec ^= enc_msg_ptr[i];
d000ce56:       |        |  |  |  |   8fa1                      xor     a5,a5,s0
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:143
    *flash_exec |= diff;
d000ce58:       |        |  |  |  |   8fd9                      or      a5,a5,a4
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:134
  for (i = 0; launder32(i) < kSigVerifyRsaNumWords; ++i) {
d000ce5a:       |        |  |  |  |   0505                      addi    a0,a0,1
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:143
    *flash_exec |= diff;
d000ce5c:       |        |  |  |  |   00faa023                  sw      a5,0(s5)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000ce60:       |        |  |  |  |   87aa                      mv      a5,a0
sigverify_encoded_message_check():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:134
  for (i = 0; launder32(i) < kSigVerifyRsaNumWords; ++i) {
d000ce62:       |        |  |  |  |   0591                      addi    a1,a1,4
d000ce64:       |        |  |  |  |   0611                      addi    a2,a2,4
d000ce66:       |        |  |  |  \-- fcd7ece3                  bltu    a5,a3,d000ce3e <sigverify_rsa_verify+0x1ee>
d000ce6a:       |        |  |  \----> 06000593                  li      a1,96
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:145
  HARDENED_CHECK_EQ(i, kSigVerifyRsaNumWords);
d000ce6e:       |        |  |     /-- 00b50663                  beq     a0,a1,d000ce7a <sigverify_rsa_verify+0x22a>
d000ce72:       |        |  |     |   0000                      unimp
d000ce74:       |        |  |     |   0000                      unimp
d000ce76:       |        |  |     |   0000                      unimp
d000ce78:       |        |  |     |   0000                      unimp
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:150
      (*flash_exec << 21 ^ *flash_exec << 10 ^ *flash_exec >> 1) >> 21;
d000ce7a:       |        |  |     \-> 000aa503                  lw      a0,0(s5)
d000ce7e:       |        |  |         01551593                  slli    a1,a0,0x15
d000ce82:       |        |  |         00a51613                  slli    a2,a0,0xa
d000ce86:       |        |  |         8db1                      xor     a1,a1,a2
d000ce88:       |        |  |         8159                      srli    a0,a0,0x16
d000ce8a:       |        |  |         81d5                      srli    a1,a1,0x15
d000ce8c:       |        |  |         8d2d                      xor     a0,a0,a1
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000ce8e:       |        |  |         862a                      mv      a2,a0
d000ce90:       |        |  |         73900593                  li      a1,1849
sigverify_encoded_message_check():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:151
  if (launder32(result) == kErrorOk) {
d000ce94:       |        |  |  /----- 00b61963                  bne     a2,a1,d000cea6 <sigverify_rsa_verify+0x256>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:152
    HARDENED_CHECK_EQ(result, kErrorOk);
d000ce98:       |        |  |  |  /-- 00b50663                  beq     a0,a1,d000cea4 <sigverify_rsa_verify+0x254>
d000ce9c:       |        |  |  |  |   0000                      unimp
d000ce9e:       |        |  |  |  |   0000                      unimp
d000cea0:       |        |  |  |  |   0000                      unimp
d000cea2:       |        |  |  |  |   0000                      unimp
d000cea4:       |        |  +--|--\-X a029                      j       d000ceae <sigverify_rsa_verify+0x25e>
d000cea6:       |        |  |  \----> 01535537                  lui     a0,0x1535
d000ceaa:       |        |  |         60350513                  addi    a0,a0,1539 # 1535603 <WDOG_BARK_THOLD+0x14fe71b>
sigverify_rsa_verify():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:214
      break;
    default:
      HARDENED_UNREACHABLE();
  }
  return sigverify_encoded_message_check(&enc_msg, act_digest, flash_exec);
}
d000ceae:       |        |  \-------> 18412a83                  lw      s5,388(sp)
d000ceb2:       |        |            18812a03                  lw      s4,392(sp)
d000ceb6:       |        |            18c12983                  lw      s3,396(sp)
d000ceba:       |        |            19012903                  lw      s2,400(sp)
d000cebe:       |        |            19412483                  lw      s1,404(sp)
d000cec2:       |        |            19812403                  lw      s0,408(sp)
d000cec6:       |        |            19c12083                  lw      ra,412(sp)
d000ceca:       |        |            611d                      addi    sp,sp,416
d000cecc:       |        |            8082                      ret
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:211
      HARDENED_UNREACHABLE();
d000cece:       |        \----------> 0000                      unimp
d000ced0:       |                     0000                      unimp
d000ced2:       |                     0000                      unimp
d000ced4:       |                     0000                      unimp
sigverify_use_sw_rsa_verify():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:191
      HARDENED_UNREACHABLE();
d000ced6:       \-------------------> 0000                      unimp
d000ced8:                             0000                      unimp
d000ceda:                             0000                      unimp
d000cedc:                             0000                      unimp

d000cede <sigverify_usage_constraints_get>:
sigverify_usage_constraints_get():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:217

void sigverify_usage_constraints_get(
    uint32_t selector_bits, manifest_usage_constraints_t *usage_constraints) {
d000cede:              1141                     addi    sp,sp,-16
d000cee0:              c606                     sw      ra,12(sp)
d000cee2:              c422                     sw      s0,8(sp)
d000cee4:              c226                     sw      s1,4(sp)
d000cee6:              c04a                     sw      s2,0(sp)
d000cee8:              892e                     mv      s2,a1
d000ceea:              84aa                     mv      s1,a0
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:218
  usage_constraints->selector_bits = selector_bits;
d000ceec:              c188                     sw      a0,0(a1)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:219
  lifecycle_device_id_get(&usage_constraints->device_id);
d000ceee:              00458413                 addi    s0,a1,4
d000cef2:              8522                     mv      a0,s0
d000cef4:              5dd000ef                 jal     ra,d000dcd0 <lifecycle_device_id_get>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:222

  usage_constraints->manuf_state_creator =
      otp_read32(OTP_CTRL_PARAM_CREATOR_SW_CFG_MANUF_STATE_OFFSET);
d000cef8:              10400513                 li      a0,260
d000cefc:              637000ef                 jal     ra,d000dd32 <otp_read32>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:221
  usage_constraints->manuf_state_creator =
d000cf00:              02a92223                 sw      a0,36(s2)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:224
  usage_constraints->manuf_state_owner =
      otp_read32(OTP_CTRL_PARAM_OWNER_SW_CFG_MANUF_STATE_OFFSET);
d000cf04:              56800513                 li      a0,1384
d000cf08:              62b000ef                 jal     ra,d000dd32 <otp_read32>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:223
  usage_constraints->manuf_state_owner =
d000cf0c:              02a92423                 sw      a0,40(s2)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:225
  usage_constraints->life_cycle_state = lifecycle_state_get();
d000cf10:              411000ef                 jal     ra,d000db20 <lifecycle_state_get>
d000cf14:              4581                     li      a1,0
d000cf16:              02a92623                 sw      a0,44(s2)
d000cf1a:              a5a5a537                 lui     a0,0xa5a5a
d000cf1e:              5a550513                 addi    a0,a0,1445 # a5a5a5a5 <_stack_end+0xc5a3a5a5>
d000cf22:              4621                     li      a2,8
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
                               bitfield_bit32_to_field32(bit_index)) == 0x1u;
d000cf24:       /----> 00b4d6b3                 srl     a3,s1,a1
d000cf28:       |      8a85                     andi    a3,a3,1
sigverify_usage_constraints_get():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:232
  static_assert(
      kManifestSelectorBitDeviceIdFirst == 0 &&
          kManifestSelectorBitDeviceIdLast == kLifecycleDeviceIdNumWords - 1,
      "mapping from selector_bits to device_id changed, loop must be updated");
  for (size_t i = 0; i < kLifecycleDeviceIdNumWords; ++i) {
    if (!bitfield_bit32_read(selector_bits, i)) {
d000cf2a:       |  /-- e291                     bnez    a3,d000cf2e <sigverify_usage_constraints_get+0x50>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:233
      usage_constraints->device_id.device_id[i] =
d000cf2c:       |  |   c008                     sw      a0,0(s0)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:231
  for (size_t i = 0; i < kLifecycleDeviceIdNumWords; ++i) {
d000cf2e:       |  \-> 0585                     addi    a1,a1,1
d000cf30:       |      0411                     addi    s0,s0,4
d000cf32:       \----- fec599e3                 bne     a1,a2,d000cf24 <sigverify_usage_constraints_get+0x46>
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
d000cf36:              1004f513                 andi    a0,s1,256
sigverify_usage_constraints_get():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:237
          MANIFEST_USAGE_CONSTRAINT_UNSELECTED_WORD_VAL;
    }
  }
  if (!bitfield_bit32_read(selector_bits,
d000cf3a:          /-- e519                     bnez    a0,d000cf48 <sigverify_usage_constraints_get+0x6a>
d000cf3c:          |   a5a5a537                 lui     a0,0xa5a5a
d000cf40:          |   5a550513                 addi    a0,a0,1445 # a5a5a5a5 <_stack_end+0xc5a3a5a5>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:239
                           kManifestSelectorBitManufStateCreator)) {
    usage_constraints->manuf_state_creator =
d000cf44:          |   02a92223                 sw      a0,36(s2)
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
d000cf48:          \-> 2004f513                 andi    a0,s1,512
sigverify_usage_constraints_get():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:242
        MANIFEST_USAGE_CONSTRAINT_UNSELECTED_WORD_VAL;
  }
  if (!bitfield_bit32_read(selector_bits,
d000cf4c:          /-- e519                     bnez    a0,d000cf5a <sigverify_usage_constraints_get+0x7c>
d000cf4e:          |   a5a5a537                 lui     a0,0xa5a5a
d000cf52:          |   5a550513                 addi    a0,a0,1445 # a5a5a5a5 <_stack_end+0xc5a3a5a5>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:244
                           kManifestSelectorBitManufStateOwner)) {
    usage_constraints->manuf_state_owner =
d000cf56:          |   02a92423                 sw      a0,40(s2)
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
d000cf5a:          \-> 4004f513                 andi    a0,s1,1024
sigverify_usage_constraints_get():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:247
        MANIFEST_USAGE_CONSTRAINT_UNSELECTED_WORD_VAL;
  }
  if (!bitfield_bit32_read(selector_bits, kManifestSelectorBitLifeCycleState)) {
d000cf5e:          /-- e519                     bnez    a0,d000cf6c <sigverify_usage_constraints_get+0x8e>
d000cf60:          |   a5a5a537                 lui     a0,0xa5a5a
d000cf64:          |   5a550513                 addi    a0,a0,1445 # a5a5a5a5 <_stack_end+0xc5a3a5a5>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:248
    usage_constraints->life_cycle_state =
d000cf68:          |   02a92623                 sw      a0,44(s2)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/sigverify.c:251
        MANIFEST_USAGE_CONSTRAINT_UNSELECTED_WORD_VAL;
  }
}
d000cf6c:          \-> 4902                     lw      s2,0(sp)
d000cf6e:              4492                     lw      s1,4(sp)
d000cf70:              4422                     lw      s0,8(sp)
d000cf72:              40b2                     lw      ra,12(sp)
d000cf74:              0141                     addi    sp,sp,16
d000cf76:              8082                     ret

d000cf78 <sigverify_mod_exp_ibex>:
sigverify_mod_exp_ibex():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:169
  }
}

rom_error_t sigverify_mod_exp_ibex(const sigverify_rsa_key_t *key,
                                   const sigverify_rsa_buffer_t *sig,
                                   sigverify_rsa_buffer_t *result) {
d000cf78:                          7125                 addi    sp,sp,-416
d000cf7a:                          18112e23             sw      ra,412(sp)
d000cf7e:                          18812c23             sw      s0,408(sp)
d000cf82:                          18912a23             sw      s1,404(sp)
d000cf86:                          19212823             sw      s2,400(sp)
d000cf8a:                          19312623             sw      s3,396(sp)
d000cf8e:                          19412423             sw      s4,392(sp)
d000cf92:                          19512223             sw      s5,388(sp)
d000cf96:                          8a32                 mv      s4,a2
d000cf98:                          892e                 mv      s2,a1
d000cf9a:                          8aaa                 mv      s5,a0
d000cf9c:                          05f00593             li      a1,95
d000cfa0:                          17c00613             li      a2,380
d000cfa4:                          03535537             lui     a0,0x3535
d000cfa8:                          60350513             addi    a0,a0,1539 # 3535603 <WDOG_BARK_THOLD+0x34fe71b>
d000cfac:                          05f00693             li      a3,95
greater_equal_modulus():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:46
    if (a->data[i] != key->n.data[i]) {
d000cfb0:                   /----> 00c90733             add     a4,s2,a2
d000cfb4:                   |      4318                 lw      a4,0(a4)
d000cfb6:                   |      00ca87b3             add     a5,s5,a2
d000cfba:                   |      439c                 lw      a5,0(a5)
d000cfbc:                   |  /-- 00f71763             bne     a4,a5,d000cfca <sigverify_mod_exp_ibex+0x52>
d000cfc0:                   |  |   16fd                 addi    a3,a3,-1
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:45
  for (size_t i = ARRAYSIZE(a->data) - 1; i < ARRAYSIZE(a->data); --i) {
d000cfc2:                   |  |   1671                 addi    a2,a2,-4
d000cfc4:                   \--|-- fed5f6e3             bgeu    a1,a3,d000cfb0 <sigverify_mod_exp_ibex+0x38>
d000cfc8:       /--------------|-- a275                 j       d000d174 <sigverify_mod_exp_ibex+0x1fc>
sigverify_mod_exp_ibex():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:172
  // Reject the signature if it is too large (n <= sig): RFC 8017, section
  // 5.2.2, step 1.
  if (greater_equal_modulus(key, sig)) {
d000cfca:       |           /--\-X 00e7f763             bgeu    a5,a4,d000cfd8 <sigverify_mod_exp_ibex+0x60>
d000cfce:       |           |      03535537             lui     a0,0x3535
d000cfd2:       |           |      60350513             addi    a0,a0,1539 # 3535603 <WDOG_BARK_THOLD+0x34fe71b>
d000cfd6:       +-----------|----- aa79                 j       d000d174 <sigverify_mod_exp_ibex+0x1fc>
d000cfd8:       |           \----> 898a                 mv      s3,sp
calc_r_square():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:142
  memset(buf.data, 0, sizeof(result->data));
d000cfda:       |                  850a                 mv      a0,sp
d000cfdc:       |                  18000613             li      a2,384
d000cfe0:       |                  18000413             li      s0,384
d000cfe4:       |                  4581                 li      a1,0
d000cfe6:       |                  040010ef             jal     ra,d000e026 <memset>
d000cfea:       |                  4501                 li      a0,0
d000cfec:       |                  4581                 li      a1,0
subtract_modulus():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:26
    uint32_t temp = a->data[i] - borrow;
d000cfee:       |              /-> 00a98633             add     a2,s3,a0
d000cff2:       |              |   4214                 lw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:29
    borrow = (a->data[i] < borrow) + (temp < key->n.data[i]);
d000cff4:       |              |   00aa8733             add     a4,s5,a0
d000cff8:       |              |   4318                 lw      a4,0(a4)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:26
    uint32_t temp = a->data[i] - borrow;
d000cffa:       |              |   40b687b3             sub     a5,a3,a1
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:29
    borrow = (a->data[i] < borrow) + (temp < key->n.data[i]);
d000cffe:       |              |   00b6b5b3             sltu    a1,a3,a1
d000d002:       |              |   00e7b6b3             sltu    a3,a5,a4
d000d006:       |              |   95b6                 add     a1,a1,a3
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:30
    a->data[i] = temp - key->n.data[i];
d000d008:       |              |   40e786b3             sub     a3,a5,a4
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:25
  for (size_t i = 0; i < ARRAYSIZE(a->data); ++i) {
d000d00c:       |              |   0511                 addi    a0,a0,4
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:30
    a->data[i] = temp - key->n.data[i];
d000d00e:       |              |   c214                 sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:25
  for (size_t i = 0; i < ARRAYSIZE(a->data); ++i) {
d000d010:       |              \-- fc851fe3             bne     a0,s0,d000cfee <sigverify_mod_exp_ibex+0x76>
d000d014:       |                  4881                 li      a7,0
d000d016:       |                  858a                 mv      a1,sp
d000d018:       |                  e8400293             li      t0,-380
d000d01c:       |                  05f00313             li      t1,95
d000d020:       |                  06000813             li      a6,96
d000d024:       |                  18000793             li      a5,384
shift_left():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:63
  const uint32_t msb = a->data[ARRAYSIZE(a->data) - 1] >> 31;
d000d028:       |  /-------------> 17c12383             lw      t2,380(sp)
d000d02c:       |  |               4701                 li      a4,0
d000d02e:       |  |               851e                 mv      a0,t2
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:65
    a->data[i] = (a->data[i] << 1) | (a->data[i - 1] >> 31);
d000d030:       |  |           /-> 00e58633             add     a2,a1,a4
d000d034:       |  |           |   17862683             lw      a3,376(a2)
d000d038:       |  |           |   0506                 slli    a0,a0,0x1
d000d03a:       |  |           |   01f6d413             srli    s0,a3,0x1f
d000d03e:       |  |           |   8d41                 or      a0,a0,s0
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:64
  for (size_t i = ARRAYSIZE(a->data) - 1; i > 0; --i) {
d000d040:       |  |           |   1771                 addi    a4,a4,-4
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:65
    a->data[i] = (a->data[i] << 1) | (a->data[i - 1] >> 31);
d000d042:       |  |           |   16a62e23             sw      a0,380(a2)
d000d046:       |  |           |   8536                 mv      a0,a3
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:64
  for (size_t i = ARRAYSIZE(a->data) - 1; i > 0; --i) {
d000d048:       |  |           \-- fe5714e3             bne     a4,t0,d000d030 <sigverify_mod_exp_ibex+0xb8>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:67
  a->data[0] <<= 1;
d000d04c:       |  |               4502                 lw      a0,0(sp)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:63
  const uint32_t msb = a->data[ARRAYSIZE(a->data) - 1] >> 31;
d000d04e:       |  |               01f3d393             srli    t2,t2,0x1f
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:67
  a->data[0] <<= 1;
d000d052:       |  |               0506                 slli    a0,a0,0x1
d000d054:       |  |               c02a                 sw      a0,0(sp)
calc_r_square():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:154
    while (msb > 0 || greater_equal_modulus(key, &buf)) {
d000d056:       |  |     /-------- 02039563             bnez    t2,d000d080 <sigverify_mod_exp_ibex+0x108>
d000d05a:       |  |  /--|-------> 05f00413             li      s0,95
d000d05e:       |  |  |  |         17c00513             li      a0,380
greater_equal_modulus():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:46
    if (a->data[i] != key->n.data[i]) {
d000d062:       |  |  |  |  /----> 00a58633             add     a2,a1,a0
d000d066:       |  |  |  |  |      4210                 lw      a2,0(a2)
d000d068:       |  |  |  |  |      00aa86b3             add     a3,s5,a0
d000d06c:       |  |  |  |  |      4294                 lw      a3,0(a3)
d000d06e:       |  |  |  |  |  /-- 00d61763             bne     a2,a3,d000d07c <sigverify_mod_exp_ibex+0x104>
d000d072:       |  |  |  |  |  |   147d                 addi    s0,s0,-1
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:45
  for (size_t i = ARRAYSIZE(a->data) - 1; i < ARRAYSIZE(a->data); --i) {
d000d074:       |  |  |  |  |  |   1571                 addi    a0,a0,-4
d000d076:       |  |  |  |  \--|-- fe8376e3             bgeu    t1,s0,d000d062 <sigverify_mod_exp_ibex+0xea>
d000d07a:       |  |  |  +-----|-- a019                 j       d000d080 <sigverify_mod_exp_ibex+0x108>
calc_r_square():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:154
    while (msb > 0 || greater_equal_modulus(key, &buf)) {
d000d07c:       |  |  |  |  /--\-X 02c6fc63             bgeu    a3,a2,d000d0b4 <sigverify_mod_exp_ibex+0x13c>
d000d080:       |  |  |  >--|----> 4501                 li      a0,0
d000d082:       |  |  |  |  |      4401                 li      s0,0
subtract_modulus():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:26
    uint32_t temp = a->data[i] - borrow;
d000d084:       |  |  |  |  |  /-> 00a58633             add     a2,a1,a0
d000d088:       |  |  |  |  |  |   4214                 lw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:29
    borrow = (a->data[i] < borrow) + (temp < key->n.data[i]);
d000d08a:       |  |  |  |  |  |   00aa8733             add     a4,s5,a0
d000d08e:       |  |  |  |  |  |   4318                 lw      a4,0(a4)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:26
    uint32_t temp = a->data[i] - borrow;
d000d090:       |  |  |  |  |  |   408684b3             sub     s1,a3,s0
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:29
    borrow = (a->data[i] < borrow) + (temp < key->n.data[i]);
d000d094:       |  |  |  |  |  |   0086b6b3             sltu    a3,a3,s0
d000d098:       |  |  |  |  |  |   00e4b433             sltu    s0,s1,a4
d000d09c:       |  |  |  |  |  |   9436                 add     s0,s0,a3
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:30
    a->data[i] = temp - key->n.data[i];
d000d09e:       |  |  |  |  |  |   40e486b3             sub     a3,s1,a4
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:25
  for (size_t i = 0; i < ARRAYSIZE(a->data); ++i) {
d000d0a2:       |  |  |  |  |  |   0511                 addi    a0,a0,4
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:30
    a->data[i] = temp - key->n.data[i];
d000d0a4:       |  |  |  |  |  |   c214                 sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:25
  for (size_t i = 0; i < ARRAYSIZE(a->data); ++i) {
d000d0a6:       |  |  |  |  |  \-- fcf51fe3             bne     a0,a5,d000d084 <sigverify_mod_exp_ibex+0x10c>
calc_r_square():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:155
      msb -= subtract_modulus(key, &buf);
d000d0aa:       |  |  |  |  |      408383b3             sub     t2,t2,s0
d000d0ae:       |  |  |  \--|----- fc0399e3             bnez    t2,d000d080 <sigverify_mod_exp_ibex+0x108>
d000d0b2:       |  |  \-----|----- b765                 j       d000d05a <sigverify_mod_exp_ibex+0xe2>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:150
  for (size_t i = 0; i < 96; ++i) {
d000d0b4:       |  |        \----> 0885                 addi    a7,a7,1
d000d0b6:       |  \-------------- f70899e3             bne     a7,a6,d000d028 <sigverify_mod_exp_ibex+0xb0>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:160
  mont_mul(key, &buf, &buf, result);
d000d0ba:       |                  858a                 mv      a1,sp
d000d0bc:       |                  860a                 mv      a2,sp
d000d0be:       |                  8556                 mv      a0,s5
d000d0c0:       |                  86d2                 mv      a3,s4
d000d0c2:       |                  28c9                 jal     d000d194 <mont_mul>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:162
    mont_mul(key, result, result, &buf);
d000d0c4:       |                  868a                 mv      a3,sp
d000d0c6:       |                  8556                 mv      a0,s5
d000d0c8:       |                  85d2                 mv      a1,s4
d000d0ca:       |                  8652                 mv      a2,s4
d000d0cc:       |                  20e1                 jal     d000d194 <mont_mul>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:163
    mont_mul(key, &buf, &buf, result);
d000d0ce:       |                  858a                 mv      a1,sp
d000d0d0:       |                  860a                 mv      a2,sp
d000d0d2:       |                  8556                 mv      a0,s5
d000d0d4:       |                  86d2                 mv      a3,s4
d000d0d6:       |                  287d                 jal     d000d194 <mont_mul>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:162
    mont_mul(key, result, result, &buf);
d000d0d8:       |                  868a                 mv      a3,sp
d000d0da:       |                  8556                 mv      a0,s5
d000d0dc:       |                  85d2                 mv      a1,s4
d000d0de:       |                  8652                 mv      a2,s4
d000d0e0:       |                  2855                 jal     d000d194 <mont_mul>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:163
    mont_mul(key, &buf, &buf, result);
d000d0e2:       |                  858a                 mv      a1,sp
d000d0e4:       |                  860a                 mv      a2,sp
d000d0e6:       |                  8556                 mv      a0,s5
d000d0e8:       |                  86d2                 mv      a3,s4
d000d0ea:       |                  206d                 jal     d000d194 <mont_mul>
sigverify_mod_exp_ibex():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:181
  sigverify_rsa_buffer_t buf;

  // result = R^2 mod n
  calc_r_square(key, result);
  // buf = sig * R mod n
  mont_mul(key, sig, result, &buf);
d000d0ec:       |                  868a                 mv      a3,sp
d000d0ee:       |                  8556                 mv      a0,s5
d000d0f0:       |                  85ca                 mv      a1,s2
d000d0f2:       |                  8652                 mv      a2,s4
d000d0f4:       |                  2045                 jal     d000d194 <mont_mul>
d000d0f6:       |                  4421                 li      s0,8
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:184
  for (size_t i = 0; i < 8; ++i) {
    // result = sig^{2*4^i} * R mod n (sig's exponent: 2, 8, 32, ..., 32768)
    mont_mul(key, &buf, &buf, result);
d000d0f8:       |              /-> 858a                 mv      a1,sp
d000d0fa:       |              |   860a                 mv      a2,sp
d000d0fc:       |              |   8556                 mv      a0,s5
d000d0fe:       |              |   86d2                 mv      a3,s4
d000d100:       |              |   2851                 jal     d000d194 <mont_mul>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:186
    // buf = sig^{4^{i+1}} * R mod n (sig's exponent: 4, 16, 64, ..., 65536)
    mont_mul(key, result, result, &buf);
d000d102:       |              |   868a                 mv      a3,sp
d000d104:       |              |   8556                 mv      a0,s5
d000d106:       |              |   85d2                 mv      a1,s4
d000d108:       |              |   8652                 mv      a2,s4
d000d10a:       |              |   2069                 jal     d000d194 <mont_mul>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:182
  for (size_t i = 0; i < 8; ++i) {
d000d10c:       |              |   147d                 addi    s0,s0,-1
d000d10e:       |              \-- f46d                 bnez    s0,d000d0f8 <sigverify_mod_exp_ibex+0x180>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:189
  }
  // result = sig^65537 mod n
  mont_mul(key, &buf, sig, result);
d000d110:       |                  858a                 mv      a1,sp
d000d112:       |                  8556                 mv      a0,s5
d000d114:       |                  864a                 mv      a2,s2
d000d116:       |                  86d2                 mv      a3,s4
d000d118:       |                  28b5                 jal     d000d194 <mont_mul>
greater_equal_modulus():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:45
  for (size_t i = ARRAYSIZE(a->data) - 1; i < ARRAYSIZE(a->data); --i) {
d000d11a:       |                  17ca8513             addi    a0,s5,380
d000d11e:       |                  17ca0593             addi    a1,s4,380
d000d122:       |                  05f00613             li      a2,95
d000d126:       |                  05f00693             li      a3,95
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:46
    if (a->data[i] != key->n.data[i]) {
d000d12a:       |              /-> 4198                 lw      a4,0(a1)
d000d12c:       |              |   411c                 lw      a5,0(a0)
d000d12e:       |           /--|-- 00f71863             bne     a4,a5,d000d13e <sigverify_mod_exp_ibex+0x1c6>
d000d132:       |           |  |   16fd                 addi    a3,a3,-1
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:45
  for (size_t i = ARRAYSIZE(a->data) - 1; i < ARRAYSIZE(a->data); --i) {
d000d134:       |           |  |   1571                 addi    a0,a0,-4
d000d136:       |           |  |   15f1                 addi    a1,a1,-4
d000d138:       |           |  \-- fed679e3             bgeu    a2,a3,d000d12a <sigverify_mod_exp_ibex+0x1b2>
d000d13c:       |           |  /-- a019                 j       d000d142 <sigverify_mod_exp_ibex+0x1ca>
sigverify_mod_exp_ibex():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:194

  // We need this check because the result of `mont_mul` is not guaranteed to be
  // the least non-negative residue. We need to subtract the modulus n from
  // `result` at most once because R/2 < n < R.
  if (greater_equal_modulus(key, result)) {
d000d13e:       |        /--\--|-X 02e7f963             bgeu    a5,a4,d000d170 <sigverify_mod_exp_ibex+0x1f8>
d000d142:       |        |     \-> 4501                 li      a0,0
d000d144:       |        |         4601                 li      a2,0
d000d146:       |        |         18000593             li      a1,384
subtract_modulus():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:26
    uint32_t temp = a->data[i] - borrow;
d000d14a:       |        |     /-> 00aa06b3             add     a3,s4,a0
d000d14e:       |        |     |   4298                 lw      a4,0(a3)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:29
    borrow = (a->data[i] < borrow) + (temp < key->n.data[i]);
d000d150:       |        |     |   00aa87b3             add     a5,s5,a0
d000d154:       |        |     |   439c                 lw      a5,0(a5)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:26
    uint32_t temp = a->data[i] - borrow;
d000d156:       |        |     |   40c704b3             sub     s1,a4,a2
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:29
    borrow = (a->data[i] < borrow) + (temp < key->n.data[i]);
d000d15a:       |        |     |   00c73633             sltu    a2,a4,a2
d000d15e:       |        |     |   00f4b733             sltu    a4,s1,a5
d000d162:       |        |     |   963a                 add     a2,a2,a4
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:30
    a->data[i] = temp - key->n.data[i];
d000d164:       |        |     |   40f48733             sub     a4,s1,a5
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:25
  for (size_t i = 0; i < ARRAYSIZE(a->data); ++i) {
d000d168:       |        |     |   0511                 addi    a0,a0,4
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:30
    a->data[i] = temp - key->n.data[i];
d000d16a:       |        |     |   c298                 sw      a4,0(a3)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:25
  for (size_t i = 0; i < ARRAYSIZE(a->data); ++i) {
d000d16c:       |        |     \-- fcb51fe3             bne     a0,a1,d000d14a <sigverify_mod_exp_ibex+0x1d2>
d000d170:       |        \-------> 73900513             li      a0,1849
sigverify_mod_exp_ibex():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:199
    subtract_modulus(key, result);
  }

  return kErrorOk;
}
d000d174:       \----------------> 18412a83             lw      s5,388(sp)
d000d178:                          18812a03             lw      s4,392(sp)
d000d17c:                          18c12983             lw      s3,396(sp)
d000d180:                          19012903             lw      s2,400(sp)
d000d184:                          19412483             lw      s1,404(sp)
d000d188:                          19812403             lw      s0,408(sp)
d000d18c:                          19c12083             lw      ra,412(sp)
d000d190:                          611d                 addi    sp,sp,416
d000d192:                          8082                 ret

d000d194 <mont_mul>:
mont_mul():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:90
                     sigverify_rsa_buffer_t *result) {
d000d194:                 7179                  addi    sp,sp,-48
d000d196:                 d606                  sw      ra,44(sp)
d000d198:                 d422                  sw      s0,40(sp)
d000d19a:                 d226                  sw      s1,36(sp)
d000d19c:                 d04a                  sw      s2,32(sp)
d000d19e:                 ce4e                  sw      s3,28(sp)
d000d1a0:                 cc52                  sw      s4,24(sp)
d000d1a2:                 ca56                  sw      s5,20(sp)
d000d1a4:                 c85a                  sw      s6,16(sp)
d000d1a6:                 c65e                  sw      s7,12(sp)
d000d1a8:                 8bb6                  mv      s7,a3
d000d1aa:                 89b2                  mv      s3,a2
d000d1ac:                 892e                  mv      s2,a1
d000d1ae:                 8b2a                  mv      s6,a0
d000d1b0:                 5a7d                  li      s4,-1
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:91
  memset(result->data, 0, sizeof(result->data));
d000d1b2:                 18000613              li      a2,384
d000d1b6:                 18000a93              li      s5,384
d000d1ba:                 8536                  mv      a0,a3
d000d1bc:                 4581                  li      a1,0
d000d1be:                 669000ef              jal     ra,d000e026 <memset>
d000d1c2:                 4881                  li      a7,0
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:93
  for (size_t i = 0; i < ARRAYSIZE(x->data); ++i) {
d000d1c4:                 00498313              addi    t1,s3,4
d000d1c8:                 004b0e93              addi    t4,s6,4
d000d1cc:                 17800293              li      t0,376
d000d1d0:                 06000813              li      a6,96
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:104
    uint64_t acc0 = (uint64_t)x->data[i] * y->data[0] + result->data[0];
d000d1d4:       /-------> 00289513              slli    a0,a7,0x2
d000d1d8:       |         00a90f33              add     t5,s2,a0
d000d1dc:       |         000f2503              lw      a0,0(t5)
d000d1e0:       |         0009a583              lw      a1,0(s3)
d000d1e4:       |         000ba483              lw      s1,0(s7)
d000d1e8:       |         4701                  li      a4,0
d000d1ea:       |         02a5b3b3              mulhu   t2,a1,a0
d000d1ee:       |         02a585b3              mul     a1,a1,a0
d000d1f2:       |         94ae                  add     s1,s1,a1
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:105
    const uint32_t u_i = (uint32_t)acc0 * key->n0_inv[0];
d000d1f4:       |         180b2683              lw      a3,384(s6)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:107
    uint64_t acc1 = (uint64_t)u_i * key->n.data[0] + (uint32_t)acc0;
d000d1f8:       |         000b2e03              lw      t3,0(s6)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:104
    uint64_t acc0 = (uint64_t)x->data[i] * y->data[0] + result->data[0];
d000d1fc:       |         00b4b5b3              sltu    a1,s1,a1
d000d200:       |         959e                  add     a1,a1,t2
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:105
    const uint32_t u_i = (uint32_t)acc0 * key->n0_inv[0];
d000d202:       |         02968fb3              mul     t6,a3,s1
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:107
    uint64_t acc1 = (uint64_t)u_i * key->n.data[0] + (uint32_t)acc0;
d000d206:       |         03cf83b3              mul     t2,t6,t3
d000d20a:       |         0144f4b3              and     s1,s1,s4
d000d20e:       |         949e                  add     s1,s1,t2
d000d210:       |         0074b3b3              sltu    t2,s1,t2
d000d214:       |         03cfb4b3              mulhu   s1,t6,t3
d000d218:       |         949e                  add     s1,s1,t2
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:111
      acc0 = (uint64_t)x->data[i] * y->data[j] + result->data[j] + (acc0 >> 32);
d000d21a:       |  /----> 00e30633              add     a2,t1,a4
d000d21e:       |  |      4210                  lw      a2,0(a2)
d000d220:       |  |      00eb8433              add     s0,s7,a4
d000d224:       |  |      405c                  lw      a5,4(s0)
d000d226:       |  |      02a636b3              mulhu   a3,a2,a0
d000d22a:       |  |      02a60533              mul     a0,a2,a0
d000d22e:       |  |      00f58633              add     a2,a1,a5
d000d232:       |  |      00b635b3              sltu    a1,a2,a1
d000d236:       |  |      95b6                  add     a1,a1,a3
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:112
      acc1 = (uint64_t)u_i * key->n.data[j] + (uint32_t)acc0 + (acc1 >> 32);
d000d238:       |  |      00ee86b3              add     a3,t4,a4
d000d23c:       |  |      4294                  lw      a3,0(a3)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:111
      acc0 = (uint64_t)x->data[i] * y->data[j] + result->data[j] + (acc0 >> 32);
d000d23e:       |  |      9532                  add     a0,a0,a2
d000d240:       |  |      00c53633              sltu    a2,a0,a2
d000d244:       |  |      95b2                  add     a1,a1,a2
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:112
      acc1 = (uint64_t)u_i * key->n.data[j] + (uint32_t)acc0 + (acc1 >> 32);
d000d246:       |  |      03f6b633              mulhu   a2,a3,t6
d000d24a:       |  |      03f686b3              mul     a3,a3,t6
d000d24e:       |  |      01457533              and     a0,a0,s4
d000d252:       |  |      009687b3              add     a5,a3,s1
d000d256:       |  |      00d7b6b3              sltu    a3,a5,a3
d000d25a:       |  |      9636                  add     a2,a2,a3
d000d25c:       |  |      953e                  add     a0,a0,a5
d000d25e:       |  |      00f536b3              sltu    a3,a0,a5
d000d262:       |  |      00d604b3              add     s1,a2,a3
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:113
      result->data[j - 1] = (uint32_t)acc1;
d000d266:       |  |      c008                  sw      a0,0(s0)
d000d268:       |  |  /-- 00570663              beq     a4,t0,d000d274 <mont_mul+0xe0>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:111
      acc0 = (uint64_t)x->data[i] * y->data[j] + result->data[j] + (acc0 >> 32);
d000d26c:       |  |  |   000f2503              lw      a0,0(t5)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:110
    for (size_t j = 1; j < ARRAYSIZE(result->data); ++j) {
d000d270:       |  |  |   0711                  addi    a4,a4,4
d000d272:       |  \--|-- b765                  j       d000d21a <mont_mul+0x86>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:115
    acc0 = (acc0 >> 32) + (acc1 >> 32);
d000d274:       |     \-> 00b48533              add     a0,s1,a1
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:116
    result->data[ARRAYSIZE(result->data) - 1] = (uint32_t)acc0;
d000d278:       |         16abae23              sw      a0,380(s7)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:127
    if (acc0 >> 32) {
d000d27c:       |  /----- 02957763              bgeu    a0,s1,d000d2aa <mont_mul+0x116>
d000d280:       |  |      4501                  li      a0,0
d000d282:       |  |      4581                  li      a1,0
subtract_modulus():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:26
    uint32_t temp = a->data[i] - borrow;
d000d284:       |  |  /-> 00ab8633              add     a2,s7,a0
d000d288:       |  |  |   4214                  lw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:29
    borrow = (a->data[i] < borrow) + (temp < key->n.data[i]);
d000d28a:       |  |  |   00ab0733              add     a4,s6,a0
d000d28e:       |  |  |   4318                  lw      a4,0(a4)
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:26
    uint32_t temp = a->data[i] - borrow;
d000d290:       |  |  |   40b687b3              sub     a5,a3,a1
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:29
    borrow = (a->data[i] < borrow) + (temp < key->n.data[i]);
d000d294:       |  |  |   00b6b5b3              sltu    a1,a3,a1
d000d298:       |  |  |   00e7b6b3              sltu    a3,a5,a4
d000d29c:       |  |  |   95b6                  add     a1,a1,a3
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:30
    a->data[i] = temp - key->n.data[i];
d000d29e:       |  |  |   40e786b3              sub     a3,a5,a4
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:25
  for (size_t i = 0; i < ARRAYSIZE(a->data); ++i) {
d000d2a2:       |  |  |   0511                  addi    a0,a0,4
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:30
    a->data[i] = temp - key->n.data[i];
d000d2a4:       |  |  |   c214                  sw      a3,0(a2)
d000d2a6:       |  |  \-- fd551fe3              bne     a0,s5,d000d284 <mont_mul+0xf0>
mont_mul():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:93
  for (size_t i = 0; i < ARRAYSIZE(x->data); ++i) {
d000d2aa:       |  \----> 0885                  addi    a7,a7,1
d000d2ac:       \-------- f30894e3              bne     a7,a6,d000d1d4 <mont_mul+0x40>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_ibex.c:131
}
d000d2b0:                 4bb2                  lw      s7,12(sp)
d000d2b2:                 4b42                  lw      s6,16(sp)
d000d2b4:                 4ad2                  lw      s5,20(sp)
d000d2b6:                 4a62                  lw      s4,24(sp)
d000d2b8:                 49f2                  lw      s3,28(sp)
d000d2ba:                 5902                  lw      s2,32(sp)
d000d2bc:                 5492                  lw      s1,36(sp)
d000d2be:                 5422                  lw      s0,40(sp)
d000d2c0:                 50b2                  lw      ra,44(sp)
d000d2c2:                 6145                  addi    sp,sp,48
d000d2c4:                 8082                  ret

d000d2c6 <run_otbn_rsa_3072_modexp>:
run_otbn_rsa_3072_modexp():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:69
}

rom_error_t run_otbn_rsa_3072_modexp(
    const sigverify_rsa_key_t *public_key,
    const sigverify_rsa_buffer_t *signature,
    sigverify_rsa_buffer_t *recovered_message) {
d000d2c6:                 7139                  addi    sp,sp,-64
d000d2c8:                 de06                  sw      ra,60(sp)
d000d2ca:                 dc22                  sw      s0,56(sp)
d000d2cc:                 da26                  sw      s1,52(sp)
d000d2ce:                 d84a                  sw      s2,48(sp)
d000d2d0:                 d64e                  sw      s3,44(sp)
d000d2d2:                 d452                  sw      s4,40(sp)
d000d2d4:                 8932                  mv      s2,a2
d000d2d6:                 8a2e                  mv      s4,a1
d000d2d8:                 84aa                  mv      s1,a0
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:73
  otbn_t otbn;

  // Initialize OTBN and load the RSA app.
  otbn_init(&otbn);
d000d2da:                 0808                  addi    a0,sp,16
d000d2dc:                 2ab1                  jal     d000d438 <otbn_init>
d000d2de:                 00002517              auipc   a0,0x2
d000d2e2:                 ef250513              addi    a0,a0,-270 # d000f1d0 <kOtbnAppRsa>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:74
  HARDENED_RETURN_IF_ERROR(otbn_load_app(&otbn, kOtbnAppRsa));
d000d2e6:                 454c                  lw      a1,12(a0)
d000d2e8:                 4510                  lw      a2,8(a0)
d000d2ea:                 4154                  lw      a3,4(a0)
d000d2ec:                 4108                  lw      a0,0(a0)
d000d2ee:                 c62e                  sw      a1,12(sp)
d000d2f0:                 c432                  sw      a2,8(sp)
d000d2f2:                 c236                  sw      a3,4(sp)
d000d2f4:                 c02a                  sw      a0,0(sp)
d000d2f6:                 0808                  addi    a0,sp,16
d000d2f8:                 858a                  mv      a1,sp
d000d2fa:                 2aa9                  jal     d000d454 <otbn_load_app>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000d2fc:                 85aa                  mv      a1,a0
d000d2fe:                 73900413              li      s0,1849
run_otbn_rsa_3072_modexp():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:74
d000d302:       /-------- 0e859263              bne     a1,s0,d000d3e6 <run_otbn_rsa_3072_modexp+0x120>
d000d306:       |     /-- 00850663              beq     a0,s0,d000d312 <run_otbn_rsa_3072_modexp+0x4c>
d000d30a:       |     |   0000                  unimp
d000d30c:       |     |   0000                  unimp
d000d30e:       |     |   0000                  unimp
d000d310:       |     |   0000                  unimp
write_rsa_3072_int_to_otbn():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:49
  return otbn_copy_data_to_otbn(otbn, kSigVerifyRsaNumWords, src->data, dst);
d000d312:       |     \-> 00000693              li      a3,0
d000d316:       |         0808                  addi    a0,sp,16
d000d318:       |         06000593              li      a1,96
d000d31c:       |         8626                  mv      a2,s1
d000d31e:       |         2cbd                  jal     d000d59c <otbn_copy_data_to_otbn>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000d320:       |         85aa                  mv      a1,a0
run_otbn_rsa_3072_modexp():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:77

  // Set the modulus (n).
  HARDENED_RETURN_IF_ERROR(
d000d322:       +-------- 0c859263              bne     a1,s0,d000d3e6 <run_otbn_rsa_3072_modexp+0x120>
d000d326:       |         73900993              li      s3,1849
d000d32a:       |     /-- 01350663              beq     a0,s3,d000d336 <run_otbn_rsa_3072_modexp+0x70>
d000d32e:       |     |   0000                  unimp
d000d330:       |     |   0000                  unimp
d000d332:       |     |   0000                  unimp
d000d334:       |     |   0000                  unimp
write_rsa_3072_int_to_otbn():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:49
  return otbn_copy_data_to_otbn(otbn, kSigVerifyRsaNumWords, src->data, dst);
d000d336:       |     \-> 32000693              li      a3,800
d000d33a:       |         0808                  addi    a0,sp,16
d000d33c:       |         06000593              li      a1,96
d000d340:       |         8652                  mv      a2,s4
d000d342:       |         2ca9                  jal     d000d59c <otbn_copy_data_to_otbn>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000d344:       |         85aa                  mv      a1,a0
run_otbn_rsa_3072_modexp():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:81
      write_rsa_3072_int_to_otbn(&otbn, &public_key->n, kOtbnVarRsaInMod));

  // Set the signature.
  HARDENED_RETURN_IF_ERROR(
d000d346:       +-------- 0b359063              bne     a1,s3,d000d3e6 <run_otbn_rsa_3072_modexp+0x120>
d000d34a:       |     /-- 01350663              beq     a0,s3,d000d356 <run_otbn_rsa_3072_modexp+0x90>
d000d34e:       |     |   0000                  unimp
d000d350:       |     |   0000                  unimp
d000d352:       |     |   0000                  unimp
d000d354:       |     |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:85
      write_rsa_3072_int_to_otbn(&otbn, signature, kOtbnVarRsaInBuf));

  // Set the precomputed constant m0_inv.
  HARDENED_RETURN_IF_ERROR(otbn_copy_data_to_otbn(
d000d356:       |     \-> 18048613              addi    a2,s1,384
d000d35a:       |         18000693              li      a3,384
d000d35e:       |         0808                  addi    a0,sp,16
d000d360:       |         45a1                  li      a1,8
d000d362:       |         2c2d                  jal     d000d59c <otbn_copy_data_to_otbn>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000d364:       |         85aa                  mv      a1,a0
run_otbn_rsa_3072_modexp():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:85
d000d366:       +-------- 09359063              bne     a1,s3,d000d3e6 <run_otbn_rsa_3072_modexp+0x120>
d000d36a:       |         73900413              li      s0,1849
d000d36e:       |     /-- 00850663              beq     a0,s0,d000d37a <run_otbn_rsa_3072_modexp+0xb4>
d000d372:       |     |   0000                  unimp
d000d374:       |     |   0000                  unimp
d000d376:       |     |   0000                  unimp
d000d378:       |     |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:89
      &otbn, kOtbnWideWordNumWords, public_key->n0_inv, kOtbnVarRsaM0Inv));

  // Start the OTBN routine.
  HARDENED_RETURN_IF_ERROR(otbn_execute_app(&otbn));
d000d37a:       |     \-> 0808                  addi    a0,sp,16
d000d37c:       |         22d5                  jal     d000d560 <otbn_execute_app>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000d37e:       |         85aa                  mv      a1,a0
run_otbn_rsa_3072_modexp():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:89
d000d380:       +-------- 06859363              bne     a1,s0,d000d3e6 <run_otbn_rsa_3072_modexp+0x120>
d000d384:       |     /-- 00850663              beq     a0,s0,d000d390 <run_otbn_rsa_3072_modexp+0xca>
d000d388:       |     |   0000                  unimp
d000d38a:       |     |   0000                  unimp
d000d38c:       |     |   0000                  unimp
d000d38e:       |     |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:94

  // Check that the instruction count falls within the expected range. If the
  // instruction count falls outside this range, it indicates that there was a
  // fault injection attack of some kind during OTBN execution.
  uint32_t count = otbn_instruction_count_get();
d000d390:       |     \-> 2621                  jal     d000d698 <otbn_instruction_count_get>
d000d392:       |         85aa                  mv      a1,a0
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000d394:       |         862a                  mv      a2,a0
d000d396:       |         06425537              lui     a0,0x6425
d000d39a:       |         0002c6b7              lui     a3,0x2c
d000d39e:       |         39b68693              addi    a3,a3,923 # 2c39b <_rom_ext_virtual_size+0x2439b>
d000d3a2:       |         e0d50513              addi    a0,a0,-499 # 6424e0d <WDOG_BARK_THOLD+0x63edf25>
run_otbn_rsa_3072_modexp():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:95
  if (launder32(count) < kModExpOtbnInsnCountMin ||
d000d3a6:       +-------- 04d66063              bltu    a2,a3,d000d3e6 <run_otbn_rsa_3072_modexp+0x120>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000d3aa:       |         86ae                  mv      a3,a1
d000d3ac:       |         00030637              lui     a2,0x30
d000d3b0:       |         6fd60613              addi    a2,a2,1789 # 306fd <_rom_ext_virtual_size+0x286fd>
run_otbn_rsa_3072_modexp():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:95
d000d3b4:       +-------- 02d66963              bltu    a2,a3,d000d3e6 <run_otbn_rsa_3072_modexp+0x120>
d000d3b8:       |         0002c537              lui     a0,0x2c
d000d3bc:       |         39b50513              addi    a0,a0,923 # 2c39b <_rom_ext_virtual_size+0x2439b>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:99
      launder32(count) > kModExpOtbnInsnCountMax) {
    return kErrorOtbnBadInsnCount;
  }
  HARDENED_CHECK_GE(count, kModExpOtbnInsnCountMin);
d000d3c0:       |     /-- 00a5f663              bgeu    a1,a0,d000d3cc <run_otbn_rsa_3072_modexp+0x106>
d000d3c4:       |     |   0000                  unimp
d000d3c6:       |     |   0000                  unimp
d000d3c8:       |     |   0000                  unimp
d000d3ca:       |     |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:100
  HARDENED_CHECK_LE(count, kModExpOtbnInsnCountMax);
d000d3cc:       |  /--\-X 00b67663              bgeu    a2,a1,d000d3d8 <run_otbn_rsa_3072_modexp+0x112>
d000d3d0:       |  |      0000                  unimp
d000d3d2:       |  |      0000                  unimp
d000d3d4:       |  |      0000                  unimp
d000d3d6:       |  |      0000                  unimp
read_rsa_3072_int_from_otbn():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:63
  return otbn_copy_data_from_otbn(otbn, kSigVerifyRsaNumWords, src, dst->data);
d000d3d8:       |  \----> 4a000613              li      a2,1184
d000d3dc:       |         0808                  addi    a0,sp,16
d000d3de:       |         06000593              li      a1,96
d000d3e2:       |         86ca                  mv      a3,s2
d000d3e4:       |         22c9                  jal     d000d5a6 <otbn_copy_data_from_otbn>
run_otbn_rsa_3072_modexp():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:105

  // Read recovered message out of OTBN dmem.
  return read_rsa_3072_int_from_otbn(&otbn, kOtbnVarRsaOutBuf,
                                     recovered_message);
}
d000d3e6:       \-------> 5a22                  lw      s4,40(sp)
d000d3e8:                 59b2                  lw      s3,44(sp)
d000d3ea:                 5942                  lw      s2,48(sp)
d000d3ec:                 54d2                  lw      s1,52(sp)
d000d3ee:                 5462                  lw      s0,56(sp)
d000d3f0:                 50f2                  lw      ra,60(sp)
d000d3f2:                 6121                  addi    sp,sp,64
d000d3f4:                 8082                  ret

d000d3f6 <sigverify_mod_exp_otbn>:
sigverify_mod_exp_otbn():
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:109

rom_error_t sigverify_mod_exp_otbn(const sigverify_rsa_key_t *key,
                                   const sigverify_rsa_buffer_t *sig,
                                   sigverify_rsa_buffer_t *result) {
d000d3f6:           1141                        addi    sp,sp,-16
d000d3f8:           c606                        sw      ra,12(sp)
d000d3fa:           c422                        sw      s0,8(sp)
d000d3fc:           c226                        sw      s1,4(sp)
d000d3fe:           c04a                        sw      s2,0(sp)
d000d400:           8932                        mv      s2,a2
d000d402:           84ae                        mv      s1,a1
d000d404:           842a                        mv      s0,a0
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:112
  // Reject the signature if it is too large (n <= sig): RFC 8017, section
  // 5.2.2, step 1.
  if (memrcmp(key->n.data, sig->data, kSigVerifyRsaNumBytes) <= 0) {
d000d406:           18000613            li      a2,384
d000d40a:           47f000ef            jal     ra,d000e088 <memrcmp>
d000d40e:       /-- 00a05b63            blez    a0,d000d424 <sigverify_mod_exp_otbn+0x2e>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:117
    return kErrorSigverifyBadSignature;
  }

  // Run OTBN application.
  return run_otbn_rsa_3072_modexp(key, sig, result);
d000d412:       |   8522                        mv      a0,s0
d000d414:       |   85a6                        mv      a1,s1
d000d416:       |   864a                        mv      a2,s2
d000d418:       |   4902                        lw      s2,0(sp)
d000d41a:       |   4492                        lw      s1,4(sp)
d000d41c:       |   4422                        lw      s0,8(sp)
d000d41e:       |   40b2                        lw      ra,12(sp)
d000d420:       |   0141                        addi    sp,sp,16
d000d422:       |   b555                        j       d000d2c6 <run_otbn_rsa_3072_modexp>
d000d424:       \-> 03535537            lui     a0,0x3535
d000d428:           60350513            addi    a0,a0,1539 # 3535603 <WDOG_BARK_THOLD+0x34fe71b>
/proc/self/cwd/sw/device/silicon_creator/lib/sigverify/mod_exp_otbn.c:118
}
d000d42c:           4902                        lw      s2,0(sp)
d000d42e:           4492                        lw      s1,4(sp)
d000d430:           4422                        lw      s0,8(sp)
d000d432:           40b2                        lw      ra,12(sp)
d000d434:           0141                        addi    sp,sp,16
d000d436:           8082                        ret

d000d438 <otbn_init>:
otbn_init():
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:17
#include "sw/device/silicon_creator/lib/drivers/otbn.h"

#include "hw/top_earlgrey/sw/autogen/top_earlgrey.h"

void otbn_init(otbn_t *ctx) {
  *ctx = (otbn_t){
d000d438:       00052023                sw      zero,0(a0)
d000d43c:       00052223                sw      zero,4(a0)
d000d440:       00052423                sw      zero,8(a0)
d000d444:       00052623                sw      zero,12(a0)
d000d448:       1d400593                li      a1,468
d000d44c:       c90c                    sw      a1,16(a0)
d000d44e:       00052a23                sw      zero,20(a0)
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:22
      .app = {0},
      .app_is_loaded = kHardenedBoolFalse,
      .error_bits = kOtbnErrBitsNoError,
  };
}
d000d452:       8082                    ret

d000d454 <otbn_load_app>:
otbn_load_app():
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:47
    return false;
  }
  return true;
}

rom_error_t otbn_load_app(otbn_t *ctx, const otbn_app_t app) {
d000d454:                    7179                       addi    sp,sp,-48
d000d456:                    d606                       sw      ra,44(sp)
d000d458:                    d422                       sw      s0,40(sp)
d000d45a:                    d226                       sw      s1,36(sp)
d000d45c:                    d04a                       sw      s2,32(sp)
d000d45e:                    ce4e                       sw      s3,28(sp)
d000d460:                    cc52                       sw      s4,24(sp)
d000d462:                    ca56                       sw      s5,20(sp)
d000d464:                    c85a                       sw      s6,16(sp)
d000d466:                    c65e                       sw      s7,12(sp)
d000d468:                    842e                       mv      s0,a1
check_app_address_ranges():
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:37
  if (app->imem_end <= app->imem_start) {
d000d46a:                    41cc                       lw      a1,4(a1)
d000d46c:                    4010                       lw      a2,0(s0)
d000d46e:                    892a                       mv      s2,a0
d000d470:                    01425537           lui     a0,0x1425
d000d474:                    e0350493           addi    s1,a0,-509 # 1424e03 <WDOG_BARK_THOLD+0x13edf1b>
d000d478:       /----------- 0cb67863           bgeu    a2,a1,d000d548 <otbn_load_app+0xf4>
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:41
  if (app->dmem_data_end < app->dmem_data_start) {
d000d47c:       |            4448                       lw      a0,12(s0)
d000d47e:       |            440c                       lw      a1,8(s0)
otbn_load_app():
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:48
  if (!check_app_address_ranges(&app)) {
d000d480:       +----------- 0cb56463           bltu    a0,a1,d000d548 <otbn_load_app+0xf4>
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:53
    return kErrorOtbnInvalidArgument;
  }

  // If OTBN is busy, wait for it to be done.
  HARDENED_RETURN_IF_ERROR(otbn_busy_wait_for_done());
d000d484:       |            222d                       jal     d000d5ae <otbn_busy_wait_for_done>
d000d486:       |            84aa                       mv      s1,a0
d000d488:       |            73900a93           li      s5,1849
d000d48c:       +----------- 0b551e63           bne     a0,s5,d000d548 <otbn_load_app+0xf4>
d000d490:       |        /-- 01548663           beq     s1,s5,d000d49c <otbn_load_app+0x48>
d000d494:       |        |   0000                       unimp
d000d496:       |        |   0000                       unimp
d000d498:       |        |   0000                       unimp
d000d49a:       |        |   0000                       unimp
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:55

  const size_t imem_num_words = app.imem_end - app.imem_start;
d000d49c:       |        \-> 00442b03           lw      s6,4(s0)
d000d4a0:       |            00042b83           lw      s7,0(s0)
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:56
  const size_t data_num_words = app.dmem_data_end - app.dmem_data_start;
d000d4a4:       |            00c42983           lw      s3,12(s0)
d000d4a8:       |            00842a03           lw      s4,8(s0)
d000d4ac:       |            1d400513           li      a0,468
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:58

  ctx->app_is_loaded = kHardenedBoolFalse;
d000d4b0:       |            00a92823           sw      a0,16(s2)
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:60

  HARDENED_RETURN_IF_ERROR(otbn_imem_sec_wipe());
d000d4b4:       |            22f5                       jal     d000d6a0 <otbn_imem_sec_wipe>
d000d4b6:       |            84aa                       mv      s1,a0
d000d4b8:       +----------- 09551863           bne     a0,s5,d000d548 <otbn_load_app+0xf4>
d000d4bc:       |            73900a93           li      s5,1849
d000d4c0:       |        /-- 01548663           beq     s1,s5,d000d4cc <otbn_load_app+0x78>
d000d4c4:       |        |   0000                       unimp
d000d4c6:       |        |   0000                       unimp
d000d4c8:       |        |   0000                       unimp
d000d4ca:       |        |   0000                       unimp
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:61
  HARDENED_RETURN_IF_ERROR(otbn_imem_write(0, app.imem_start, imem_num_words));
d000d4cc:       |        \-> 400c                       lw      a1,0(s0)
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:55
  const size_t imem_num_words = app.imem_end - app.imem_start;
d000d4ce:       |            417b0533           sub     a0,s6,s7
d000d4d2:       |            40255613           srai    a2,a0,0x2
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:61
  HARDENED_RETURN_IF_ERROR(otbn_imem_write(0, app.imem_start, imem_num_words));
d000d4d6:       |            4501                       li      a0,0
d000d4d8:       |            2ad1                       jal     d000d6ac <otbn_imem_write>
d000d4da:       |            84aa                       mv      s1,a0
d000d4dc:       +----------- 07551663           bne     a0,s5,d000d548 <otbn_load_app+0xf4>
d000d4e0:       |        /-- 01548663           beq     s1,s5,d000d4ec <otbn_load_app+0x98>
d000d4e4:       |        |   0000                       unimp
d000d4e6:       |        |   0000                       unimp
d000d4e8:       |        |   0000                       unimp
d000d4ea:       |        |   0000                       unimp
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:63

  HARDENED_RETURN_IF_ERROR(otbn_dmem_sec_wipe());
d000d4ec:       |        \-> 2cbd                       jal     d000d76a <otbn_dmem_sec_wipe>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000d4ee:       |            85aa                       mv      a1,a0
otbn_load_app():
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:63
d000d4f0:       |  /-------- 05559b63           bne     a1,s5,d000d546 <otbn_load_app+0xf2>
d000d4f4:       |  |         41498633           sub     a2,s3,s4
d000d4f8:       |  |         73900493           li      s1,1849
d000d4fc:       |  |     /-- 00950663           beq     a0,s1,d000d508 <otbn_load_app+0xb4>
d000d500:       |  |     |   0000                       unimp
d000d502:       |  |     |   0000                       unimp
d000d504:       |  |     |   0000                       unimp
d000d506:       |  |     |   0000                       unimp
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:64
  if (data_num_words > 0) {
d000d508:       |  |  /--\-X c205                       beqz    a2,d000d528 <otbn_load_app+0xd4>
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:65
    HARDENED_RETURN_IF_ERROR(
d000d50a:       |  |  |      440c                       lw      a1,8(s0)
d000d50c:       |  |  |      8609                       srai    a2,a2,0x2
d000d50e:       |  |  |      4501                       li      a0,0
d000d510:       |  |  |      24a5                       jal     d000d778 <otbn_dmem_write>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000d512:       |  |  |      85aa                       mv      a1,a0
otbn_load_app():
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:65
d000d514:       |  +--|----- 02959963           bne     a1,s1,d000d546 <otbn_load_app+0xf2>
d000d518:       |  |  |      73900593           li      a1,1849
d000d51c:       |  |  +----- 00b50663           beq     a0,a1,d000d528 <otbn_load_app+0xd4>
d000d520:       |  |  |      0000                       unimp
d000d522:       |  |  |      0000                       unimp
d000d524:       |  |  |      0000                       unimp
d000d526:       |  |  |      0000                       unimp
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:69
        otbn_dmem_write(0, app.dmem_data_start, data_num_words));
  }

  ctx->app = app;
d000d528:       |  |  \----> 4448                       lw      a0,12(s0)
d000d52a:       |  |         00a92623           sw      a0,12(s2)
d000d52e:       |  |         4408                       lw      a0,8(s0)
d000d530:       |  |         00a92423           sw      a0,8(s2)
d000d534:       |  |         4048                       lw      a0,4(s0)
d000d536:       |  |         00a92223           sw      a0,4(s2)
d000d53a:       |  |         4008                       lw      a0,0(s0)
d000d53c:       |  |         00a92023           sw      a0,0(s2)
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:70
  ctx->app_is_loaded = kHardenedBoolTrue;
d000d540:       |  |         00992823           sw      s1,16(s2)
d000d544:       +--|-------- a011                       j       d000d548 <otbn_load_app+0xf4>
d000d546:       |  \-------> 84aa                       mv      s1,a0
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:72
  return kErrorOk;
}
d000d548:       \----------> 8526                       mv      a0,s1
d000d54a:                    4bb2                       lw      s7,12(sp)
d000d54c:                    4b42                       lw      s6,16(sp)
d000d54e:                    4ad2                       lw      s5,20(sp)
d000d550:                    4a62                       lw      s4,24(sp)
d000d552:                    49f2                       lw      s3,28(sp)
d000d554:                    5902                       lw      s2,32(sp)
d000d556:                    5492                       lw      s1,36(sp)
d000d558:                    5422                       lw      s0,40(sp)
d000d55a:                    50b2                       lw      ra,44(sp)
d000d55c:                    6145                       addi    sp,sp,48
d000d55e:                    8082                       ret

d000d560 <otbn_execute_app>:
otbn_execute_app():
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:74

rom_error_t otbn_execute_app(otbn_t *ctx) {
d000d560:              1141                     addi    sp,sp,-16
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:75
  if (launder32(ctx->app_is_loaded) != kHardenedBoolTrue) {
d000d562:              c606                     sw      ra,12(sp)
d000d564:              4910                     lw      a2,16(a0)
d000d566:              73900593                 li      a1,1849
d000d56a:       /----- 02b61263                 bne     a2,a1,d000d58e <otbn_execute_app+0x2e>
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:78
    return kErrorOtbnInvalidArgument;
  }
  HARDENED_CHECK_EQ(ctx->app_is_loaded, kHardenedBoolTrue);
d000d56e:       |      4908                     lw      a0,16(a0)
d000d570:       |  /-- 00b50663                 beq     a0,a1,d000d57c <otbn_execute_app+0x1c>
d000d574:       |  |   0000                     unimp
d000d576:       |  |   0000                     unimp
d000d578:       |  |   0000                     unimp
d000d57a:       |  |   0000                     unimp
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:80

  rom_error_t err = otbn_execute();
d000d57c:       |  \-> 2051                     jal     d000d600 <otbn_execute>
d000d57e:       |      0fff3597                 auipc   a1,0xfff3
d000d582:       |      af658593                 addi    a1,a1,-1290 # e0000074 <sec_mmio_ctx>
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:81
  SEC_MMIO_WRITE_INCREMENT(kOtbnSecMmioExecute);
d000d586:       |      4590                     lw      a2,8(a1)
d000d588:       |      0605                     addi    a2,a2,1
d000d58a:       |      c590                     sw      a2,8(a1)
d000d58c:       |  /-- a029                     j       d000d596 <otbn_execute_app+0x36>
d000d58e:       \--|-> 01425537                 lui     a0,0x1425
d000d592:          |   e0350513                 addi    a0,a0,-509 # 1424e03 <WDOG_BARK_THOLD+0x13edf1b>
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:83
  return err;
}
d000d596:          \-> 40b2                     lw      ra,12(sp)
d000d598:              0141                     addi    sp,sp,16
d000d59a:              8082                     ret

d000d59c <otbn_copy_data_to_otbn>:
otbn_copy_data_to_otbn():
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:86

rom_error_t otbn_copy_data_to_otbn(otbn_t *ctx, size_t len, const uint32_t *src,
                                   otbn_addr_t dest) {
d000d59c:       8536                    mv      a0,a3
d000d59e:       86ae                    mv      a3,a1
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:87
  return otbn_dmem_write(dest, src, len);
d000d5a0:       85b2                    mv      a1,a2
d000d5a2:       8636                    mv      a2,a3
d000d5a4:       aad1                    j       d000d778 <otbn_dmem_write>

d000d5a6 <otbn_copy_data_from_otbn>:
otbn_copy_data_from_otbn():
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:91
}

rom_error_t otbn_copy_data_from_otbn(otbn_t *ctx, size_t len_bytes,
                                     otbn_addr_t src, uint32_t *dest) {
d000d5a6:       8532                    mv      a0,a2
d000d5a8:       862e                    mv      a2,a1
/proc/self/cwd/sw/device/silicon_creator/lib/otbn_util.c:92
  return otbn_dmem_read(src, dest, len_bytes);
d000d5aa:       85b6                    mv      a1,a3
d000d5ac:       a41d                    j       d000d7d2 <otbn_dmem_read>

d000d5ae <otbn_busy_wait_for_done>:
otbn_busy_wait_for_done():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:62
    return kErrorOtbnBadOffsetLen;
  }
  return kErrorOk;
}

rom_error_t otbn_busy_wait_for_done(void) {
d000d5ae:              557d                     li      a0,-1
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:64
  uint32_t status = launder32(UINT32_MAX);
  rom_error_t res = launder32(kErrorOk ^ status);
d000d5b0:              73954513                 xori    a0,a0,1849
d000d5b4:              c11305b7                 lui     a1,0xc1130
d000d5b8:              0ff00613                 li      a2,255
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000d5bc:          /-> 4d94                     lw      a3,24(a1)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000d5be:          |   8736                     mv      a4,a3
otbn_busy_wait_for_done():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:67
  do {
    status = abs_mmio_read32(kBase + OTBN_STATUS_REG_OFFSET);
  } while (launder32(status) != kOtbnStatusIdle &&
d000d5c0:       /--|-- c701                     beqz    a4,d000d5c8 <otbn_busy_wait_for_done+0x1a>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000d5c2:       |  |   8736                     mv      a4,a3
otbn_busy_wait_for_done():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:67
d000d5c4:       |  \-- fec71ce3                 bne     a4,a2,d000d5bc <otbn_busy_wait_for_done+0xe>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:69
           launder32(status) != kOtbnStatusLocked);
  res ^= ~status;
d000d5c8:       \----> 8d35                     xor     a0,a0,a3
d000d5ca:              fff54513                 not     a0,a0
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000d5ce:              862a                     mv      a2,a0
d000d5d0:              73900593                 li      a1,1849
otbn_busy_wait_for_done():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:70
  if (launder32(res) == kErrorOk) {
d000d5d4:       /----- 02b61163                 bne     a2,a1,d000d5f6 <otbn_busy_wait_for_done+0x48>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:71
    HARDENED_CHECK_EQ(res, kErrorOk);
d000d5d8:       |  /-- 00b50663                 beq     a0,a1,d000d5e4 <otbn_busy_wait_for_done+0x36>
d000d5dc:       |  |   0000                     unimp
d000d5de:       |  |   0000                     unimp
d000d5e0:       |  |   0000                     unimp
d000d5e2:       |  |   0000                     unimp
d000d5e4:       |  \-> c11305b7                 lui     a1,0xc1130
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000d5e8:       |      4d8c                     lw      a1,24(a1)
otbn_busy_wait_for_done():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:72
    HARDENED_CHECK_EQ(abs_mmio_read32(kBase + OTBN_STATUS_REG_OFFSET),
d000d5ea:       |  /-- c589                     beqz    a1,d000d5f4 <otbn_busy_wait_for_done+0x46>
d000d5ec:       |  |   0000                     unimp
d000d5ee:       |  |   0000                     unimp
d000d5f0:       |  |   0000                     unimp
d000d5f2:       |  |   0000                     unimp
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:77
                      kOtbnStatusIdle);
    return res;
  }
  return kErrorOtbnUnavailable;
}
d000d5f4:       |  \-> 8082                     ret
d000d5f6:       \----> 07425537                 lui     a0,0x7425
d000d5fa:              e0d50513                 addi    a0,a0,-499 # 7424e0d <WDOG_BARK_THOLD+0x73edf25>
d000d5fe:              8082                     ret

d000d600 <otbn_execute>:
otbn_execute():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:151
    return res;
  }
  return error;
}

rom_error_t otbn_execute(void) {
d000d600:       1141                    addi    sp,sp,-16
d000d602:       c606                    sw      ra,12(sp)
d000d604:       c1130537                lui     a0,0xc1130
d000d608:       0551                    addi    a0,a0,20
otbn_set_ctrl_software_errs_fatal():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:221
    new_ctrl = 1;
  } else {
    new_ctrl = 0;
  }

  sec_mmio_write32(kBase + OTBN_CTRL_REG_OFFSET, new_ctrl);
d000d60a:       4585                    li      a1,1
d000d60c:       03d000ef                jal     ra,d000de48 <sec_mmio_write32>
d000d610:       03425537                lui     a0,0x3425
d000d614:       e0d50593                addi    a1,a0,-499 # 3424e0d <WDOG_BARK_THOLD+0x33edf25>
otbn_execute():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:153
  return otbn_cmd_run(kOtbnCmdExecute, kErrorOtbnExecutionFailed);
d000d618:       0d800513                li      a0,216
d000d61c:       40b2                    lw      ra,12(sp)
d000d61e:       0141                    addi    sp,sp,16
d000d620:       a009                    j       d000d622 <otbn_cmd_run>

d000d622 <otbn_cmd_run>:
otbn_cmd_run():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:112
static rom_error_t otbn_cmd_run(otbn_cmd_t cmd, rom_error_t error) {
d000d622:              882e                     mv      a6,a1
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000d624:              4701                     li      a4,0
d000d626:              c1130637                 lui     a2,0xc1130
d000d62a:              4685                     li      a3,1
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000d62c:              c214                     sw      a3,0(a2)
d000d62e:              ca08                     sw      a0,16(a2)
d000d630:              80000537                 lui     a0,0x80000
otbn_cmd_run():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:126
  while (launder32(reg) != kIntrStateDone) {
d000d634:          /-- 00d71663                 bne     a4,a3,d000d640 <otbn_cmd_run+0x1e>
d000d638:          |   4581                     li      a1,0
d000d63a:          |   73950513                 addi    a0,a0,1849 # 80000739 <_stack_end+0x9ffe0739>
d000d63e:       /--|-- a811                     j       d000d652 <otbn_cmd_run+0x30>
d000d640:       |  \-> 73950513                 addi    a0,a0,1849
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000d644:       |  /-> 420c                     lw      a1,0(a2)
otbn_cmd_run():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:128
    res ^= bitfield_bit32_read(reg, OTBN_INTR_COMMON_DONE_BIT) << kResDoneBit;
d000d646:       |  |   01f59793                 slli    a5,a1,0x1f
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000d64a:       |  |   872e                     mv      a4,a1
otbn_cmd_run():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:128
d000d64c:       |  |   8d3d                     xor     a0,a0,a5
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:126
  while (launder32(reg) != kIntrStateDone) {
d000d64e:       |  \-- fed71be3                 bne     a4,a3,d000d644 <otbn_cmd_run+0x22>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:130
  HARDENED_CHECK_EQ(reg, kIntrStateDone);
d000d652:       \--/-X 00d58663                 beq     a1,a3,d000d65e <otbn_cmd_run+0x3c>
d000d656:          |   0000                     unimp
d000d658:          |   0000                     unimp
d000d65a:          |   0000                     unimp
d000d65c:          |   0000                     unimp
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000d65e:          \-> c214                     sw      a3,0(a2)
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000d660:              4e4c                     lw      a1,28(a2)
otbn_cmd_run():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:135
  res ^= err_bits;
d000d662:              8d2d                     xor     a0,a0,a1
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000d664:              4e10                     lw      a2,24(a2)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000d666:              85aa                     mv      a1,a0
d000d668:              73900693                 li      a3,1849
otbn_cmd_run():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:142
  if (launder32(res) == kErrorOk && launder32(status) == kOtbnStatusIdle) {
d000d66c:       /----- 02d59463                 bne     a1,a3,d000d694 <otbn_cmd_run+0x72>
d000d670:       +----- e215                     bnez    a2,d000d694 <otbn_cmd_run+0x72>
d000d672:       |      73900593                 li      a1,1849
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:143
    HARDENED_CHECK_EQ(res, kErrorOk);
d000d676:       |  /-- 00b50663                 beq     a0,a1,d000d682 <otbn_cmd_run+0x60>
d000d67a:       |  |   0000                     unimp
d000d67c:       |  |   0000                     unimp
d000d67e:       |  |   0000                     unimp
d000d680:       |  |   0000                     unimp
d000d682:       |  \-> c11305b7                 lui     a1,0xc1130
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000d686:       |      4d8c                     lw      a1,24(a1)
otbn_cmd_run():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:144
    HARDENED_CHECK_EQ(abs_mmio_read32(kBase + OTBN_STATUS_REG_OFFSET),
d000d688:       |  /-- c589                     beqz    a1,d000d692 <otbn_cmd_run+0x70>
d000d68a:       |  |   0000                     unimp
d000d68c:       |  |   0000                     unimp
d000d68e:       |  |   0000                     unimp
d000d690:       |  |   0000                     unimp
d000d692:       |  \-> 882a                     mv      a6,a0
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:149
}
d000d694:       \----> 8542                     mv      a0,a6
d000d696:              8082                     ret

d000d698 <otbn_instruction_count_get>:
otbn_instruction_count_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:160
uint32_t otbn_instruction_count_get(void) {
d000d698:       c1130537                lui     a0,0xc1130
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000d69c:       5148                    lw      a0,36(a0)
otbn_instruction_count_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:161
  return abs_mmio_read32(kBase + OTBN_INSN_CNT_REG_OFFSET);
d000d69e:       8082                    ret

d000d6a0 <otbn_imem_sec_wipe>:
otbn_imem_sec_wipe():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:164
rom_error_t otbn_imem_sec_wipe(void) {
d000d6a0:       04425537                lui     a0,0x4425
d000d6a4:       e0d50593                addi    a1,a0,-499 # 4424e0d <WDOG_BARK_THOLD+0x43edf25>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:165
  return otbn_cmd_run(kOtbnCmdSecWipeImem, kErrorOtbnSecWipeImemFailed);
d000d6a8:       4579                    li      a0,30
d000d6aa:       bfa5                    j       d000d622 <otbn_cmd_run>

d000d6ac <otbn_imem_write>:
otbn_imem_write():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:169
                            size_t num_words) {
d000d6ac:              1141                     addi    sp,sp,-16
check_offset_len():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:54
  if (offset_bytes + num_words * sizeof(uint32_t) <
d000d6ae:              c606                     sw      ra,12(sp)
d000d6b0:              00261693                 slli    a3,a2,0x2
d000d6b4:              00a68733                 add     a4,a3,a0
d000d6b8:              00d736b3                 sltu    a3,a4,a3
d000d6bc:              6785                     lui     a5,0x1
d000d6be:              00e7b733                 sltu    a4,a5,a4
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:55
          num_words * sizeof(uint32_t) ||
d000d6c2:              8ed9                     or      a3,a3,a4
d000d6c4:              73900713                 li      a4,1849
d000d6c8:          /-- e681                     bnez    a3,d000d6d0 <otbn_imem_write+0x24>
d000d6ca:          |   73900693                 li      a3,1849
d000d6ce:       /--|-- a029                     j       d000d6d8 <otbn_imem_write+0x2c>
d000d6d0:       |  \-> 024256b7                 lui     a3,0x2425
d000d6d4:       |      e0368693                 addi    a3,a3,-509 # 2424e03 <WDOG_BARK_THOLD+0x23edf1b>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000d6d8:       \----> 87b6                     mv      a5,a3
otbn_imem_write():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:170
  HARDENED_RETURN_IF_ERROR(
d000d6da:       /----- 02e79063                 bne     a5,a4,d000d6fa <otbn_imem_write+0x4e>
d000d6de:       |      73900713                 li      a4,1849
d000d6e2:       |  /-- 00e68663                 beq     a3,a4,d000d6ee <otbn_imem_write+0x42>
d000d6e6:       |  |   0000                     unimp
d000d6e8:       |  |   0000                     unimp
d000d6ea:       |  |   0000                     unimp
d000d6ec:       |  |   0000                     unimp
d000d6ee:       |  \-> c11346b7                 lui     a3,0xc1134
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:172
  otbn_write(kBase + OTBN_IMEM_REG_OFFSET + offset_bytes, src, num_words);
d000d6f2:       |      9536                     add     a0,a0,a3
d000d6f4:       |      2039                     jal     d000d702 <otbn_write>
d000d6f6:       |      73900693                 li      a3,1849
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:174
}
d000d6fa:       \----> 8536                     mv      a0,a3
d000d6fc:              40b2                     lw      ra,12(sp)
d000d6fe:              0141                     addi    sp,sp,16
d000d700:              8082                     ret

d000d702 <otbn_write>:
otbn_write():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:87
                       size_t num_words) {
d000d702:                 1141                  addi    sp,sp,-16
d000d704:                 c606                  sw      ra,12(sp)
d000d706:                 c422                  sw      s0,8(sp)
d000d708:                 c226                  sw      s1,4(sp)
d000d70a:                 c04a                  sw      s2,0(sp)
d000d70c:                 8432                  mv      s0,a2
d000d70e:                 892e                  mv      s2,a1
d000d710:                 84aa                  mv      s1,a0
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:89
  size_t i = ((uint64_t)rnd_uint32() * (uint64_t)num_words) >> 32;
d000d712:                 2a1d                  jal     d000d848 <rnd_uint32>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000d714:                 4601                  li      a2,0
d000d716:                 4581                  li      a1,0
otbn_write():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:92
  for (; launder32(iter_cnt) < num_words; ++iter_cnt) {
d000d718:       /-------- 02867d63              bgeu    a2,s0,d000d752 <otbn_write+0x50>
d000d71c:       |         4581                  li      a1,0
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:89
  size_t i = ((uint64_t)rnd_uint32() * (uint64_t)num_words) >> 32;
d000d71e:       |         02853533              mulhu   a0,a0,s0
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:93
    abs_mmio_write32(dest_addr + i * sizeof(uint32_t), src[i]);
d000d722:       |  /----> 00251613              slli    a2,a0,0x2
d000d726:       |  |      00c906b3              add     a3,s2,a2
d000d72a:       |  |      4294                  lw      a3,0(a3)
d000d72c:       |  |      9626                  add     a2,a2,s1
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:94
    i += kStep;
d000d72e:       |  |      0505                  addi    a0,a0,1
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000d730:       |  |      c214                  sw      a3,0(a2)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000d732:       |  |      86aa                  mv      a3,a0
d000d734:       |  |      4601                  li      a2,0
otbn_write():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:95
    if (launder32(i) >= num_words) {
d000d736:       |  |  /-- 0086e363              bltu    a3,s0,d000d73c <otbn_write+0x3a>
d000d73a:       |  |  |   8622                  mv      a2,s0
d000d73c:       |  |  \-> 8d11                  sub     a0,a0,a2
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:92
  for (; launder32(iter_cnt) < num_words; ++iter_cnt) {
d000d73e:       |  |      0585                  addi    a1,a1,1
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:98
    HARDENED_CHECK_LT(i, num_words);
d000d740:       |  |  /-- 00856663              bltu    a0,s0,d000d74c <otbn_write+0x4a>
d000d744:       |  |  |   0000                  unimp
d000d746:       |  |  |   0000                  unimp
d000d748:       |  |  |   0000                  unimp
d000d74a:       |  |  |   0000                  unimp
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000d74c:       |  |  \-> 862e                  mv      a2,a1
otbn_write():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:92
  for (; launder32(iter_cnt) < num_words; ++iter_cnt) {
d000d74e:       |  \----- fc866ae3              bltu    a2,s0,d000d722 <otbn_write+0x20>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:100
  HARDENED_CHECK_EQ(iter_cnt, num_words);
d000d752:       \-----/-X 00858663              beq     a1,s0,d000d75e <otbn_write+0x5c>
d000d756:             |   0000                  unimp
d000d758:             |   0000                  unimp
d000d75a:             |   0000                  unimp
d000d75c:             |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:101
}
d000d75e:             \-> 4902                  lw      s2,0(sp)
d000d760:                 4492                  lw      s1,4(sp)
d000d762:                 4422                  lw      s0,8(sp)
d000d764:                 40b2                  lw      ra,12(sp)
d000d766:                 0141                  addi    sp,sp,16
d000d768:                 8082                  ret

d000d76a <otbn_dmem_sec_wipe>:
otbn_dmem_sec_wipe():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:176
rom_error_t otbn_dmem_sec_wipe(void) {
d000d76a:       05425537                lui     a0,0x5425
d000d76e:       e0d50593                addi    a1,a0,-499 # 5424e0d <WDOG_BARK_THOLD+0x53edf25>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:177
  return otbn_cmd_run(kOtbnCmdSecWipeDmem, kErrorOtbnSecWipeDmemFailed);
d000d772:       0c300513                li      a0,195
d000d776:       b575                    j       d000d622 <otbn_cmd_run>

d000d778 <otbn_dmem_write>:
otbn_dmem_write():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:181
                            size_t num_words) {
d000d778:              1141                     addi    sp,sp,-16
check_offset_len():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:54
  if (offset_bytes + num_words * sizeof(uint32_t) <
d000d77a:              c606                     sw      ra,12(sp)
d000d77c:              00261693                 slli    a3,a2,0x2
d000d780:              00a68733                 add     a4,a3,a0
d000d784:              00d736b3                 sltu    a3,a4,a3
d000d788:              6785                     lui     a5,0x1
d000d78a:              c0078793                 addi    a5,a5,-1024 # c00 <_epmp_reset_rx_size+0x400>
d000d78e:              00e7b733                 sltu    a4,a5,a4
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:55
          num_words * sizeof(uint32_t) ||
d000d792:              8ed9                     or      a3,a3,a4
d000d794:              73900713                 li      a4,1849
d000d798:          /-- e681                     bnez    a3,d000d7a0 <otbn_dmem_write+0x28>
d000d79a:          |   73900693                 li      a3,1849
d000d79e:       /--|-- a029                     j       d000d7a8 <otbn_dmem_write+0x30>
d000d7a0:       |  \-> 024256b7                 lui     a3,0x2425
d000d7a4:       |      e0368693                 addi    a3,a3,-509 # 2424e03 <WDOG_BARK_THOLD+0x23edf1b>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000d7a8:       \----> 87b6                     mv      a5,a3
otbn_dmem_write():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:182
  HARDENED_RETURN_IF_ERROR(
d000d7aa:       /----- 02e79063                 bne     a5,a4,d000d7ca <otbn_dmem_write+0x52>
d000d7ae:       |      73900713                 li      a4,1849
d000d7b2:       |  /-- 00e68663                 beq     a3,a4,d000d7be <otbn_dmem_write+0x46>
d000d7b6:       |  |   0000                     unimp
d000d7b8:       |  |   0000                     unimp
d000d7ba:       |  |   0000                     unimp
d000d7bc:       |  |   0000                     unimp
d000d7be:       |  \-> c11386b7                 lui     a3,0xc1138
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:184
  otbn_write(kBase + OTBN_DMEM_REG_OFFSET + offset_bytes, src, num_words);
d000d7c2:       |      9536                     add     a0,a0,a3
d000d7c4:       |      3f3d                     jal     d000d702 <otbn_write>
d000d7c6:       |      73900693                 li      a3,1849
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:186
}
d000d7ca:       \----> 8536                     mv      a0,a3
d000d7cc:              40b2                     lw      ra,12(sp)
d000d7ce:              0141                     addi    sp,sp,16
d000d7d0:              8082                     ret

d000d7d2 <otbn_dmem_read>:
check_offset_len():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:54
  if (offset_bytes + num_words * sizeof(uint32_t) <
d000d7d2:                    00261693           slli    a3,a2,0x2
d000d7d6:                    00a68733           add     a4,a3,a0
d000d7da:                    00d736b3           sltu    a3,a4,a3
d000d7de:                    6785                       lui     a5,0x1
d000d7e0:                    c0078793           addi    a5,a5,-1024 # c00 <_epmp_reset_rx_size+0x400>
d000d7e4:                    00e7b733           sltu    a4,a5,a4
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:55
          num_words * sizeof(uint32_t) ||
d000d7e8:                    8f55                       or      a4,a4,a3
d000d7ea:                    73900693           li      a3,1849
d000d7ee:                /-- e701                       bnez    a4,d000d7f6 <otbn_dmem_read+0x24>
d000d7f0:                |   73900713           li      a4,1849
d000d7f4:             /--|-- a029                       j       d000d7fe <otbn_dmem_read+0x2c>
d000d7f6:             |  \-> 02425737           lui     a4,0x2425
d000d7fa:             |      e0370713           addi    a4,a4,-509 # 2424e03 <WDOG_BARK_THOLD+0x23edf1b>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000d7fe:             \----> 87ba                       mv      a5,a4
otbn_dmem_read():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:190
  HARDENED_RETURN_IF_ERROR(
d000d800:       /----------- 04d79163           bne     a5,a3,d000d842 <otbn_dmem_read+0x70>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000d804:       |            4781                       li      a5,0
d000d806:       |            73900693           li      a3,1849
otbn_dmem_read():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:190
d000d80a:       |        /-- 00d70663           beq     a4,a3,d000d816 <otbn_dmem_read+0x44>
d000d80e:       |        |   0000                       unimp
d000d810:       |        |   0000                       unimp
d000d812:       |        |   0000                       unimp
d000d814:       |        |   0000                       unimp
d000d816:       |        \-> 4701                       li      a4,0
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:194
  for (; launder32(i) < num_words; ++i) {
d000d818:       |  /-------- 00c7fe63           bgeu    a5,a2,d000d834 <otbn_dmem_read+0x62>
d000d81c:       |  |         4701                       li      a4,0
d000d81e:       |  |         c11387b7           lui     a5,0xc1138
d000d822:       |  |         953e                       add     a0,a0,a5
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000d824:       |  |     /-> 411c                       lw      a5,0(a0)
otbn_dmem_read():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:194
d000d826:       |  |     |   0705                       addi    a4,a4,1
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:195
    dest[i] = abs_mmio_read32(kBase + OTBN_DMEM_REG_OFFSET + offset_bytes +
d000d828:       |  |     |   c19c                       sw      a5,0(a1)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000d82a:       |  |     |   87ba                       mv      a5,a4
otbn_dmem_read():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:194
  for (; launder32(i) < num_words; ++i) {
d000d82c:       |  |     |   0511                       addi    a0,a0,4
d000d82e:       |  |     |   0591                       addi    a1,a1,4
d000d830:       |  |     \-- fec7eae3           bltu    a5,a2,d000d824 <otbn_dmem_read+0x52>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:198
  HARDENED_CHECK_EQ(i, num_words);
d000d834:       |  \--/----X 00c70663           beq     a4,a2,d000d840 <otbn_dmem_read+0x6e>
d000d838:       |     |      0000                       unimp
d000d83a:       |     |      0000                       unimp
d000d83c:       |     |      0000                       unimp
d000d83e:       |     |      0000                       unimp
d000d840:       |     \--/-X a011                       j       d000d844 <otbn_dmem_read+0x72>
d000d842:       \--------|-> 86ba                       mv      a3,a4
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otbn.c:201
}
d000d844:                \-> 8536                       mv      a0,a3
d000d846:                    8082                       ret

d000d848 <rnd_uint32>:
rnd_uint32():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/rnd.c:20

enum {
  kBase = TOP_EARLGREY_RV_CORE_IBEX_CFG_BASE_ADDR,
};

uint32_t rnd_uint32(void) {
d000d848:              1141                     addi    sp,sp,-16
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/rnd.c:21
  if (otp_read32(OTP_CTRL_PARAM_CREATOR_SW_CFG_RNG_EN_OFFSET) ==
d000d84a:              c606                     sw      ra,12(sp)
d000d84c:              0f800513                 li      a0,248
d000d850:              21cd                     jal     d000dd32 <otp_read32>
d000d852:              73900593                 li      a1,1849
d000d856:       /----- 00b51663                 bne     a0,a1,d000d862 <rnd_uint32+0x1a>
d000d85a:       |      c11f0537                 lui     a0,0xc11f0
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000d85e:       |  /-> 4d6c                     lw      a1,92(a0)
rnd_uint32():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/rnd.c:24
      kHardenedBoolTrue) {
    // When bit-0 is clear an EDN request for new data for RND_DATA is pending.
    while (!abs_mmio_read32(kBase + RV_CORE_IBEX_RND_STATUS_REG_OFFSET)) {
d000d860:       |  \-- ddfd                     beqz    a1,d000d85e <rnd_uint32+0x16>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/rnd.c:28
    }
  }
  uint32_t mcycle;
  CSR_READ(CSR_REG_MCYCLE, &mcycle);
d000d862:       \----> b0002573                 csrr    a0,mcycle
d000d866:              c11f05b7                 lui     a1,0xc11f0
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000d86a:              4dac                     lw      a1,88(a1)
rnd_uint32():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/rnd.c:29
  return mcycle + abs_mmio_read32(kBase + RV_CORE_IBEX_RND_DATA_REG_OFFSET);
d000d86c:              952e                     add     a0,a0,a1
d000d86e:              40b2                     lw      ra,12(sp)
d000d870:              0141                     addi    sp,sp,16
d000d872:              8082                     ret

d000d874 <epmp_state_check>:
epmp_state_check():
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:40
    else                      \
       *fail=0x1;             \
} while (false)
    
  // Check address registers.
  CHECK_CSR(CSR_REG_PMPADDR0, s->pmpaddr[0]);   //ok
d000d874:              3b002673                 csrr    a2,pmpaddr0
d000d878:              0fff2597                 auipc   a1,0xfff2
d000d87c:              7a858593                 addi    a1,a1,1960 # e0000020 <epmp_state>
d000d880:              4994                     lw      a3,16(a1)
d000d882:              4505                     li      a0,1
d000d884:          /-- 00d60663                 beq     a2,a3,d000d890 <epmp_state_check+0x1c>
d000d888:          |   4501                     li      a0,0
d000d88a:          |   4605                     li      a2,1
d000d88c:          |   fec02fa3                 sw      a2,-1(zero)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:41
  CHECK_CSR(CSR_REG_PMPADDR1, s->pmpaddr[1]);
d000d890:          \-> 3b102673                 csrr    a2,pmpaddr1
d000d894:              49d4                     lw      a3,20(a1)
d000d896:          /-- 00d61463                 bne     a2,a3,d000d89e <epmp_state_check+0x2a>
d000d89a:          |   0505                     addi    a0,a0,1
d000d89c:       /--|-- a021                     j       d000d8a4 <epmp_state_check+0x30>
d000d89e:       |  \-> 567d                     li      a2,-1
d000d8a0:       |      4685                     li      a3,1
d000d8a2:       |      c214                     sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:42
  CHECK_CSR(CSR_REG_PMPADDR2, s->pmpaddr[2]);
d000d8a4:       \----> 3b202673                 csrr    a2,pmpaddr2
d000d8a8:              4d94                     lw      a3,24(a1)
d000d8aa:          /-- 00d61463                 bne     a2,a3,d000d8b2 <epmp_state_check+0x3e>
d000d8ae:          |   0505                     addi    a0,a0,1
d000d8b0:       /--|-- a021                     j       d000d8b8 <epmp_state_check+0x44>
d000d8b2:       |  \-> 567d                     li      a2,-1
d000d8b4:       |      4685                     li      a3,1
d000d8b6:       |      c214                     sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:43
  CHECK_CSR(CSR_REG_PMPADDR3, s->pmpaddr[3]);
d000d8b8:       \----> 3b302673                 csrr    a2,pmpaddr3
d000d8bc:              4dd4                     lw      a3,28(a1)
d000d8be:          /-- 00d61463                 bne     a2,a3,d000d8c6 <epmp_state_check+0x52>
d000d8c2:          |   0505                     addi    a0,a0,1
d000d8c4:       /--|-- a021                     j       d000d8cc <epmp_state_check+0x58>
d000d8c6:       |  \-> 567d                     li      a2,-1
d000d8c8:       |      4685                     li      a3,1
d000d8ca:       |      c214                     sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:44
  CHECK_CSR(CSR_REG_PMPADDR4, s->pmpaddr[4]);
d000d8cc:       \----> 3b402673                 csrr    a2,pmpaddr4
d000d8d0:              5194                     lw      a3,32(a1)
d000d8d2:          /-- 00d61463                 bne     a2,a3,d000d8da <epmp_state_check+0x66>
d000d8d6:          |   0505                     addi    a0,a0,1
d000d8d8:       /--|-- a021                     j       d000d8e0 <epmp_state_check+0x6c>
d000d8da:       |  \-> 567d                     li      a2,-1
d000d8dc:       |      4685                     li      a3,1
d000d8de:       |      c214                     sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:45
  CHECK_CSR(CSR_REG_PMPADDR5, s->pmpaddr[5]);
d000d8e0:       \----> 3b502673                 csrr    a2,pmpaddr5
d000d8e4:              51d4                     lw      a3,36(a1)
d000d8e6:          /-- 00d61463                 bne     a2,a3,d000d8ee <epmp_state_check+0x7a>
d000d8ea:          |   0505                     addi    a0,a0,1
d000d8ec:       /--|-- a021                     j       d000d8f4 <epmp_state_check+0x80>
d000d8ee:       |  \-> 567d                     li      a2,-1
d000d8f0:       |      4685                     li      a3,1
d000d8f2:       |      c214                     sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:46
  CHECK_CSR(CSR_REG_PMPADDR6, s->pmpaddr[6]);
d000d8f4:       \----> 3b602673                 csrr    a2,pmpaddr6
d000d8f8:              5594                     lw      a3,40(a1)
d000d8fa:          /-- 00d61463                 bne     a2,a3,d000d902 <epmp_state_check+0x8e>
d000d8fe:          |   0505                     addi    a0,a0,1
d000d900:       /--|-- a021                     j       d000d908 <epmp_state_check+0x94>
d000d902:       |  \-> 567d                     li      a2,-1
d000d904:       |      4685                     li      a3,1
d000d906:       |      c214                     sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:47
  CHECK_CSR(CSR_REG_PMPADDR7, s->pmpaddr[7]);
d000d908:       \----> 3b702673                 csrr    a2,pmpaddr7
d000d90c:              55d4                     lw      a3,44(a1)
d000d90e:          /-- 00d61463                 bne     a2,a3,d000d916 <epmp_state_check+0xa2>
d000d912:          |   0505                     addi    a0,a0,1
d000d914:       /--|-- a021                     j       d000d91c <epmp_state_check+0xa8>
d000d916:       |  \-> 567d                     li      a2,-1
d000d918:       |      4685                     li      a3,1
d000d91a:       |      c214                     sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:48
  CHECK_CSR(CSR_REG_PMPADDR8, s->pmpaddr[8]);
d000d91c:       \----> 3b802673                 csrr    a2,pmpaddr8
d000d920:              5994                     lw      a3,48(a1)
d000d922:          /-- 00d61463                 bne     a2,a3,d000d92a <epmp_state_check+0xb6>
d000d926:          |   0505                     addi    a0,a0,1
d000d928:       /--|-- a021                     j       d000d930 <epmp_state_check+0xbc>
d000d92a:       |  \-> 567d                     li      a2,-1
d000d92c:       |      4685                     li      a3,1
d000d92e:       |      c214                     sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:49
  CHECK_CSR(CSR_REG_PMPADDR9, s->pmpaddr[9]);
d000d930:       \----> 3b902673                 csrr    a2,pmpaddr9
d000d934:              59d4                     lw      a3,52(a1)
d000d936:          /-- 00d61463                 bne     a2,a3,d000d93e <epmp_state_check+0xca>
d000d93a:          |   0505                     addi    a0,a0,1
d000d93c:       /--|-- a021                     j       d000d944 <epmp_state_check+0xd0>
d000d93e:       |  \-> 567d                     li      a2,-1
d000d940:       |      4685                     li      a3,1
d000d942:       |      c214                     sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:50
  CHECK_CSR(CSR_REG_PMPADDR10, s->pmpaddr[10]);
d000d944:       \----> 3ba02673                 csrr    a2,pmpaddr10
d000d948:              5d94                     lw      a3,56(a1)
d000d94a:          /-- 00d61463                 bne     a2,a3,d000d952 <epmp_state_check+0xde>
d000d94e:          |   0505                     addi    a0,a0,1
d000d950:       /--|-- a021                     j       d000d958 <epmp_state_check+0xe4>
d000d952:       |  \-> 567d                     li      a2,-1
d000d954:       |      4685                     li      a3,1
d000d956:       |      c214                     sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:51
  CHECK_CSR(CSR_REG_PMPADDR11, s->pmpaddr[11]);
d000d958:       \----> 3bb02673                 csrr    a2,pmpaddr11
d000d95c:              5dd4                     lw      a3,60(a1)
d000d95e:          /-- 00d61463                 bne     a2,a3,d000d966 <epmp_state_check+0xf2>
d000d962:          |   0505                     addi    a0,a0,1
d000d964:       /--|-- a021                     j       d000d96c <epmp_state_check+0xf8>
d000d966:       |  \-> 567d                     li      a2,-1
d000d968:       |      4685                     li      a3,1
d000d96a:       |      c214                     sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:52
  CHECK_CSR(CSR_REG_PMPADDR12, s->pmpaddr[12]);
d000d96c:       \----> 3bc02673                 csrr    a2,pmpaddr12
d000d970:              41b4                     lw      a3,64(a1)
d000d972:          /-- 00d61463                 bne     a2,a3,d000d97a <epmp_state_check+0x106>
d000d976:          |   0505                     addi    a0,a0,1
d000d978:       /--|-- a021                     j       d000d980 <epmp_state_check+0x10c>
d000d97a:       |  \-> 567d                     li      a2,-1
d000d97c:       |      4685                     li      a3,1
d000d97e:       |      c214                     sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:53
  CHECK_CSR(CSR_REG_PMPADDR13, s->pmpaddr[13]);
d000d980:       \----> 3bd02673                 csrr    a2,pmpaddr13
d000d984:              41f4                     lw      a3,68(a1)
d000d986:          /-- 00d61463                 bne     a2,a3,d000d98e <epmp_state_check+0x11a>
d000d98a:          |   0505                     addi    a0,a0,1
d000d98c:       /--|-- a021                     j       d000d994 <epmp_state_check+0x120>
d000d98e:       |  \-> 567d                     li      a2,-1
d000d990:       |      4685                     li      a3,1
d000d992:       |      c214                     sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:54
  CHECK_CSR(CSR_REG_PMPADDR14, s->pmpaddr[14]);
d000d994:       \----> 3be02673                 csrr    a2,pmpaddr14
d000d998:              45b4                     lw      a3,72(a1)
d000d99a:          /-- 00d61463                 bne     a2,a3,d000d9a2 <epmp_state_check+0x12e>
d000d99e:          |   0505                     addi    a0,a0,1
d000d9a0:       /--|-- a021                     j       d000d9a8 <epmp_state_check+0x134>
d000d9a2:       |  \-> 567d                     li      a2,-1
d000d9a4:       |      4685                     li      a3,1
d000d9a6:       |      c214                     sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:55
  CHECK_CSR(CSR_REG_PMPADDR15, s->pmpaddr[15]);
d000d9a8:       \----> 3bf02673                 csrr    a2,pmpaddr15
d000d9ac:              45f4                     lw      a3,76(a1)
d000d9ae:          /-- 00d61463                 bne     a2,a3,d000d9b6 <epmp_state_check+0x142>
d000d9b2:          |   0505                     addi    a0,a0,1
d000d9b4:       /--|-- a021                     j       d000d9bc <epmp_state_check+0x148>
d000d9b6:       |  \-> 567d                     li      a2,-1
d000d9b8:       |      4685                     li      a3,1
d000d9ba:       |      c214                     sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:58

  // Check configuration registers.
  CHECK_CSR(CSR_REG_PMPCFG0, s->pmpcfg[0]);
d000d9bc:       \----> 3a002673                 csrr    a2,pmpcfg0
d000d9c0:              4194                     lw      a3,0(a1)
d000d9c2:          /-- 00d61463                 bne     a2,a3,d000d9ca <epmp_state_check+0x156>
d000d9c6:          |   0505                     addi    a0,a0,1
d000d9c8:       /--|-- a021                     j       d000d9d0 <epmp_state_check+0x15c>
d000d9ca:       |  \-> 567d                     li      a2,-1
d000d9cc:       |      4685                     li      a3,1
d000d9ce:       |      c214                     sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:59
  CHECK_CSR(CSR_REG_PMPCFG1, s->pmpcfg[1]);
d000d9d0:       \----> 3a102673                 csrr    a2,pmpcfg1
d000d9d4:              41d4                     lw      a3,4(a1)
d000d9d6:          /-- 00d61463                 bne     a2,a3,d000d9de <epmp_state_check+0x16a>
d000d9da:          |   0505                     addi    a0,a0,1
d000d9dc:       /--|-- a021                     j       d000d9e4 <epmp_state_check+0x170>
d000d9de:       |  \-> 567d                     li      a2,-1
d000d9e0:       |      4685                     li      a3,1
d000d9e2:       |      c214                     sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:60
  CHECK_CSR(CSR_REG_PMPCFG2, s->pmpcfg[2]);   
d000d9e4:       \----> 3a202673                 csrr    a2,pmpcfg2
d000d9e8:              4594                     lw      a3,8(a1)
d000d9ea:          /-- 00d61463                 bne     a2,a3,d000d9f2 <epmp_state_check+0x17e>
d000d9ee:          |   0505                     addi    a0,a0,1
d000d9f0:       /--|-- a021                     j       d000d9f8 <epmp_state_check+0x184>
d000d9f2:       |  \-> 567d                     li      a2,-1
d000d9f4:       |      4685                     li      a3,1
d000d9f6:       |      c214                     sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:61
  CHECK_CSR(CSR_REG_PMPCFG3, s->pmpcfg[3]);
d000d9f8:       \----> 3a302673                 csrr    a2,pmpcfg3
d000d9fc:              45d4                     lw      a3,12(a1)
d000d9fe:          /-- 00d61463                 bne     a2,a3,d000da06 <epmp_state_check+0x192>
d000da02:          |   0505                     addi    a0,a0,1
d000da04:       /--|-- a021                     j       d000da0c <epmp_state_check+0x198>
d000da06:       |  \-> 567d                     li      a2,-1
d000da08:       |      4685                     li      a3,1
d000da0a:       |      c214                     sw      a3,0(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:65

  // Check Machine Security Configuration (MSECCFG) register.
  // High bits are hardcoded to 0.
  CHECK_CSR(CSR_REG_MSECCFG, s->mseccfg);
d000da0c:       \----> 74702673                 csrr    a2,0x747
d000da10:              49ac                     lw      a1,80(a1)
d000da12:          /-- 00b61463                 bne     a2,a1,d000da1a <epmp_state_check+0x1a6>
d000da16:          |   0505                     addi    a0,a0,1
d000da18:       /--|-- a021                     j       d000da20 <epmp_state_check+0x1ac>
d000da1a:       |  \-> 55fd                     li      a1,-1
d000da1c:       |      4605                     li      a2,1
d000da1e:       |      c190                     sw      a2,0(a1)
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:66
  CHECK_CSR(CSR_REG_MSECCFGH, 0);           //ok
d000da20:       \----> 757025f3                 csrr    a1,0x757
d000da24:       /----- c589                     beqz    a1,d000da2e <epmp_state_check+0x1ba>
d000da26:       |      55fd                     li      a1,-1
d000da28:       |      4605                     li      a2,1
d000da2a:       |      c190                     sw      a2,0(a1)
d000da2c:       |  /-- a011                     j       d000da30 <epmp_state_check+0x1bc>
d000da2e:       \--|-> 0505                     addi    a0,a0,1
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000da30:          \-> 862a                     mv      a2,a0
d000da32:              45d9                     li      a1,22
epmp_state_check():
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:73
#undef CHECK_CSR

  enum { kTotalChecks = 22 }; //should be 22
  // Hamming distance of 3, error = 0x72f, kErrorOk = 0x739.
  rom_error_t error = kErrorOk ^ kTotalChecks;
  if (launder32(checks) == kTotalChecks) {
d000da34:       /----- 02b61363                 bne     a2,a1,d000da5a <epmp_state_check+0x1e6>
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:74
    HARDENED_CHECK_EQ(checks, kTotalChecks);
d000da38:       |  /-- 00b50663                 beq     a0,a1,d000da44 <epmp_state_check+0x1d0>
d000da3c:       |  |   0000                     unimp
d000da3e:       |  |   0000                     unimp
d000da40:       |  |   0000                     unimp
d000da42:       |  |   0000                     unimp
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:75
    error ^= checks;
d000da44:       |  \-> 72f54513                 xori    a0,a0,1839
d000da48:       |      73900593                 li      a1,1849
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:76
    HARDENED_CHECK_EQ(error, kErrorOk);
d000da4c:       |  /-- 00b50663                 beq     a0,a1,d000da58 <epmp_state_check+0x1e4>
d000da50:       |  |   0000                     unimp
d000da52:       |  |   0000                     unimp
d000da54:       |  |   0000                     unimp
d000da56:       |  |   0000                     unimp
/proc/self/cwd/sw/device/silicon_creator/lib/epmp_state.c:80
    return error;
  }
  return kErrorEpmpBadCheck;
}
d000da58:       |  \-> 8082                     ret
d000da5a:       \----> 01455537                 lui     a0,0x1455
d000da5e:              0535                     addi    a0,a0,13
d000da60:              8082                     ret

d000da62 <hmac_sha256_init>:
hmac_sha256_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/hmac.c:16
#include "sw/device/silicon_creator/lib/error.h"

#include "hmac_regs.h"  // Generated.
#include "hw/top_earlgrey/sw/autogen/top_earlgrey.h"

void hmac_sha256_init(void) {
d000da62:       c1110537                lui     a0,0xc1110
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000da66:       00052823                sw      zero,16(a0) # c1110010 <_stack_end+0xe10f0010>
d000da6a:       00052223                sw      zero,4(a0)
d000da6e:       55fd                    li      a1,-1
d000da70:       c10c                    sw      a1,0(a0)
d000da72:       4589                    li      a1,2
d000da74:       c90c                    sw      a1,16(a0)
d000da76:       4585                    li      a1,1
d000da78:       c94c                    sw      a1,20(a0)
hmac_sha256_init():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/hmac.c:36
  abs_mmio_write32(TOP_EARLGREY_HMAC_BASE_ADDR + HMAC_CFG_REG_OFFSET, reg);

  reg = 0;
  reg = bitfield_bit32_write(reg, HMAC_CMD_HASH_START_BIT, true);
  abs_mmio_write32(TOP_EARLGREY_HMAC_BASE_ADDR + HMAC_CMD_REG_OFFSET, reg);
}
d000da7a:       8082                    ret

d000da7c <hmac_sha256_update>:
hmac_sha256_update():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/hmac.c:42

void hmac_sha256_update(const void *data, size_t len) {
  const uint8_t *data_sent = (const uint8_t *)data;

  // Individual byte writes are needed if the buffer isn't word aligned.
  for (; len != 0 && (uintptr_t)data_sent & 3; --len) {
d000da7c:                 00b03633              snez    a2,a1
d000da80:                 00357693              andi    a3,a0,3
d000da84:                 00d036b3              snez    a3,a3
d000da88:                 8e75                  and     a2,a2,a3
d000da8a:          /----- c61d                  beqz    a2,d000dab8 <hmac_sha256_update+0x3c>
d000da8c:          |      00150693              addi    a3,a0,1
d000da90:          |      c1111737              lui     a4,0xc1111
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/hmac.c:44
    abs_mmio_write8(TOP_EARLGREY_HMAC_BASE_ADDR + HMAC_MSG_FIFO_REG_OFFSET,
                    *data_sent++);
d000da94:          |  /-> 00050783              lb      a5,0(a0)
d000da98:          |  |   00150613              addi    a2,a0,1
abs_mmio_write8():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:50
  *((volatile uint8_t *)addr) = value;
d000da9c:          |  |   80f70023              sb      a5,-2048(a4) # c1110800 <_stack_end+0xe10f0800>
hmac_sha256_update():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/hmac.c:42
  for (; len != 0 && (uintptr_t)data_sent & 3; --len) {
d000daa0:          |  |   15fd                  addi    a1,a1,-1
d000daa2:          |  |   00b03533              snez    a0,a1
d000daa6:          |  |   0036f793              andi    a5,a3,3
d000daaa:          |  |   00f037b3              snez    a5,a5
d000daae:          |  |   8fe9                  and     a5,a5,a0
d000dab0:          |  |   0685                  addi    a3,a3,1
d000dab2:          |  |   8532                  mv      a0,a2
d000dab4:          |  \-- f3e5                  bnez    a5,d000da94 <hmac_sha256_update+0x18>
d000dab6:          |  /-- a011                  j       d000daba <hmac_sha256_update+0x3e>
d000dab8:          \--|-> 862a                  mv      a2,a0
d000daba:             \-> 4511                  li      a0,4
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/hmac.c:47
  }

  for (; len >= sizeof(uint32_t); len -= sizeof(uint32_t)) {
d000dabc:       /-------- 00a5ec63              bltu    a1,a0,d000dad4 <hmac_sha256_update+0x58>
d000dac0:       |         c1111537              lui     a0,0xc1111
d000dac4:       |         468d                  li      a3,3
read_32():
/proc/self/cwd/./sw/device/lib/base/memory.h:88
  __builtin_memcpy(&val, ptr, sizeof(uint32_t));
d000dac6:       |     /-> 4218                  lw      a4,0(a2)
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000dac8:       |     |   80e52023              sw      a4,-2048(a0) # c1110800 <_stack_end+0xe10f0800>
hmac_sha256_update():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/hmac.c:47
d000dacc:       |     |   15f1                  addi    a1,a1,-4
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/hmac.c:51
    uint32_t data_aligned = read_32(data_sent);
    abs_mmio_write32(TOP_EARLGREY_HMAC_BASE_ADDR + HMAC_MSG_FIFO_REG_OFFSET,
                     data_aligned);
    data_sent += sizeof(uint32_t);
d000dace:       |     |   0611                  addi    a2,a2,4
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/hmac.c:47
  for (; len >= sizeof(uint32_t); len -= sizeof(uint32_t)) {
d000dad0:       |     \-- feb6ebe3              bltu    a3,a1,d000dac6 <hmac_sha256_update+0x4a>
d000dad4:       \--/----X c991                  beqz    a1,d000dae8 <hmac_sha256_update+0x6c>
d000dad6:          |      c1111537              lui     a0,0xc1111
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/hmac.c:57
  }

  // Handle non-32bit aligned bytes at the end of the buffer.
  for (; len != 0; --len) {
    abs_mmio_write8(TOP_EARLGREY_HMAC_BASE_ADDR + HMAC_MSG_FIFO_REG_OFFSET,
                    *data_sent++);
d000dada:          |  /-> 00060683              lb      a3,0(a2)
d000dade:          |  |   0605                  addi    a2,a2,1
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/hmac.c:55
  for (; len != 0; --len) {
d000dae0:          |  |   15fd                  addi    a1,a1,-1
abs_mmio_write8():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:50
  *((volatile uint8_t *)addr) = value;
d000dae2:          |  |   80d50023              sb      a3,-2048(a0) # c1110800 <_stack_end+0xe10f0800>
d000dae6:          |  \-- f9f5                  bnez    a1,d000dada <hmac_sha256_update+0x5e>
hmac_sha256_update():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/hmac.c:59
  }
}
d000dae8:          \----> 8082                  ret

d000daea <hmac_sha256_final>:
hmac_sha256_final():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/hmac.c:61

void hmac_sha256_final(hmac_digest_t *digest) {
d000daea:           c11105b7            lui     a1,0xc1110
d000daee:           01458613            addi    a2,a1,20 # c1110014 <_stack_end+0xe10f0014>
d000daf2:           4689                        li      a3,2
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000daf4:           c214                        sw      a3,0(a2)
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000daf6:       /-> 4190                        lw      a2,0(a1)
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
d000daf8:       |   00167693            andi    a3,a2,1
hmac_sha256_final():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/hmac.c:69
  abs_mmio_write32(TOP_EARLGREY_HMAC_BASE_ADDR + HMAC_CMD_REG_OFFSET, reg);

  do {
    reg = abs_mmio_read32(TOP_EARLGREY_HMAC_BASE_ADDR +
                          HMAC_INTR_STATE_REG_OFFSET);
  } while (!bitfield_bit32_read(reg, HMAC_INTR_STATE_HMAC_DONE_BIT));
d000dafc:       \-- deed                        beqz    a3,d000daf6 <hmac_sha256_final+0xc>
d000dafe:           4581                        li      a1,0
d000db00:           c11106b7            lui     a3,0xc1110
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000db04:           c290                        sw      a2,0(a3)
d000db06:           06068613            addi    a2,a3,96 # c1110060 <_stack_end+0xe10f0060>
d000db0a:           02000693            li      a3,32
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000db0e:       /-> 4218                        lw      a4,0(a2)
hmac_sha256_final():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/hmac.c:76
                   reg);

  // Read the digest in reverse to preserve the numerical value.
  // The least significant word is at HMAC_DIGEST_7_REG_OFFSET.
  for (size_t i = 0; i < ARRAYSIZE(digest->digest); ++i) {
    digest->digest[i] =
d000db10:       |   00b507b3            add     a5,a0,a1
d000db14:       |   c398                        sw      a4,0(a5)
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/hmac.c:75
  for (size_t i = 0; i < ARRAYSIZE(digest->digest); ++i) {
d000db16:       |   0591                        addi    a1,a1,4
d000db18:       |   1671                        addi    a2,a2,-4
d000db1a:       \-- fed59ae3            bne     a1,a3,d000db0e <hmac_sha256_final+0x24>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/hmac.c:80
        abs_mmio_read32(TOP_EARLGREY_HMAC_BASE_ADDR + HMAC_DIGEST_7_REG_OFFSET -
                        (i * sizeof(uint32_t)));
  }
}
d000db1e:           8082                        ret

d000db20 <lifecycle_state_get>:
lifecycle_state_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:22

enum {
  kBase = TOP_EARLGREY_LC_CTRL_BASE_ADDR,
};

lifecycle_state_t lifecycle_state_get(void) {
d000db20:                                         1141                  addi    sp,sp,-16
d000db22:                                         c606                  sw      ra,12(sp)
d000db24:                                         c0140537              lui     a0,0xc0140
d000db28:                                         03450513              addi    a0,a0,52 # c0140034 <_stack_end+0xe0120034>
lifecycle_raw_state_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:69
  }
}

uint32_t lifecycle_raw_state_get(void) {
  uint32_t value = bitfield_field32_read(
      sec_mmio_read32(kBase + LC_CTRL_LC_STATE_REG_OFFSET),
d000db2c:                                         24a5                  jal     d000dd94 <sec_mmio_read32>
d000db2e:                                         400005b7              lui     a1,0x40000
d000db32:                                         15fd                  addi    a1,a1,-1
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
  return (bitfield >> field.index) & field.mask;
d000db34:                                         8d6d                  and     a0,a0,a1
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000db36:                                         85aa                  mv      a1,a0
d000db38:                                         1ad6b637              lui     a2,0x1ad6b
d000db3c:                                         5ac60613              addi    a2,a2,1452 # 1ad6b5ac <WDOG_BARK_THOLD+0x1ad346c4>
lifecycle_state_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:25
  switch (launder32(raw_state)) {
d000db40:                                  /----- 02b64b63              blt     a2,a1,d000db76 <lifecycle_state_get+0x56>
d000db44:                                  |      0e73a637              lui     a2,0xe73a
d000db48:                                  |      ce660693              addi    a3,a2,-794 # e739ce6 <WDOG_BARK_THOLD+0xe702dfe>
d000db4c:                               /--|----- 04b6ce63              blt     a3,a1,d000dba8 <lifecycle_state_get+0x88>
d000db50:                               |  |      02108637              lui     a2,0x2108
d000db54:                               |  |      42160613              addi    a2,a2,1057 # 2108421 <WDOG_BARK_THOLD+0x20d1539>
d000db58:                         /-----|--|----- 08c58e63              beq     a1,a2,d000dbf4 <lifecycle_state_get+0xd4>
d000db5c:                         |     |  |      06319637              lui     a2,0x6319
d000db60:                         |     |  |      c6360613              addi    a2,a2,-925 # 6318c63 <WDOG_BARK_THOLD+0x62e1d7b>
d000db64:          /--------------|-----|--|----- 0ec59063              bne     a1,a2,d000dc44 <lifecycle_state_get+0x124>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:30
      HARDENED_CHECK_EQ(raw_state, LC_CTRL_LC_STATE_STATE_VALUE_TEST_UNLOCKED1);
d000db68:          |              |     |  |  /-- 00c50663              beq     a0,a2,d000db74 <lifecycle_state_get+0x54>
d000db6c:          |              |     |  |  |   0000                  unimp
d000db6e:          |              |     |  |  |   0000                  unimp
d000db70:          |              |     |  |  |   0000                  unimp
d000db72:          |              |     |  |  |   0000                  unimp
d000db74:       /--|--------------|-----|--|--\-X a215                  j       d000dc98 <lifecycle_state_get+0x178>
d000db76:       |  |              |     |  \----> 2318c637              lui     a2,0x2318c
d000db7a:       |  |              |     |         63060693              addi    a3,a2,1584 # 2318c630 <WDOG_BARK_THOLD+0x23155748>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:25
  switch (launder32(raw_state)) {
d000db7e:       |  |              |     |  /----- 04b6c663              blt     a3,a1,d000dbca <lifecycle_state_get+0xaa>
d000db82:       |  |              |     |  |      1ad6b637              lui     a2,0x1ad6b
d000db86:       |  |              |     |  |      5ad60613              addi    a2,a2,1453 # 1ad6b5ad <WDOG_BARK_THOLD+0x1ad346c5>
d000db8a:       |  |              |  /--|--|----- 06c58c63              beq     a1,a2,d000dc02 <lifecycle_state_get+0xe2>
d000db8e:       |  |              |  |  |  |      1ef7c637              lui     a2,0x1ef7c
d000db92:       |  |              |  |  |  |      def60613              addi    a2,a2,-529 # 1ef7bdef <WDOG_BARK_THOLD+0x1ef44f07>
d000db96:       |  |           /--|--|--|--|----- 0cc59463              bne     a1,a2,d000dc5e <lifecycle_state_get+0x13e>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:48
      HARDENED_CHECK_EQ(raw_state, LC_CTRL_LC_STATE_STATE_VALUE_TEST_UNLOCKED7);
d000db9a:       |  |           |  |  |  |  |  /-- 00c50663              beq     a0,a2,d000dba6 <lifecycle_state_get+0x86>
d000db9e:       |  |           |  |  |  |  |  |   0000                  unimp
d000dba0:       |  |           |  |  |  |  |  |   0000                  unimp
d000dba2:       |  |           |  |  |  |  |  |   0000                  unimp
d000dba4:       |  |           |  |  |  |  |  |   0000                  unimp
d000dba6:       +--|-----------|--|--|--|--|--\-X a8cd                  j       d000dc98 <lifecycle_state_get+0x178>
d000dba8:       |  |           |  |  |  \--|----> ce760613              addi    a2,a2,-793
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:25
  switch (launder32(raw_state)) {
d000dbac:       |  |           |  |  |  /--|----- 06c58263              beq     a1,a2,d000dc10 <lifecycle_state_get+0xf0>
d000dbb0:       |  |           |  |  |  |  |      1294a637              lui     a2,0x1294a
d000dbb4:       |  |           |  |  |  |  |      52960613              addi    a2,a2,1321 # 1294a529 <WDOG_BARK_THOLD+0x12913641>
d000dbb8:       |  |        /--|--|--|--|--|----- 0cc59463              bne     a1,a2,d000dc80 <lifecycle_state_get+0x160>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:39
      HARDENED_CHECK_EQ(raw_state, LC_CTRL_LC_STATE_STATE_VALUE_TEST_UNLOCKED4);
d000dbbc:       |  |        |  |  |  |  |  |  /-- 00c50663              beq     a0,a2,d000dbc8 <lifecycle_state_get+0xa8>
d000dbc0:       |  |        |  |  |  |  |  |  |   0000                  unimp
d000dbc2:       |  |        |  |  |  |  |  |  |   0000                  unimp
d000dbc4:       |  |        |  |  |  |  |  |  |   0000                  unimp
d000dbc6:       |  |        |  |  |  |  |  |  |   0000                  unimp
d000dbc8:       +--|--------|--|--|--|--|--|--\-X a8c1                  j       d000dc98 <lifecycle_state_get+0x178>
d000dbca:       |  |        |  |  |  |  |  \----> 63160613              addi    a2,a2,1585
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:25
  switch (launder32(raw_state)) {
d000dbce:       |  |        |  |  |  |  |  /----- 04c58c63              beq     a1,a2,d000dc26 <lifecycle_state_get+0x106>
d000dbd2:       |  |        |  |  |  |  |  |      25295637              lui     a2,0x25295
d000dbd6:       |  |        |  |  |  |  |  |      a5260613              addi    a2,a2,-1454 # 25294a52 <WDOG_BARK_THOLD+0x2525db6a>
d000dbda:       |  |     /--|--|--|--|--|--|----- 0cc59663              bne     a1,a2,d000dca6 <lifecycle_state_get+0x186>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:57
      HARDENED_CHECK_EQ(raw_state, LC_CTRL_LC_STATE_STATE_VALUE_PROD_END);
d000dbde:       |  |     |  |  |  |  |  |  |  /-- 00c50663              beq     a0,a2,d000dbea <lifecycle_state_get+0xca>
d000dbe2:       |  |     |  |  |  |  |  |  |  |   0000                  unimp
d000dbe4:       |  |     |  |  |  |  |  |  |  |   0000                  unimp
d000dbe6:       |  |     |  |  |  |  |  |  |  |   0000                  unimp
d000dbe8:       |  |     |  |  |  |  |  |  |  |   0000                  unimp
d000dbea:       |  |     |  |  |  |  |  |  |  \-> 91b9b537              lui     a0,0x91b9b
d000dbee:       |  |     |  |  |  |  |  |  |      68a50513              addi    a0,a0,1674 # 91b9b68a <_stack_end+0xb1b7b68a>
d000dbf2:       |  |  /--|--|--|--|--|--|--|----- a07d                  j       d000dca0 <lifecycle_state_get+0x180>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:27
      HARDENED_CHECK_EQ(raw_state, LC_CTRL_LC_STATE_STATE_VALUE_TEST_UNLOCKED0);
d000dbf4:       |  |  |  |  |  |  \--|--|--|--/-X 00c50663              beq     a0,a2,d000dc00 <lifecycle_state_get+0xe0>
d000dbf8:       |  |  |  |  |  |     |  |  |  |   0000                  unimp
d000dbfa:       |  |  |  |  |  |     |  |  |  |   0000                  unimp
d000dbfc:       |  |  |  |  |  |     |  |  |  |   0000                  unimp
d000dbfe:       |  |  |  |  |  |     |  |  |  |   0000                  unimp
d000dc00:       +--|--|--|--|--|-----|--|--|--\-X a861                  j       d000dc98 <lifecycle_state_get+0x178>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:45
      HARDENED_CHECK_EQ(raw_state, LC_CTRL_LC_STATE_STATE_VALUE_TEST_UNLOCKED6);
d000dc02:       |  |  |  |  |  |     \--|--|--/-X 00c50663              beq     a0,a2,d000dc0e <lifecycle_state_get+0xee>
d000dc06:       |  |  |  |  |  |        |  |  |   0000                  unimp
d000dc08:       |  |  |  |  |  |        |  |  |   0000                  unimp
d000dc0a:       |  |  |  |  |  |        |  |  |   0000                  unimp
d000dc0c:       |  |  |  |  |  |        |  |  |   0000                  unimp
d000dc0e:       +--|--|--|--|--|--------|--|--\-X a069                  j       d000dc98 <lifecycle_state_get+0x178>
d000dc10:       |  |  |  |  |  |        \--|----> 0e73a5b7              lui     a1,0xe73a
d000dc14:       |  |  |  |  |  |           |      ce758593              addi    a1,a1,-793 # e739ce7 <WDOG_BARK_THOLD+0xe702dff>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:36
      HARDENED_CHECK_EQ(raw_state, LC_CTRL_LC_STATE_STATE_VALUE_TEST_UNLOCKED3);
d000dc18:       |  |  |  |  |  |           |  /-- 00b50663              beq     a0,a1,d000dc24 <lifecycle_state_get+0x104>
d000dc1c:       |  |  |  |  |  |           |  |   0000                  unimp
d000dc1e:       |  |  |  |  |  |           |  |   0000                  unimp
d000dc20:       |  |  |  |  |  |           |  |   0000                  unimp
d000dc22:       |  |  |  |  |  |           |  |   0000                  unimp
d000dc24:       +--|--|--|--|--|-----------|--\-X a895                  j       d000dc98 <lifecycle_state_get+0x178>
d000dc26:       |  |  |  |  |  |           \----> 2318c5b7              lui     a1,0x2318c
d000dc2a:       |  |  |  |  |  |                  63158593              addi    a1,a1,1585 # 2318c631 <WDOG_BARK_THOLD+0x23155749>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:54
      HARDENED_CHECK_EQ(raw_state, LC_CTRL_LC_STATE_STATE_VALUE_PROD);
d000dc2e:       |  |  |  |  |  |              /-- 00b50663              beq     a0,a1,d000dc3a <lifecycle_state_get+0x11a>
d000dc32:       |  |  |  |  |  |              |   0000                  unimp
d000dc34:       |  |  |  |  |  |              |   0000                  unimp
d000dc36:       |  |  |  |  |  |              |   0000                  unimp
d000dc38:       |  |  |  |  |  |              |   0000                  unimp
d000dc3a:       |  |  |  |  |  |              \-> 65f25537              lui     a0,0x65f25
d000dc3e:       |  |  |  |  |  |                  20f50513              addi    a0,a0,527 # 65f2520f <_epmp_stack_guard_na4+0x2df1e20f>
d000dc42:       |  |  +--|--|--|----------------- a8b9                  j       d000dca0 <lifecycle_state_get+0x180>
d000dc44:       |  \--|--|--|--|----------------> 0a529637              lui     a2,0xa529
d000dc48:       |     |  |  |  |                  4a560613              addi    a2,a2,1189 # a5294a5 <WDOG_BARK_THOLD+0xa4f25bd>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:25
  switch (launder32(raw_state)) {
d000dc4c:       |     |  |  |  |           /----- 06c59e63              bne     a1,a2,d000dcc8 <lifecycle_state_get+0x1a8>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:33
      HARDENED_CHECK_EQ(raw_state, LC_CTRL_LC_STATE_STATE_VALUE_TEST_UNLOCKED2);
d000dc50:       |     |  |  |  |           |  /-- 00c50663              beq     a0,a2,d000dc5c <lifecycle_state_get+0x13c>
d000dc54:       |     |  |  |  |           |  |   0000                  unimp
d000dc56:       |     |  |  |  |           |  |   0000                  unimp
d000dc58:       |     |  |  |  |           |  |   0000                  unimp
d000dc5a:       |     |  |  |  |           |  |   0000                  unimp
d000dc5c:       +-----|--|--|--|-----------|--\-X a835                  j       d000dc98 <lifecycle_state_get+0x178>
d000dc5e:       |     |  |  |  \-----------|----> 21084637              lui     a2,0x21084
d000dc62:       |     |  |  |              |      21060613              addi    a2,a2,528 # 21084210 <WDOG_BARK_THOLD+0x2104d328>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:25
  switch (launder32(raw_state)) {
d000dc66:       |     |  |  |              +----- 06c59163              bne     a1,a2,d000dcc8 <lifecycle_state_get+0x1a8>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:51
      HARDENED_CHECK_EQ(raw_state, LC_CTRL_LC_STATE_STATE_VALUE_DEV);
d000dc6a:       |     |  |  |              |  /-- 00c50663              beq     a0,a2,d000dc76 <lifecycle_state_get+0x156>
d000dc6e:       |     |  |  |              |  |   0000                  unimp
d000dc70:       |     |  |  |              |  |   0000                  unimp
d000dc72:       |     |  |  |              |  |   0000                  unimp
d000dc74:       |     |  |  |              |  |   0000                  unimp
d000dc76:       |     |  |  |              |  \-> 0b5a7537              lui     a0,0xb5a7
d000dc7a:       |     |  |  |              |      5e050513              addi    a0,a0,1504 # b5a75e0 <WDOG_BARK_THOLD+0xb5706f8>
d000dc7e:       |     +--|--|--------------|----- a00d                  j       d000dca0 <lifecycle_state_get+0x180>
d000dc80:       |     |  |  \--------------|----> 16b5b637              lui     a2,0x16b5b
d000dc84:       |     |  |                 |      d6b60613              addi    a2,a2,-661 # 16b5ad6b <WDOG_BARK_THOLD+0x16b23e83>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:25
  switch (launder32(raw_state)) {
d000dc88:       |     |  |                 +----- 04c59063              bne     a1,a2,d000dcc8 <lifecycle_state_get+0x1a8>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:42
      HARDENED_CHECK_EQ(raw_state, LC_CTRL_LC_STATE_STATE_VALUE_TEST_UNLOCKED5);
d000dc8c:       +-----|--|-----------------|----- 00c50663              beq     a0,a2,d000dc98 <lifecycle_state_get+0x178>
d000dc90:       |     |  |                 |      0000                  unimp
d000dc92:       |     |  |                 |      0000                  unimp
d000dc94:       |     |  |                 |      0000                  unimp
d000dc96:       |     |  |                 |      0000                  unimp
d000dc98:       \-----|--|-----------------|----> b2866537              lui     a0,0xb2866
d000dc9c:             |  |                 |      fbb50513              addi    a0,a0,-69 # b2865fbb <_stack_end+0xd2845fbb>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:65
}
d000dca0:             >--|-----------------|----> 40b2                  lw      ra,12(sp)
d000dca2:             |  |                 |      0141                  addi    sp,sp,16
d000dca4:             |  |                 |      8082                  ret
d000dca6:             |  \-----------------|----> 2739d637              lui     a2,0x2739d
d000dcaa:             |                    |      e7360613              addi    a2,a2,-397 # 2739ce73 <WDOG_BARK_THOLD+0x27365f8b>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:25
  switch (launder32(raw_state)) {
d000dcae:             |                    +----- 00c59d63              bne     a1,a2,d000dcc8 <lifecycle_state_get+0x1a8>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:60
      HARDENED_CHECK_EQ(raw_state, LC_CTRL_LC_STATE_STATE_VALUE_RMA);
d000dcb2:             |                    |  /-- 00c50663              beq     a0,a2,d000dcbe <lifecycle_state_get+0x19e>
d000dcb6:             |                    |  |   0000                  unimp
d000dcb8:             |                    |  |   0000                  unimp
d000dcba:             |                    |  |   0000                  unimp
d000dcbc:             |                    |  |   0000                  unimp
d000dcbe:             |                    |  \-> cf8d0537              lui     a0,0xcf8d0
d000dcc2:             |                    |      aab50513              addi    a0,a0,-1365 # cf8cfaab <_stack_end+0xef8afaab>
d000dcc6:             \--------------------|----- bfe9                  j       d000dca0 <lifecycle_state_get+0x180>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:63
      HARDENED_UNREACHABLE();
d000dcc8:                                  \----> 0000                  unimp
d000dcca:                                         0000                  unimp
d000dccc:                                         0000                  unimp
d000dcce:                                         0000                  unimp

d000dcd0 <lifecycle_device_id_get>:
lifecycle_device_id_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:74
      LC_CTRL_LC_STATE_STATE_FIELD);
  return value;
}

void lifecycle_device_id_get(lifecycle_device_id_t *device_id) {
d000dcd0:           1101                        addi    sp,sp,-32
d000dcd2:           ce06                        sw      ra,28(sp)
d000dcd4:           cc22                        sw      s0,24(sp)
d000dcd6:           ca26                        sw      s1,20(sp)
d000dcd8:           c84a                        sw      s2,16(sp)
d000dcda:           c64e                        sw      s3,12(sp)
d000dcdc:           892a                        mv      s2,a0
d000dcde:           4481                        li      s1,0
d000dce0:           c0140537            lui     a0,0xc0140
d000dce4:           04450413            addi    s0,a0,68 # c0140044 <_stack_end+0xe0120044>
d000dce8:           02000993            li      s3,32
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:80
  static_assert(
      kLifecycleDeviceIdNumWords == LC_CTRL_PARAM_NUM_DEVICE_ID_WORDS,
      "length of the device_id array does not match the length in hardware");

  for (size_t i = 0; i < kLifecycleDeviceIdNumWords; ++i) {
    device_id->device_id[i] = sec_mmio_read32(
d000dcec:       /-> 00848533            add     a0,s1,s0
d000dcf0:       |   2055                        jal     d000dd94 <sec_mmio_read32>
d000dcf2:       |   009905b3            add     a1,s2,s1
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:79
  for (size_t i = 0; i < kLifecycleDeviceIdNumWords; ++i) {
d000dcf6:       |   0491                        addi    s1,s1,4
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:80
    device_id->device_id[i] = sec_mmio_read32(
d000dcf8:       |   c188                        sw      a0,0(a1)
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:79
  for (size_t i = 0; i < kLifecycleDeviceIdNumWords; ++i) {
d000dcfa:       \-- ff3499e3            bne     s1,s3,d000dcec <lifecycle_device_id_get+0x1c>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:83
        kBase + LC_CTRL_DEVICE_ID_0_REG_OFFSET + i * sizeof(uint32_t));
  }
}
d000dcfe:           49b2                        lw      s3,12(sp)
d000dd00:           4942                        lw      s2,16(sp)
d000dd02:           44d2                        lw      s1,20(sp)
d000dd04:           4462                        lw      s0,24(sp)
d000dd06:           40f2                        lw      ra,28(sp)
d000dd08:           6105                        addi    sp,sp,32
d000dd0a:           8082                        ret

d000dd0c <lifecycle_hw_rev_get>:
lifecycle_hw_rev_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:85

void lifecycle_hw_rev_get(lifecycle_hw_rev_t *hw_rev) {
d000dd0c:       1141                    addi    sp,sp,-16
d000dd0e:       c606                    sw      ra,12(sp)
d000dd10:       c422                    sw      s0,8(sp)
d000dd12:       842a                    mv      s0,a0
d000dd14:       c0140537                lui     a0,0xc0140
d000dd18:       04050513                addi    a0,a0,64 # c0140040 <_stack_end+0xe0120040>
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:86
  uint32_t reg = sec_mmio_read32(kBase + LC_CTRL_HW_REV_REG_OFFSET);
d000dd1c:       28a5                    jal     d000dd94 <sec_mmio_read32>
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
d000dd1e:       01055593                srli    a1,a0,0x10
lifecycle_hw_rev_get():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:87
  *hw_rev = (lifecycle_hw_rev_t){
d000dd22:       00b41023                sh      a1,0(s0)
d000dd26:       00a41123                sh      a0,2(s0)
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/lifecycle.c:91
      .chip_gen = bitfield_field32_read(reg, LC_CTRL_HW_REV_CHIP_GEN_FIELD),
      .chip_rev = bitfield_field32_read(reg, LC_CTRL_HW_REV_CHIP_REV_FIELD),
  };
}
d000dd2a:       4422                    lw      s0,8(sp)
d000dd2c:       40b2                    lw      ra,12(sp)
d000dd2e:       0141                    addi    sp,sp,16
d000dd30:       8082                    ret

d000dd32 <otp_read32>:
otp_read32():
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otp.c:18
#include "hw/top_earlgrey/sw/autogen/top_earlgrey.h"
#include "otp_ctrl_regs.h"  // Generated.

enum { kBase = TOP_EARLGREY_OTP_CTRL_CORE_BASE_ADDR };

uint32_t otp_read32(uint32_t address) {
d000dd32:       c01315b7                lui     a1,0xc0131
/proc/self/cwd/sw/device/silicon_creator/lib/drivers/otp.c:19
  return sec_mmio_read32(kBase + OTP_CTRL_SW_CFG_WINDOW_REG_OFFSET + address);
d000dd36:       952e                    add     a0,a0,a1
d000dd38:       a8b1                    j       d000dd94 <sec_mmio_read32>

d000dd3a <sec_mmio_init>:
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000dd3a:           4601                        li      a2,0
d000dd3c:           4681                        li      a3,0
d000dd3e:           4701                        li      a4,0
d000dd40:           4501                        li      a0,0
d000dd42:           0fff2597            auipc   a1,0xfff2
d000dd46:           33258593            addi    a1,a1,818 # e0000074 <sec_mmio_ctx>
sec_mmio_init():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:53
  // mechanism.
  HARDENED_CHECK_LT(i, kSecMmioRegFileSize);
}

void sec_mmio_init(void) {
  sec_mmio_ctx.last_index = launder32(0);
d000dd4a:           c190                        sw      a2,0(a1)
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:54
  sec_mmio_ctx.write_count = launder32(0);
d000dd4c:           c1d4                        sw      a3,4(a1)
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:55
  sec_mmio_ctx.check_count = launder32(0);
d000dd4e:           c5d8                        sw      a4,12(a1)
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:56
  sec_mmio_ctx.expected_write_count = launder32(0);
d000dd50:           c588                        sw      a0,8(a1)
d000dd52:           3e800613            li      a2,1000
d000dd56:           56fd                        li      a3,-1
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:58
  for (size_t i = 0; i < ARRAYSIZE(sec_mmio_ctx.addrs); ++i) {
    sec_mmio_ctx.addrs[i] = UINT32_MAX;
d000dd58:       /-> 7d858713            addi    a4,a1,2008
d000dd5c:       |   7cd72c23            sw      a3,2008(a4)
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:59
    sec_mmio_ctx.values[i] = UINT32_MAX;
d000dd60:       |   c994                        sw      a3,16(a1)
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:57
  for (size_t i = 0; i < ARRAYSIZE(sec_mmio_ctx.addrs); ++i) {
d000dd62:       |   167d                        addi    a2,a2,-1
d000dd64:       |   0591                        addi    a1,a1,4
d000dd66:       \-- fa6d                        bnez    a2,d000dd58 <sec_mmio_init+0x1e>
d000dd68:           0fff2597            auipc   a1,0xfff2
d000dd6c:           30c58593            addi    a1,a1,780 # e0000074 <sec_mmio_ctx>
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:61
  }
  uint32_t check = kSecMmioValZero ^ sec_mmio_ctx.last_index;
d000dd70:           4190                        lw      a2,0(a1)
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:62
  check ^= sec_mmio_ctx.write_count;
d000dd72:           41d4                        lw      a3,4(a1)
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:63
  check ^= sec_mmio_ctx.check_count;
d000dd74:           45cc                        lw      a1,12(a1)
d000dd76:           8e35                        xor     a2,a2,a3
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:64
  check ^= sec_mmio_ctx.expected_write_count;
d000dd78:           8db1                        xor     a1,a1,a2
d000dd7a:           8d2d                        xor     a0,a0,a1
d000dd7c:           3ca595b7            lui     a1,0x3ca59
d000dd80:           65a58593            addi    a1,a1,1626 # 3ca5965a <_epmp_stack_guard_na4+0x4a5265a>
d000dd84:           8d2d                        xor     a0,a0,a1
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:65
  HARDENED_CHECK_EQ(check, kSecMmioValZero);
d000dd86:       /-- 00b50663            beq     a0,a1,d000dd92 <sec_mmio_init+0x58>
d000dd8a:       |   0000                        unimp
d000dd8c:       |   0000                        unimp
d000dd8e:       |   0000                        unimp
d000dd90:       |   0000                        unimp
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:66
}
d000dd92:       \-> 8082                        ret

d000dd94 <sec_mmio_read32>:
sec_mmio_read32():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:78
    sec_mmio_ctx.values[i] = UINT32_MAX;
  }
  HARDENED_CHECK_EQ(sec_mmio_ctx.check_count, 0);
}

uint32_t sec_mmio_read32(uint32_t addr) {
d000dd94:           1101                        addi    sp,sp,-32
d000dd96:           ce06                        sw      ra,28(sp)
d000dd98:           cc22                        sw      s0,24(sp)
d000dd9a:           ca26                        sw      s1,20(sp)
d000dd9c:           c84a                        sw      s2,16(sp)
d000dd9e:           c64e                        sw      s3,12(sp)
d000dda0:           842a                        mv      s0,a0
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000dda2:           00052903            lw      s2,0(a0)
d000dda6:           21692537            lui     a0,0x21692
d000ddaa:           43650993            addi    s3,a0,1078 # 21692436 <WDOG_BARK_THOLD+0x2165b54e>
sec_mmio_read32():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:80
  uint32_t value = abs_mmio_read32(addr);
  uint32_t masked_value = value ^ kSecMmioMaskVal;
d000ddae:           013944b3            xor     s1,s2,s3
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:82
  barrier32(masked_value);
  upsert_register(addr, masked_value);
d000ddb2:           8522                        mv      a0,s0
d000ddb4:           85a6                        mv      a1,s1
d000ddb6:           2015                        jal     d000ddda <upsert_register>
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000ddb8:           4008                        lw      a0,0(s0)
sec_mmio_read32():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:83
  HARDENED_CHECK_EQ((abs_mmio_read32(addr) ^ kSecMmioMaskVal), masked_value);
d000ddba:           01354533            xor     a0,a0,s3
d000ddbe:       /-- 00950663            beq     a0,s1,d000ddca <sec_mmio_read32+0x36>
d000ddc2:       |   0000                        unimp
d000ddc4:       |   0000                        unimp
d000ddc6:       |   0000                        unimp
d000ddc8:       |   0000                        unimp
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:85

  return value;
d000ddca:       \-> 854a                        mv      a0,s2
d000ddcc:           49b2                        lw      s3,12(sp)
d000ddce:           4942                        lw      s2,16(sp)
d000ddd0:           44d2                        lw      s1,20(sp)
d000ddd2:           4462                        lw      s0,24(sp)
d000ddd4:           40f2                        lw      ra,28(sp)
d000ddd6:           6105                        addi    sp,sp,32
d000ddd8:           8082                        ret

d000ddda <upsert_register>:
upsert_register():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:34
  const size_t last_index = sec_mmio_ctx.last_index;
d000ddda:                 0fff2817              auipc   a6,0xfff2
d000ddde:                 29a80813              addi    a6,a6,666 # e0000074 <sec_mmio_ctx>
d000dde2:                 00082703              lw      a4,0(a6)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000dde6:                 4781                  li      a5,0
d000dde8:                 4681                  li      a3,0
upsert_register():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:36
  for (; launder32(i) < last_index; ++i) {
d000ddea:       /-------- 02e7f163              bgeu    a5,a4,d000de0c <upsert_register+0x32>
d000ddee:       |         4681                  li      a3,0
d000ddf0:       |         87c2                  mv      a5,a6
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:37
    if (sec_mmio_ctx.addrs[i] == addr) {
d000ddf2:       |  /----> 7d878613              addi    a2,a5,2008
d000ddf6:       |  |      7d862603              lw      a2,2008(a2)
d000ddfa:       |  |  /-- 00a60863              beq     a2,a0,d000de0a <upsert_register+0x30>
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:36
  for (; launder32(i) < last_index; ++i) {
d000ddfe:       |  |  |   0685                  addi    a3,a3,1
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000de00:       |  |  |   8636                  mv      a2,a3
upsert_register():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:36
d000de02:       |  |  |   0791                  addi    a5,a5,4
d000de04:       |  \--|-- fee667e3              bltu    a2,a4,d000ddf2 <upsert_register+0x18>
d000de08:       +-----|-- a011                  j       d000de0c <upsert_register+0x32>
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:38
      sec_mmio_ctx.values[i] = value;
d000de0a:       |     \-> cb8c                  sw      a1,16(a5)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000de0c:       \-------> 8636                  mv      a2,a3
upsert_register():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:42
  if (launder32(i) == last_index && launder32(i) < kSecMmioRegFileSize) {
d000de0e:             /-- 02e61463              bne     a2,a4,d000de36 <upsert_register+0x5c>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000de12:             |   8636                  mv      a2,a3
d000de14:             |   3e700713              li      a4,999
upsert_register():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:42
d000de18:             +-- 00c76f63              bltu    a4,a2,d000de36 <upsert_register+0x5c>
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:43
    sec_mmio_ctx.addrs[i] = addr;
d000de1c:             |   00269613              slli    a2,a3,0x2
d000de20:             |   9642                  add     a2,a2,a6
d000de22:             |   7d860713              addi    a4,a2,2008
d000de26:             |   7ca72c23              sw      a0,2008(a4)
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:44
    sec_mmio_ctx.values[i] = value;
d000de2a:             |   ca0c                  sw      a1,16(a2)
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:45
    ++sec_mmio_ctx.last_index;
d000de2c:             |   00082503              lw      a0,0(a6)
d000de30:             |   0505                  addi    a0,a0,1
d000de32:             |   00a82023              sw      a0,0(a6)
d000de36:             \-> 3e800513              li      a0,1000
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:49
  HARDENED_CHECK_LT(i, kSecMmioRegFileSize);
d000de3a:             /-- 00a6e663              bltu    a3,a0,d000de46 <upsert_register+0x6c>
d000de3e:             |   0000                  unimp
d000de40:             |   0000                  unimp
d000de42:             |   0000                  unimp
d000de44:             |   0000                  unimp
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:50
}
d000de46:             \-> 8082                  ret

d000de48 <sec_mmio_write32>:
sec_mmio_write32():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:88
}

void sec_mmio_write32(uint32_t addr, uint32_t value) {
d000de48:           1141                        addi    sp,sp,-16
d000de4a:           c606                        sw      ra,12(sp)
d000de4c:           c422                        sw      s0,8(sp)
d000de4e:           c226                        sw      s1,4(sp)
d000de50:           c04a                        sw      s2,0(sp)
d000de52:           842a                        mv      s0,a0
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000de54:           c10c                        sw      a1,0(a0)
d000de56:           21692537            lui     a0,0x21692
d000de5a:           43650913            addi    s2,a0,1078 # 21692436 <WDOG_BARK_THOLD+0x2165b54e>
sec_mmio_write32():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:90
  abs_mmio_write32(addr, value);
  uint32_t masked_value = value ^ kSecMmioMaskVal;
d000de5e:           0125c4b3            xor     s1,a1,s2
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:92
  barrier32(masked_value);
  upsert_register(addr, masked_value);
d000de62:           8522                        mv      a0,s0
d000de64:           85a6                        mv      a1,s1
d000de66:           3f95                        jal     d000ddda <upsert_register>
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000de68:           4008                        lw      a0,0(s0)
sec_mmio_write32():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:93
  HARDENED_CHECK_EQ((abs_mmio_read32(addr) ^ kSecMmioMaskVal), masked_value);
d000de6a:           01254533            xor     a0,a0,s2
d000de6e:       /-- 00950663            beq     a0,s1,d000de7a <sec_mmio_write32+0x32>
d000de72:       |   0000                        unimp
d000de74:       |   0000                        unimp
d000de76:       |   0000                        unimp
d000de78:       |   0000                        unimp
d000de7a:       \-> 0fff2517            auipc   a0,0xfff2
d000de7e:           1fa50513            addi    a0,a0,506 # e0000074 <sec_mmio_ctx>
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:95

  ++sec_mmio_ctx.write_count;
d000de82:           414c                        lw      a1,4(a0)
d000de84:           0585                        addi    a1,a1,1
d000de86:           c14c                        sw      a1,4(a0)
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:96
}
d000de88:           4902                        lw      s2,0(sp)
d000de8a:           4492                        lw      s1,4(sp)
d000de8c:           4422                        lw      s0,8(sp)
d000de8e:           40b2                        lw      ra,12(sp)
d000de90:           0141                        addi    sp,sp,16
d000de92:           8082                        ret

d000de94 <sec_mmio_write32_shadowed>:
sec_mmio_write32_shadowed():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:98

void sec_mmio_write32_shadowed(uint32_t addr, uint32_t value) {
d000de94:           1141                        addi    sp,sp,-16
d000de96:           c606                        sw      ra,12(sp)
d000de98:           c422                        sw      s0,8(sp)
d000de9a:           c226                        sw      s1,4(sp)
d000de9c:           c04a                        sw      s2,0(sp)
d000de9e:           842a                        mv      s0,a0
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000dea0:           c10c                        sw      a1,0(a0)
d000dea2:           c10c                        sw      a1,0(a0)
d000dea4:           21692537            lui     a0,0x21692
d000dea8:           43650913            addi    s2,a0,1078 # 21692436 <WDOG_BARK_THOLD+0x2165b54e>
sec_mmio_write32_shadowed():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:102
  // Shadowed registers require two writes.
  abs_mmio_write32(addr, value);
  abs_mmio_write32(addr, value);
  uint32_t masked_value = value ^ kSecMmioMaskVal;
d000deac:           0125c4b3            xor     s1,a1,s2
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:104
  barrier32(masked_value);
  upsert_register(addr, masked_value);
d000deb0:           8522                        mv      a0,s0
d000deb2:           85a6                        mv      a1,s1
d000deb4:           371d                        jal     d000ddda <upsert_register>
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000deb6:           4008                        lw      a0,0(s0)
sec_mmio_write32_shadowed():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:105
  HARDENED_CHECK_EQ((abs_mmio_read32(addr) ^ kSecMmioMaskVal), masked_value);
d000deb8:           01254533            xor     a0,a0,s2
d000debc:       /-- 00950663            beq     a0,s1,d000dec8 <sec_mmio_write32_shadowed+0x34>
d000dec0:       |   0000                        unimp
d000dec2:       |   0000                        unimp
d000dec4:       |   0000                        unimp
d000dec6:       |   0000                        unimp
d000dec8:       \-> 0fff2517            auipc   a0,0xfff2
d000decc:           1ac50513            addi    a0,a0,428 # e0000074 <sec_mmio_ctx>
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:107

  ++sec_mmio_ctx.write_count;
d000ded0:           414c                        lw      a1,4(a0)
d000ded2:           0585                        addi    a1,a1,1
d000ded4:           c14c                        sw      a1,4(a0)
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:108
}
d000ded6:           4902                        lw      s2,0(sp)
d000ded8:           4492                        lw      s1,4(sp)
d000deda:           4422                        lw      s0,8(sp)
d000dedc:           40b2                        lw      ra,12(sp)
d000dede:           0141                        addi    sp,sp,16
d000dee0:           8082                        ret

d000dee2 <sec_mmio_check_values>:
sec_mmio_check_values():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:111

void sec_mmio_check_values(uint32_t rnd_offset) {
  const uint32_t last_index = sec_mmio_ctx.last_index;
d000dee2:                    0fff2817           auipc   a6,0xfff2
d000dee6:                    19280813           addi    a6,a6,402 # e0000074 <sec_mmio_ctx>
d000deea:                    00082603           lw      a2,0(a6)
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000deee:                    4701                       li      a4,0
d000def0:                    4681                       li      a3,0
sec_mmio_check_values():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:116
  // Pick a random starting offset.
  uint32_t offset = ((uint64_t)rnd_offset * (uint64_t)last_index) >> 32;
  enum { kStep = 1 };
  size_t i;
  for (i = 0; launder32(i) < last_index; ++i) {
d000def2:       /----------- 04c77463           bgeu    a4,a2,d000df3a <sec_mmio_check_values+0x58>
d000def6:       |            4681                       li      a3,0
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:113
  uint32_t offset = ((uint64_t)rnd_offset * (uint64_t)last_index) >> 32;
d000def8:       |            02a63733           mulhu   a4,a2,a0
d000defc:       |            21692537           lui     a0,0x21692
d000df00:       |            43650893           addi    a7,a0,1078 # 21692436 <WDOG_BARK_THOLD+0x2165b54e>
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:117
    uint32_t read_value = abs_mmio_read32(sec_mmio_ctx.addrs[offset]);
d000df04:       |  /-------> 00271793           slli    a5,a4,0x2
d000df08:       |  |         97c2                       add     a5,a5,a6
d000df0a:       |  |         7d878593           addi    a1,a5,2008
d000df0e:       |  |         7d85a583           lw      a1,2008(a1)
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000df12:       |  |         418c                       lw      a1,0(a1)
sec_mmio_check_values():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:118
    HARDENED_CHECK_EQ(read_value ^ kSecMmioMaskVal,
d000df14:       |  |         4b88                       lw      a0,16(a5)
d000df16:       |  |         4781                       li      a5,0
d000df18:       |  |         0115c5b3           xor     a1,a1,a7
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:120
                      sec_mmio_ctx.values[offset]);
    offset += kStep;
d000df1c:       |  |         0705                       addi    a4,a4,1
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:118
    HARDENED_CHECK_EQ(read_value ^ kSecMmioMaskVal,
d000df1e:       |  |  /----- 00a58663           beq     a1,a0,d000df2a <sec_mmio_check_values+0x48>
d000df22:       |  |  |      0000                       unimp
d000df24:       |  |  |      0000                       unimp
d000df26:       |  |  |      0000                       unimp
d000df28:       |  |  |      0000                       unimp
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:121
    if (offset >= last_index) {
d000df2a:       |  |  \--/-X 00c76363           bltu    a4,a2,d000df30 <sec_mmio_check_values+0x4e>
d000df2e:       |  |     |   87b2                       mv      a5,a2
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:116
  for (i = 0; launder32(i) < last_index; ++i) {
d000df30:       |  |     \-> 0685                       addi    a3,a3,1
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000df32:       |  |         8536                       mv      a0,a3
sec_mmio_check_values():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:121
    if (offset >= last_index) {
d000df34:       |  |         8f1d                       sub     a4,a4,a5
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:116
  for (i = 0; launder32(i) < last_index; ++i) {
d000df36:       |  \-------- fcc567e3           bltu    a0,a2,d000df04 <sec_mmio_check_values+0x22>
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:126
      offset -= last_index;
    }
  }
  // Check for loop completion.
  HARDENED_CHECK_EQ(i, last_index);
d000df3a:       \--------/-X 00c68663           beq     a3,a2,d000df46 <sec_mmio_check_values+0x64>
d000df3e:                |   0000                       unimp
d000df40:                |   0000                       unimp
d000df42:                |   0000                       unimp
d000df44:                |   0000                       unimp
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:127
  ++sec_mmio_ctx.check_count;
d000df46:                \-> 00c82503           lw      a0,12(a6)
d000df4a:                    0505                       addi    a0,a0,1
d000df4c:                    00a82623           sw      a0,12(a6)
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:128
}
d000df50:                    8082                       ret

d000df52 <sec_mmio_check_counters>:
sec_mmio_check_counters():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:130

void sec_mmio_check_counters(uint32_t expected_check_count) {
d000df52:           3ca595b7            lui     a1,0x3ca59
d000df56:           65a58593            addi    a1,a1,1626 # 3ca5965a <_epmp_stack_guard_na4+0x4a5265a>
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000df5a:           862e                        mv      a2,a1
d000df5c:           0fff2697            auipc   a3,0xfff2
d000df60:           11868693            addi    a3,a3,280 # e0000074 <sec_mmio_ctx>
sec_mmio_check_counters():
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:131
  uint32_t result = launder32(kSecMmioValZero) ^ sec_mmio_ctx.write_count;
d000df64:           42d8                        lw      a4,4(a3)
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:132
  result ^= sec_mmio_ctx.expected_write_count;
d000df66:           469c                        lw      a5,8(a3)
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:131
  uint32_t result = launder32(kSecMmioValZero) ^ sec_mmio_ctx.write_count;
d000df68:           8e39                        xor     a2,a2,a4
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:132
  result ^= sec_mmio_ctx.expected_write_count;
d000df6a:           8e3d                        xor     a2,a2,a5
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:136

  // Check the expected write count. This is equivalent to
  // sec_mmio_ctx.write_count == sec_mmio_ctx.expected_write_count
  HARDENED_CHECK_EQ(result, kSecMmioValZero);
d000df6c:       /-- 00b60663            beq     a2,a1,d000df78 <sec_mmio_check_counters+0x26>
d000df70:       |   0000                        unimp
d000df72:       |   0000                        unimp
d000df74:       |   0000                        unimp
d000df76:       |   0000                        unimp
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:141

  // Check the expected check counts. This is equivalent to
  // sec_mmio_ctx.check_count == expected_check_count. This check is expected to
  // fail if the previous check failed.
  result ^= sec_mmio_ctx.check_count;
d000df78:       \-> 46cc                        lw      a1,12(a3)
d000df7a:           8d31                        xor     a0,a0,a2
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:142
  result ^= expected_check_count;
d000df7c:           8d2d                        xor     a0,a0,a1
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:143
  HARDENED_CHECK_EQ(~launder32(result), kSecMmioValOne);
d000df7e:           fff54513            not     a0,a0
d000df82:           c35a75b7            lui     a1,0xc35a7
d000df86:           9a558593            addi    a1,a1,-1627 # c35a69a5 <_stack_end+0xe35869a5>
d000df8a:       /-- 00b50663            beq     a0,a1,d000df96 <sec_mmio_check_counters+0x44>
d000df8e:       |   0000                        unimp
d000df90:       |   0000                        unimp
d000df92:       |   0000                        unimp
d000df94:       |   0000                        unimp
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:145

  ++sec_mmio_ctx.check_count;
d000df96:       \-> 46c8                        lw      a0,12(a3)
d000df98:           0505                        addi    a0,a0,1
d000df9a:           c6c8                        sw      a0,12(a3)
/proc/self/cwd/sw/device/silicon_creator/lib/base/sec_mmio.c:146
}
d000df9c:           8082                        ret

d000df9e <memcpy>:
memcpy():
/proc/self/cwd/sw/device/lib/base/memory.c:61
  return byte << 24 | byte << 16 | byte << 8 | byte;
}

void *OT_PREFIX_IF_NOT_RV32(memcpy)(void *restrict dest,
                                    const void *restrict src, size_t len) {
  if (dest == NULL || src == NULL) {
d000df9e:                       00153693                seqz    a3,a0
d000dfa2:                       0015b713                seqz    a4,a1
d000dfa6:                       8ed9                    or      a3,a3,a4
d000dfa8:       /-------------- eab5                    bnez    a3,d000e01c <memcpy+0x7e>
d000dfaa:       |               4711                    li      a4,4
d000dfac:       |               86b2                    mv      a3,a2
compute_num_leading_bytes():
/proc/self/cwd/sw/device/lib/base/memory.c:19
  if (len < alignof(uint32_t)) {
d000dfae:       |        /----- 00e66c63                bltu    a2,a4,d000dfc6 <memcpy+0x28>
d000dfb2:       |        |      00a5c6b3                xor     a3,a1,a0
d000dfb6:       |        |      0036f793                andi    a5,a3,3
d000dfba:       |        |      8832                    mv      a6,a2
d000dfbc:       |        |      86b2                    mv      a3,a2
/proc/self/cwd/sw/device/lib/base/memory.c:24
  if (right == NULL || left_ahead == right_ahead) {
d000dfbe:       |        |  /-- eb91                    bnez    a5,d000dfd2 <memcpy+0x34>
d000dfc0:       |        |  |   40a006b3                neg     a3,a0
d000dfc4:       |        |  |   8a8d                    andi    a3,a3,3
compute_alignment():
/proc/self/cwd/sw/device/lib/base/memory.c:51
  const size_t num_words = (len - num_leading_bytes) / sizeof(uint32_t);
d000dfc6:       |        \--|-> 40d60733                sub     a4,a2,a3
/proc/self/cwd/sw/device/lib/base/memory.c:52
  *out_tail_offset = num_leading_bytes + num_words * sizeof(uint32_t);
d000dfca:       |           |   9b71                    andi    a4,a4,-4
d000dfcc:       |           |   00d70833                add     a6,a4,a3
memcpy():
/proc/self/cwd/sw/device/lib/base/memory.c:69
  unsigned char *dest8 = (unsigned char *)dest;
  const unsigned char *src8 = (const unsigned char *)src;
  size_t body_offset, tail_offset;
  compute_alignment(dest, src, len, &body_offset, &tail_offset);
  size_t i = 0;
  for (; i < body_offset; ++i) {
d000dfd0:       |  /--------|-- c6b9                    beqz    a3,d000e01e <memcpy+0x80>
d000dfd2:       |  |        \-> 4781                    li      a5,0
/proc/self/cwd/sw/device/lib/base/memory.c:70
    dest8[i] = src8[i];
d000dfd4:       |  |        /-> 00f58733                add     a4,a1,a5
d000dfd8:       |  |        |   00070883                lb      a7,0(a4)
d000dfdc:       |  |        |   00f50733                add     a4,a0,a5
/proc/self/cwd/sw/device/lib/base/memory.c:69
  for (; i < body_offset; ++i) {
d000dfe0:       |  |        |   0785                    addi    a5,a5,1
/proc/self/cwd/sw/device/lib/base/memory.c:70
    dest8[i] = src8[i];
d000dfe2:       |  |        |   01170023                sb      a7,0(a4)
/proc/self/cwd/sw/device/lib/base/memory.c:69
  for (; i < body_offset; ++i) {
d000dfe6:       |  |        \-- fef697e3                bne     a3,a5,d000dfd4 <memcpy+0x36>
/proc/self/cwd/sw/device/lib/base/memory.c:72
  }
  for (; i < tail_offset; i += sizeof(uint32_t)) {
d000dfea:       |  |  /-------- 0106fb63                bgeu    a3,a6,d000e000 <memcpy+0x62>
read_32():
/proc/self/cwd/./sw/device/lib/base/memory.h:86
  ptr = __builtin_assume_aligned(ptr, alignof(uint32_t));
d000dfee:       |  |  |  /----> 00d58733                add     a4,a1,a3
/proc/self/cwd/./sw/device/lib/base/memory.h:88
  __builtin_memcpy(&val, ptr, sizeof(uint32_t));
d000dff2:       |  |  |  |      4318                    lw      a4,0(a4)
write_32():
/proc/self/cwd/./sw/device/lib/base/memory.h:145
  ptr = __builtin_assume_aligned(ptr, alignof(uint32_t));
d000dff4:       |  |  |  |      00d507b3                add     a5,a0,a3
memcpy():
/proc/self/cwd/sw/device/lib/base/memory.c:72
d000dff8:       |  |  |  |      0691                    addi    a3,a3,4
write_32():
/proc/self/cwd/./sw/device/lib/base/memory.h:146
  __builtin_memcpy(ptr, &value, sizeof(uint32_t));
d000dffa:       |  |  |  |      c398                    sw      a4,0(a5)
memcpy():
/proc/self/cwd/sw/device/lib/base/memory.c:72
d000dffc:       |  |  |  +----- ff06e9e3                bltu    a3,a6,d000dfee <memcpy+0x50>
d000e000:       +--|-->--|----X 00c6fe63                bgeu    a3,a2,d000e01c <memcpy+0x7e>
/proc/self/cwd/sw/device/lib/base/memory.c:76
    uint32_t word = read_32(&src8[i]);
    write_32(word, &dest8[i]);
  }
  for (; i < len; ++i) {
d000e004:       |  |  |  |      8e15                    sub     a2,a2,a3
d000e006:       |  |  |  |      00d50733                add     a4,a0,a3
d000e00a:       |  |  |  |      95b6                    add     a1,a1,a3
/proc/self/cwd/sw/device/lib/base/memory.c:77
    dest8[i] = src8[i];
d000e00c:       |  |  |  |  /-> 00058683                lb      a3,0(a1)
d000e010:       |  |  |  |  |   00d70023                sb      a3,0(a4)
/proc/self/cwd/sw/device/lib/base/memory.c:76
  for (; i < len; ++i) {
d000e014:       |  |  |  |  |   167d                    addi    a2,a2,-1
d000e016:       |  |  |  |  |   0705                    addi    a4,a4,1
d000e018:       |  |  |  |  |   0585                    addi    a1,a1,1
d000e01a:       |  |  |  |  \-- fa6d                    bnez    a2,d000e00c <memcpy+0x6e>
/proc/self/cwd/sw/device/lib/base/memory.c:80
  }
  return dest;
}
d000e01c:       \--|--|--|----> 8082                    ret
d000e01e:          \--|--|----> 4681                    li      a3,0
/proc/self/cwd/sw/device/lib/base/memory.c:72
  for (; i < tail_offset; i += sizeof(uint32_t)) {
d000e020:             |  \----- fd06e7e3                bltu    a3,a6,d000dfee <memcpy+0x50>
d000e024:             \-------- bff1                    j       d000e000 <memcpy+0x62>

d000e026 <memset>:
memset():
/proc/self/cwd/sw/device/lib/base/memory.c:82

void *OT_PREFIX_IF_NOT_RV32(memset)(void *dest, int value, size_t len) {
d000e026:                 4691                  li      a3,4
d000e028:                 8732                  mv      a4,a2
compute_num_leading_bytes():
/proc/self/cwd/sw/device/lib/base/memory.c:19
  if (len < alignof(uint32_t)) {
d000e02a:             /-- 00d66663              bltu    a2,a3,d000e036 <memset+0x10>
d000e02e:             |   40a006b3              neg     a3,a0
d000e032:             |   0036f713              andi    a4,a3,3
compute_alignment():
/proc/self/cwd/sw/device/lib/base/memory.c:51
  const size_t num_words = (len - num_leading_bytes) / sizeof(uint32_t);
d000e036:             \-> 40e606b3              sub     a3,a2,a4
/proc/self/cwd/sw/device/lib/base/memory.c:52
  *out_tail_offset = num_leading_bytes + num_words * sizeof(uint32_t);
d000e03a:                 ffc6f813              andi    a6,a3,-4
memset():
/proc/self/cwd/sw/device/lib/base/memory.c:89
  const uint8_t value8 = (uint8_t)value;

  size_t body_offset, tail_offset;
  compute_alignment(dest, NULL, len, &body_offset, &tail_offset);
  size_t i = 0;
  for (; i < body_offset; ++i) {
d000e03e:          /----- cb01                  beqz    a4,d000e04e <memset+0x28>
d000e040:          |      87aa                  mv      a5,a0
d000e042:          |      86ba                  mv      a3,a4
/proc/self/cwd/sw/device/lib/base/memory.c:90
    dest8[i] = value8;
d000e044:          |  /-> 00b78023              sb      a1,0(a5)
/proc/self/cwd/sw/device/lib/base/memory.c:89
  for (; i < body_offset; ++i) {
d000e048:          |  |   16fd                  addi    a3,a3,-1
d000e04a:          |  |   0785                  addi    a5,a5,1
d000e04c:          |  \-- fee5                  bnez    a3,d000e044 <memset+0x1e>
/proc/self/cwd/sw/device/lib/base/memory.c:93
  }
  const uint32_t value32 = repeat_byte_to_u32(value8);
  for (; i < tail_offset; i += sizeof(uint32_t)) {
d000e04e:       /--\----X 02080263              beqz    a6,d000e072 <memset+0x4c>
d000e052:       |         00e808b3              add     a7,a6,a4
d000e056:       |         0ff5f813              andi    a6,a1,255
d000e05a:       |         010107b7              lui     a5,0x1010
d000e05e:       |         10178793              addi    a5,a5,257 # 1010101 <WDOG_BARK_THOLD+0xfd9219>
d000e062:       |         02f807b3              mul     a5,a6,a5
write_32():
/proc/self/cwd/./sw/device/lib/base/memory.h:145
  ptr = __builtin_assume_aligned(ptr, alignof(uint32_t));
d000e066:       |     /-> 00e506b3              add     a3,a0,a4
memset():
/proc/self/cwd/sw/device/lib/base/memory.c:93
d000e06a:       |     |   0711                  addi    a4,a4,4
write_32():
/proc/self/cwd/./sw/device/lib/base/memory.h:146
  __builtin_memcpy(ptr, &value, sizeof(uint32_t));
d000e06c:       |     |   c29c                  sw      a5,0(a3)
memset():
/proc/self/cwd/sw/device/lib/base/memory.c:93
d000e06e:       |     \-- ff176ce3              bltu    a4,a7,d000e066 <memset+0x40>
/proc/self/cwd/sw/device/lib/base/memory.c:96
    write_32(value32, &dest8[i]);
  }
  for (; i < len; ++i) {
d000e072:       \--/----X 00c77a63              bgeu    a4,a2,d000e086 <memset+0x60>
d000e076:          |      8e19                  sub     a2,a2,a4
d000e078:          |      00e506b3              add     a3,a0,a4
/proc/self/cwd/sw/device/lib/base/memory.c:97
    dest8[i] = value8;
d000e07c:          |  /-> 00b68023              sb      a1,0(a3)
/proc/self/cwd/sw/device/lib/base/memory.c:96
  for (; i < len; ++i) {
d000e080:          |  |   167d                  addi    a2,a2,-1
d000e082:          |  |   0685                  addi    a3,a3,1
d000e084:          |  \-- fe65                  bnez    a2,d000e07c <memset+0x56>
/proc/self/cwd/sw/device/lib/base/memory.c:99
  }
  return dest;
d000e086:          \----> 8082                  ret

d000e088 <memrcmp>:
memrcmp():
/proc/self/cwd/sw/device/lib/base/memory.c:143
    }
  }
  return kMemCmpEq;
}

int memrcmp(const void *lhs, const void *rhs, size_t len) {
d000e088:                    4691                       li      a3,4
d000e08a:                    8832                       mv      a6,a2
compute_num_leading_bytes():
/proc/self/cwd/sw/device/lib/base/memory.c:19
  if (len < alignof(uint32_t)) {
d000e08c:             /----- 02d66163           bltu    a2,a3,d000e0ae <memrcmp+0x26>
/proc/self/cwd/sw/device/lib/base/memory.c:24
  if (right == NULL || left_ahead == right_ahead) {
d000e090:             |      0015b693           seqz    a3,a1
d000e094:             |      00a5c733           xor     a4,a1,a0
d000e098:             |      8b0d                       andi    a4,a4,3
d000e09a:             |      00173713           seqz    a4,a4
d000e09e:             |      8ed9                       or      a3,a3,a4
d000e0a0:             |  /-- e299                       bnez    a3,d000e0a6 <memrcmp+0x1e>
d000e0a2:             |  |   8832                       mv      a6,a2
d000e0a4:             +--|-- a029                       j       d000e0ae <memrcmp+0x26>
d000e0a6:             |  \-> 40a006b3           neg     a3,a0
d000e0aa:             |      0036f813           andi    a6,a3,3
compute_alignment():
/proc/self/cwd/sw/device/lib/base/memory.c:51
  const size_t num_words = (len - num_leading_bytes) / sizeof(uint32_t);
d000e0ae:             \----> 410606b3           sub     a3,a2,a6
/proc/self/cwd/sw/device/lib/base/memory.c:52
  *out_tail_offset = num_leading_bytes + num_words * sizeof(uint32_t);
d000e0b2:                    9af1                       andi    a3,a3,-4
d000e0b4:                    01068333           add     t1,a3,a6
d000e0b8:                    86b2                       mv      a3,a2
memrcmp():
/proc/self/cwd/sw/device/lib/base/memory.c:149
  const unsigned char *lhs8 = (const unsigned char *)lhs;
  const unsigned char *rhs8 = (const unsigned char *)rhs;
  size_t body_offset, tail_offset;
  compute_alignment(lhs, rhs, len, &body_offset, &tail_offset);
  size_t end = len;
  for (; end > tail_offset; --end) {
d000e0ba:                /-- 00666363           bltu    a2,t1,d000e0c0 <memrcmp+0x38>
d000e0be:                |   869a                       mv      a3,t1
d000e0c0:                \-> fff58893           addi    a7,a1,-1
d000e0c4:                    fff50293           addi    t0,a0,-1
d000e0c8:             /--/-X 02c37063           bgeu    t1,a2,d000e0e8 <memrcmp+0x60>
/proc/self/cwd/sw/device/lib/base/memory.c:151
    const size_t i = end - 1;
    if (lhs8[i] < rhs8[i]) {
d000e0cc:             |  |   00c28733           add     a4,t0,a2
d000e0d0:             |  |   00074703           lbu     a4,0(a4)
d000e0d4:             |  |   00c887b3           add     a5,a7,a2
d000e0d8:             |  |   0007c783           lbu     a5,0(a5)
d000e0dc:       /-----|--|-- 04f76863           bltu    a4,a5,d000e12c <memrcmp+0xa4>
/proc/self/cwd/sw/device/lib/base/memory.c:150
    const size_t i = end - 1;
d000e0e0:       |     |  |   167d                       addi    a2,a2,-1
d000e0e2:       |     |  \-- fee7f3e3           bgeu    a5,a4,d000e0c8 <memrcmp+0x40>
d000e0e6:       |  /--|----- a005                       j       d000e106 <memrcmp+0x7e>
/proc/self/cwd/sw/device/lib/base/memory.c:157
      return kMemCmpLt;
    } else if (lhs8[i] > rhs8[i]) {
      return kMemCmpGt;
    }
  }
  for (; end > body_offset; end -= sizeof(uint32_t)) {
d000e0e8:       |  |  \----> 15f1                       addi    a1,a1,-4
d000e0ea:       |  |         1571                       addi    a0,a0,-4
d000e0ec:       |  |  /--/-X 02d87d63           bgeu    a6,a3,d000e126 <memrcmp+0x9e>
read_32():
/proc/self/cwd/./sw/device/lib/base/memory.h:86
  ptr = __builtin_assume_aligned(ptr, alignof(uint32_t));
d000e0f0:       |  |  |  |   00d50633           add     a2,a0,a3
/proc/self/cwd/./sw/device/lib/base/memory.h:88
  __builtin_memcpy(&val, ptr, sizeof(uint32_t));
d000e0f4:       |  |  |  |   4210                       lw      a2,0(a2)
/proc/self/cwd/./sw/device/lib/base/memory.h:86
  ptr = __builtin_assume_aligned(ptr, alignof(uint32_t));
d000e0f6:       |  |  |  |   00d58733           add     a4,a1,a3
/proc/self/cwd/./sw/device/lib/base/memory.h:88
  __builtin_memcpy(&val, ptr, sizeof(uint32_t));
d000e0fa:       |  |  |  |   4318                       lw      a4,0(a4)
d000e0fc:       +--|--|--|-- 02e66863           bltu    a2,a4,d000e12c <memrcmp+0xa4>
memrcmp():
/proc/self/cwd/sw/device/lib/base/memory.c:158
    const size_t i = end - sizeof(uint32_t);
d000e100:       |  |  |  |   16f1                       addi    a3,a3,-4
d000e102:       |  |  |  \-- fec775e3           bgeu    a4,a2,d000e0ec <memrcmp+0x64>
d000e106:       |  >--|----> 02a00513           li      a0,42
/proc/self/cwd/sw/device/lib/base/memory.c:178
    } else if (lhs8[i] > rhs8[i]) {
      return kMemCmpGt;
    }
  }
  return kMemCmpEq;
}
d000e10a:       |  |  |      8082                       ret
/proc/self/cwd/sw/device/lib/base/memory.c:171
    if (lhs8[i] < rhs8[i]) {
d000e10c:       |  |  |  /-> 00d28533           add     a0,t0,a3
d000e110:       |  |  |  |   00054503           lbu     a0,0(a0)
d000e114:       |  |  |  |   00d885b3           add     a1,a7,a3
d000e118:       |  |  |  |   0005c583           lbu     a1,0(a1)
d000e11c:       +--|--|--|-- 00b56863           bltu    a0,a1,d000e12c <memrcmp+0xa4>
/proc/self/cwd/sw/device/lib/base/memory.c:170
    const size_t i = end - 1;
d000e120:       |  |  |  |   16fd                       addi    a3,a3,-1
d000e122:       |  \--|--|-- fea5e2e3           bltu    a1,a0,d000e106 <memrcmp+0x7e>
/proc/self/cwd/sw/device/lib/base/memory.c:169
  for (; end > 0; --end) {
d000e126:       |     \--\-X f2fd                       bnez    a3,d000e10c <memrcmp+0x84>
d000e128:       |            4501                       li      a0,0
/proc/self/cwd/sw/device/lib/base/memory.c:178
}
d000e12a:       |            8082                       ret
d000e12c:       \----------> fd600513           li      a0,-42
d000e130:                    8082                       ret

d000e132 <memchr>:
memchr():
/proc/self/cwd/sw/device/lib/base/memory.c:180

void *OT_PREFIX_IF_NOT_RV32(memchr)(const void *ptr, int value, size_t len) {
d000e132:                             4691                      li      a3,4
d000e134:                             8eb2                      mv      t4,a2
compute_num_leading_bytes():
/proc/self/cwd/sw/device/lib/base/memory.c:19
  if (len < alignof(uint32_t)) {
d000e136:                         /-- 00d66663                  bltu    a2,a3,d000e142 <memchr+0x10>
d000e13a:                         |   40a006b3                  neg     a3,a0
d000e13e:                         |   0036fe93                  andi    t4,a3,3
d000e142:                         \-> 0ff5fe13                  andi    t3,a1,255
memchr():
/proc/self/cwd/sw/device/lib/base/memory.c:187
  const uint8_t value8 = (uint8_t)value;

  size_t body_offset, tail_offset;
  compute_alignment(ptr, NULL, len, &body_offset, &tail_offset);
  size_t i = 0;
  for (; i < body_offset; ++i) {
d000e146:                      /----- 000e8b63                  beqz    t4,d000e15c <memchr+0x2a>
d000e14a:                      |      85aa                      mv      a1,a0
d000e14c:                      |      87f6                      mv      a5,t4
/proc/self/cwd/sw/device/lib/base/memory.c:188
    if (ptr8[i] == value8) {
d000e14e:                      |  /-> 0005c683                  lbu     a3,0(a1)
d000e152:       /--------------|--|-- 09c68563                  beq     a3,t3,d000e1dc <memchr+0xaa>
/proc/self/cwd/sw/device/lib/base/memory.c:187
  for (; i < body_offset; ++i) {
d000e156:       |              |  |   17fd                      addi    a5,a5,-1
d000e158:       |              |  |   0585                      addi    a1,a1,1
d000e15a:       |              |  \-- fbf5                      bnez    a5,d000e14e <memchr+0x1c>
d000e15c:       |              \----> 41d605b3                  sub     a1,a2,t4
d000e160:       |                     99f1                      andi    a1,a1,-4
/proc/self/cwd/sw/device/lib/base/memory.c:193
      return (void *)&ptr8[i];
    }
  }
  const uint32_t value32 = repeat_byte_to_u32(value8);
  for (; i < tail_offset; i += sizeof(uint32_t)) {
d000e162:       |  /----------------- c9a9                      beqz    a1,d000e1b4 <memchr+0x82>
d000e164:       |  |                  01d58833                  add     a6,a1,t4
d000e168:       |  |                  010105b7                  lui     a1,0x1010
d000e16c:       |  |                  10158593                  addi    a1,a1,257 # 1010101 <WDOG_BARK_THOLD+0xfd9219>
d000e170:       |  |                  02be02b3                  mul     t0,t3,a1
d000e174:       |  |                  0ff00893                  li      a7,255
d000e178:       |  |                  65c1                      lui     a1,0x10
d000e17a:       |  |                  f0058393                  addi    t2,a1,-256 # ff00 <_rom_ext_virtual_size+0x7f00>
d000e17e:       |  |                  00ff0337                  lui     t1,0xff0
read_32():
/proc/self/cwd/./sw/device/lib/base/memory.h:86
  ptr = __builtin_assume_aligned(ptr, alignof(uint32_t));
d000e182:       |  |              /-> 01d505b3                  add     a1,a0,t4
/proc/self/cwd/./sw/device/lib/base/memory.h:88
  __builtin_memcpy(&val, ptr, sizeof(uint32_t));
d000e186:       |  |              |   4194                      lw      a3,0(a1)
memchr():
/proc/self/cwd/sw/device/lib/base/memory.c:195
    uint32_t word = read_32(&ptr8[i]);
    uint32_t bits_eq = ~(word ^ value32);
d000e188:       |  |              |   0056c7b3                  xor     a5,a3,t0
d000e18c:       |  |              |   fff7c693                  not     a3,a5
/proc/self/cwd/sw/device/lib/base/memory.c:198
    static_assert(__BYTE_ORDER__ == __ORDER_LITTLE_ENDIAN__,
                  "memchr assumes that the system is little endian.");
    if ((bits_eq & UINT8_MAX) == UINT8_MAX) {
d000e190:       |  |              |   0ff6f713                  andi    a4,a3,255
d000e194:       +--|--------------|-- 05170463                  beq     a4,a7,d000e1dc <memchr+0xaa>
/proc/self/cwd/sw/device/lib/base/memory.c:201
      return (void *)&ptr8[i];
    }
    if (((bits_eq >> 8) & UINT8_MAX) == UINT8_MAX) {
d000e198:       |  |              |   0076f733                  and     a4,a3,t2
d000e19c:       |  |  /-----------|-- 02770b63                  beq     a4,t2,d000e1d2 <memchr+0xa0>
/proc/self/cwd/sw/device/lib/base/memory.c:204
      return (void *)&ptr8[i + 1];
    }
    if (((bits_eq >> 16) & UINT8_MAX) == UINT8_MAX) {
d000e1a0:       |  |  |           |   0066f6b3                  and     a3,a3,t1
d000e1a4:       |  |  |  /--------|-- 02668963                  beq     a3,t1,d000e1d6 <memchr+0xa4>
/proc/self/cwd/sw/device/lib/base/memory.c:207
      return (void *)&ptr8[i + 2];
    }
    if (((bits_eq >> 24) & UINT8_MAX) == UINT8_MAX) {
d000e1a8:       |  |  |  |        |   0187d693                  srli    a3,a5,0x18
d000e1ac:       |  |  |  |  /-----|-- c69d                      beqz    a3,d000e1da <memchr+0xa8>
/proc/self/cwd/sw/device/lib/base/memory.c:193
  for (; i < tail_offset; i += sizeof(uint32_t)) {
d000e1ae:       |  |  |  |  |     |   0e91                      addi    t4,t4,4
d000e1b0:       |  |  |  |  |     \-- fd0ee9e3                  bltu    t4,a6,d000e182 <memchr+0x50>
/proc/self/cwd/sw/device/lib/base/memory.c:211
      return (void *)&ptr8[i + 3];
    }
  }
  for (; i < len; ++i) {
d000e1b4:       |  \--|--|--|--/----X 00cefd63                  bgeu    t4,a2,d000e1ce <memchr+0x9c>
d000e1b8:       |     |  |  |  |      41d60633                  sub     a2,a2,t4
d000e1bc:       |     |  |  |  |      01d505b3                  add     a1,a0,t4
/proc/self/cwd/sw/device/lib/base/memory.c:212
    if (ptr8[i] == value8) {
d000e1c0:       |     |  |  |  |  /-> 0005c503                  lbu     a0,0(a1)
d000e1c4:       +-----|--|--|--|--|-- 01c50c63                  beq     a0,t3,d000e1dc <memchr+0xaa>
/proc/self/cwd/sw/device/lib/base/memory.c:211
  for (; i < len; ++i) {
d000e1c8:       |     |  |  |  |  |   167d                      addi    a2,a2,-1
d000e1ca:       |     |  |  |  |  |   0585                      addi    a1,a1,1
d000e1cc:       |     |  |  |  |  \-- fa75                      bnez    a2,d000e1c0 <memchr+0x8e>
d000e1ce:       |     |  |  |  \----> 4581                      li      a1,0
d000e1d0:       +-----|--|--|-------- a031                      j       d000e1dc <memchr+0xaa>
/proc/self/cwd/sw/device/lib/base/memory.c:202
      return (void *)&ptr8[i + 1];
d000e1d2:       |     \--|--|-------> 0585                      addi    a1,a1,1
d000e1d4:       +--------|--|-------- a021                      j       d000e1dc <memchr+0xaa>
/proc/self/cwd/sw/device/lib/base/memory.c:205
      return (void *)&ptr8[i + 2];
d000e1d6:       |        \--|-------> 0589                      addi    a1,a1,2
d000e1d8:       +-----------|-------- a011                      j       d000e1dc <memchr+0xaa>
/proc/self/cwd/sw/device/lib/base/memory.c:208
      return (void *)&ptr8[i + 3];
d000e1da:       |           \-------> 058d                      addi    a1,a1,3
/proc/self/cwd/sw/device/lib/base/memory.c:217
      return (void *)&ptr8[i];
    }
  }
  return NULL;
}
d000e1dc:       \-------------------> 852e                      mv      a0,a1
d000e1de:                             8082                      ret

d000e1e0 <memrchr>:
memrchr():
/proc/self/cwd/sw/device/lib/base/memory.c:219

void *OT_PREFIX_IF_NOT_RV32(memrchr)(const void *ptr, int value, size_t len) {
d000e1e0:                          4691                 li      a3,4
d000e1e2:                          8332                 mv      t1,a2
compute_num_leading_bytes():
/proc/self/cwd/sw/device/lib/base/memory.c:19
  if (len < alignof(uint32_t)) {
d000e1e4:                      /-- 00d66663             bltu    a2,a3,d000e1f0 <memrchr+0x10>
d000e1e8:                      |   40a006b3             neg     a3,a0
d000e1ec:                      |   0036f313             andi    t1,a3,3
compute_alignment():
/proc/self/cwd/sw/device/lib/base/memory.c:51
  const size_t num_words = (len - num_leading_bytes) / sizeof(uint32_t);
d000e1f0:                      \-> 406606b3             sub     a3,a2,t1
/proc/self/cwd/sw/device/lib/base/memory.c:52
  *out_tail_offset = num_leading_bytes + num_words * sizeof(uint32_t);
d000e1f4:                          9af1                 andi    a3,a3,-4
d000e1f6:                          006687b3             add     a5,a3,t1
d000e1fa:                          86b2                 mv      a3,a2
memrchr():
/proc/self/cwd/sw/device/lib/base/memory.c:227

  size_t body_offset, tail_offset;
  compute_alignment(ptr, NULL, len, &body_offset, &tail_offset);

  size_t end = len;
  for (; end > tail_offset; --end) {
d000e1fc:                      /-- 00f66363             bltu    a2,a5,d000e202 <memrchr+0x22>
d000e200:                      |   86be                 mv      a3,a5
d000e202:                      \-> 0ff5f393             andi    t2,a1,255
d000e206:                   /--/-X 00c7fd63             bgeu    a5,a2,d000e220 <memrchr+0x40>
/proc/self/cwd/sw/device/lib/base/memory.c:229
    const size_t i = end - 1;
    if (ptr8[i] == value8) {
d000e20a:                   |  |   00c50733             add     a4,a0,a2
d000e20e:                   |  |   fff74583             lbu     a1,-1(a4)
/proc/self/cwd/sw/device/lib/base/memory.c:228
    const size_t i = end - 1;
d000e212:                   |  |   fff60713             addi    a4,a2,-1
d000e216:                   |  |   863a                 mv      a2,a4
d000e218:                   |  \-- fe7597e3             bne     a1,t2,d000e206 <memrchr+0x26>
/proc/self/cwd/sw/device/lib/base/memory.c:260
    if (ptr8[i] == value8) {
      return (void *)&ptr8[i];
    }
  }
  return NULL;
}
d000e21c:                   |      953a                 add     a0,a0,a4
d000e21e:                   |      8082                 ret
d000e220:                   \----> 010105b7             lui     a1,0x1010
d000e224:                          10158593             addi    a1,a1,257 # 1010101 <WDOG_BARK_THOLD+0xfd9219>
repeat_byte_to_u32():
/proc/self/cwd/sw/device/lib/base/memory.c:56
  return byte << 24 | byte << 16 | byte << 8 | byte;
d000e228:                          02b382b3             mul     t0,t2,a1
d000e22c:                          00ff0837             lui     a6,0xff0
d000e230:                          65c1                 lui     a1,0x10
d000e232:                          f0058793             addi    a5,a1,-256 # ff00 <_rom_ext_virtual_size+0x7f00>
d000e236:                          0ff00893             li      a7,255
memrchr():
/proc/self/cwd/sw/device/lib/base/memory.c:234
  for (; end > body_offset; end -= sizeof(uint32_t)) {
d000e23a:       /--------------/-X 04d37563             bgeu    t1,a3,d000e284 <memrchr+0xa4>
read_32():
/proc/self/cwd/./sw/device/lib/base/memory.h:86
  ptr = __builtin_assume_aligned(ptr, alignof(uint32_t));
d000e23e:       |              |   00d50633             add     a2,a0,a3
/proc/self/cwd/./sw/device/lib/base/memory.h:88
  __builtin_memcpy(&val, ptr, sizeof(uint32_t));
d000e242:       |              |   ffc62583             lw      a1,-4(a2)
memrchr():
/proc/self/cwd/sw/device/lib/base/memory.c:237
    uint32_t bits_eq = ~(word ^ value32);
d000e246:       |              |   0055c733             xor     a4,a1,t0
/proc/self/cwd/sw/device/lib/base/memory.c:240
    if (((bits_eq >> 24) & UINT8_MAX) == UINT8_MAX) {
d000e24a:       |              |   01875593             srli    a1,a4,0x18
d000e24e:       |  /-----------|-- cd95                 beqz    a1,d000e28a <memrchr+0xaa>
d000e250:       |  |           |   fff74713             not     a4,a4
/proc/self/cwd/sw/device/lib/base/memory.c:243
    if (((bits_eq >> 16) & UINT8_MAX) == UINT8_MAX) {
d000e254:       |  |           |   010775b3             and     a1,a4,a6
d000e258:       |  |  /--------|-- 03058c63             beq     a1,a6,d000e290 <memrchr+0xb0>
/proc/self/cwd/sw/device/lib/base/memory.c:246
    if (((bits_eq >> 8) & UINT8_MAX) == UINT8_MAX) {
d000e25c:       |  |  |        |   00f775b3             and     a1,a4,a5
d000e260:       |  |  |  /-----|-- 02f58b63             beq     a1,a5,d000e296 <memrchr+0xb6>
/proc/self/cwd/sw/device/lib/base/memory.c:249
    if ((bits_eq & UINT8_MAX) == UINT8_MAX) {
d000e264:       |  |  |  |     |   0ff77593             andi    a1,a4,255
/proc/self/cwd/sw/device/lib/base/memory.c:235
    const size_t i = end - sizeof(uint32_t);
d000e268:       |  |  |  |     |   16f1                 addi    a3,a3,-4
d000e26a:       |  |  |  |     \-- fd1598e3             bne     a1,a7,d000e23a <memrchr+0x5a>
/proc/self/cwd/sw/device/lib/base/memory.c:260
}
d000e26e:       |  |  |  |         9536                 add     a0,a0,a3
d000e270:       |  |  |  |         8082                 ret
/proc/self/cwd/sw/device/lib/base/memory.c:255
    if (ptr8[i] == value8) {
d000e272:       |  |  |  |     /-> 00d505b3             add     a1,a0,a3
d000e276:       |  |  |  |     |   fff5c583             lbu     a1,-1(a1)
/proc/self/cwd/sw/device/lib/base/memory.c:254
    const size_t i = end - 1;
d000e27a:       |  |  |  |     |   fff68613             addi    a2,a3,-1
d000e27e:       |  |  |  |     |   86b2                 mv      a3,a2
d000e280:       |  |  |  |  /--|-- 00758e63             beq     a1,t2,d000e29c <memrchr+0xbc>
/proc/self/cwd/sw/device/lib/base/memory.c:253
  for (; end > 0; --end) {
d000e284:       \--|--|--|--|--\-X f6fd                 bnez    a3,d000e272 <memrchr+0x92>
d000e286:          |  |  |  |      4501                 li      a0,0
/proc/self/cwd/sw/device/lib/base/memory.c:260
}
d000e288:          |  |  |  |      8082                 ret
/proc/self/cwd/sw/device/lib/base/memory.c:241
      return (void *)&ptr8[i + 3];
d000e28a:          \--|--|--|----> fff60513             addi    a0,a2,-1
/proc/self/cwd/sw/device/lib/base/memory.c:260
}
d000e28e:             |  |  |      8082                 ret
/proc/self/cwd/sw/device/lib/base/memory.c:244
      return (void *)&ptr8[i + 2];
d000e290:             \--|--|----> ffe60513             addi    a0,a2,-2
/proc/self/cwd/sw/device/lib/base/memory.c:260
}
d000e294:                |  |      8082                 ret
/proc/self/cwd/sw/device/lib/base/memory.c:247
      return (void *)&ptr8[i + 1];
d000e296:                \--|----> ffd60513             addi    a0,a2,-3
/proc/self/cwd/sw/device/lib/base/memory.c:260
}
d000e29a:                   |      8082                 ret
d000e29c:                   \----> 9532                 add     a0,a0,a2
d000e29e:                          8082                 ret

d000e2a0 <device_fpga_version_print>:
device_fpga_version_print():
/proc/self/cwd/sw/device/lib/arch/device_sim_verilator.c:57

const uintptr_t kDeviceLogBypassUartAddress = 0;

const bool kJitterEnabled = false;

void device_fpga_version_print(void) {}
d000e2a0:       8082                    ret
d000e2a2:       0000                    unimp

Disassembly of section .shutdown:

d000e2a4 <shutdown_finalize>:
shutdown_finalize():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:504
 * The shutdown_finalize function goes into the .shutdown section which is
 * placed by the linker script after all other executable code.
 */
__attribute__((section(".shutdown")))
#endif
void shutdown_finalize(rom_error_t reason) {
d000e2a4:                       c01405b7                lui     a1,0xc0140
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000e2a8:                       59cc                    lw      a1,52(a1)
d000e2aa:                       40000637                lui     a2,0x40000
d000e2ae:                       167d                    addi    a2,a2,-1
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
d000e2b0:                       00c5feb3                and     t4,a1,a2
d000e2b4:                       e2291637                lui     a2,0xe2291
d000e2b8:                       1ad6b6b7                lui     a3,0x1ad6b
d000e2bc:                       5ac68693                addi    a3,a3,1452 # 1ad6b5ac <WDOG_BARK_THOLD+0x1ad346c4>
d000e2c0:                       aa560613                addi    a2,a2,-1371 # e2290aa5 <_stack_end+0x2270aa5>
shutdown_redact_policy_inline():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:270
  switch (raw_state) {
d000e2c4:                   /-- 03d6cb63                blt     a3,t4,d000e2fa <shutdown_finalize+0x56>
d000e2c8:                   |   0e73a6b7                lui     a3,0xe73a
d000e2cc:                   |   ce668713                addi    a4,a3,-794 # e739ce6 <WDOG_BARK_THOLD+0xe702dfe>
d000e2d0:             /-----|-- 05d74e63                blt     a4,t4,d000e32c <shutdown_finalize+0x88>
d000e2d4:             |     |   021086b7                lui     a3,0x2108
d000e2d8:             |     |   42168693                addi    a3,a3,1057 # 2108421 <WDOG_BARK_THOLD+0x20d1539>
d000e2dc:       /-----|-----|-- 0ade8263                beq     t4,a3,d000e380 <shutdown_finalize+0xdc>
d000e2e0:       |     |     |   063196b7                lui     a3,0x6319
d000e2e4:       |     |     |   c6368693                addi    a3,a3,-925 # 6318c63 <WDOG_BARK_THOLD+0x62e1d7b>
d000e2e8:       +-----|-----|-- 08de8c63                beq     t4,a3,d000e380 <shutdown_finalize+0xdc>
d000e2ec:       |     |     |   0a5296b7                lui     a3,0xa529
d000e2f0:       |     |     |   4a568693                addi    a3,a3,1189 # a5294a5 <WDOG_BARK_THOLD+0xa4f25bd>
d000e2f4:       +-----|-----|-- 08de8663                beq     t4,a3,d000e380 <shutdown_finalize+0xdc>
d000e2f8:       |  /--|-----|-- a041                    j       d000e378 <shutdown_finalize+0xd4>
d000e2fa:       |  |  |     \-> 2318c6b7                lui     a3,0x2318c
d000e2fe:       |  |  |         63068713                addi    a4,a3,1584 # 2318c630 <WDOG_BARK_THOLD+0x23155748>
d000e302:       |  |  |  /----- 05d74663                blt     a4,t4,d000e34e <shutdown_finalize+0xaa>
d000e306:       |  |  |  |      1ad6b6b7                lui     a3,0x1ad6b
d000e30a:       |  |  |  |      5ad68693                addi    a3,a3,1453 # 1ad6b5ad <WDOG_BARK_THOLD+0x1ad346c5>
d000e30e:       +--|--|--|----- 06de8963                beq     t4,a3,d000e380 <shutdown_finalize+0xdc>
d000e312:       |  |  |  |      1ef7c6b7                lui     a3,0x1ef7c
d000e316:       |  |  |  |      def68693                addi    a3,a3,-529 # 1ef7bdef <WDOG_BARK_THOLD+0x1ef44f07>
d000e31a:       +--|--|--|----- 06de8363                beq     t4,a3,d000e380 <shutdown_finalize+0xdc>
d000e31e:       |  |  |  |      21084637                lui     a2,0x21084
d000e322:       |  |  |  |      21060613                addi    a2,a2,528 # 21084210 <WDOG_BARK_THOLD+0x2104d328>
d000e326:       |  |  |  |  /-- 04ce8463                beq     t4,a2,d000e36e <shutdown_finalize+0xca>
d000e32a:       |  +--|--|--|-- a0b9                    j       d000e378 <shutdown_finalize+0xd4>
d000e32c:       |  |  \--|--|-> ce768693                addi    a3,a3,-793
d000e330:       +--|-----|--|-- 04de8863                beq     t4,a3,d000e380 <shutdown_finalize+0xdc>
d000e334:       |  |     |  |   1294a6b7                lui     a3,0x1294a
d000e338:       |  |     |  |   52968693                addi    a3,a3,1321 # 1294a529 <WDOG_BARK_THOLD+0x12913641>
d000e33c:       +--|-----|--|-- 04de8263                beq     t4,a3,d000e380 <shutdown_finalize+0xdc>
d000e340:       |  |     |  |   16b5b6b7                lui     a3,0x16b5b
d000e344:       |  |     |  |   d6b68693                addi    a3,a3,-661 # 16b5ad6b <WDOG_BARK_THOLD+0x16b23e83>
d000e348:       +--|-----|--|-- 02de8c63                beq     t4,a3,d000e380 <shutdown_finalize+0xdc>
d000e34c:       |  +-----|--|-- a035                    j       d000e378 <shutdown_finalize+0xd4>
d000e34e:       |  |     \--|-> 63168693                addi    a3,a3,1585
d000e352:       |  |        +-- 00de8e63                beq     t4,a3,d000e36e <shutdown_finalize+0xca>
d000e356:       |  |        |   2739d6b7                lui     a3,0x2739d
d000e35a:       |  |        |   e7368693                addi    a3,a3,-397 # 2739ce73 <WDOG_BARK_THOLD+0x27365f8b>
d000e35e:       +--|--------|-- 02de8163                beq     t4,a3,d000e380 <shutdown_finalize+0xdc>
d000e362:       |  |        |   25295637                lui     a2,0x25295
d000e366:       |  |        |   a5260613                addi    a2,a2,-1454 # 25294a52 <WDOG_BARK_THOLD+0x2525db6a>
d000e36a:       |  +--------|-- 00ce9763                bne     t4,a2,d000e378 <shutdown_finalize+0xd4>
d000e36e:       |  |        \-> c0131637                lui     a2,0xc0131
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
d000e372:       |  |            36062603                lw      a2,864(a2) # c0131360 <_stack_end+0xe0111360>
d000e376:       +--|----------- a029                    j       d000e380 <shutdown_finalize+0xdc>
d000e378:       |  \----------> 48eb5637                lui     a2,0x48eb5
d000e37c:       |               bd960613                addi    a2,a2,-1063 # 48eb4bd9 <_epmp_stack_guard_na4+0x10eadbd9>
d000e380:       \-------------> 73900693                li      a3,1849
shutdown_redact_inline():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:238
  if (reason == kErrorOk) {
d000e384:                   /-- 00d51463                bne     a0,a3,d000e38c <shutdown_finalize+0xe8>
d000e388:                   |   4501                    li      a0,0
d000e38a:             /-----|-- a835                    j       d000e3c6 <shutdown_finalize+0x122>
d000e38c:             |     \-> e22916b7                lui     a3,0xe2291
d000e390:             |         aa568693                addi    a3,a3,-1371 # e2290aa5 <_stack_end+0x2270aa5>
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:241
  switch (severity) {
d000e394:             +-------- 02d60963                beq     a2,a3,d000e3c6 <shutdown_finalize+0x122>
d000e398:             |         3367d6b7                lui     a3,0x3367d
d000e39c:             |         3d468693                addi    a3,a3,980 # 3367d3d4 <WDOG_BARK_THOLD+0x336464ec>
d000e3a0:             |  /----- 00d60d63                beq     a2,a3,d000e3ba <shutdown_finalize+0x116>
d000e3a4:             |  |      1e7916b7                lui     a3,0x1e791
d000e3a8:             |  |      12368693                addi    a3,a3,291 # 1e791123 <WDOG_BARK_THOLD+0x1e75a23b>
d000e3ac:             |  |  /-- 00d61c63                bne     a2,a3,d000e3c4 <shutdown_finalize+0x120>
d000e3b0:             |  |  |   ff000637                lui     a2,0xff000
d000e3b4:             |  |  |   0ff60613                addi    a2,a2,255 # ff0000ff <_stack_end+0x1efe00ff>
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:75
  bitfield &= ~(field.mask << field.index);
d000e3b8:             |  |  |   8d71                    and     a0,a0,a2
d000e3ba:             |  \--|-> 01000637                lui     a2,0x1000
d000e3be:             |     |   167d                    addi    a2,a2,-1
d000e3c0:             |     |   8d71                    and     a0,a0,a2
d000e3c2:             +-----|-- a011                    j       d000e3c6 <shutdown_finalize+0x122>
d000e3c4:             |     \-> 557d                    li      a0,-1
d000e3c6:             \-------> c00006b7                lui     a3,0xc0000
d000e3ca:                       4609                    li      a2,2
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000e3cc:                       d290                    sw      a2,32(a3)
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000e3ce:                       4a90                    lw      a2,16(a3)
bitfield_field32_write():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:76
  bitfield |= (value & field.mask) << field.index;
d000e3d0:                       00166613                ori     a2,a2,1
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000e3d4:                       ca90                    sw      a2,16(a3)
d000e3d6:                       3a564837                lui     a6,0x3a564
d000e3da:                       64280613                addi    a2,a6,1602 # 3a564642 <_epmp_stack_guard_na4+0x255d642>
d000e3de:                       ced0                    sw      a2,28(a3)
d000e3e0:                       003a58b7                lui     a7,0x3a5
d000e3e4:                       64688613                addi    a2,a7,1606 # 3a5646 <WDOG_BARK_THOLD+0x36e75e>
d000e3e8:                       ced0                    sw      a2,28(a3)
d000e3ea:                       6611                    lui     a2,0x4
d000e3ec:                       a5660393                addi    t2,a2,-1450 # 3a56 <_static_critical_size+0x1a92>
d000e3f0:                       0076ae23                sw      t2,28(a3) # c000001c <_stack_end+0xdffe001c>
d000e3f4:                       03a00293                li      t0,58
d000e3f8:                       0056ae23                sw      t0,28(a3)
d000e3fc:                       4e21                    li      t3,8
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000e3fe:                       4721                    li      a4,8
d000e400:                       00000617                auipc   a2,0x0
d000e404:                       3ec60613                addi    a2,a2,1004 # d000e7ec <kSpiDeviceSfdpTable+0x7c>
shutdown_print():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:352
  for (size_t i = 0; i < launder32(kHexStrLen); ++i) {
d000e408:                /----- cf19                    beqz    a4,d000e426 <shutdown_finalize+0x182>
d000e40a:                |      4781                    li      a5,0
d000e40c:                |      4771                    li      a4,28
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
  return (bitfield >> field.index) & field.mask;
d000e40e:                |  /-> 00e555b3                srl     a1,a0,a4
d000e412:                |  |   89bd                    andi    a1,a1,15
shutdown_print():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:355
    abs_mmio_write32(kUartBase + UART_WDATA_REG_OFFSET, kHexTable[nibble]);
d000e414:                |  |   95b2                    add     a1,a1,a2
d000e416:                |  |   0005c583                lbu     a1,0(a1) # c0140000 <_stack_end+0xe0120000>
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000e41a:                |  |   cecc                    sw      a1,28(a3)
shutdown_print():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:352
  for (size_t i = 0; i < launder32(kHexStrLen); ++i) {
d000e41c:                |  |   0785                    addi    a5,a5,1
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000e41e:                |  |   45a1                    li      a1,8
shutdown_print():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:352
d000e420:                |  |   1771                    addi    a4,a4,-4
d000e422:                |  \-- feb7e6e3                bltu    a5,a1,d000e40e <shutdown_finalize+0x16a>
d000e426:                \----> 4335                    li      t1,13
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000e428:                       0066ae23                sw      t1,28(a3)
d000e42c:                       4529                    li      a0,10
d000e42e:                       cec8                    sw      a0,28(a3)
d000e430:                       34c80593                addi    a1,a6,844
d000e434:                       cecc                    sw      a1,28(a3)
d000e436:                       64388593                addi    a1,a7,1603
d000e43a:                       cecc                    sw      a1,28(a3)
d000e43c:                       0076ae23                sw      t2,28(a3)
d000e440:                       0056ae23                sw      t0,28(a3)
shutdown_print():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:352
d000e444:                /----- 020e0263                beqz    t3,d000e468 <shutdown_finalize+0x1c4>
d000e448:                |      4681                    li      a3,0
d000e44a:                |      4771                    li      a4,28
d000e44c:                |      c00007b7                lui     a5,0xc0000
bitfield_field32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:56
d000e450:                |  /-> 00eed5b3                srl     a1,t4,a4
d000e454:                |  |   89bd                    andi    a1,a1,15
shutdown_print():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:355
    abs_mmio_write32(kUartBase + UART_WDATA_REG_OFFSET, kHexTable[nibble]);
d000e456:                |  |   95b2                    add     a1,a1,a2
d000e458:                |  |   0005c583                lbu     a1,0(a1)
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000e45c:                |  |   cfcc                    sw      a1,28(a5)
shutdown_print():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:352
  for (size_t i = 0; i < launder32(kHexStrLen); ++i) {
d000e45e:                |  |   0685                    addi    a3,a3,1
launder32():
/proc/self/cwd/./sw/device/lib/base/hardened.h:244
d000e460:                |  |   45a1                    li      a1,8
shutdown_print():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:352
d000e462:                |  |   1771                    addi    a4,a4,-4
d000e464:                |  \-- feb6e6e3                bltu    a3,a1,d000e450 <shutdown_finalize+0x1ac>
d000e468:                \----> c00005b7                lui     a1,0xc0000
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
d000e46c:                       0065ae23                sw      t1,28(a1) # c000001c <_stack_end+0xdffe001c>
d000e470:                       cdc8                    sw      a0,28(a1)
shutdown_report_error():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:391
  CSR_WRITE(CSR_REG_MCYCLE, 0);
d000e472:                       b0001073                csrw    mcycle,zero
d000e476:                       00001517                auipc   a0,0x1
d000e47a:                       10e50513                addi    a0,a0,270 # d000f584 <kUartTxFifoCpuCycles>
d000e47e:                       4108                    lw      a0,0(a0)
abs_mmio_read32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:73
  return *((volatile uint32_t *)addr);
d000e480:                   /-> 49d0                    lw      a2,20(a1)
shutdown_report_error():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:398
    CSR_READ(CSR_REG_MCYCLE, &mcycle);
d000e482:                   |   b00026f3                csrr    a3,mcycle
bitfield_bit32_read():
/proc/self/cwd/./sw/device/lib/base/bitfield.h:122
                               bitfield_bit32_to_field32(bit_index)) == 0x1u;
d000e486:                   |   8a21                    andi    a2,a2,8
d000e488:                   |   00163613                seqz    a2,a2
shutdown_report_error():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:399
  } while (mcycle < kUartTxFifoCpuCycles && !tx_idle);
d000e48c:                   |   00a6b6b3                sltu    a3,a3,a0
d000e490:                   |   8e75                    and     a2,a2,a3
d000e492:                   \-- f67d                    bnez    a2,d000e480 <shutdown_finalize+0x1dc>
d000e494:                       c11f0537                lui     a0,0xc11f0
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000e498:                       00052423                sw      zero,8(a0) # c11f0008 <_stack_end+0xe11d0008>
d000e49c:                       c1140537                lui     a0,0xc1140
d000e4a0:                       04000593                li      a1,64
abs_mmio_write32_shadowed():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:94
  *((volatile uint32_t *)addr) = value;
d000e4a4:                       cd0c                    sw      a1,24(a0)
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:95
  *((volatile uint32_t *)addr) = value;
d000e4a6:                       cd0c                    sw      a1,24(a0)
d000e4a8:                       4585                    li      a1,1
abs_mmio_write32():
/proc/self/cwd/./sw/device/lib/base/abs_mmio.h:83
  *((volatile uint32_t *)addr) = value;
d000e4aa:                       c94c                    sw      a1,20(a0)
d000e4ac:                       cd4c                    sw      a1,28(a0)
d000e4ae:                       c0410837                lui     a6,0xc0410
d000e4b2:                       4619                    li      a2,6
d000e4b4:                       00c82223                sw      a2,4(a6) # c0410004 <_stack_end+0xe03f0004>
d000e4b8:                       c10006b7                lui     a3,0xc1000
d000e4bc:                       0006a823                sw      zero,16(a3) # c1000010 <_stack_end+0xe0fe0010>
d000e4c0:                       c11c06b7                lui     a3,0xc11c0
d000e4c4:                       0006a023                sw      zero,0(a3) # c11c0000 <_stack_end+0xe11a0000>
d000e4c8:                       0006a423                sw      zero,8(a3)
d000e4cc:                       80000737                lui     a4,0x80000
d000e4d0:                       177d                    addi    a4,a4,-1
d000e4d2:                       009897b7                lui     a5,0x989
d000e4d6:                       d0078793                addi    a5,a5,-768 # 988d00 <WDOG_BARK_THOLD+0x951e18>
d000e4da:                       4509                    li      a0,2
shutdown_hang():
/proc/self/cwd/sw/device/silicon_creator/lib/shutdown.c:452
  asm volatile(
d000e4dc:                   /-> cacc                    sw      a1,20(a3)
d000e4de:                   |   00c82223                sw      a2,4(a6)
d000e4e2:                   |   00000297                auipc   t0,0x0
d000e4e6:                   |   ffa28293                addi    t0,t0,-6 # d000e4dc <shutdown_finalize+0x238>
d000e4ea:                   |   0022d293                srli    t0,t0,0x2
d000e4ee:                   |   3b029073                csrw    pmpaddr0,t0
d000e4f2:                   |   00000297                auipc   t0,0x0
d000e4f6:                   |   04a28293                addi    t0,t0,74 # d000e53c <_text_end>
d000e4fa:                   |   0022d293                srli    t0,t0,0x2
d000e4fe:                   |   3b129073                csrw    pmpaddr1,t0
d000e502:                   |   3b271073                csrw    pmpaddr2,a4
d000e506:                   |   3a079073                csrw    pmpcfg0,a5
d000e50a:                   |   3a101073                csrw    pmpcfg1,zero
d000e50e:                   |   3a201073                csrw    pmpcfg2,zero
d000e512:                   |   3a301073                csrw    pmpcfg3,zero
d000e516:                   |   74751073                csrw    0x747,a0
d000e51a:                   |   10500073                wfi
d000e51e:                   |   10500073                wfi
d000e522:                   |   10500073                wfi
d000e526:                   |   10500073                wfi
d000e52a:                   +-- bf4d                    j       d000e4dc <shutdown_finalize+0x238>
d000e52c:                   |   10500073                wfi
d000e530:                   |   10500073                wfi
d000e534:                   +-- b765                    j       d000e4dc <shutdown_finalize+0x238>
d000e536:                   |   10500073                wfi
d000e53a:                   \-- b74d                    j       d000e4dc <shutdown_finalize+0x238>
